#!/bin/bash

prefix=@prefix@
libdir=@expanded_libdir@
exec_asm="banshee.exe"
MONO_EXE="@expanded_libdir@/@PACKAGE@/$exec_asm"

export DYLD_LIBRARY_PATH=@expanded_libdir@:@expanded_libdir@/@PACKAGE@${DYLD_LIBRARY_PATH+:$DYLD_LIBRARY_PATH}
export LD_LIBRARY_PATH=@expanded_libdir@:@expanded_libdir@/@PACKAGE@${LD_LIBRARY_PATH+:$LD_LIBRARY_PATH}
export GST_PLUGIN_PATH=@expanded_libdir@/@PACKAGE@/gstreamer-0.10

case "x--uninstalled" in ("x$1" | "x$2")
	if [ -x ./banshee.exe -a -e ./banshee.in ]; then
		echo "** Running uninstalled Banshee **"
		MONO_EXE="./banshee.exe"
	else
		echo "** Running installed Banshee, even though --uninstalled was passed **"
		echo "** To run uninstalled, your PWD must be banshee/src **"
	fi
esac

case "x--debug" in ("x$1" | "x$2")
	MONO_OPTIONS="--debug"
	echo "** Running Banshee in Debug Mode **"
esac

case "x--trace=" in ("x${1:0:8}")
	MONO_OPTIONS="$MONO_OPTIONS $1"
	echo "** Running Mono with $1 **"
esac

# Plugins can install scripts to be sourced into this script. 
# Sourcing is useful if a plugin needs to ensure certain environment 
# variables are initialized.

if [ -d $libdir/@PACKAGE@/shell-init ]; then
	for init in `find $libdir/@PACKAGE@/shell-init/*`; do
		if [ ! -x $init ]; then
			continue
		fi

		source $init;	
	done
fi

# Finally - environment is set up, time to run our beloved
exec -a banshee @MONO@ $MONO_OPTIONS $MONO_EXE "$@"


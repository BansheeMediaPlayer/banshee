<Type Name="SearchEntry" FullName="Banshee.Widgets.SearchEntry">
  <TypeSignature Language="C#" Value="public class SearchEntry : Gtk.EventBox" />
  <AssemblyInfo>
    <AssemblyName>Banshee.Widgets</AssemblyName>
    <AssemblyVersion>0.90.1.25405</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Gtk.EventBox</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchEntry ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>System.EventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="ActivateFilter">
      <MemberSignature Language="C#" Value="public void ActivateFilter (int id);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="id" Type="System.Int32" /></Parameters>
      <Docs><param name="id">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="ActiveFilterID">
      <MemberSignature Language="C#" Value="public int ActiveFilterID { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="AddFilterOption">
      <MemberSignature Language="C#" Value="public void AddFilterOption (int id, string label);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="id" Type="System.Int32" /><Parameter Name="label" Type="System.String" /></Parameters>
      <Docs><param name="id">To be added.</param><param name="label">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="AddFilterSeparator">
      <MemberSignature Language="C#" Value="public void AddFilterSeparator ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="CancelSearch">
      <MemberSignature Language="C#" Value="public void CancelSearch ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler Changed;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>System.EventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="EmptyMessage">
      <MemberSignature Language="C#" Value="public string EmptyMessage { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="FilterChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FilterChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>System.EventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="GetLabelForFilterID">
      <MemberSignature Language="C#" Value="public string GetLabelForFilterID (int id);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Parameters><Parameter Name="id" Type="System.Int32" /></Parameters>
      <Docs><param name="id">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="HasFocus">
      <MemberSignature Language="C#" Value="public bool HasFocus { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="InnerEntry">
      <MemberSignature Language="C#" Value="public Gtk.Entry InnerEntry { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>Gtk.Entry</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="IsQueryAvailable">
      <MemberSignature Language="C#" Value="public bool IsQueryAvailable { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChanged ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="OnFilterChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFilterChanged ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="Query">
      <MemberSignature Language="C#" Value="public string Query { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="Ready">
      <MemberSignature Language="C#" Value="public bool Ready { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="RemoveFilterOption">
      <MemberSignature Language="C#" Value="public void RemoveFilterOption (int id);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="id" Type="System.Int32" /></Parameters>
      <Docs><param name="id">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
  </Members>
</Type>

<Type Name="QueuedSqliteDatabase" FullName="Banshee.Database.QueuedSqliteDatabase">
  <TypeSignature Language="C#" Value="public class QueuedSqliteDatabase : System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Banshee.Base</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueuedSqliteDatabase (string dbpath);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="dbpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dbpath">The Sqlite connection string, identical to the string expected by <see cref="T:Mono.Data.SqliteClient.SqliteConnection" />.</param>
        <summary>Creates a QueuedSqliteDatabase and connects to it.</summary>
        <remarks>The QueuedSqliteDatabase is immediately ready for querying. The connection will be made in the background and results will be returned as soon as the connection is made.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public Mono.Data.SqliteClient.SqliteDataReader Query (object query);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Data.SqliteClient.SqliteDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="query">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuerySingle">
      <MemberSignature Language="C#" Value="public object QuerySingle (object query);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="query">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public int Execute (object query);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="query">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableExists">
      <MemberSignature Language="C#" Value="public bool TableExists (string table);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>Thread-safe wrapper around an SqliteDatabase.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
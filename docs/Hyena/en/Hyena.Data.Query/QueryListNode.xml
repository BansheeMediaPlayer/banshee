<Type Name="QueryListNode" FullName="Hyena.Data.Query.QueryListNode">
  <TypeSignature Language="C#" Value="public class QueryListNode : Hyena.Data.Query.QueryNode" />
  <AssemblyInfo>
    <AssemblyName>Hyena</AssemblyName>
    <AssemblyVersion>0.90.1.2221</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Hyena.Data.Query.QueryNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryListNode (Hyena.Data.Query.Keyword keyword);" />
      <MemberType>Constructor</MemberType>
      <Parameters><Parameter Name="keyword" Type="Hyena.Data.Query.Keyword" /></Parameters>
      <Docs><param name="keyword">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryListNode (Hyena.Data.Query.Keyword keyword, Hyena.Data.Query.QueryListNode parent);" />
      <MemberType>Constructor</MemberType>
      <Parameters><Parameter Name="keyword" Type="Hyena.Data.Query.Keyword" /><Parameter Name="parent" Type="Hyena.Data.Query.QueryListNode" /></Parameters>
      <Docs><param name="keyword">To be added.</param><param name="parent">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (Hyena.Data.Query.QueryNode child);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="child" Type="Hyena.Data.Query.QueryNode" /></Parameters>
      <Docs><param name="child">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="ChildCount">
      <MemberSignature Language="C#" Value="public int ChildCount { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Hyena.Data.Query.QueryNode&gt; Children { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Collections.Generic.List&lt;Hyena.Data.Query.QueryNode&gt;</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="GetLeftSibling">
      <MemberSignature Language="C#" Value="public Hyena.Data.Query.QueryNode GetLeftSibling (Hyena.Data.Query.QueryNode node);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>Hyena.Data.Query.QueryNode</ReturnType></ReturnValue>
      <Parameters><Parameter Name="node" Type="Hyena.Data.Query.QueryNode" /></Parameters>
      <Docs><param name="node">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="GetRightSibling">
      <MemberSignature Language="C#" Value="public Hyena.Data.Query.QueryNode GetRightSibling (Hyena.Data.Query.QueryNode node);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>Hyena.Data.Query.QueryNode</ReturnType></ReturnValue>
      <Parameters><Parameter Name="node" Type="Hyena.Data.Query.QueryNode" /></Parameters>
      <Docs><param name="node">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="IndexOfChild">
      <MemberSignature Language="C#" Value="public int IndexOfChild (Hyena.Data.Query.QueryNode child);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Parameters><Parameter Name="child" Type="Hyena.Data.Query.QueryNode" /></Parameters>
      <Docs><param name="child">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="InsertChild">
      <MemberSignature Language="C#" Value="public void InsertChild (int index, Hyena.Data.Query.QueryNode child);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="index" Type="System.Int32" /><Parameter Name="child" Type="Hyena.Data.Query.QueryNode" /></Parameters>
      <Docs><param name="index">To be added.</param><param name="child">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="Keyword">
      <MemberSignature Language="C#" Value="public Hyena.Data.Query.Keyword Keyword { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>Hyena.Data.Query.Keyword</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public Hyena.Data.Query.QueryNode LastChild { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>Hyena.Data.Query.QueryNode</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public void RemoveChild (Hyena.Data.Query.QueryNode child);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="child" Type="Hyena.Data.Query.QueryNode" /></Parameters>
      <Docs><param name="child">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="ReplaceChild">
      <MemberSignature Language="C#" Value="public void ReplaceChild (Hyena.Data.Query.QueryNode old_child, Hyena.Data.Query.QueryNode new_child);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="old_child" Type="Hyena.Data.Query.QueryNode" /><Parameter Name="new_child" Type="Hyena.Data.Query.QueryNode" /></Parameters>
      <Docs><param name="old_child">To be added.</param><param name="new_child">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="TakeChildren">
      <MemberSignature Language="C#" Value="public void TakeChildren (Hyena.Data.Query.QueryListNode from);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="from" Type="Hyena.Data.Query.QueryListNode" /></Parameters>
      <Docs><param name="from">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
  </Members>
</Type>

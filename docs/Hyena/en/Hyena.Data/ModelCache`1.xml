<Type Name="ModelCache&lt;T&gt;" FullName="Hyena.Data.ModelCache&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class ModelCache&lt;T&gt;" />
  <AssemblyInfo>
    <AssemblyName>Hyena</AssemblyName>
    <AssemblyVersion>0.90.1.2221</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter>T</TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    
    
    
    
    
    
    
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ModelCache (Hyena.Data.ICacheableModel model);" />
      <MemberType>Constructor</MemberType>
      <Parameters><Parameter Name="model" Type="Hyena.Data.ICacheableModel" /></Parameters>
      <Docs><param name="model">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="Add">
      <MemberSignature Language="C#" Value="protected virtual void Add (int key, T value);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="key" Type="System.Int32" /><Parameter Name="value" Type="T" /></Parameters>
      <Docs><param name="key">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="Contains">
      <MemberSignature Language="C#" Value="protected virtual bool Contains (int key);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Parameters><Parameter Name="key" Type="System.Int32" /></Parameters>
      <Docs><param name="key">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="FetchSet">
      <MemberSignature Language="C#" Value="protected abstract void FetchSet (int offset, int limit);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="offset" Type="System.Int32" /><Parameter Name="limit" Type="System.Int32" /></Parameters>
      <Docs><param name="offset">To be added.</param><param name="limit">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual T GetValue (int index);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>T</ReturnType></ReturnValue>
      <Parameters><Parameter Name="index" Type="System.Int32" /></Parameters>
      <Docs><param name="index">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="InvalidateManagedCache">
      <MemberSignature Language="C#" Value="protected void InvalidateManagedCache ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public abstract int Reload ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
  </Members>
</Type>

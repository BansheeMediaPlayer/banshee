# Initializers
MONO_BASE_PATH = 
MONO_ADDINS_PATH =

# External libraries to link against, generated from configure
LINK_SYSTEM = -r:System
LINK_SQLITE = -r:System.Data -r:Mono.Data.SqliteClient
LINK_CAIRO = -r:Mono.Cairo
LINK_MONO_POSIX = -r:Mono.Posix
LINK_GLIB = $(GLIBSHARP_LIBS)
LINK_GTK = $(GTKSHARP_LIBS)
LINK_GCONF = $(GCONFSHARP_LIBS)
LINK_DBUS = $(NDESK_DBUS_LIBS)


# Internal directories/libraries
DIR_EXT = $(top_srcdir)/ext

DIR_MONO_ADDINS = $(DIR_EXT)/mono-addins/Mono.Addins
MONO_BASE_PATH += $(DIR_MONO_ADDINS)
LINK_MONO_ADDINS_DEPS = -r:$(DIR_MONO_ADDINS)/Mono.Addins.dll

DIR_TAGLIB = $(DIR_EXT)/taglib-sharp
MONO_BASE_PATH += $(DIR_TAGLIB)
REF_TAGLIB = $(LINK_MONO_POSIX)
LINK_TAGLIB = -r:$(DIR_TAGLIB)/TagLib.dll
LINK_TAGLIB_DEPS = $(REF_TAGLIB) $(LINK_TAGLIB)


DIR_CORE = $(top_srcdir)/src/Core

DIR_HYENA = $(DIR_CORE)/Hyena
MONO_BASE_PATH += $(DIR_HYENA)
REF_HYENA = $(LINK_SYSTEM)
LINK_HYENA = -r:$(DIR_HYENA)/Hyena.dll
LINK_HYENA_DEPS = $(REF_HYENA) $(LINK_HYENA)

DIR_HYENA_GUI = $(DIR_CORE)/Hyena.Gui
MONO_BASE_PATH += $(DIR_HYENA_GUI)
REF_HYENA_GUI = $(LINK_HYENA_DEPS) $(LINK_MONO_POSIX) $(LINK_CAIRO) $(LINK_GTK)
LINK_HYENA_GUI = -r:$(DIR_HYENA_GUI)/Hyena.Gui.dll
LINK_HYENA_GUI_DEPS = $(REF_HYENA_GUI) $(LINK_HYENA_GUI)

DIR_BANSHEE_CORE = $(DIR_CORE)/Banshee.Core
MONO_BASE_PATH += $(DIR_BANSHEE_CORE)
REF_BANSHEE_CORE = $(LINK_HYENA_DEPS) $(LINK_MONO_POSIX) \
	$(LINK_DBUS) $(LINK_TAGLIB) $(LINK_GCONF)
LINK_BANSHEE_CORE = -r:$(DIR_BANSHEE_CORE)/Banshee.Core.dll
LINK_BANSHEE_CORE_DEPS = $(REF_BANSHEE_CORE) $(LINK_BANSHEE_CORE)

DIR_BANSHEE_SERVICES = $(DIR_CORE)/Banshee.Services
MONO_BASE_PATH += $(DIR_BANSHEE_SERVICES)
REF_BANSHEE_SERVICES = $(LINK_SQLITE) $(LINK_BANSHEE_CORE_DEPS) \
	$(LINK_MONO_ADDINS_DEPS)
LINK_BANSHEE_SERVICES = -r:$(DIR_BANSHEE_SERVICES)/Banshee.Services.dll
LINK_BANSHEE_SERVICES_DEPS = $(REF_BANSHEE_SERVICES) $(LINK_BANSHEE_SERVICES)

DIR_BANSHEE_WIDGETS = $(DIR_CORE)/Banshee.Widgets
MONO_BASE_PATH += $(DIR_BANSHEE_WIDGETS)
REF_BANSHEE_WIDGETS = $(LINK_MONO_POSIX) $(LINK_CAIRO) $(LINK_GTK)
LINK_BANSHEE_WIDGETS = -r:$(DIR_BANSHEE_WIDGETS)/Banshee.Widgets.dll
LINK_BANSHEE_WIDGETS_DEPS = $(REF_BANSHEE_WIDGETS) $(LINK_BANSHEE_WIDGETS)

DIR_BANSHEE_THICKCLIENT = $(DIR_CORE)/Banshee.ThickClient
MONO_BASE_PATH += $(DIR_BANSHEE_THICKCLIENT)
REF_BANSHEE_THICKCLIENT = $(LINK_BANSHEE_WIDGETS_DEPS) \
	$(LINK_BANSHEE_SERVICES_DEPS) $(LINK_HYENA_GUI_DEPS)
LINK_BANSHEE_THICKCLIENT = -r:$(DIR_BANSHEE_THICKCLIENT)/Banshee.ThickClient.dll
LINK_BANSHEE_THICKCLIENT_DEPS = $(REF_BANSHEE_THICKCLIENT) \
	$(LINK_BANSHEE_THICKCLIENT)

DIR_NEREID = $(DIR_CORE)/Nereid
MONO_BASE_PATH += $(DIR_NEREID)
REF_NEREID = $(LINK_BANSHEE_THICKCLIENT_DEPS)


DIR_ENGINES = $(top_srcdir)/src/Engines

DIR_ENGINE_GSTREAMER = $(DIR_ENGINES)/Banshee.MediaEngine.GStreamer
MONO_ADDINS_PATH += $(DIR_ENGINE_GSTREAMER)
REF_ENGINE_GSTREAMER = $(LINK_BANSHEE_SERVICES_DEPS) $(LINK_GLIB)


# Build rules
# Ignoring 0278 due to a bug in gmcs: 
# http://bugzilla.ximian.com/show_bug.cgi?id=79998
BUILD_FLAGS = -debug -nowarn:0278 $(ASSEMBLY_BUILD_FLAGS)
BUILD = $(MCS) $(BUILD_FLAGS)
BUILD_LIB = $(BUILD) -target:library

# Cute hack to replace a space with something
colon:= :
empty:=
space:= $(empty) $(empty)

# Build path to allow running uninstalled
RUN_PATH = $(subst $(space),$(colon), $(MONO_BASE_PATH))


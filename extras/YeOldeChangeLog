2009-05-22  Aaron Bockover  <abock@gnome.org>

	Friends, after 4 years and 3 months, this file has come to an end. This
	was a good file, a noble file, and it should be respected and cherished.
	Many wonderful people have contributed to this file. I thank them all.

	The spirit of this file will live on in git log, and whatever worthy
	change log tracking facility we may adopt in the future.

	Also, I win. First and Last post. BUUUUUUURRRRRNNNN.

2009-04-16  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Base/Tests/TaglibReadWriteTests.cs:
	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs:
	* src/Core/Banshee.Core/Banshee.Streaming/SaveTrackMetadataJob.cs:
	* src/Core/Banshee.Core/Makefile.am: Remove old save job and move its
	save-to-file logic into StreamTagger.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Metadata/SaveTrackMetadataService.cs:
	* src/Core/Banshee.Services/Banshee.Metadata/SaveTrackMetadataJob.cs: New
	service and job that save-to-file and move-on-info-save if/when
	appropriate.

	* src/Core/Banshee.Services/Banshee.Preferences/PreferenceService.cs: the
	SchemaPreferences are now created in SaveTrackMetadataServices; use them.

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Start
	the SaveTrackMetadataServices.

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Get rid of the old write-to-file and move-on-info-save job queueing; now
	happens based on the Updated and LastSynced stamps in the db.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Give
	access to the underlying IDataReader from HyenaDataReader.

	* src/Core/Banshee.Services/Banshee.Collection/MoveOnInfoSaveJob.cs:
	Remove.

2009-04-16  Gabriel Burt  <gabriel.burt@gmail.com>

	Add a smart, priority-aware, resource-contention-avoiding job scheduler
	Net result is BPM analysis will pause while importing, etc (BGO #577772).
	Still need to convert Banshee.Kernel jobs.

	* src/Core/Banshee.Core/Banshee.Base/ProductInformation.cs:
	* src/Core/Banshee.Core/Banshee.Base/Resource.cs: Rename to
	AssemblyResource to avoid conflicts.

	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs:
	* src/Core/Banshee.Services/Banshee.Collection/RescanPipeline.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	* src/Core/Banshee.Services/Banshee.Library/ThreadPoolImportSource.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/TranscoderService.cs:
	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs:
	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/DatabaseRebuilder.cs:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs:
	* src/Extensions/Banshee.Bpm/Banshee.Bpm/BpmDetectJob.cs:
	Set PriorityHints and Resources for Jobs.

	* src/Core/Banshee.Services/Banshee.Metadata/IMetadataLookupJob.cs:
	* src/Core/Banshee.Services/Banshee.Metadata/MetadataServiceJob.cs: Add
	Cancel method.

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Use the
	new JobScheduler, checking for DataLossJobs on shutdown.

	* src/Core/Banshee.Services/Banshee.ServiceStack/DbIteratorJob.cs: Rework
	as subclass of SimpleAsyncJob.

	* src/Core/Banshee.Services/Banshee.ServiceStack/JobScheduler.cs: Simple
	new class that subclasses JobScheduler and is an IService.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.ServiceStack/UserJobManager.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/ConfirmShutdownDialog.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TaskStatusIcon.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTile.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.cs:
	* src/Extensions/Banshee.Bpm/Banshee.Bpm/BpmService.cs:
	Use JobScheduler instead of UserJobManager.

	* src/Core/Banshee.Services/Banshee.ServiceStack/TestUserJob.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/UserJob.cs: Inherit from
	Hyena.Job.  Most UserJob code now lives in Hyena.Job

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs: Inherit
	from DbIteratorJob.

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtService.cs:
	If we were cancelled, don't try to save the last_scan time.

	* src/Libraries/Hyena/Makefile.am:
	* src/Libraries/Hyena/Hyena.Jobs/Job.cs:
	* src/Libraries/Hyena/Hyena.Jobs/JobExtensions.cs:
	* src/Libraries/Hyena/Hyena.Jobs/PriorityHints.cs:
	* src/Libraries/Hyena/Hyena.Jobs/Resource.cs:
	* src/Libraries/Hyena/Hyena.Jobs/Scheduler.cs:
	* src/Libraries/Hyena/Hyena.Jobs/SimpleAsyncJob.cs:
	* src/Libraries/Hyena/Hyena.Jobs/Tests/SchedulerTests.cs: New set of
	classes to implement smart scheduling of jobs, prioritizing jobs and
	avoiding resource contention.

	* src/Libraries/Hyena/Hyena/Timer.cs: Add params/format ctor.

2009-04-16  Gabriel Burt  <gabriel.burt@gmail.com>

	This patch adds separate library folder preferences for Music Library,
	Video Library, and Podcasts (BGO #404827).  They are all configurable via
	the Preferences dialog.  It also changes the format used to store URIs in
	the database, from sometime relative and sometimes absolute to always
	absolute (BGO #564355).

	* src/Core/Banshee.Core/Banshee.Base/FileNamePattern.cs:
	* src/Core/Banshee.Core/Banshee.Base/Paths.cs:
	* src/Core/Banshee.Core/Banshee.Configuration.Schema/LibrarySchema.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportManager.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection/MoveOnInfoSaveJob.cs:
	* src/Core/Banshee.Services/Banshee.Collection/RescanPipeline.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs:
	* src/Core/Banshee.Services/Banshee.Library/MusicLibrarySource.cs:
	* src/Core/Banshee.Services/Banshee.Library/VideoLibrarySource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistFileUtil.cs:
	* src/Core/Banshee.Services/Banshee.Preferences/SourcePage.cs:
	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs:
	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/DefaultPreferenceWidgets.cs:
	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/NotebookPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/PageComboBox.cs:
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs:
	* src/Extensions/Banshee.Bpm/Banshee.Bpm/BpmDetectJob.cs:
	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs:
	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	* src/Extensions/Banshee.PlayerMigration/Banshee.PlayerMigration/RhythmboxPlayerImportSource.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastSource.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService_Interface.cs:
	* src/Extensions/Banshee.Podcasting/Resources/GlobalUI.xml:
	* src/Libraries/Migo/Migo.Syndication/FeedsManager.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibraryLocationPreference.cs:
	Remove assumptions about there being only one Library Location, instead
	use the relevant PrimarySource's BaseDirectory.  Remove relative-URI
	logic/munging; always use the absolute URI.  Add library location
	preferences for Music, Video, and Podcasts.

2009-04-16  Aaron Bockover  <abock@gnome.org>

	* Project: migrated to git, repository structure cleaned up and
	organized; this is just a memento

2009-04-15  Alexander Kojevnikov  <alexander@kojevnikov.com>

	* src/Core/Banshee.Core/Banshee.Base/FileNamePattern.cs:
	* src/Libraries/Hyena/Hyena/StringUtil.cs:
	* src/Libraries/Hyena/Hyena/Tests/StringUtilTests.cs: Trimming dots and
	spaces in file and folder names (BGO #572999)

2009-04-15  Alexander Kojevnikov  <alexander@kojevnikov.com>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingInterface.cs:
	Fixed the full-screen mode visual glitch in the Now Playing source
	(BGO #539024)

2009-04-15  Alexander Kojevnikov  <alexander@kojevnikov.com>

	* src/Libraries/Hyena.Gui/Hyena.Widgets/RatingEntry.cs: Fixed the
	RatingEntry colors on dark themes (BGO #576459)

2009-04-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs:
	Handle YYYY release date strings from MusicBrainz (BGO #578073)

2009-04-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* build/m4/shamrock/nunit.m4: If nunit is not found, look for mono-nunit.

2009-04-14  Alexander Kojevnikov  <alexander@kojevnikov.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/FilteredListSourceContents.cs:
	Don't change the browser height when the recommendations pane is shown
	(BGO #578896)

2009-04-14  Alexander Kojevnikov  <alexander@kojevnikov.com>

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/PreferenceDialog.cs:
	Setting default height for the Preferences dialog (BGO #552620)

2009-04-14  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TaskStatusIcon.cs: Set
	the sensitivity based on whether any bg tasks are active, so less
	intrusive when there aren't, and in general, distinguishable.

2009-04-14  Alexander Kojevnikov  <alexander@kojevnikov.com>

	* .gitignore: Added *.mdb

2009-04-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* tests/Analyzer/Analyzer.cs: Fix warnings.

2009-04-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Mono.Data.Sqlite/Mono.Data.Sqlite/SQLite3.cs:
	* src/Libraries/Mono.Data.Sqlite/Mono.Data.Sqlite/SQLiteBase.cs:
	* src/Libraries/Mono.Data.Sqlite/Mono.Data.Sqlite/SQLiteCommand.cs:
	* src/Libraries/Mono.Data.Sqlite/Mono.Data.Sqlite/SQLiteConvert.cs:
	* src/Libraries/Mono.Data.Sqlite/Mono.Data.Sqlite/SQLiteDataReader.cs:
	Performance fixes ported from upstream System.Data.Sqlite, making SqliteType
	a class (not struct) and avoid unnecessary calls to TypeNameToDbType.

2009-04-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Mono.Data.Sqlite/bnc-490021_mds-even-better.patch:
	* src/Libraries/Mono.Data.Sqlite/Mono.Data.Sqlite/SQLiteConvert.cs:
	Building on Bertrand's patch, improve performance even more.

2009-04-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/tests/Performance/Makefile.am: Also build an exe, useful for
	drilling into a performance problem with mono --profile.

	* src/tests/Performance/PerformanceTests.cs: Categorize tests, add
	FetchTrack, LoadTrack, and Select* tests testing relatively low level db
	operations.

2009-04-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteArrayDataReader.cs:
	Dispose underlying reader after reading in all its values.

2009-04-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Remove
	old comment about how to fix the transactions code.

2009-04-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* configure.ac:
	* tests/Analyzer/Analyzer.cs:
	* tests/Analyzer/Makefile.am:
	* tests/Makefile.am:
	* tests/Performance/Makefile.am:
	* tests/Performance/PerformanceTests.cs:
	* tests/compare-perf-results:
	* tests/test-perf: New scripts and tests for testing and comparing
	performance across commits.

2009-04-05  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Fix confusing typo in debug message.

2009-04-04  Alexander Kojevnikov  <alexander@kojevnikov.com>

	* src/Libraries/Hyena.Gui/Hyena.Gui/RatingRenderer.cs: Fixed zero rating
	display in the main menu (BGO #577835)

2009-04-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Mono.Data.Sqlite/Mono.Data.Sqlite/SQLiteConvert.cs:
	* src/Libraries/Mono.Data.Sqlite/bnc-490021_mds-improve-type-lookup.patch:
	Apply patch from Bertrand Lorentz optimizing the method that does type
	lookups (BNC #490021)

2009-04-02  Alexander Kojevnikov  <alexander@kojevnikov.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Allowing to resize track list view columns as long as one column to the
	left and to the right is not fixed-width (BGO #538085)

2009-04-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Resources/banshee-dialogs.glade: Improve
	language for smart playlists predefined button.

2009-04-02  Alexander Kojevnikov  <alexander@kojevnikov.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Fixed row rendering glitch when hscroll position is non-zero
	(BGO #548526)

2009-04-02  Alexander Kojevnikov  <alexander@kojevnikov.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellRating.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui/RatingRenderer.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/RatingEntry.cs: Changed the
	RatingEntry widget to make it easier to edit and reset the ratings
	(BGO #572260)

2009-04-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs: Patch from
	Alexander Kojevnikov working around issue in TagLib# where it
	miscalculates the bitrate for VBR tracks if the duration isn't set
	yet (BGO #562582)

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Bump the metadata version to trigger a refresh.  Users of trunk will get
	yet another refresh, where users coming from 1.4 won't see a difference;
	they already were going to get a refresh.

2009-04-02  Gabriel Burt  <gabriel.burt@gmail.com>

	Updated to latest MusicBrainz# courtesy of Scott Peterson and Tom Corner.

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs:
	Use the new MB# API.

	* src/Libraries/MusicBrainz/*: Updated to latest from musicbrainz.org.  I
	did comment out the DiscWin32NT references in LocalDisc.

2009-04-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodTrackInfo.cs: Patch from
	Andrés G. Aragoneses fixing bug with ratings not getting transferred to
	iPods (BGO #577396)

2009-04-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs: 
	Set the indicator bug to have an empty title.

2009-04-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* libbanshee/banshee-bpmdetector.c: Fix warnings.

2009-03-31  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Core/Banshee.Base/Localization.cs: Reduce startup
	time by compiling and caching XPath expressions (BGO #577100).

2009-03-30  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlists.Formats/Tests/PlaylistFormatTests.cs:
	* tests/Banshee.Services/playlist-data/reference_local.asx:
	* tests/Banshee.Services/playlist-data/reference_remote.asx: Add some
	unit tests for ASF reference playlists. The remote test, like all
	ASX tests with a remote URL, is broken because we have to change
	http://	to mmsh://.

2009-03-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Patch from Andrés G.
	Aragoneses disposing the sync object when the dap is disposed, fixing a
	crash if automatic-sync was enabled (BGO #577072)

2009-03-29  Alexander Kojevnikov  <alexander@kojevnikov.com>

	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackRepeatMode.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackShuffleMode.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackRepeatActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackShuffleActions.cs:
	Update the UI when repeat and shuffle mode is changed using DBus
	(BGO #575383).

2009-03-29  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlists.Formats/PlaylistParser.cs:
	* src/Core/Banshee.Services/Banshee.Playlists.Formats/AsfReferencePlaylistFormat.cs:
	* src/Core/Banshee.Services/Banshee.Services.csproj:
	* src/Core/Banshee.Services/Makefile.am: Patch from Félix Velasco
	adding support for ASF reference playlists, with small changes by me
	(BGO #545646).

2009-03-26  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	Fix my previous patch to properly handle the case when a table is not
	in sqlite_stat1.

2009-03-26  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	* src/Core/Banshee.Services/Banshee.Configuration/DatabaseConfigurationClient.cs:
	Automatically analyze the database when the number of records in a 
	table has changed significantly since last analysis. This should ensure
	optimal use of the indices (BGO #555937).

2009-03-26  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Update some indices to use the new SortKey columns.

2009-03-26  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Resources/translators.xml: Updated

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/FilteredListSourceContents.cs:
	Disable smooth-scroll by default (pass --smooth-scroll at runtime to
	enable) since still not ready.

2009-03-25  John Millikin  <jmillikin@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/LargeTrackInfoDisplay.cs:
	* src/Libraries/Hyena/Hyena/Tests/StringUtilTests.cs:
	* src/Libraries/Hyena/Hyena/StringUtil.cs:
	When splitting the "Now playing" info text into lines, only split
	if there are at least two info sections (BGO #560886).

2009-03-25  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Widgets/Banshee.Widgets/SeekSlider.cs: Patch from
	Alexander Kojevnikov fixing the position calculation for clicks on the
	seek slider (BGO #575635).

2009-03-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* build/m4/banshee/torrent.m4:
	* src/Extensions/Banshee.Torrent/Banshee.Torrent/TorrentFileDownloadTask.cs:
	* src/Extensions/Banshee.Torrent/Banshee.Torrent/TorrentService.cs: Some
	cleanup and build fixes.

2009-03-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeModelProvider.cs:
	Patch from Alexander Kojevnikov and myself fixing an issue with migration
	caused by using a SqliteModelProvider within the migrations which assume
	the schema has already been updated.

2009-03-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Patch from Brian Lucas reenabling and updating the old folder_depth
	handling code (BGO #537367)

2009-03-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/AlbumArtistEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/PageNavigationEntry.cs:
	Make the track artist sync button not sensitive when IsCompilation, and
	don't change the title forward button's sensitivity.

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/SortingPage.cs:
	Make the title sort field NoSync.

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/ExtraTrackDetailsPage.cs:
	* src/Core/Banshee.ThickClient/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/LicenseEntry.cs:
	Add a combo entry for editing the LicenseURI field.

2009-03-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/PageNavigationEntry.cs:
	Set a tooltip on the next/arrow button, and make sure the title entry is
	focused after we switch tracks.

2009-03-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Booter/Booter/Entry.cs:
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/Migrator.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/StatisticsPage.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmTrackInfo.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackInfo.cs:
	Patch from Brian Lucas and Alexander Kojevnikov adding a score
	column/field that is updated automatically based on how far a song was
	played before it was skipped (or over).  It has a value of 0 to 100, where
	100 would mean that every time you played the song you listened to the
	whole thing (BGO #555116)

2009-03-20  John Millikin  <jmillikin@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Fix typo in the version 28 database migration.

2009-03-20  John Millikin  <jmillikin@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Remove parentheses around track count in sources lists. (BGO #561339)

2009-03-20  John Millikin  <jmillikin@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	* src/Libraries/Hyena/Hyena/Tests/StringUtilTests.cs:
	* src/Libraries/Hyena/Hyena/StringUtil.cs:
	Collapse runs of spaces into a single space when searching for
	strings. (BGO #573484)

2009-03-20  John Millikin  <jmillikin@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellTrackAndCount.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellDiscAndCount.cs:
	If the total disc or track count is 0, display only the disc/track
	number. If neither count is >0, display nothing. (BGO #573093)

2009-03-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Patch
	from Alexander Kojevnikov fixing focus loss when renaming non-active
	source (BGO #527508)

2009-03-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Patch from Alexander Kojevnikov fixing a dragged column rendering glitch
	when hscroll position is non-zero (BGO #536853)

2009-03-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Patch from Alexander Kojevnikov fixing mouse interactions with ListView's
	cells (such as the rating) when hscroll position is non-zero (BGO #538535)

2009-03-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.SmartPlaylist.Gui/Editor.cs:
	* src/Core/Banshee.ThickClient/Resources/banshee-dialogs.glade: Patch from
	Alexander Kojevnikov fixing bug with predefined smart playlists'
	descriptions being so wide they caused ugly horizontal scrolling (BGO
	#556887)

2009-03-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/SortKeyUpdater.cs: When the
	locale has changed, update the SearchKeys as well.

2009-03-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Update the MetadataHash for tracks that have an unknown artist, album,
	and/or title, fixing a problem where such items got removed and readded to
	devices on every sync (BGO #569379)

2009-03-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Collection/AlbumInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/ArtistInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/Tests/DatabaseAlbumInfoTests.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/Tests/DatabaseArtistInfoTests.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/Tests/DatabaseTrackInfoTests.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtistListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellAlbum.cs:
	* src/Libraries/Hyena/Hyena/StringUtil.cs: Patch from Andrés G.
	Aragoneses with input from John Millikin to keep displaying and sorting
	unknown artist/albums/tracks as "Unknown .." but to keep the actual
	value of the artist/album/title in the database (and written back to
	files) null (BGO #528493)

2009-03-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Preferences/Root.cs:
	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/WidgetFactory.cs:
	Handle the Name/ShortDescription of a pref changing.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapLibrarySync.cs: Update the Name of
	each library sync option when we recaculate the sync, showing the # items
	to add and remove.

2009-03-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapContent.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapLibrarySync.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapSync.cs: Remove cruft and unnecessary
	logging.

2009-03-15	* src/Dap/Banshee.Dap/  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Widgets/RatingMenuItem.cs: Patch from
	Alexander Kojevnikov fixing the bug where right-clicking on a track in
	the Play Queue would clear its rating (BGO #575384).

2009-03-15  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* autogen.sh: Print a proper error message when (g)libtoolize is not
	found. Patch from Andreas Neustifter, with a small change by me
	(BGO #563839).

2009-03-14  John Millikin  <jmillikin@gmail.com>

	* src/Core/Banshee.Core/Makefile.am:
	* src/Core/Banshee.Core/Banshee.Base/Tests/CoverArtSpecTests.cs:
	Add tests for escaping cover art filename fragments.

2009-03-12  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* libbanshee/banshee-tagger.c: Patch from Roderich Schupp setting the
	right merge mode, so that tags are not lost when importing a CD with
	GStreamer 0.10.22 (BGO #573813).

2009-03-12  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* build/TranslatorExtractor.cs: Update the special case for sr@latin,
	as the po file was renamed.

	* build/Makefile.am: Fix typo that caused translators credits not to be
	updated.

	* src/Core/Banshee.Core/Resources/translators.xml: Updated, long
	overdue because of the above bug.

2009-03-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* Banshee.sln:
	* libbanshee/libbanshee.cproj:
	* *.csproj: Updated by MonoDevelop, removing empty elements and saving
	some per-project preferences like use-spaces-for-tabs etc.

2009-03-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* Makefile.am: Add 'make csharp' target that references Gtk#, Hyena,
	Banshee etc for convenient/quick shell usage.

2009-03-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	Don't switch to the FSQ source when some files are loaded if the playing
	item is a video (BGO #570382)

2009-03-09  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Recommendations/RecommendationService.cs:
	Patch from Christoph Burgdorf to update the recommendation pane when
	the track info is updated (BGO #574628).

2009-03-09  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Widgets/MenuButton.cs: Patch from
	Alexander Kojevnikov fixing the Next button so that its pressed state
	is always displayed properly (BGO #554685).

2009-03-09  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Addins.Gui/AddinView.cs: Patch
	from Alexander Kojevnikov fixing a visual glitch in the extension
	manager (BGO #531575).

2009-03-08  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Move the line added in my previous commit, to prevent a crash when
	switching to the Mini Mode.

2009-03-08  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Set the source name as the text of the renderer, for a11y.

2009-03-08  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Patch from
	Alexander Kojevnikov fixing a localization issue with the "Delete From
	Drive" action (BGO #560455).

	* src/Dap/Banshee.Dap/Banshee.Dap/MediaGroupSource.cs: Do not set the
	"Delete From Drive" label, it's overwritten in TrackActions anyway.

2009-03-08  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs:
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Fix
	localization issues in Playback menu by having separate string for each
	media type. Original patch from Alexander Kojevnikov, modified by me
	(BGO #570546).

2009-03-05  John Millikin  <jmillikin@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/QueryLimitBox.cs:
	Patch from Alexander Kojevnikov: Change "limit to" entry in the smart
	playlist editor to a SpinButton (BGO #557321).

2009-03-05  John Millikin  <jmillikin@gmail.com>

	* src/Libraries/Hyena/Hyena/Log.cs:
	Patch from Neil Loknath: Change the color used for warning messages to
	dark yellow (BGO #546647).

2009-03-05  John Millikin  <jmillikin@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/QueuedSqliteDatabase.cs:
	Removed dead code.

2009-03-05  John Millikin  <jmillikin@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TaskStatusIcon.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TaskStatusButton.cs:
	Use an animated image, rather than a button *containing* an animated
	image, for the task status icon (BGO #574298).
	
	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Core/Banshee.ThickClient/Makefile.am:
	Rename TaskStatusButton to TaskStatusIcon.

2009-03-05  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Fix
	parameter order for the SourcePreferences action entry.

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Move misplaced SourcePreferences menu item.

2009-03-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/DefaultPreferenceWidgets.cs:
	* src/Core/Banshee.Services/Banshee.Library/MusicLibrarySource.cs: Move
	the folder selector into its own section, add a new misc section, and
	override the label for the new SourcePreferences action. Add the
	music-library prefs that were defined in PreferenceService.

	* src/Core/Banshee.Services/Banshee.Preferences/PreferenceService.cs: Name
	the file-related prefs section File Policies and show the label. Add a
	source-specific tab and remove music-library prefs. Move Banshee-specific
	preferences from Page to the PreferenceService.  Add ChildPages and
	IconName properties to Page class, allowing Pages to have child Pages.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Preferences/SourcePage.cs: New
	convenience subclass of Page that adds a source-specific page.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Add virtual
	PreferencesPageId property that if !null will mean the
	SourcePreferencesAction will appear in the source's context menu, and will
	open the Preferences dialog to the relevant souce-specific section. Add
	PreferencesPage property that creates a source-specific prefs page for this
	source, and Dispose it when the source is Removed.

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Add new
	SourcePreferences action as described elsewhere.

	* src/Core/Banshee.ThickClient/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/PageComboBox.cs:
	New ComboBox subclass to switch a Notebook between Pages, with the ability
	to set the active source-specific page via its Id.

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdService.cs: Pass
	the appropriate Order to the prefs ctor. Add the new Audio CDs page as a
	source-specific page so it appears in the Source Specific preferences tab,
	instead of its own tab.

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	Override PreferencesPageId and the SourcePreference label.

	* src/Extensions/Banshee.AudioCd/Resources/GlobalUI.xml: Show the
	SourcePreferencesAction in the audio cd context menu.

	* src/Extensions/Banshee.Bpm/Banshee.Bpm/BpmService.cs: Add the BPM pref
	to the Music source-specific section instead of the Generic tab.

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/NotebookPage.cs: If
	a page has ChildPages, create a PageComboBox and Notebook to
	contain/switch between them.

2009-03-04  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Fix a crash on
	detection of a Daap server, related to the new source sorting stuff
	(BGO #573686).

2009-03-04  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Bump to 1.5.0

2009-03-04  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Patch
	from Alexander Kojevnikov that makes the Previous button go to the
	previous track only if position is less than 4 seconds, otherwise it
	restarts the current song (BGO #539085).

2009-03-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Resources/contributors.xml: Add a bunch of people
	as developers and contributors, most of whom should have been in here for
	some time.

2009-03-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Library/MusicLibrarySource.cs: Fix
	mistake in default smart playlist name.

2009-03-03  John Millikin  <jmillikin@gmail.com>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs:
	Only increment the loop counter once when setting compilation
	properties on tracks from the Audio CD model.

2009-03-02  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	* src/Extensions/Banshee.Lastfm/Resources/GlobalUI.xml: Patch from
	Alexander Kojevnikov adding a refresh action in the context menu for
	Last.fm stations (BGO #536655).

2009-03-01  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlists.Formats/XspfPlaylistFormat.cs:
	Do not throw an exception when trying to sniff an invalid file.

2009-03-01  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	Various fixes to the unit tests. There are still a few failures left,
	but at least they don't seem to be caused by the test system itself.

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/Tests/MtpDapTests.cs: Remove
	a celebratory Console.WriteLine.

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Do not
	crash when there's no entry assembly. This happens when running the unit
	tests.

	* src/Libraries/Hyena/Hyena/Tests/TestBase.cs: Add a TestsDir property 
	to help	find the test data files.

	* src/Core/Banshee.Services/Banshee.Playlists.Formats/Tests/PlaylistFormatTests.cs:
	Use TestsDir and initialize the AddinManager.

	* src/Core/Banshee.Core/Banshee.Base/Tests/TaglibReadWriteTests.cs: Use
	TestsDir.

	* src/Libraries/Mono.Media/Media.Playlists.Xspf/Tests/XspfTests.cs: Fix
	the path to the test files.

	* tests/Mono.Media/xspf/complete.xml: Fix typo.

	* tests/Makefile.am: Add Mono.Media to the list of assemblies to test.

2009-02-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Rename
	SortTypes to ChildSortTypes.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Add configuration
	for separate children by type, get rid of "Ascending" in Name sort option,
	add a TypeName property that defaults to GetType ().Name that is used by
	the separate-by-type sort option.

	* src/Core/Banshee.Services/Banshee.Sources/SourceSortType.cs: Add a Sort
	method that uses an internal IComparer to separate by type if desired,
	sort by the main function (size, etc), and then fallback to sorting by
	name.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Add
	separate-by-type option.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs: Get
	rid of 'Station Type' sort option since now redundant.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	Override TypeName to replicate old Station Type sort behavior.

2009-02-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastActions.cs:
	Add ellipses to the end of some action labels, and add short labels
	without them for use in toolbars.

2009-02-27  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Patch from Valentin Sawadski removing the Skip button from notifications
	when playing from a radio station (BGO #572971).

2009-02-27  Gabriel Burt  <gabriel.burt@gmail.com>

	Patch from John Millikin, with a few enhancements by me, adding support
	for sorting sources in real time and saving/restoring the preference for each
	primary source, in a general way so that sources can add their own sort
	options (BGO #556976)

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Sources/SourceSortType.cs: New class
	for defining sort types, giving them a name, id, and comparer.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Add new properties
	for defining how the children of a source can be sorted (if applicable),
	listening for the Updated event on all child sources and resorting when
	changed (so if sorted by size and a playlist gets a new item, it will be
	resorted immediately).  Save and restore the sort type configuration.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Override the
	child sort properties, adding name and size asc/desc options.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Dynamically
	generate the Sort by menu from the SortTypes a given source has (if any).
	Allow overriding its label.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CellEditEntry.cs: Fix
	firing the EditingDone event twice.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Handle
	resorting a little differently.

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	* src/Extensions/Banshee.InternetRadio/Resources/GlobalUI.xml:
	* src/Extensions/Banshee.Podcasting/Resources/GlobalUI.xml:
	* src/Extensions/Banshee.Lastfm/Resources/GlobalUI.xml: Use the new
	SortChildrenAction in the context menu for these types.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	Instead of using a totally custom menu for sorting Last.fm stations, use
	the new, generic Source SortTypes method for defining them.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	Remove custom sort logic since now handled upstream of us, customize the
	SortChildrenAction label, pass the typeUniqueId to the base ctor.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	Pass the typeUniqueId to the base ctor so it's set that much earlier.
	Really should clarify/enforce a sensible API here.

2009-02-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Recommendations/RecommendationPane.cs:
	Patch from Alexander Kojevnikov to ignore/not fetch recommendations for
	Unknown etc artists (BGO #560722)

2009-02-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/StatisticsPage.cs:
	Patch from Alexander Kojevnikov making it so that even if the statistics
	TreeView is focused you can still use ctrl-pageup/down to switch tabs in
	the track editor (BGO #565438)

2009-02-27  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Core/Banshee.Base/Tests/TaglibReadWriteTests.cs:
	Initialize the AddinManager before running tests. Original patch by
	John Millikin (BGO #568046).

	* tests/data/test.mp3: Add a sample mp3 file required by the taglib-sharp
	tests.

	* tests/Makefile.am: Run nunit-console2 with -noshadow so that tests
	can find the sample mp3 file.

2009-02-26  Eoin Hennessy <eoin@randomrules.org>

	* src/Libraries/Mono.Media/Media.Playlists.Xspf/Playlist.cs: The current
	path is not gauranteed to be a valid Uri (especially when running from a
	bundle on OSX). If creating the default base Uri from the current path
	fails, set it to Location.

2009-02-26  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/IListView.cs:  Patch from
	Alexander Kojevnikov moving the focus to the list of songs when
	jumping (Ctrl-J) to the currently playing song (BGO #558940)

2009-02-26  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Query/ExactStringQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/StringQueryValue.cs: Patch from Andrés
	G. Aragoneses and John Millikin fixing the wildcard escaping
	ExactStringQueryValues in LIKE queries (BGO #570312)

	* src/Libraries/Hyena/Hyena.Query/Tests/QueryTests.cs: New tests Andrés
	testing the behavior for Exact and non LIKE queries.

2009-02-26  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Libraries/Hyena/Hyena.Query/AliasedObjectSet.cs: Move the ToLower
	call added in my previous commit outside of the loop. Let's not waste
	CPU cycles.

2009-02-26  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Libraries/Hyena/Hyena.Query/AliasedObjectSet.cs: Make search
	fields not case sensitive, so that "Search by Matching Album" works
	with german locale (BGO #573268).

2009-02-26  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/SortKeyUpdater.cs: Slightly
	nicer debug output.

2009-02-26  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistFileUtil.cs:
	* src/Core/Banshee.Services/Banshee.Playlists.Formats/IPlaylistFormat.cs:
	* src/Core/Banshee.Services/Banshee.Playlists.Formats/PlaylistFormatBase.cs:
	* src/Core/Banshee.Services/Banshee.Playlists.Formats/PlaylistParser.cs:
	* src/Core/Banshee.Services/Banshee.Playlists.Formats/XspfPlaylistFormat.cs:
	* src/Core/Banshee.Services/Makefile.am:
	* src/Libraries/Mono.Media/Media.Playlists.Xspf/Playlist.cs:
	* src/Libraries/Mono.Media/Media.Playlists.Xspf/Track.cs:
	Patch from John Millikin adding support for importing and exporting XSPF
	playlist files (BGO #389537)

2009-02-26  Gabriel Burt  <gabriel.burt@gmail.com>

	Massive, awesomely-well-done patch by John Millikin adding proper support
	for unicode-compatibile, case-insensitive, current-culture-aware
	collation/sorting (BGO #499650)

	* src/Core/Banshee.Core/Banshee.Collection/AlbumInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/ArtistInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Save
	String.Empty as null for *Sort properties.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Add internal *SortKey properties that run their respective *Sort values
	through Hyena.StringUtil.SortKey.  Change *Lowered properties to internal.


	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistListModel.cs:
	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs:
	Sort by the new *SortKey columns instead of the *Lowered columns, and use
	the custom SQLite collation method (HYENA_COLLATION_KEY) for columns
	without cached collation keys.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Collection.Database/Tests/DatabaseAlbumInfoTests.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/Tests/DatabaseArtistInfoTests.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/Tests/DatabaseTrackInfoTests.cs:
	Test the *Lowered, *Sort, and *SortKey properties.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	* src/Core/Banshee.Services/Banshee.Database/SortKeyUpdater.cs: If the
	locale is different than the last run, regenerate the cached SortKey
	values.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add *SortKey columns for album/artist/title values.  Since these columns
	are very commonly sorted on, having the proper collation-key values
	already generated gives us a performance win.

	* src/Core/Banshee.Services/Banshee.Database/BansheeModelProvider.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Allow
	turning of the table checking (that adds columns automatically).

	* src/Core/Banshee.ThickClient/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.ThickClient.addin.xml:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/SortingPage.cs:
	Simple new tab in the track editor for modifying the *Sort properties.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs: Handle
	sqlifying byte[] as blobs.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteUtils.cs: Recognize byte[]
	as blobs, and add new HYENA_COLLATION_KEY custom SQLite function that uses
	Hyena.StringUtils.SortKey.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/Tests/SqliteCommandTests.cs: Test
	the sqlifying of various object types.

	* src/Libraries/Hyena/Makefile.am:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/Tests/SqliteUtilTests.cs: Test the
	collation and search custom methods.

	* src/Libraries/Hyena/Hyena/StringUtil.cs: Add SortKey method that
	generates a case-insensitive, current-culture-aware byte[] collation key.

	* src/Libraries/Hyena/Hyena/Tests/StringUtilTests.cs: Test the new SortKey
	method.

2009-02-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Halie/Halie/Client.cs: Fix bug where the --hide command
	would call .Hide () on the window, but then it would get Presented which
	Shows it (BGO #540172)

	* src/Clients/Muinshee/Muinshee/PlayerInterface.cs:
	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/BaseClientWindow.cs: Add
	protected InitialShowPresent method that subclasses can use when they are
	ready to be shown/presented, but that respects the command line options.

2009-02-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	* src/Libraries/Hyena/Hyena.Data/ColumnDescription.cs: Fix another freeze
	in the RecalculateColumnSize code due to some values getting set to NaN.

2009-02-24  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Libraries/Hyena/Hyena.Query/Tests/QueryTests.cs: Fix a test by
	adding the SQL escape clause that is now used.

2009-02-23  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Fix a visual glitch when sidebar is very narrow. Patch from Neil Loknath
	with code formatting fixes by me (BGO #524705).

2009-02-23  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Core/Banshee.Configuration.Schema/LibrarySchema.cs:
	* src/Core/Banshee.Core/Banshee.Base/FileNamePattern.cs: Add support
	for %album_artist_initial% as a variable for file/folder name patterns.
	Initial patch from aquavitae69, improved by Alexander Kojevnikov and me
	(BGO #562786).

2009-02-21  Eoin Hennessy <eoin@randomrules.org>

	* src/run-banshee: Enable running uninstalled on OSX and make sure that the value
	for 'db' is actually used.

	* build/osx/build.env: Taglib# is now installed into /share, add it to build env.

2009-02-20  Gabriel Burt  <gabriel.burt@gmail.com>

	Patch from John Millikin removing some cruft and changing the podcast
	cache location.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Store partially downloaded episodes in
	~/.cache/banshee-1/extensions/podcasting/partial-downloads/ instead of
	under ~/.config (BGO #569436).  Migration path included.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService_Interface.cs:
	Fix header.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastCore.cs:
	Remove unused file.

2009-02-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Widgets/Banshee.Widgets/Tile.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Recommendations/RecommendationPane.cs:
	Patch from Chris Jones fixing theming issue (BGO #558656)

2009-02-20  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Extensions/Banshee.NotificationArea/Notifications/Notification.cs:
	Fix compilation of the in-tree notify-sharp.

2009-02-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/AlbumArtistEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/BasicTrackDetailsPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/EditorUtilities.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/ExtraTrackDetailsPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/FieldPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/PageNavigationEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/RangeEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TextViewEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	* src/Extensions/Banshee.Bpm/Banshee.Bpm/BpmEntry.cs: Patch from Alexander
	Kojevnikov adding mnemonics for track editor fields (BGO #563606)

2009-02-19  Eoin Hennessy <eoin@randomrules.org>

	* build/osx/targets/bundle-40-managed-libs.targets: Bump taglib# version.

2009-02-19  Gabriel Burt  <gabriel.burt@gmail.com>

	This patch fixes support for hiding/restoring from the notification icon
	properly even if you hid the window via the X/close button, and even if
	you're in MiniMode (BGO #437938)

	* src/Extensions/Banshee.MiniMode/Banshee.MiniMode/MiniModeWindow.cs:
	Subclass from BaseClientWindow so we can set the Minimode window as the
	PrimaryWindow when it's enabled.

	* src/Extensions/Banshee.MiniMode/Banshee.MiniMode/MiniModeService.cs:
	When entering Minimode, initialize the window w/ the current
	PrimaryWindow, set it as the new one, and call the new Enable method.

	* src/Core/Banshee.ThickClient/Banshee.Gui/PersistentWindowController.cs:
	Check that the window is in an ok state before saving or restoring its
	size/position.  Speed up the save timeout, and grab the size/pos
	immediately instead of after the timeout.

2009-02-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/NextButton.cs: Patch
	from Alexander Kojevnikov setting tooltip (BGO #572336)

2009-02-18  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/ExtraTrackDetailsPage.cs:
	Patch from Alexander Kojevnikov fixing auto-growing of the Comment 
	text box on the Edit Track dialog (BGO #553581).

2009-02-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* data/audio-profiles/wavpack.xml.in:
	* src/Core/Banshee.ThickClient/Banshee.MediaProfiles.Gui/ProfileConfigurationDialog.cs:
	Fix localization issues (BNC #449788)

2009-02-18  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Recommendations/RecommendationActions.cs:
	Properly set the state of the Show Recommandations check box on startup
	(BGO #572204).

2009-02-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapContainerSource.cs: Patch
	from Alexander Kojevnikov making the Shared Music source remember whether
	the user had it expanded or not (BGO #561931)

2009-02-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Patch from Alexander Kojevnikov making the header labels in the track
	editor ellipsize (BGO #569442)

2009-02-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Patch from
	Alexander Kojevnikov making Delete from Disk still default to Cancel but
	the Remove actions to OK/Confirm (BGO #569870)

2009-02-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs: Use
	the SortName information from MusicBrainz, and detect if an album is a
	compilation album and set the album and all the tracks appropriate if it
	is.

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs: Set the
	FileModifiedStamp and LastSyncedStamp when a track is ripped.

2009-02-16  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/GConfConfigurationClient.cs:
	Log exceptions raised when reading a GConf key, if they are not a
	NoSuchKeyException.

2009-02-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Base/Tests/FileNamePatternTests.cs: Remove
	old EscapeFilename test.

2009-02-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena/StringUtil.cs: Patch from John Millikin
	revamping the illegal_chars array, removing a bunch of chars that should
	be fine, and making sure it escapes all chars that are invalid in FAT32,
	HFS, and ext3 (BGO #458224).  Changes by me to handle null input, and move
	the Regex creation to static init instead of lazy load.

	* src/Libraries/Hyena/Hyena/Tests/StringUtilTests.cs: Tests for the
	revamped EscapeFilename method.

2009-02-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/Column.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Patch from
	John Millikin (with some style fixups added in by me) that right-aligns
	the header text for right-aligned columns (BGO #560918)

2009-02-10  Gabriel Burt  <gabriel.burt@gmail.com>

	Patch from Andrés G. Aragoneses fixing bug with string matching functions
	that use the SQL 'like' command not escaping % and _ properly.

	* DateQueryValue.cs:
	* ExactStringQueryValue.cs:
	* IntegerQueryValue.cs:
	* NullQueryValue.cs:
	* RelativeTimeSpanQueryValue.cs:
	* TimeSpanQueryValue.cs: Change all to override the ToSql (op) instead of
	ToSql () method.

	* QueryField.cs: Call ToSql w/ the op we already have at hand.

	* QueryValue.cs: Add new abstract ToSql (op) method and change the ToSql
	method to call it with a null op.

	* StringQueryValue.cs: Fix bug with not escaping % and _ characters which
	are treated specially by SQLite in LIKE expressions (BGO #570312)

2009-02-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* build/m4/banshee/taglib.m4: Bump requirement to 2.0.3.2 (taglib-sharp
	trunk atm)

2009-02-10  Gabriel Burt  <gabriel.burt@gmail.com>

	Patch from John Millikin adding support for full/proper case-insensitive
	unicode search, and additional support for fuzzy searching where n matches
	ñ etc - NonSpacingMarks are stripped from a-z chars (BGO #528498)

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Instead of calling ToLower on *Lowered properties, use the new
	Hyena.StringUtil.SearchKey that also strips accents from Latin chars.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Update the existing *Lowered values by using the new HYENA_SEARCH_KEY
	custom Sqlite method that just calls SearchKey.

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Mark MimeType,
	License, and Location as ExactStringQueryValue fields (as opposed to the
	new default which strips accents and lowercases).

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteUtils.cs: New custom
	HYENA_SEARCH_KEY sqlite method.

	* src/Libraries/Hyena/Hyena.Query/QueryField.cs: Get rid of the old/hacky
	Sqlite-LOWER workaround, replacing it with the custom HYENA_SEARCH_KEY
	method where appropriate.

	* src/Libraries/Hyena/Hyena.Query/StringQueryValue.cs: In ToSql return the
	value passed through SearchKey.

	* src/Libraries/Hyena/Hyena.Query/Tests/QueryTests.cs: Test the new fuzzy
	and exact string matching.

	* src/Libraries/Hyena/Makefile.am:
	* src/Libraries/Hyena/Hyena/StringUtil.cs: New SearchKey method that
	lowercases and strips accents of a-z chars.

	* src/Libraries/Hyena/Hyena/Tests/StringUtilTests.cs: Test the SearchKey
	method.

	* src/Libraries/Hyena/Hyena.Query/ExactStringQueryValue.cs: New
	StringQueryValue subclass that doesn't pass the value through SearchKey.

2009-02-10  Gabriel Burt  <gabriel.burt@gmail.com>

	Patch from John Millikin adding support for sort values for artist, album,
	title, and album artist.  They are read in and written out using TagLib#,
	but are not yet editable in the track editor.  Actually, they are not yet
	used for sorting either, that will come in a subsequent patch.

	* src/Core/Banshee.Core/Banshee.Collection/AlbumInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/ArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistInfo.cs:
	Add *Sort properties.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add columns for new *Sort properties, and trigger a metadata refresh to
	read them in from the files in the library.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistListModel.cs: 

	* src/Core/Banshee.Core/Banshee.Streaming/SaveTrackMetadataJob.cs:
	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs:
	* src/Core/Banshee.Core/Banshee.Streaming/CommonTags.cs: Handle reading
	and writing the *Sort values from/to files.

2009-02-10  Gabriel Burt  <gabriel.burt@gmail.com>

	Patch from John Millikin fixing issue with downloading some podcasts.

	* Core/Banshee.Core/Banshee.Base/FileNamePattern.cs:
	* Libraries/Hyena/Hyena/StringUtil.cs: Move Escape method to Hyena so
	reusable in Migo, and mark the Regex it uses as Compiled.

	* Libraries/Migo/Migo.DownloadCore/DownloadManager.cs:
	* Libraries/Migo/Migo.Syndication/Feed.cs: Use Hyena's new EscapeFilename
	method to fix bug with downloading podcasts with special characters in
	their title (BGO #567293).

2009-02-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/StatisticsPage.cs:
	Patch from John Millikin setting the values of the stats tab as not
	editable (BGO #562792)

2009-02-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: In the status bar
	use ndashes instead of ", " to separate the elements (BGO #551650)

2009-02-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Mtp/Mtp/MtpDevice.cs:
	* src/Libraries/Mtp/Mtp/Track.cs: Modified patch from William Pettersson
	fixing NRE with transferring song to MTP devices (BGO #571023)

2009-02-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Patch from William
	Pettersson catching exceptions thrown when trying to get the battery level
	(BGO #571022)

2009-02-10  Cody Russell  <bratsche@gnome.org>

	* src/Extensions/Banshee.NotificationArea/Notifications/Notification.cs:
	When adding a new action, first check that the notification daemon supports
	actions. (BGO #571177)

2009-02-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	Remove illogical setting of IsImporting.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	* src/Extensions/Banshee.Lastfm/Resources/ActiveSourceUI.xml:
	* src/Extensions/Banshee.InternetRadio/Resources/ActiveSourceUI.xml:
	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSource.cs:
	Set source actions to propagate to child playlists, and show Add Station
	action in the Media menu when selected (BGO #539019)

	* src/Extensions/Banshee.Podcasting/Resources/ActiveSourceUI.xml:
	* src/Extensions/Banshee.Podcasting/Resources/GlobalUI.xml: Only show
	Subscribe to Podcast action when the Podcasts source (or a child) is
	selected.

2009-02-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Check for a very small change in the remaining width in the column size
	calculation to avoid an infinite loop.

2009-02-08  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Libraries/Migo/Migo.Syndication/Rfc822DateTime.cs: patch from
	Christian Krause fixing the timezone handling (BGO #570721).

	* src/Libraries/Migo/Migo.Syndication/Tests/XmlTests.cs: Update the 
	tests for the above fix.

2009-02-08  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Patch from
	John Millikin fixing the export of a playlist that was never browsed
	(BGO #570842).

2009-02-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* configure.ac: Require Mono 1.9.1 - C# 3.0 here we come!

2009-02-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/ITrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Configuration.Schema/LibrarySchema.cs:
	* src/Core/Banshee.Core/Banshee.Base/FileNamePattern.cs: Patch from John
	Millikin adding support for %album_artist% as a variable for file/folder
	name patterns.  This also changes the existing pattern code to treat
	%artist% as album_artist, so that compilation albums will be stored in a
	single directory now (BGO #570298)

2009-02-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Makefile.am:
	* src/Libraries/Mono.Data.Sqlite/Makefile.am:
	* src/Libraries/Mono.Data.Sqlite/Mono.Data.Sqlite/*: Add copy of
	Mono.Data.Sqlite from Mono svn (revision 120995), with a patch from John
	Millikin that fixes its support for custom functions.

	* src/Libraries/Mono.Data.Sqlite/bug-470042_mds-custom-functions_v2.patch:
	John's patch as applied to the M.D.S source.

	* build/build.environment.mk:
	* build/pkg-config/banshee-1-hyena.pc.in:
	* configure.ac:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteArrayDataReader.cs:
	Adjust to build/work with the bundled Mono.Data.Sqlite

2009-02-03  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* configure.ac: Patch from Diego E. Pettenò removing the call to
	AC_CANONICAL_SYSTEM (BGO #566460).

2009-02-03  Gabriel Burt  <gabriel.burt@gmail.com>

	This patch fixes issues with adding tracks to a MTP device, the symptoms
	of which are Banshee freezing and files not getting added (BGO #567093)

	* Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Do a better job of
	locking various MTP functions.

	* Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpTrackInfo.cs: Fix bug where we
	set the filesize of the Mtp.Track to the TrackInfo's FileSize, when it
	should be set to the file size of the passed in track URI (which might be
	different than track.Uri if it was transcoded).

	* Libraries/Mtp/Mtp/Error.cs: Style fix.

	* Libraries/Mtp/Mtp/Track.cs: Treat any m4* extension as mp4.

2009-02-03  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Playlist.Gui/PlaylistExportDialog.cs:
	Patch from John Millikin to escape the suggested filename when exporting
	a playlist (BGO #457390).

2009-02-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapLibrarySync.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapSync.cs: Patch from Andrés G.
	Aragoneses, moving the removal of DAP playlists from being called on each
	LibrarySync (eg once for Music, Video, etc) to the overall DapSync, fixing
	bug where playlists didn't sync to DAPs because they were deleted when the
	PodcastSource synced (BGO #560970)

2009-02-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* libbanshee/banshee-player.c:
	* src/Core/Banshee.Widgets/Banshee.Widgets/SeekSlider.cs: Slightly
	modified patch from Moritz Schallaböck that makes CanSeek always false if
	the duration is zero, and that imroves the seek slider by letting you
	scroll-wheel over it or left-click to jump (BGO #565795)

2009-02-02  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Libraries/Lastfm/Lastfm.Data/DataEntry.cs: Patch from John Millikin
	to unescape URLs returned by Last.fm (BGO #563076).

2009-02-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Fix bug I just introduced to TogglePlaying where if Paused we wouldn't
	start playing again when called (BGO #570051).

2009-02-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.ServiceStack/DbIteratorJob.cs: Fix
	build.

2009-02-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Bpm/Banshee.Bpm/BpmDetectJob.cs: Subclass from
	DbIteratorJob, making this class quite simple, and fixing a bug with
	getting stuck in an infinite loop processing a given item.

	* src/Extensions/Banshee.Bpm/Banshee.Bpm/BpmService.cs: Use new RunAsync
	method instead of Start.

2009-02-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.ServiceStack/DbIteratorJob.cs: New
	subclass of UserJob for use by tasks that need to process N items from the
	database one at a time; eg BPM detection, cover art download, etc.

2009-02-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TaskStatusButton.cs:
	Show only background UserJobs in the task status button.

2009-01-31  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Extensions/Banshee.Bookmarks/Banshee.Bookmarks/BookmarksService.cs:
	Explicitly convert integers coming from the DB, as Mono.Data.Sqlite
	returns them as Int64 (BGO #569966).

2009-01-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Show the
	pause/stop button when Loading/Loaded.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedSeekSlider.cs:
	Handle Loading player state, set Live property on the position label, and
	use the position label's enum state property instead of a handful of bools

	* src/Core/Banshee.Services/Banshee.Streaming/RadioTrackInfo.cs: Start
	playing internet radio playlists in a separate thread to avoid blocking
	the UI (BGO #548040, BNC #376532).  Handle the case where the user
	presses stop or switches to a different track while we're
	downloading/processing the playlist file (previously we would have started
	playing once ready, even if the user had already moved on).  Also, fix
	bug where errors reported by the MediaEngine (GStreamer) weren't shown to
	the user.

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngine.cs: If the
	engine is in PlayerState.Contacting, don't Close/stop since this is a
	state we set in managed land for loading internet radio tracks.

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Add Start/EndSynthesizeContacting internal methods for use by
	RadioTrackInfo - basically a hack until we move the playlist loading logic
	from RadioTrackInfo to the PlayerENgine to get UI bits updated
	appropriately.  Fix IsPlaying to include Contacting/Loading/Loaded, so
	that TogglePlaying will Pause if in any of those states (not just if in
	the Playing state), and Play only when in Ready, Idle, or Paused.

	* src/Core/Banshee.Widgets/Banshee.Widgets/StreamPositionLabel.cs: Use an
	enum to track the player state instead of a handful of bools.  Show the
	"Contacting..." label when inthe Loading state (for now - will change to
	Loading... in a separate patch).

	* src/Core/Banshee.Widgets/Banshee.Widgets/SeekSlider.cs: If the new Value
	is more than the Duration, set the Duration to MaxValue so that the slider
	stays at the left side of the Range, avoiding the glitchy-looking UI going
	from Idle (where the slider is all the way left) to playing radio (where
	it was all the way right).

2009-01-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Mtp/Mtp/File.cs:
	* src/Libraries/Mtp/Mtp/Playlist.cs:
	* src/Libraries/Mtp/Mtp/Track.cs: Fix up the libmtp8 support which was
	crashing on loading MTP devices due to playlists (BGO #542117, BNC #470722)

2009-01-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Dialog/PodcastFeedPropertiesDialog.cs:
	Add ability to edit podcasts' names in their properties dialog

2009-01-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Patch from
	Christoph Burgdorf making it so you have to actually click on the status
	bar text to change it - clicking on the bar but not on the text no longer
	changes it (BGO #568891)

2009-01-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	Set CanDeleteTracks to false until we actually implement DeleteTrack.

2009-01-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	Fix crash on delete from FSQ (BNC #467377)

2009-01-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteArrayDataReader.cs:
	Convert ArrayList to List<T>.

2009-01-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Services.csproj:
	* src/Core/Banshee.Services/Banshee.Database/QueuedSqliteDatabase.cs:
	* src/Libraries/Hyena/Makefile.am:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteUtils.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteArrayDataReader.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs:
	* docs/Hyena/en/Hyena.Data.Sqlite/ExecutingEventArgs.xml:
	* build/pkg-config/banshee-1-hyena.pc.in:
	* build/build.environment.mk:
	* configure.ac: Patch from John Millikin transitioning us from
	Mono.Data.SqliteClient to Mono.Data.Sqlite (BGO #568787).  He solved the
	threading issue I found when I tried about a year ago; SqliteClient read
	the entire result into an array before handing it back, so we just do that
	with the M.D.Sqlite results.  This should be all we need to start using
	prepared SQL statements and custom extension functions in Sqlite.

2009-01-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* Banshee.sln: 
	* src/Extensions/Banshee.Bpm/Banshee.Bpm.csproj:
	* src/Extensions/Banshee.Bpm/Makefile.am: Add Banshee.Bpm properly
	to MonoDevelop.

2009-01-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Bpm/Banshee.Bpm.addin.xml: Put the track editor
	modifier in a <Module> and specify that it depends on Banshee.ThickClient.

2009-01-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* .gitignore: Add *.userprefs

2009-01-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* configure.ac: Check for .git in addition to .svn to determine whether to
	set release variable.

2009-01-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* libbanshee/Makefile.am:
	* libbanshee/libbanshee.cproj:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer.csproj:
	* src/Core/Banshee.Services/Banshee.Services.csproj:
	* src/Core/Banshee.ThickClient/Banshee.ThickClient.csproj:
	* src/Core/Banshee.ThickClient/Makefile.am:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd.csproj:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.csproj: Sync with
	Makefiles.

2009-01-26  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.CollectionIndexer/Banshee.Collection.Indexer.RemoteHelper/IndexerClient.cs:
	Fix bug with getting into a loop, constantly trying to reconnect to an
	indexer while in the middle of connecting to it.

2009-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Fix a
	warning.

2009-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* Core/Banshee.ThickClient/Makefile.am:
	* Core/Banshee.ThickClient/Banshee.Gui.Widgets/TaskStatusButton.cs: New
	button that is insensitive if there are no background UserJobs registered,
	and that animates slowly and lists them in a tooltip when there are.

	* Clients/Nereid/Nereid/PlayerInterface.cs:
	* Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Add
	a TaskStatusButton to the the bottom left corner, in the status bar.

	* Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs: Set
	IsBackground = true.

	* Extensions/Banshee.Bpm/Banshee.Bpm/BpmEntry.cs: Remove using Mono.Addins

2009-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Fix issue with album art and the album/artist/title overlapping in the
	TrackEditor for tracks w/ long album names.

2009-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* Core/Banshee.Services/Banshee.Collection.Database/DatabaseFilterListModel.cs:
	* Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportManager.cs:
	* Core/Banshee.Services/Banshee.Collection/FilterListModel.cs:
	* Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	* Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs:
	* Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs:
	* Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs:
	* Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Fix the
	Begin/Commit/RollbackTransaction methods in HyenaSqliteConnection.  Use
	transactions when importing media, loading DAAP shares, and reloading
	filter models.

2009-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	Don't do any checks about whether the user is a subscriber or not before
	adding a station to their list.  If they try to access a list they're not
	authorized to, they'll get that message, and we avoid false negatives.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs: Add
	another default station for songs tagged 'Creative Commons'

2009-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Makefile.am:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastEpisodePage.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.addin.xml: Add new
	information tab to the track editor/properties, only shown for podcast
	episodes, that shows the description, author, published date, etc.

2009-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastActions.cs:
	Make unsubscribe, download episodes, and refresh options work even if
	multiple podcasts (feeds) selected

2009-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* libbanshee/Makefile.am:
	* libbanshee/banshee-bpmdetector.c: 
	* build/build.environment.mk:
	* configure.ac:
	* src/Extensions/Banshee.Bpm/Banshee.Bpm.addin.xml:
	* src/Extensions/Banshee.Bpm/Banshee.Bpm.csproj:
	* src/Extensions/Banshee.Bpm/Banshee.Bpm/BpmDetectJob.cs:
	* src/Extensions/Banshee.Bpm/Banshee.Bpm/BpmEntry.cs:
	* src/Extensions/Banshee.Bpm/Banshee.Bpm/BpmService.cs:
	* src/Extensions/Banshee.Bpm/Banshee.Bpm/BpmTapAdapter.cs:
	* src/Extensions/Banshee.Bpm/Banshee.Bpm/BpmTrackEditorModifier.cs:
	* src/Extensions/Banshee.Bpm/Makefile.am:
	* src/Extensions/Makefile.am: New extension that adds a preference (disabled
	by default) to automatically detect the BPM for all songs, and modified
	the track editor dialog's BPM entry, adding a button to auto detect the
	BPM, a button to play the song being edited, and a button to tap out the
	BPM manually.  This feature uses the GStreamer bpmdetect element.

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer.addin.xml:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/BpmDetector.cs:
	* src/Backends/Banshee.GStreamer/Makefile.am:
	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Services.addin.xml:
	* src/Core/Banshee.Services/Banshee.MediaEngine/IBpmDetector.cs: Support
	for various backends to provide bpm detection.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/IUserJob.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/UserJob.cs: Add
	IsBackground property, and if set, don't show such jobs as normal job
	tiles.

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/FieldPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/ITrackEditorModifier.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	* src/Core/Banshee.ThickClient/Banshee.ThickClient.addin.xml:
	* src/Core/Banshee.ThickClient/Makefile.am: Make the track editor more
	extensible and modifiable, including the ability to remove fields.

2009-01-25  Gabriel Burt  <gabriel.burt@gmail.com>
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellCreativeCommons.cs:
	Double using, broke the build.

2009-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* Banshee.Services/Banshee.Query/BansheeQuery.cs:
	* Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs:
	Add LicenseUri as a search and smart playlist field and as a column.

	* Banshee.ThickClient/Makefile.am:
	* Banshee.ThickClient/ThemeIcons/16x16/emblems/creative-commons-by.png:
	* Banshee.ThickClient/ThemeIcons/16x16/emblems/creative-commons-nc.png:
	* Banshee.ThickClient/ThemeIcons/16x16/emblems/creative-commons-nd.png:
	* Banshee.ThickClient/ThemeIcons/16x16/emblems/creative-commons-pd.png:
	* Banshee.ThickClient/ThemeIcons/16x16/emblems/creative-commons-sa.png:
	* Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellCreativeCommons.cs:
	New cell that detects Creative Commons licenses in the LicenseUri field
	and render them as images.

2009-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Widgets/SmoothScrolledWindow.cs: Improve
	the smooth scrolling by stopping in a nearly constant amount of
	time, and avoiding several small (1px) movements at the end of slowing
	down by making the minimum velocity 2px per cycle

2009-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* .gitignore: New file, for those using git-svn at home and to prepare for
	GNOME's git migration.

2009-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Daap/Daap/Client.cs:
	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapProxyWebServer.cs:
	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs:
	* src/Core/Banshee.Services/Banshee.Base/ThreadAssist.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	* src/Core/Banshee.Core/Banshee.Kernel/Scheduler.cs:
	* src/Libraries/Migo/Migo.TaskCore/TaskGroup.cs: Name threads so
	kill -s QUIT thread dumps are easier to grok.

2009-01-25  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Backends/Banshee.NowPlaying.X11/libbnpx11/bacon-resize.h: Patch
	from Przemysław Grzegorczyk to clean up gtk includes to use only toplevel
	headers (BGO #565027).

2009-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/OverlayWindow.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapPropertiesDialog.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/BansheeDialog.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CellEditEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/FilteredListSourceContents.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/IVolume.cs:
	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs:
	* src/Backends/Banshee.Hal/Banshee.HalBackend/CdromDevice.cs:
	* src/Backends/Banshee.Hal/Banshee.HalBackend/UsbDevice.cs:
	* src/Backends/Banshee.Hal/Banshee.HalBackend/DiskDevice.cs:
	* src/Libraries/Hyena/Hyena/Log.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/SegmentedBar.cs: Fix compilation
	issues when building with Mono 2.2

2009-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/FilteredListSourceContents.cs:
	Enable smooth (kinetic) scrolling of track/artist/album etc lists (all but
	source list) by default.  Can be disabled by passing --no-smooth-scroll.
	Please test and give feedback. (BGO #461393)

2009-01-25  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* libbanshee/banshee-player-video.c: Move a typedef so that it builds
	without clutter.

2009-01-24  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NowPlaying.Clutter/Clutter/Actor.cs:
	* src/Extensions/Banshee.NowPlaying.Clutter/Banshee.NowPlaying.Clutter/NowPlayingInterface.cs:
	More stuff just for fun

2009-01-24  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NowPlaying.Clutter/Clutter/Actor.cs: Added
	RotationX, RotationY, RotationZ properties just for fun

	* src/Extensions/Banshee.NowPlaying.Clutter/Banshee.NowPlaying.Clutter/NowPlayingInterface.cs:
	Add sliders to change rotation angles, because it is fun

2009-01-24  Aaron Bockover  <abock@gnome.org>

	Second pass, working video display and sizing, not hacky at all, just 
	pure awesome on the way. Super high performance video.

	* src/Extensions/Banshee.NowPlaying.Clutter/Banshee.NowPlaying.Clutter/NowPlayingSource.cs:
	Bare source for the new clutter now playing extension

	* src/Extensions/Banshee.NowPlaying.Clutter/Banshee.NowPlaying.Clutter/NowPlayingInterface.cs:
	Basic clutter UI for rendering the video texture from the clutter sink
	in the media pipeline; simple embed + stage + texture and size/position
	logic is in place

	* src/Extensions/Banshee.NowPlaying.Clutter/Clutter/Group.cs:
	* src/Extensions/Banshee.NowPlaying.Clutter/Clutter/Color.cs:
	* src/Extensions/Banshee.NowPlaying.Clutter/Clutter/Texture.cs:
	* src/Extensions/Banshee.NowPlaying.Clutter/Clutter/Stage.cs:
	* src/Extensions/Banshee.NowPlaying.Clutter/Clutter/Actor.cs:
	* src/Extensions/Banshee.NowPlaying.Clutter/Clutter.Gtk/Embed.cs:
	Very basic and simple Clutter bindings; just enough for what I need now.
	These will go away as I work on clutter-sharp and make it a dependency
	later. I just wanted to get off the ground quickly.

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingContents.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	Move the VideoDisplayContextType detection to the source, throw if it is
	not valid so the source does not appear

	* libbanshee/banshee-player-vis.c: Fix a double-free bug

2009-01-24  Aaron Bockover  <abock@gnome.org>

	First hacky pass at Clutter integration; nothing to see, and I probably
	broke some things. trunk is going to be sketchy for a bit...

	* src/Core/Banshee.Services/Banshee.MediaEngine/VideoDisplayContextType.cs:
	Enum of context types pipelines might support for video (e.g. xoverlay,
	clutter, cairo, etc.)

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/VideoDisplay.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingContents.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/IVideoDisplay.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/XOverlayVideoDisplay.cs:
	Updated to support the video context API changes in the player engine

	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs: Temporary
	clutter initialization, to be moved into the clutter extension

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Fix a small string.format bug

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngine.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Instead of a simple SupportsVideo bool, replace with 
	VideoDisplayContextType, and change the VideoWindow property to 
	VideoDisplayContext with both a getter and setter, the meaning of which
	depends on VideoDisplayContextType

	* src/Core/Banshee.Services/Banshee.MediaEngine/NullPlayerEngine.cs:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	Implement changes to API above

	* libbanshee/banshee-player-video.c: Implement inital clutter support,
	and the backend implementation for the new video context API above,
	providing both xoverlay (GDK) and clutter contexts

	* libbanshee/clutter-gst-shaders.h:
	* libbanshee/clutter-gst-video-sink.h: 
	* libbanshee/clutter-gst-video-sink.c: Clutter GStreamer integration
	from the clutter-gst package; currently I don't want to take the dep
	as changes might need to be made

	* libbanshee/banshee-player-private.h: Add the clutter texture if we
	are building with clutter support

	* build/m4/banshee/libbanshee.m4: Check for clutter (optional)

	* configure.ac: Clean up the configure summary, make it nicer and more
	organized

	* build/m4/banshee/dap-karma.m4: Small fix

2009-01-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Makefile.am:
	* src/Extensions/Banshee.PlayerMigration/Banshee.PlayerMigration.addin.xml:
	* src/Extensions/Banshee.PlayerMigration/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Services.addin.xml:
	* src/Core/Banshee.Services/Banshee.Library/ImportSourceManager.cs:
	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.PlayerMigration/RhythmboxPlayerImportSource.cs:
	* src/Core/Banshee.Services/Banshee.PlayerMigration/AmarokPlayerImportSource.cs:
	* build/build.environment.mk:
	* configure.ac: Move the Rhythmbox and Amarok migrators into a non-Core
	extension, enabled by default of course.

2009-01-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportManager.cs:
	Move UpdateProgress out of ImportTrack method to avoid triggering the
	Scanning.. user job when we're directly importing.

	* src/Core/Banshee.Services/Banshee.Services.addin.xml:
	* src/Core/Banshee.Services/Banshee.Library/ImportSourceManager.cs:
	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.PlayerMigration/RhythmboxPlayerImportSource.cs:
	* src/Core/Banshee.Services/Banshee.PlayerMigration/AmarokPlayerImportSource.cs:
	Patch from Paul Lange adding back Rhythmbox import support, and making the
	migrators into extensions (though still in Core/) fixes (BGO #554511)

2009-01-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: Patch from Félix Velasco
	removing unnecessary lock that was causing some hangs (BGO #559479)

2009-01-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Migo/Migo.Syndication/FeedUpdateTask.cs: Fix bug with
	IfModifiedSince header that prevented subscribing to some feeds.

2009-01-23  Aaron Bockover  <abock@gnome.org>

	* data/desktop-files/update-desktop-file.sh:
	* data/desktop-files/banshee-1-audiocd.desktop.in.in:
	* data/desktop-files/banshee-1-media-player.desktop.in.in: Ensure the
	MimeType field in the desktop files has a trailing ; which is apperently
	required by the spec, or at least RPMLINT seems to think so

2009-01-21  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Clients/Muinshee/Muinshee/BaseDialog.cs: Patch from Wouter Bolsterlee
	to improve the labels on two buttons (BGO #557866).

2009-01-21  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Clients/Booter/Booter/Entry.cs: Patch from Daniel Siegel to add
	an option missing from the help output (BGO #554713).

2009-01-21  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs:
	Change the count query to avoid an infinite loop (BGO #548131).

2009-01-21  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Patch from David Spreen making sure podcasts are copied to the Podcasts
	folder on mass-storage devices. Otherwise they are indistinguishable
	from Music (BGO #561786).

2009-01-21  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageDevice.cs:
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Make sure that folder depth
	defaults to -1 if it's not set, and transfer cover art to the DAP in this
	case (BGO #561914).

2009-01-21  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Libraries/Hyena/Hyena/StringUtil.cs: Make a regex a static field,
	for a small performance improvement (BGO #560234).

2009-01-21  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* docs/monodoc.mk: Fix parallel build for docs (BGO #559917).

2009-01-21  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* build/icon-theme-installer: Also update the icon cache during 
	"make uninstall" (BGO #561461).

2009-01-21  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* build/m4/shamrock/programs.m4: Properly detect when a program is not
	found (BGO #562185).

2009-01-20  Aaron Bockover  <abock@gnome.org>

	Banshee 1.4.2 Released

2009-01-20  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Bump to 1.4.2, set vendor to svn or tarball automatically

	* NEWS: Updated

2009-01-20  Aaron Bockover  <abock@gnome.org>

	* src/AssemblyInfo.cs.in:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/AboutDialog.cs:
	Updated Copyright strings for 2009

2009-01-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellTrackNumber.cs:
	Patch from Christoph Burgdorf to right align this (BGO #553322)

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellPositiveInt.cs:
	Apply the same fix for all int-based columns (bpm, play/skip count, etc)

2009-01-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/RangeEntry.cs:
	Allow setting the track/disc number/counts to > 99 (up to 999 now).

2009-01-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexerService.cs:
	Fix bug in logic of whether to raise a collection changed event.  We
	should have been ignoring all changes unless to a field other than
	LastPlayed/Skipped or Play/SkipCount but weren't (BGO #567552)

	* src/Core/Banshee.CollectionIndexer/Banshee.Collection.Indexer.RemoteHelper/IndexerClient.cs:
	* src/Core/Banshee.CollectionIndexer/Banshee.Collection.Indexer.RemoteHelper/SimpleIndexerClient.cs:
	Add IndexWhenCollectionChanged property to allow disabling the default
	behavior of retriggering a reindex on every collection change event.

2009-01-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Metadata/MetadataServiceJob.cs: Change
	the timeout to 10s to alleviate long waits from not-responding servers
	(BGO #540178).

2009-01-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Karma/Banshee.Dap.Karma/KarmaSource.cs: Patch from
	Bob Copeland improving Karma detection and adding OnTracksAdded call (BGO
	#566205)

2009-01-13  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.csproj:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.csproj:
	* src/Core/Banshee.Services/Banshee.Services.csproj:
	* src/Backends/Banshee.Gnome/Banshee.Gnome.csproj:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer.csproj: Various fixes and 
	updates.

	* src/Libraries/Lastfm/Lastfm.csproj:
	* src/Libraries/Lastfm.Gui/Lastfm.Gui.csproj: Enable Makefile integration.

	* src/Libraries/Lastfm/Makefile.am:
	* src/Libraries/Lastfm.Gui/Makefile.am: Whitespace changes and re-ordering,
	to keep MonoDevelop happy, now that Makefile integration is enabled for these
	projects.

2009-01-12  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerWindow.cs:
	Patch to fix unlocalised text on Equalizer (BNC #447606)

2009-01-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	Use SafeUri to unescape and get the file://-less path if possible, fixes
	bug with Firefox launching us with a file:// playlist URI (BNC #456120)

2009-11-01  Eoin Hennessy <eoin@randomrules.org>
	* build/osx/targets/bundle-30-gstreamer.targets: Re-add gst-plugins-ugly 
	to OSX build dependecies. The m3parse element is required for mp3 playback 
	with qtwrapper. We don't build *any* other elements from -ugly.

2009-01-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs: Fix recently
	introduced bug that hung Banshee when Last.fm submitted Now Playing
	information (BNC #465215) 

2009-01-11  Aaron Bockover  <abock@gnome.org>

	This commit addresses BNC #461677, allowing device commands to be sent
	to a new or existing process. Device commands allow Banshee to perform
	actions against a device, such as activating the source in the UI or 
	starting playback of an Audio CD. Two .desktop files exist for Nautilus/GIO
	to use to activate device commands on Banshee.

	* src/Core/Banshee.Services/Banshee.Hardware/DeviceCommand.cs: Simple
	structure that parses device action arguments such as --device-activate=x
	or --device-activate-play=y

	* src/Core/Banshee.Services/Banshee.Hardware/HardwareManager.cs: Provide
	a DeviceCommand event which is raised whenever a DeviceCommand argument
	described above is passed; this provides a simple facility for services
	to listen to actions to be applied against devices (e.g. the play CD
	action from Nautilus)

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdService.cs: 
	Listen to the HW manager's DeviceCommand event and handle cdda actions

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: Listen to the HW
	manager's DeviceCommand and pass them off to children DapSources at the
	right time for actual handling

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs:
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs:
	Added/implemented CanHandleDeviceCommand so the DapService can know if
	a DeviceCommand action applies to the DAP

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Fix a race where services may try to play a stream before the player
	engine has entered the READY state; this happens for example when Banshee
	is started with a --device-play or --device-activate-play command that
	may be handled before the player engine READYs

2009-01-11  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapService.cs: Add null checks
	around the source_map and its children when disposing since it won't be
	initialized if dispose is called before delayed initialize (BNC #465159)

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: As
	an extra precaution, wrap all service disposals in an exception handling
	block and just report the exception in the log

2009-01-11  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Booter/banshee-1.in: Use XDG_CONFIG_HOME instead of an
	explicit ~/.config; do not allow --redirect-log if another banshee-1
	process is running (this overwrites the original log); and allow for
	a special file ~/.config/banshee-1/always-debug that if present always
	will turn on debug mode, useful for when launched from a desktop file/GUI

2009-01-11  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Booter/banshee-1.in: Output the exec line when 
	the log is being redirected

2009-01-11  Aaron Bockover  <abock@gnome.org>

	ATTENTION PACKAGERS: This is a VERY important commit; please read this
	ChangeLog message as it applies to YOU :). Conforming to this will
	help with bug reports.

	* configure.ac: Accept --with-vendor-build-id=<foo> for packagers to use.
	This string should always be set by packagers and detail the distro 
	name and version (e.g. openSUSE 11.1), and the repository origin, such
	as 'Banshee Team PPA'; for example, the %distribution macro is used in
	the openSUSE Build Service, which expands to something like this:
	'home:gabrielburt:branches:Banshee / openSUSE_Factory'; also the
	build/configure time is stored along with the host OS and CPU

	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs: Print all
	build metadata at startup so it hits the log file, should be very helpful
	for bug reports, especially when debugging against patched builds

	* src/AssemblyInfo.cs.in: Store build metadata from configure in assembly
	attributes (vendor, build time, host os/cpu)

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Added
	APIs for accessing the build metadata

2009-01-10  Aaron Bockover  <abock@gnome.org>

	* libbanshee/banshee-ripper.c: Second pass at the mime type detection
	without typefind, better mime type prioritization, and use the new 
	BANSHEE_GST_ITERATOR_ITERATE macro instead of the bulky functions I 
	wrote last night (BGO #558526, BNC #464889)

	* libbanshee/banshee-gst.h: Implement BANSHEE_GST_ITERATOR_ITERATE, 
	a macro that handles the typical implementation of walking a GstIterator

2009-01-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/ItmsPodcast.cs:
	* src/Extensions/Banshee.Podcasting/Makefile.am: Add support for itms://
	podcast links that you see on many podcast websites (BNC #465149).
	I think setting Banshee as the app Firefox (etc) uses when they are
	clicked has to be done manually, unfortunately

	* src/Core/Banshee.Services/Banshee.Web/HttpRequest.cs: Transparently
	support gzip'd responses, add ResponseBody property.

2009-01-10  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Dialog/PodcastSubscribeDialog.cs:
	* src/Core/Banshee.ThickClient/Banshee.MediaProfiles.Gui/ProfileConfigurationDialog.cs:
	Call PackStart (w, b, b, u) instead of the deprecated default (BGO #567154)

2009-01-09  Aaron Bockover  <abock@gnome.org>

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/AudioCdRipper.cs:
	Handle the new mimetype callback and set it on the track (BGO #558526,
	BNC #464889)

	* libbanshee/banshee-ripper.c: Implemented support for the typefind
	element in the pipeline after the encoder to query a proper mime type
	for the encoded and muxed content

	* libbanshee/banshee-gst.h:
	* libbanshee/banshee-gst.c: Factored out a generic callback invoking
	version of gst_bin_iterate_recurse and gst_bin_iterate_all_by_interface
	to avoid duplicating a lot of iterator boilerplate code

2009-01-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	If passed a playlist file from /tmp, try to load/play it as a radio
	station (BNC #456120).  Also, clear/delete playlists when Cleared.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistFileUtil.cs: Avoid
	bug where duplicate playlists were created.

	* src/Core/Banshee.Core/Banshee.Base/Paths.cs: Add SystemTempDir property.

2009-01-09  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Streaming/RadioTrackInfo.cs: Added
	Open/OpenPlay helper methods that handle the typical case of simply 
	opening a stream/playlist, connecting to error/event handling, and 
	playing the stream

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Use the
	new RadioTrackInfo.OpenPlay method, moved the original code into that
	new API implementation; no functional change

2009-01-08  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	Implement IImportSource so the disc shows up in the Import Media dialog,
	fixing a functional regression from legacy 0.13.x (BNC #457918)

2009-01-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Base/Localization.cs: Look for xml:lang
	nodes with lang codes in the form of xx_YY not xx-YY; intltool should be 
	using xx-YY per xml:lang convention, but we'll bend for now (BNC #449788)

2009-01-07  Aaron Bockover  <abock@gnome.org>

	* build/m4/banshee/libbanshee.m4: If the gtk+-2.0 target check fails,
	explicitly check for gtk+-2.0 as an entire module to show the standard
	missing devel package error message from pkg-config

2009-01-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* data/desktop-files/*: Make banshee-1-subscription.desktop, handling RSS,
	OPML, and Miro's OPML subscription mimetypes.

2009-01-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	* src/Core/Banshee.Services/Banshee.Collection/RescanPipeline.cs: Avoid
	dealing with Podcast files at all (BGO #552976).

	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs: Add another
	TrackInfoMerge override, avoid a NRE.

2009-01-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection/RescanPipeline.cs: Fix
	issue with the Rescan tool where it popped up/removed lots and lots of
	progress bars (UserJobs) during a given import, which caused a ton of
	unnecessary CPU usage (BGO #552561).

2009-01-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Migo/Migo.Net/AsyncWebClient.cs: Patch from Benjamín
	Valero Espinosa fixing bug with not handling the XML encoding attribute
	properly; RSS feeds in non-UTF-8 should now parse correctly (BGO #538224)

2009-01-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Gui/GtkUtilities.cs: Add both upper and
	lowercase versions of file extensions to the file chooser filter, so that
	my.MP3 will appear in the Local Files import dialog (BGO #566224).

2008-12-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Migo/Migo.Syndication/RssParser.cs: If RFC 822 datetime
	parsing fails, try falling back to parsing the pubDate etc with
	DateTime.TryParse (BGO #561381)

2008-12-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseQueryFilterModel.cs:
	Update to new QueryField api - will probably need some work when we
	re-enable other filters (genre browser, etc).

	* src/Libraries/Hyena/Hyena.Query/QueryField.cs: Based on patch from
	Félix Velasco, fix case-sensitivity bug with genre and other string
	matching (BGO #555120)

2008-12-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs: Patch from John
	Millikin fixing bug encoding/scrobbling non-ASCII info (BGO #539963)

2008-12-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Widgets/ImageButton.cs: Patch from Wouter
	Bolsterlee fixing mnemonic support (BGO #557880)

2008-12-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackInfo.cs:
	Fix bug with the published date of a playing podcast episode not getting
	loaded/displayed properly (BGO #565863)

2008-12-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs: 
	Patch from John Millikin fixing issue with an album sometimes being listed
	twice, once as a compilation album and once not (BGO #557313)

	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs: Add some notes
	in a comment.

2008-12-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/BasicTrackDetailsPage.cs:
	Patch from Ivan Zlatev, fixing bug where the first track's TrackCount
	value wasn't set properly when using the automagic-button (BGO #561083)

2008-12-26  Eoin Hennessy <eoin@randomrules.org>

	* build/osx/targets/bundle-30-gstreamer.targets: We can't ship anything from 
	gst-plugins-ugly, so remove it from dependencies.

2008-12-26  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Services.addins: Remove /tmp from
	the list of paths to scan for addins (BGO #556656)

2008-12-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection/SelectAllSelection.cs: Fix
	a bug with determining if a selection (of podcasts, etc) was 'all'; this
	prevented users who had only one subscription from deleting it (BGO
	#560210)

2008-12-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapService.cs: Delay the
	initialization of the DAAP plugin for 3 seconds in an attempt to avoid the
	lock-related freezes (BNC #450125)

2008-12-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs: Fix
	crasher bug with using Banshee in a language that has a non-ASCII
	character in "Audio CD" (BGO #565059).

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Prevent NRE.

2008-12-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackListModel.cs:
	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapLibrarySync.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Fix crash that happened toward the end of syncing a DAP device, caused by
	not including in the FROM clause all the tables needed for the WHERE
	conditions of podcast-related playlists (BGO #558662)

2008-12-02  Eoin Hennessy <eoin@randomrules.org>

	* build/osx/targets/bundle-30-gstreamer.targets: Added gst-plugins-ugly to
	osx dependency targets. The mp3parse element is necessary for duration queries 
	to work on mp3 audio pipelines.

	* build/osx/targets/bundle-10-xiph-libs.target: Readded FLAC support to 
	osx dependencies. 

2008-12-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Backends/Banshee.Hal/Banshee.HalBackend/DeviceMediaCapabilities.cs:
	Fix bug that prevents 'portable_audio_player.cover_art_file_type' property
	from being used (BGO #563290)

2008-12-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/FilteredListSourceContents.cs:
	Use Pack instead of Add when adding items to Panes, so that the min-size
	of children is respected and they can't be practically hidden - fixes bug
	with podcasts list being zero height and therefore not visible on small
	screens (BGO #560675)

2008-11-24  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Booter/banshee-1.in: Fixed quoting in wrapper script so
	filenames with spaces work; especially important since Dolphin/Konqueror do
	not use URIs for local file paths even though %U is specified in the 
	.desktop file (BNC #440883)

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui/GtkUtilities.cs: Moved ForeachWidget
	method into GtkUtilities so it can be reused by third party extensions,
	which is particularly useful (BGO #562151)

2008-11-21  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/DefaultPreferenceWidgets.cs:
	Create the muisc directory before setting it on the FileChooserButton
	to prevent GTK from wigging out and then setting the directory to
	$HOME, causing the preference to save; if the music directory we create
	here ends up not being chosen by the user, try to remove it (if it is
	empty, which it should be since we created it) (BNC #432754)

2008-11-21  Aaron Bockover  <abock@gnome.org>

	* data/banshee-1.desktop.in.in:
	* data/mimetypes.txt: Remove Real Audio/Video mime types (BNC #440615)

2008-11-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Patch from Brandon Perry fixing warning that mono svn raises (BGO #561392)

2008-11-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerWindow.cs:
	Patch from Erik Schmidt adding support for hitting Esc to close the
	equalizer dialog (BGO #552818).

2008-11-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Patch from Benjamín Valero Espinosa fixing bug that prevented the last
	tracks in a folder from being deleted (BGO #560550).

2008-11-10  Aaron Bockover  <abock@gnome.org>

	Banshee 1.4.1 Released

2008-11-10  Aaron Bockover  <abock@gnome.org>

	* configure.ac:
	* src/AssemblyInfo.cs.in:
	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Added a
	third version concept, since we need the assembly version to stay the
	same to reflect the stable API version

2008-11-10  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/AndroidDevice.cs:
	Return the device name simply as what's in the VendorProductInfo
	object

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage.addin.xml:
	Change to Android G1 Phone, detaching from T-Mobile

2008-11-10  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapPropertiesDisplay.cs: Extend
	Gtk.Alignment and render the frame manually so content can be
	centered

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapContent.cs: Reworked content
	layout to be more visually appealing and space optimizing

	* src/Dap/Banshee.Dap.MassStorage/ThemeIcons/16x16/categories/amazon-mp3-source.png:
	* src/Dap/Banshee.Dap.MassStorage/ThemeIcons/22x22/categories/amazon-mp3-source.png:
	Super hot new store icon from jimmac

2008-11-10  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap.MassStorage/ThemeIcons/32x32/devices/phone-htc-g1-white.png:
	* src/Dap/Banshee.Dap.MassStorage/ThemeIcons/16x16/devices/phone-htc-g1-white.png:
	* src/Dap/Banshee.Dap.MassStorage/ThemeIcons/22x22/devices/phone-htc-g1-white.png:
	* src/Dap/Banshee.Dap.MassStorage/ThemeIcons/48x48/devices/phone-htc-g1-white.png:
	* src/Dap/Banshee.Dap.MassStorage/ThemeIcons/128x128/devices/phone-htc-g1-white.png:
	Awesome G1 icons from jimmac

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Make FallbackIcon public
	and static so other DapSources can use it

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/AndroidDevice.cs:
	Use jimmac's awesome G1 icons

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageDevice.cs:
	Allow devices to override the source icon; set the G1 source 

2008-11-10  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageDevice.cs:
	Don't use var because gmcs 1.2.5 sucks more than I thought it did

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/DeviceMapper.cs:
	Unbreak the build

2008-11-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Hardware/VendorProductDeviceNode.cs:
	Custom Mono.Addins extension node that allows targeting device class
	definitions as extensions

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage.addin.xml:
	Defined a MassStorageDevice extension point and custom node; added
	the T-Mobile G1 devices as extensions using new node support

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/DeviceMapper.cs:
	Use Mono.Addins and the new extension node to load custom devices, so
	other devices can be supported in the future without requiring
	modifications to Banshee

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/AndroidDevice.cs:
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageDevice.cs:
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/CustomMassStorageDevice.cs:
	Updated API to ensure everything works well with Mono.Addins'
	TypeExtensionNode instantiation

2008-11-09  Eoin Hennessy <eoin@randomrules.org>

	* src/Backends/Banshee.Osx/Banshee.OsxBackend/OsxBackend.cs: Fixed issue 
	with dock events being ignored due to change in ige-mac-integration api.
	Disabled quitting via dock item menu until BGO #560108 is fixed. 

2008-11-09  Sandy Armstrong  <sanfordarmstrong@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/DeviceMapper.cs:
	Add support for T-Mobile G1 with USB Debugging enabled (product_id
	changes to 0x0c02).  Fixes BGO #560096.

2008-11-10  Ivan N. Zlatev  <contact@i-nz.net>

	* src/Clients/Booter/Booter/Entry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/Source.cs:
	* src/Core/Banshee.Services/Banshee.Collection/BansheeListModel.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs:
	* src/Backends/Banshee.Hal/Banshee.HalBackend/Device.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/LocalDisc.cs:
	* src/Libraries/Migo/Migo.Syndication/FeedEnclosure.cs:  Fix missing () 
	in ?? operator usage. Fixes compilation with gmcs HEAD (BGO #559616).

2008-11-10  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/FileChooserDialog.cs:
	Patch from Cosmin Banu to prevent a crash when importing a file from
	recent items (BGO #559823).

2008-11-09  Alan McGovern <alan.mcgovern@gmail.com>

	* src/Extensions/Banshee.Torrent/Banshee.Torrent/TorrentService.cs: If the
	service is not already running when banshee calls it, we need to ping it a
	second time to see if it auto-started.

2008-11-09  Alan McGovern <alan.mcgovern@gmail.com>

	* src/Extensions/Banshee.Torrent/Banshee.Torrent/TorrentService.cs:
	* src/Extensions/Banshee.Torrent/Banshee.Torrent/TorrentFileDownloadTask.cs:
	Update to work with the latest monotorrent.dbus

2008-11-09  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageDevice.cs:
	Patch from Florent Thoumie to fix compilation with mono 1.2.5 and 1.2.6
	(BGO #559776).

2008-11-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Torrent/Banshee.Torrent/TorrentService.cs: Add
	explicit private.

	* src/Extensions/Banshee.Torrent/Makefile.am:
	* build/m4/banshee/torrent.m4: Install and uninstall the MonoTorrent
	assemblies.

2008-11-07  Eoin Hennessy <eoin@randomrules.org>

	* build/osx/build.env: Added CXX_FLAGS to build env so that C++ gstreamer
	plugins are compiled with -mmacosx-version-min. Was the cause of various
	crashes on OSX 10.4. 

2008-11-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/StatisticsPage.cs:
	Fix the build, broken by the last commit.

2008-11-07  Alexandre Prokoudine  <alexandre.prokoudine@gmail.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/StatisticsPage.cs:
	Somebody forgot to mark this message for translation, and there are even 
	more in this file.

2008-11-07  Aaron Bockover  <abock@gnome.org>

	Banshee 1.4.0.1 Released

2008-11-07  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/AndroidDevice.cs:
	Ensure a proper folder depth and path layout

	* src/Dap/Banshee.Dap/Banshee.Dap/MediaGroupSource.cs: Removed some
	overhead do to reworking of the PurchasedMusicActions

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	See if the device provides its own track path and use it if so,
	otherwise create one

	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs: Do not
	use number formatting on what will always be integers; copy and paste
	failbaug

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/PurchasedMusicActions.cs: Fixed
	bug where only one device per instance would show up due to the UI
	actions already being registered

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageDevice.cs:
	Allow the device to provide a preferred path layout

2008-11-07  Aaron Bockover  <abock@gnome.org>

	Banshee 1.4.0 Released

2008-11-07  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/PurchasedMusicActions.cs: UI
	actions for IPurchasedMusicSource

	* src/Dap/Banshee.Dap/Resources/PurchasedMusicSourceUI.xml: UI for
	importing purchased music

	* src/Dap/Banshee.Dap/Banshee.Dap/IPurchasedMusicSource.cs: Interface
	for advertising that the purchased music UI should be connected

	* src/Dap/Banshee.Dap/Banshee.Dap/MediaGroupSource.cs: If self
	implements IPurchasedMusicSource, connect that UI

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/AndroidDevice.cs:
	Implement IPurchasedMusicSource

2008-11-07  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/AndroidDevice.cs:
	Implemented special support for grouping tracks purchased from the
	Amazon MP3 store on the G1 into their own source; also do not allow
	deleting these tracks in the main Music source on the device; they
	can only be deleted from the Purchased Music source

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageDevice.cs:
	Implemented SourceInitialize and DeleteTrackHook methods

	* src/Dap/Banshee.Dap/Banshee.Dap/VideoGroupSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/PodcastGroupSource.cs: Set AutoHide to
	true so these sources will only show up if there is content in them

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Call SourceInitialize on the MassStorageDevice if we have one and
	after the source itself is initialized; call DeleteTrackHook on the
	MassStorageDevice if we have one and return false if the hook returns
	false, effectively voiding the track deletion from both the disk and
	the database

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Make
	DeleteTrack return bool; in DeleteTrackList, cache the track against
	which DeleteTrack returns false in a skip list and when the cache
	iteration is complete, remove any skip list tracks from the cache
	list before executing the database purge against the cache list.
	Phew.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Do not add the video and
	podcasts group sources since they are now AutoHide and will manage
	that on their own

	* src/Dap/Banshee.Dap/Banshee.Dap/MediaGroupSource.cs: Implemented an
	AutoHide feature that will only show items when the feature is on if
	there are actually items in the source

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs:
	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs:
	* src/Dap/Banshee.Dap.Karma/Banshee.Dap.Karma/KarmaSource.cs: Updated to
	reflect API change in PrimarySource

	* src/Core/Banshee.Services/Banshee.Collection.Database/CachedList.cs:
	Implement a Remove method that allows trimming the cache

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Implemented
	ContainsChildSource method

2008-11-06  Aaron Bockover  <abock@gnome.org>

	This commit provides my first pass at allowing for custom USB mass storage
	device profiles. It allows writing customized classes to special case
	certain devices that are just USB mass storage where extra features and
	polish are desired. As an example, basic out of the box support for the
	T-Mobile G1/Android Phone is implemented. This means the G1 should work
	out of the box with no .is_audio_player necessary or any changes to HAL

	It supports reading/syncing music purchased through the Amazon MP3 store
	on the G1 and syncing cover art along with music.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageDevice.cs:
	Moved the is_audio_player reader into new base device properties class

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/KeyValueParser.cs:
	Lots of fixes for parsing the key/value file for is_audio_player

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/CustomMassStorageDevice.cs:
	MassStorageDevice class that custom device support classes should derive

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/AndroidDevice.cs:
	An implementation of a custom device for the T-Mobile G1/Android phone

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/DeviceMapper.cs:
	Given a USB Device, find out what kind of device profile to create, 
	checking a table of custom supported devices (e.g. Android devices), and
	falling back to the base MassStorageDevice that supports reading 
	is_audio_player

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Use the new MassStorageDevice class for reading customized properties
	that are not part of DeviceMediaCapabilities (e.g. from HAL); also when
	deleting tracks, check to see if the directory will become empty after
	removing the track, and if so, also remove the cover art file if one
	exists.

	* src/Core/Banshee.Services/Banshee.Hardware/IUsbDevice.cs: New interface
	for USB specific device properties

	* src/Core/Banshee.Services/Banshee.Hardware/IDevice.cs: Defined
	ResolveRootUsbDevice which is to return the top level USB device
	as an IUsbDevice

	* src/Core/Banshee.Services/Banshee.Hardware/VendorProductInfo.cs: 
	Struct to define USB devices through vendor/product IDs

	* src/Backends/Banshee.Hal/Banshee.HalBackend/Device.cs:
	* src/Backends/Banshee.Hal/Banshee.HalBackend/UsbDevice.cs: Implement the
	new IUsbDevice support against HAL

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/PodSleuthDevice.cs: Proxy
	the ResolveRootUsbDevice method now defined on IDevice

2008-11-05  Eoin Hennessy <eoin@randomrules.org>

	* build/osx/targets/gst-plugins-bad-qtwrapper-fixes.patch:
	Added a patch containing a number of fixes for qtwrapper issues in 
	gst-plugins-bad 0.10.9 backported from current cvs. Makes playback on 
	OSX considerably more stable.

2008-11-05  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/AboutDialog.cs: Patch
	from Maxim Ermilov to make the about dialog not modal (BGO #558050).

2008-11-04  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Automatically --enable-release if there is
	no .svn directory (this is for you, packagers)

	* src/Libraries/Hyena.Gui/Hyena.Gui.dll.config: linux->osx

2008-11-04  Aaron Bockover  <abock@gnome.org>

	* build/build.rules.mk:
	* configure.ac: Do not run the DllImport verification when 
	configured as a release build

2008-11-04  Aaron Bockover  <abock@gnome.org>

	* build/Makefile.am:
	* build/DllMapVerifier.cs:
	* build/dll-map-makefile-verifier:
	* build/build.rules.mk: Wrote a DllImport and config file map verifier
	tool that analyzes source code and the build to ensure that any DllImport
	reference in the code must have a map in the config file or an explicit
	ignore in the build; also ensures that if a config file exists, it is
	included in module_SCRIPTS so it gets installed in the system

	* src/Clients/Booter/Makefile.am:
	* src/Clients/Booter/Banshee.exe.config:
	* src/Clients/Booter/Booter/Entry.cs: 
	* src/Backends/Banshee.Unix/Banshee.Unix.dll.config:
	* src/Backends/Banshee.Unix/Makefile.am:
	* src/Libraries/Hyena.Gui/Hyena.Gui.dll.config: Fixed up more DLL maps

2008-10-31  Sandy Armstrong  <sanfordarmstrong@gmail.com>

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Remove unneeded "using System.Linq;" that was breaking the build on
	older Mono installations.

2008-10-31  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Core/Banshee.Base/SafeUri.cs:
	* src/Core/Banshee.Core/Banshee.Base/Localization.cs:
	* src/Backends/Banshee.Unix/Banshee.IO.Unix/Directory.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui.dll.config:
	* src/Libraries/Hyena.Gui/Hyena.Gui/PangoCairoHelper.cs: Fix a 
	DllNotFoundException by making the DllImport statements match the dllmap
	in the .config files (BGO #557868).

2008-10-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Use a method instead of an
	anonymous delegate to handle a ButtonPress event, fixing a strange crash
	that I think is probably an issue in Mono (BGO #556573).

2008-10-27  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/FieldPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/HelpPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/ITrackEditorPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/StatisticsPage.cs:
	Removed Changed, not needed

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Add EnqueueTrack, generalize the other Enqueue methods to use EnqueueId

2008-10-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* libbanshee/libbanshee.cproj:
	* *.csproj: Add custom make and make run commands for build/execute

	* Banshee.sln: Remove Torrent and MediaWeb projects from the build

	* build/build.rules.mk: Add run target that does make run in the top dir

2008-10-26  Aaron Bockover  <abock@gnome.org>
	
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/EditorTrackInfo.cs:
	Implemented a GenerateDiff method and DiffCount property returning the
	number of changed fields on the track; this ensures the confirm changes
	dialog only shows up when something actually changes; before the dialog
	was based on some hacked GUI change tracking, which could easily be fooled

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/FieldPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Updated to use the new track diffing logic

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/BasicTrackDetailsPage.cs:
	Implemented the auto-order range closure for track number/count

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/RangeEntry.cs:
	Implemented an auto-order UI action (optional)

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/PageNavigationEntry.cs:
	Make the navigatable text entry generic since we need to use it for
	the track artist if we are editing a compilation album

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/AlbumArtistEntry.cs: 
	Control the two navigation entries

	* src/Core/Banshee.ThickClient/Banshee.ThickClient.addin.xml: Removed
	the help page for now since it only has a picture of jcastro

2008-10-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Patch from Cosmin Banu to prevent NRE (BGO #557867).

2008-10-25  Wouter Bolsterlee  <wbolster@svn.gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/BasicTrackDetailsPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/StatisticsPage.cs:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapActions.cs:

	Added/updated translator comments.

2008-10-25  Wouter Bolsterlee  <wbolster@svn.gnome.org>

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs:
	Corrected translator comments.

2008-10-25  Aaron Bockover  <abock@gnome.org>

	Banshee 1.3.3 Released

2008-10-24  Aaron Bockover  <abock@gnome.org>

	* Makefile.am: Patch from patch-master-organizer Bertrand Lorentz
	to allow localized uninstalled instances ala 'make run'; his make foo
	is strong (BGO #393046)

2008-10-24  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/IPlayQueue.cs:
	DBus doesn't allow overriding methods, so remove the convenience/default

2008-10-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/IPlayQueue.cs: Patch
	from Alex Launi and myself adding the ability to prepend a track to the
	Play Queue (BGO #557526).

2008-10-22  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Fix bug with Play Queue stopping after every song (BGO #557386).

2008-10-22  Aaron Bockover  <abock@gnome.org>

	Patch from Eoin Hennessy <eoin@randomrules.org> (BGO #557190)

	* src/Backends/Banshee.OSX: Added OSX backend. Consists of a service 
	that uses ige-mac-integration-sharp to bind the gtk menu to the 
	global menu, make menus more osx-like etc.. and a hardware manager, 
	which rigth now, doesn't do anything

	* src/Extensions/Banshee.NotificationArea/Makefile.am: Disable the 
	NotificationArea extension on OSX as the 'close-to-tray' behaviour it adds 
	doesn't really make sense on OSX.
	
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Swapping the rendering order of source icon and title fixes a 
	rendering glitch on OSX where the icon for a source's first child is 
	not rendered. 
	
2008-10-22  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Backends/Banshee.Gnome/Banshee.Gnome.addin.xml: Comment out the
	DefaultApplicationHelper extension.

	* src/Backends/Banshee.Gnome/Makefile.am: Remove the commented out
	DefaultApplicationHelper.cs line.

	* gstreamer/equalizer/gstiirequalizer.c: Patch from Sebastian Dröge, see
	BGO #557260.

2008-10-22  Aaron Bockover  <abock@gnome.org>

	This commit fixes a number of OS X build issues and eliminates all 
	dependencies on macports. It is now possible to build Banshee simply by
	installing Xcode and the Mono 2.0 SDK

	* build/osx/build.env: No longer require macports to bootstrap the 
	bundle dependencies

	* build/osx/oss-00-base-libs.targets: New targets, including intltool and
	gettext so we can fully host the dependency build environment; no longer
	do we require pieces from macports

	* build/osx/build-deps.sh: Use curl instead of wget (provided by macports)

	* build/m4/shamrock/i18n.m4:
	* configure.ac:
	* autogen.sh: Use only intltool, not a mix of gettext and intltool, which
	we've used for quite some time and I'm not sure why

2008-10-21  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Backends/Banshee.Gnome/Makefile.am: Remove the
	DefaultApplicationHelper from the build because it needs more work;
	it should probably be using GIO/g_app_info to set itself as the default,
	and it shouldn't cause the "Want to set Banshee as the default?" dialog to
	appear on distros where it's already the default.

2008-10-21  Aaron Bockover  <abock@gnome.org>

	This is round one of Eoin's core fixes for OS X support. This commit
	yields an almost running Banshee. Getting very close. (BGO #557190)

	* src/Extensions/Banshee.MultimediaKeys/Makefile.am: Only enable if 
	we are on GNOME

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: Don't initialize DAP
	service without a HardwareManager instance. Necessary on OS X until we
	have a backend implemented

	* src/Core/Banshee.Widgets/Banshee.Widgets/VolumeButton.cs:
	* src/Core/Banshee.Core/Banshee.Base/SafeUri.cs:
	* src/Core/Banshee.Core/Banshee.Base/Localization.cs:
	* src/Backends/Banshee.Unix/Banshee.IO.Unix/Directory.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui/CairoExtensions.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui/PangoCairoHelper.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui/CompositeUtils.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui/PixbufImageSurface.cs: Fixed up all
	DllImport attributes to import directly against the Win32 target, to be
	remapped to proper libraries on linux or osx through the newly fixed
	dll map config files

	* src/Core/Banshee.Widgets/Banshee.Widgets.dll.config:
	* src/Core/Banshee.Core/Banshee.Core.dll.config:
	* src/Libraries/Hyena.Gui/Hyena.Gui.dll.config: Made sure all dll maps
	will work on Win32 without a .config, map these fixed up names to proper
	.so or .dylib targets depending on whether the os is linux or osx
	
	* src/Core/Banshee.Core/Makefile.am: Include the new .config file

	* build/m4/banshee/osx.m4: OS X specific check

	* build/m4/banshee/dap-njb.m4: Removed, obsolete
	
	* build/osx/build.env: Fix up ACLOCAL_FLAGS
	
	* build/osx/autogen.sh: Pass --enable-osx 

	* build/osx/oss-40-managed-libs.targets: Added ige-mac-integration-sharp,
	removed mono-addins since that's part of the Mono 2.0 SDK
	
	* configure.ac: Added --enable-osx configure option, currently just 
	makes sure we have ige-mac-integration-sharp. It should also check that we
	actually have OS X

2008-10-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* configure.ac: Fix typo, text => test.

2008-10-19  Aaron Bockover  <abock@gnome.org>

	* build/osx/collect-deps.sh: Script to collect all the privately built
	dependencies for bundling

	* build/osx/build-deps.sh: Call collect (har har har)

2008-10-19  Aaron Bockover  <abock@gnome.org>

	* build/m4/banshee/libbanshee.m4: Require either the x11 or quartz backend
	in GDK depending on the target from GTK (based on Eoin's patch)

	* configure.ac: Show what graphics backend we'll be building against

	* build/osx/autogen.sh: Pass --disable-boo, and always restore the orignal
	configure.ac after the script runs

	* build/osx/build-deps.sh: Pull in ndesk-dbus, ndesk-dbus-glib, taglib-sharp
	and mono-addins as bundle dependencies

2008-10-19  Aaron Bockover  <abock@gnome.org>

	This commit adds preliminary build scripts/environment/directions for
	building Banshee on OS X, based heavily on Eoin's great work on porting
	Banshee to OS X. Banshee does not actually build yet on OS X with this
	commit, so don't try. This is phase one of merging Eoin's great work 
	into our trunk.

	* build/osx/*: Scripts and an awesome README for building on OS X

	* autogen.osx.sh: Helper to call into the real OS X autogen wrapper

2008-10-13  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Support --disable-gnome, should make building on OS X
	a lot nicer; also support --enable-release, which sets the RELEASE
	define in gmcs and also turns off -warnaserror; pass --enable-release
	when we run distcheck

	* build/build.rules.mk: Use the new GMCS_FLAGS generated by configure

	* src/Backends/Banshee.Gnome/Makefile.am:
	* build/Makefile.am: Respect GCONF_SCHEMAS_INSTALL and ENABLE_GNOME

	* src/Core/Banshee.Core/Resources/translators.xml: Updated

2008-10-12  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Made ArtworkId
	exportable for the collection indexer

2008-10-11  Aaron Bockover  <abock@gnome.org>

	Banshee 1.3.2 Released

2008-10-11  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.CollectionIndexer/Banshee.Collection.Indexer.RemoteHelper/SimpleIndexerClient.cs:
	Implement virtual hook functions (OnStarted, OnBeginUpdateIndex, 
	OnEndUpdateIndex); only call OnShutDownWhileIndexing if indeed we were
	shutdown while indexing

	* build/pkg-config/banshee-1-collection-indexer.pc.in: A separate 
	pkg-config file for the standalone and bundleable collection indexer
	helper libary 

	* NEWS: Small fixes

2008-10-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSource.cs:
	Don't accept input from any source.

2008-10-09  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Beroe/Beroe/IndexerClient.cs: 
	* src/Clients/Beroe/Beroe/RemoteClient.cs: Remove the client from the 
	indexer server

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexer.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexer.cs:
	Fix standalone API issues

	* src/Core/Banshee.CollectionIndexer/Hyena/ConsoleCrayon.cs:
	* src/Core/Banshee.CollectionIndexer/Hyena/Log.cs:
	* src/Core/Banshee.CollectionIndexer/Hyena/DateTimeUtil.cs: Synced from
	Hyena

	* src/Core/Banshee.CollectionIndexer/Demo/RemoteClient.cs: Moved the 
	demo indexer client into its own assembly with simple build

	* src/Core/Banshee.CollectionIndexer/update-includes: Script to sync
	the stuff from hyena and the indexer dbus interfaces that we need

2008-10-09  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexerService.cs:
	Update to reflect clensing of the interfaces

	* src/Core/Banshee.CollectionIndexer/Banshee.Collection.Indexer.RemoteHelper:
	Moved the collection indexer remote helper into a standalone assembly
	suitable for including in other projects

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexer.cs:
	Fix indexing bug, was using the wrong index for fetching items from
	the model

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/IIndexerClient.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexer.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexerService.cs:
	Ensure the interfaces are fully standalone and do not depend on any
	Banshee API

	* Banshee.sln:
	* configure.ac:
	* build/build.environment.mk:
	* src/Core/Banshee.CollectionIndexer/Makefile.am:
	* src/Core/Banshee.CollectionIndexer/Banshee.CollectionIndexer.csproj:
	Build stuff for moving the collection indexer helper API into its own
	light weight and standalone assembly

2008-10-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Keep track of the track that was playing (if any) before the play queue
	took over so we can return playback to the song after it (BGO #547213).

	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	Add a public PriorTrack property that outside code can use to make the
	QueryLinear code grab the next track after the one set, instead of the one
	after the 'CurrentTrack' (eg the last one played).  Used to return
	playback to the right spot in a source after the queue is finished.

2008-10-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	When finished playing from the play queue, don't play from the prior
	source if it wasn't playing when the play queue took over.  Partially
	fixes BGO #547213.

2008-10-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Clarify the logging we do when a track editor page fails to initialize -
	it's not necessarily b/c it doesn't implement ITrackEditorPage.

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/AlbumArtistEntry.cs:
	Fix regression where the basic editor page wouldn't load when editing a
	single item.

2008-10-08  Gabriel Burt  <gabriel.burt@gmail.com>

	This patch refactors the Podcast code so that it can have playlists and
	smart playlists.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastImageFetchJob.cs:
	Don't assume the PodcastSource is the only podcast-containing source since
	we now have playlists too.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: 
	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Add and use new
	Source#GetProperty convenience method.

	* src/Core/Banshee.ThickClient/Banshee.Gui/InterfaceActionService.cs:
	Support propagation of ActiveSource properties, so that podcast playlists
	can have the same actions as the Podcasts source.

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Change
	Add to accept params.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/Column.cs: Get rid of cruft, and
	take the Id for a column from the sub-property if it exists, otherwise
	from the Property (as before).

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastItemView.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackInfo.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellPodcastStatusIndicator.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastActions.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Dialog/PodcastPropertiesDialog.cs:
	PodcastTrackInfo no longer subclasses from DatabaseTrackInfo - instead its
	the ExternalObject to the TrackInfos that are under the PodcastSource.
	Change code accessing the PodcastTrackInfo propeties to get to them via
	the PodcastTrackInfo.From (track_info) helper.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellPodcast.cs:
	Don't dispose images after rendering them the first time.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastSourceContents.cs:
	Allow other DatabaseSources (eg PlaylistSources) to be used in this view.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastSource.cs:
	Allow playlists, set Artwork and ExternalObject handlers, clean up, change
	to reflect PodcastTrackInfo changes, etc.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackListModel.cs:
	Subclass only to set add some default conditions/FROM tables, but no
	longer is a model for/returns PodcastTrackInfo objects.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastFeedModel.cs:
	Change the reload fragment to work with playlists.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSource.cs:
	New (overridable) DatabaseSource API for creating the TrackModel and
	default Filters for a DatabaseSource.  Child DatabaseSource objects use
	their parent's Create methods so that they get any customizations they
	might have (like Podcasts pulling in other tables/conditions).

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Override ArtworkId and ExternalObject to use the PrimarySource's handlers,
	if any, to return these values.  Allows us to customize the ArtworkId for
	podcast episodes to be "podcast-$podcasttitle", for instance.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Allow overriding the default string of table names to select from.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Don't
	accept DnD input from the Play Queue (or any parentless
	non-PrimarySource).

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Add
	ExternalObject and ArtworkId delegates that will change the default
	behavior for tracks within this source.

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Add a static
	PlaybackFinished event that is fired after play/skip counts are
	incremented.  Used by PodcastTrackInfo to set the Item as not new once
	it's been played.  Add a default (returning null) implementation of
	ExternalObject property.

	* src/Libraries/Hyena/Hyena.Query/RelativeTimeSpanQueryValue.cs: Call
	DetermineFactor in the static helper so that the factor is set
	appropriately; wasn't called anymore after my recent fix to remember the
	unit the user entered.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCell.cs: Allow setting a
	sub-property, either with SubProperty = or by setting Property to a value
	containing a period.  So setting Property to "Foo.Bar" would call the Bar
	getter on the object returning from the Foo getter (called on the object
	bound to the cell, usually a DatabaseTrackInfo in Banshee).  This lets us
	have columns based on properties of, say, the TrackInfo#ExternalObject,
	which we do for Podcasts for Description, PublishedDate, etc.

	* src/Libraries/Hyena/Hyena.Collections/Selection.cs: Expose the
	RangeCollection in a protected getter.

	* src/Core/Banshee.Services/Banshee.Collection/SelectAllSelection.cs: Fix
	bug where we considered any selection of Count 2 that contained the 1st
	item to be 'all'.

2008-10-08  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Beroe/Beroe/RemoteClient.cs: Updated for
	SimpleIndexerClient API changes

2008-10-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexerService.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexerService.cs:
	Make time a long, since it's time_t

	* src/Core/Banshee.Services/Banshee.Collection.Indexer.RemoteHelper/SimpleIndexerClient.cs:
	Support getting available export fields, and setting which fields you
	want exported to you; abstract the HasCollectionChanged by adding
	CollectionCount and CollectionLastModified abstract members that make
	the API a little less confusing

2008-10-08  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Beroe/Beroe/RemoteClient.cs: Whitespace; stupid MD

	* src/Core/Banshee.Services/Banshee.Collection.Indexer.RemoteHelper/SimpleIndexerClient.cs:
	More abstraction to make remote clients easier, but I'm mainly just
	playing around and seeing what sticks right now

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexer.cs:
	Add a lame temporary debug line

	* src/Core/Banshee.Services/Banshee.Collection.Indexer.RemoteHelper/IndexerClient.cs:
	Fix some raciness; I completely forgot that the remote Index call was
	async

2008-10-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Collection.Indexer.RemoteHelper/SimpleIndexerClient.cs:
	Pulled out the implementation from the Beroe remote client example
	into a further encapsulation

	* src/Clients/Beroe/Beroe/RemoteClient.cs: Now extend the new
	SimpleIndexerClient

2008-10-08  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Beroe/Beroe/RemoteClient.cs: Check for Shutdown when
	processing the index

2008-10-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Only click sync buttons when they are sensitive

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/BasicTrackDetailsPage.cs:
	Save the field slot for the track artist and pass it to the album
	artist field

	* src/Libraries/Hyena.Gui/Hyena.Widgets/PulsingButton.cs: Stop pulsing
	when the widget goes to the insensitive state

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/FieldPage.cs:
	Return the FieldSlot when adding a field

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/AlbumArtistEntry.cs:
	When the compilation button is checked, disable the sync button for
	the track artist; that is, if a selection sets album
	artist/compilation, track artist will no longer sync, since that
	would suck

2008-10-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TextEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/GenreEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/EditorEditableUndoAdapter.cs:
	Updated to use the now generic EditableUndoAdapter

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TextViewEntry.cs:
	Use the new TextViewEditable, implement ICanUndo

	* src/Libraries/Hyena.Gui/Hyena.Gui/EditableUndoAdapter.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui/EditableEraseAction.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui/EditableInsertAction.cs: Make
	generic, adapting widgets implementing Gtk.Editable instead of only
	against Gtk.Entry

	* src/Libraries/Hyena/Hyena/IUndoAction.cs: Whitespace

	* src/Libraries/Hyena.Gui/Hyena.Widgets/TextViewEditable.cs: A
	Gtk.TextView that implements Gtk.Editable

2008-10-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/LargeTrackInfoDisplay.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ClassicTrackInfoDisplay.cs:
	Like I fixed for the ListView yesterday, do not recreate the pango
	layouts on each expose; this is a slight perf improvement, but mostly,
	it stops a huge leak (BGO #555365). Thanks to Michael Monreal for
	helping to track this one down!

	* src/Libraries/Hyena.Gui/Hyena.Gui/CairoExtensions.cs: Always create a
	new layout and return it instead of accepting it as a ref parameter;
	dispose the context after we request it from PangoCairoHelper

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Updated to reflect API change of CairoExtensions.CreateLayout

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Added a virtual OnThemeChanged to simplify things for sub classes so
	they don't have to worry about awkward logic often necessary with
	OnStyleSet

2008-10-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexer.cs:
	Add a missing lock, which was causing a crash+race

	* src/Clients/Beroe/Beroe/RemoteClient.cs: Add missing call to Index so
	we actually can get results from the server

2008-10-06  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Do not re-create the layout on every expose; this fixes a pretty bad leak
	and possibly speeds up rendering

2008-10-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Query.Gui/RatingQueryValueEntry.cs:
	Always show stars in the Rating widget shown in the smart playlist editor.

2008-10-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.csproj: Ref System.Xml

	* src/Libraries/Hyena/Hyena.Query/FileSizeQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/RelativeTimeSpanQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/TimeSpanQueryValue.cs:  Persist and read
	the factor to/from XML, so we remember if the user chose '45 days' and
	no longer turn it into 1.5 months the next time they edit a smart
	playlist (BGO #545887).

2008-10-06  Aaron Bockover  <abock@gnome.org>

	This commit finishes the port to using Cairo surface in almost all places
	where we do rendering, and adds a surface cache system for improving 
	performance in some places.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellAlbum.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellPodcast.cs:
	Use the new surface methods from artwork manager to directly render
	surfaces as stored in the LRU cache

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkManager.cs:
	Implement a surface caching system that should help improve the rendering
	speed of the album browser. Tuned to never grow beyond 1MB of image data
	per cache.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkRenderer.cs:
	Accept surfaces as input instead of pixbufs. Yay.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Port the beast to use cairo image surfaces directly intead of pixbufs,
	get rid of the surface cache hack

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/LargeTrackInfoDisplay.cs:
	Updated to reflect the surface changes in base class, cache the scene
	surfaces to avoid re-rendering on each pass (was cached before, but using
	a different mechanism)

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ClassicTrackInfoDisplay.cs:
	* src/Clients/Muinshee/Muinshee/MuinsheeTrackInfoDisplay.cs:
	Updated to reflect surface changes in the base class
		
	* src/Libraries/Hyena/Hyena.Collections/LruCache.cs: Implement a somewhat
	lame generic LRU cache collection

	* src/Libraries/Hyena.Gui/Hyena.Gui/PixbufImageSurface.cs: Add a new 
	ctor that disposes the input pixbuf when done with it, nice for 
	inlining pixbuf->surface without temporary variables or leaking

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSourceContents.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Updated to reflect API rename in the artwork manager

2008-10-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationType.cs:
	Support for creating a station in the station dialog from a lastfm:// URL,
	based on a patch from Russ Smith, slightly modified by myself (BGO
	#554724).

2008-10-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/GenreEntry.cs:
	Comment out Gtk+ 2.12 property (EntryCompletion#InlineSelection).

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TextEntry.cs: Add
	another ctor to enable autocomplete.

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/BasicTrackDetailsPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/AlbumArtistEntry.cs:
	Use new TextEntry ctor to enable autocomplete for artist, album, and album
	artist (BGO #526014).

2008-10-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/GenreEntry.cs:
	Implement IEditorField so that changes are noticed and saved (BGO
	#553555).  Also create/set an EntryCompletion so that autocomplete works.

2008-10-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Change way in which we mark the album or artist as changed (and therefore
	know to save it) to account for splitting the load-from-db properties out
	from the public properties used by the editor etc.  Fixes issue with the
	artist info not getting saved in the editor (BGO #555111).

2008-10-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs: When
	cancelled make the UserJob go away immediately (BGO #555197).

2008-10-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/ViewContainer.cs: Change "All Columns" in the
	search menu to "Artist, Album, or Title" since it does in fact only search
	those columns, not all of them (BGO #555122).

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Apply the same
	fix as before, suggested by Benoit Boissinot, if the disc_count is zero,
	don't do the trick where we return the DiscNumber

2008-10-03  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkManager.cs:
	Implement Surface lookup methods

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/LargeTrackInfoDisplay.cs:
	Use PixbufImageSurface

	* src/Libraries/Hyena.Gui/Hyena.Gui/CairoExtensions.cs: Use Paint instead 
	of Rectangle+Fill, slight perf improvement

	* src/Libraries/Hyena.Gui/Hyena.Gui/PixbufImageSurface.cs: A new Cairo 
	ImageSurface that directly blits pixel data from a GdkPixbuf; better than 
	using Gdk.CairoHelper since this does not require a context (direct 
	pixbuf->surface instead of pixbuf->(internal surface)->context->
	pattern->surface)

2008-10-03  Gabriel Burt  <gabriel.burt@gmail.com>

	This patch adds support for importing all white-listed file formats, even
	if TagLib# can't process them.  That includes mov, flv, mkv, divx, and
	more (BGO #524595).

	* src/Core/Banshee.ThickClient/Banshee.Library.Gui/FileImportSource.cs:
	Update to use new ExtensionSet class.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportManager.cs:
	Use ExtensionSet class, move the IsWhiteListedFile check to the actual
	ImportTrack method because its public and we don't want API-consumers to
	be able to bypass the whitelist check.

	* src/Core/Banshee.Services/Banshee.Metadata.Embedded/EmbeddedQueryJob.cs:
	* src/Core/Banshee.Core/Banshee.Streaming/SaveTrackMetadataJob.cs:
	StreamTagger.ProcessUri will return null now if TagLib# can't process a
	file, instead of throwing an exception.  Adjust users of that method
	accordingly.

	* src/Core/Banshee.Core/Makefile.am:
	* src/Core/Banshee.Core/Banshee.Core.csproj:
	* src/Core/Banshee.Core/Banshee.IO/ExtensionSet.cs: New simple class that
	takes an array of strings/extensions and can tell you if a give file
	has one of the extensions in the set.

	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs: Catch TagLib#'s
	exceptions in ProcessUri and return null.  Change MergeTrackInfo to accept
	a null TagLib.File argument, and use a ExtensionSet of several video
	extensions that might not work in taglib#, so we can properly mark such
	files as videos.

	* src/Libraries/Hyena.Gui/Hyena.Gui/GtkUtilities.cs: Change GetFileFilter
	helper to take an IEnumerable<string> intead of a string array.

2008-10-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/ExtraTrackDetailsPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/BasicTrackDetailsPage.cs:
	Use ValueAsInt instead of casting Value.

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/RangeEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/SpinButtonEntry.cs:
	Instead of listening for the Changed event on SpinButtons, listen for the
	ValueChanged.  Fixes issue with not saving any spin-entry values unless
	you clicked the up/down arrows (BGO #552698).

2008-10-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Add TODO about writing metadata to the DAP file to make sure its
	MetadataHash will match that of the in-Library track when we load the DAP
	next time.

2008-10-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs: Add TODO to use
	transactions when loading tracks and use slightly better TrackCount method
	instead of accessing Tracks.Count twice.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapTrackInfo.cs: Set BitRate
	as well.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Add
	thoughts on how to fix the transaction bug so we can bring back the
	transaction methods.  Not going to do it now, too fundamental of a change
	too close to 1.4.

2008-10-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodTrackInfo.cs: Optimize
	cover art setting so that we only create a Pixbuf of the track's cover art
	if it's not already set.

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/BasicTrackDetailsPage.cs:
	Reconnect the height of the year label to the height of the album artist
	label, and make the minimum for the year entry 0 not 1000 so that for
	tracks without a year set, it shows up as 0 not 1000.

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/AlbumArtistEntry.cs:
	Expose the LabelWidget (the checkbox, actually) so the year label's height
	can be set off it.

2008-10-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/FieldPage.cs: Don't
	assume a slot has a Label or a LabelClosure.

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/BasicTrackDetailsPage.cs: 
	Instead of creating the Is Compilation checkbox here and setting that as
	the label for Album Artist, move it and its logic into a dedicated
	AlbumArtistEntry widget.  Net effect is you can now sync the Is
	Compilation checkbox and the Album Artist value via the single sync
	button.

	* src/Core/Banshee.ThickClient/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.ThickClient.csproj:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/AlbumArtistEntry.cs:
	New editor widget that has a checkbox and a text entry.  Add tooltips to
	the checkbox and entry to explain what these values are.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Add *Field properties for actually loading/saving field values from/to the
	database - avoiding the checks and such that happen when you use the
	AlbumTitle et al setters.  Based on patch from Benoit Boissinot, remove
	the restrictions on setting the AlbumArtist based on IsCompilation to avoid
	race condition with whether the IsCompilation bool was set true before
	trying to set the AlbumArtist value (BGO #554723).

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Also based on 
	the same patch from Benoit, is IsCompilation is false, in the AlbumArtist
	getter always return ArtistName, otherwise return the value of the album
	artist or Various Artists if its not set.

2008-10-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Patch from Benoit
	Boissinot. If the track_count is zero, don't do the trick where we return
	the TrackNumber (BGO #554720).

2008-10-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Migo/Migo.Syndication/FeedUpdateTask.cs:
	* src/Libraries/Migo/Migo.TaskCore/Migo.TaskCore.Collections/TaskList.cs:
	Style fixes.

2008-10-01  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit fixes jump-to-playing for podcasts and radio, avoids some
	hangs when loading playlists from the command line or Media menu.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/ICanonicalPlaybackController.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/IBasicPlaybackController.cs:
	Change the Next/Previos/First methods to return a bool saying whether they
	handled the action.  So sources can implement IBasicPlaybackController and
	return false if they want the normal controller to handle that action.

	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs:
	Make sure playlist parsing (which could involved network access) is done
	not on the GUI thread.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastImageFetchJob.cs:
	Reload the whole source when done fetching podcast artwork.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastSourceContents.cs:
	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSourceContents.cs:
	Implement ITrackModelSourceContents so jump-to-playing track works for
	podcasts and radio.

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSource.cs:
	Implement IBasicPlaybackController, and play the next/previous stream
	within the station (if any) when Next/Previous are called.

	* src/Core/Banshee.Services/Banshee.Playlists.Formats/PlaylistParser.cs:
	Add AssertNotInMainThread to help identify places we call this from the
	GUI thread.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	In IndexOf method, if the track is a RadioTrackInfo, lookup the IndexOf
	its parent track, since RadioTrackInfo is a wrapper.

	* src/Core/Banshee.Services/Banshee.Streaming/RadioTrackInfo.cs: Add
	PlayPreviousStream method, and return whether able to play next/previous
	in those methods, so we can fall back on the normal playback controller if
	not.

2008-10-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Use
	track.ArtworkId instead of explicitly calling CreateArtistAlbumId.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkManager.cs:
	Remove unused override.

	* src/Core/Banshee.Services/Banshee.Metadata/MetadataService.cs: Don't
	lookup a track if its ArtworkId is null.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Don't set the AlbumArtist value if IsCompilation is false.

	* src/Core/Banshee.Core/Banshee.Base/CoverArtSpec.cs: Set null ArtworkId
	if either the artist or album is unknown (BGO #549320).

2008-10-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Metadata/MetadataServiceJob.cs: Factor
	out the save-to-temp-file-then-move logic into a method, SaveAtomically,
	that takes any input Stream and saves it to a file with that save
	strategy.

	* src/Core/Banshee.Services/Banshee.Metadata.Embedded/EmbeddedQueryJob.cs:
	If the file is already a JPG, save it directly as a JPG but using the new
	SaveAtomically method.  If it's not a JPG, save it with .cover extension
	as before.

	* src/Core/Banshee.Services/Banshee.Metadata.FileSystem/FileSystemQueryJob.cs:
	Look for PNG and BMP files too (BGO #547841), and save as .cover if not
	JPG, and use SaveAtomically method to avoid race.  Also, increase to 30
	the threshold number of files in a folder above which we don't take any
	image from it.

2008-10-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/BaseClientWindow.cs: Add stupid
	protected IntPtr ctors.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Set the transcoder
	ErrorHandler and add an entry to the ErrorSource when there is a transcode
	error.

	* src/Core/Banshee.Services/Banshee.MediaEngine/TranscoderService.cs:
	Instead of popping up a dialog with a transode error and cancelling all
	other queued transcodes, simply call the error handler for the track and
	move on.

2008-09-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkManager.cs:
	We allow putting files with extension .cover in the ~/.cache/album-art
	folder, which means we should, on a later pass, cover them to jpeg if
	necessary.  That code path was broken, which also broke embedded cover art
	fetching because it always names the files it fetches with a .cover
	extension (BGO #388162).

2008-09-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Every 10 minutes refresh any podcasts that haven't been updated in over an
	hour (BGO #508418).

2008-09-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSync.cs: Ensure that the Sync happens
	not on the main thread.  If you changed the Automatic Sync option, it
	woudl trigger a sync immediately, but that sync was happening on the GUI
	thread.

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapActions.cs: DapSync takes care of
	threading now, remove SpawnFromMain call here.

	* src/Core/Banshee.Services/Banshee.Base/ThreadAssist.cs: Add helper
	method AssertNotInMainThread useful for debugging.

2008-09-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Add SupportsVideo and
	SupportsPodcast bools with protected setters so subclasses can turn off
	the Video and Podcast child sources.

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: Only enable
	video support (syncing and the child source) for devices that support it.
	Also don't sync playlists to iPod shuffle devices.  Give feedback about
	out-of-space errors.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSync.cs: Don't show/sync video if not
	supported.  Sync Music library first.  Improve/fix auto-syncing when you
	change your libraries it should work better now.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapLibrarySync.cs: Delete playlists if
	they end up having no tracks when put on the device.

2008-09-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/XmlColumnController.cs:
	Allow setting the LongTitle in the xml.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastSource.cs:
	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSource.cs:
	* src/Core/Banshee.Services/Banshee.Library/VideoLibrarySource.cs:
	Override the long-title too so that the column names in the context menu
	are changed appropriately.

2008-09-29  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.MediaProfiles.Gui/ProfileComboBox.cs:
	Ensure that if there's a mimetype restriction filter and no profiles 
	exist to match that filter that the combo box becomes insensitive and
	displays 'no profiles'

	* src/Core/Banshee.ThickClient/Banshee.MediaProfiles.Gui/ProfileComboBoxConfigurable.cs:
	Do not show the profile description box if the combo is insensitive

	* src/Core/Banshee.Services/Banshee.MediaProfiles/MediaProfileManager.cs:
	When loading profile configurations, re-run the mimetype check to ensure
	that the profile is actually valid for the request

2008-09-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/ExtraTrackDetailsPage.cs:
	Set some properties on the BPM spin entry - 3 chars max, 0 decimal digits,
	and numeric = true.  Also, it shouldn't be syncable.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Comment out
	Gtk# 2.12-dependent features; only used in commented out tooltip code
	anyway.

2008-09-29  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Beroe/Beroe/IndexerClient.cs: Log when the client has started

	* src/Clients/Beroe/Beroe/RemoteClient.cs: Stubbed out some more 
	example client indexer stuff
	
	* src/Core/Banshee.Services/Banshee.Collection.Indexer.RemoteHelper/IndexerClient.cs:
	Add a helper method for creating indexers; fix a small race bug

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellLocation.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs:
	Added a new location cell to show local paths as paths and not URIs

2008-09-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Ignore 0169 warning.

2008-09-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackInfo.cs:
	Remove a bunch of old, commented-out code.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellRating.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/IInteractiveCell.cs: Whitespace

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Factor some useful bits out of ProxyEventToCell that can be reused for
	tooltip code.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView.cs: Implement
	tooltips for ListView for ellipsized ColumnCellText cells, but comment it
	out for now because there is a segfault bug in Gtk+ or Gtk# that rears its
	head once in a while.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Add public
	UpdateText method and IsEllipsized and Text properties.

2008-09-26  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Widgets/Banshee.Widgets/SeekSlider.cs: We were calling
	base.OnButtonPressEvent instead of base.OnButtonReleaseEvent in our
	ButtonReleaseEvent override -- whoops!  Somehow this used to work with
	older Gtk#s, but no longer; anyway, fixed (BGO #536397).

2008-09-25  Gabriel Burt  <gabriel.burt@gmail.com>

	This patch adds a Description column to podcasts.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Fix newline removing migration (remove \r\n first then \n), and add a new
	migration to initialize the new Item.StrippedDescription property.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastSource.cs:
	Add a Description column that is stripped of HTML and newlines and
	HtmlDecoded (BGO #503481).

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackInfo.cs:
	Add a Description property, proxying the item.StrippedDescription.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackListModel.cs:
	Handle sorting by description.

	* src/Libraries/Hyena/Hyena/Tests/StringUtilTests.cs: Test the new
	RemoveHtml method.

	* src/Libraries/Hyena/Hyena/StringUtil.cs: Add RemoveHtml method, very
	simple, removes anything that looks like a tag, eg <*>.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnHeaderCellText.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Move the
	clipping to the ColumnCellText itself so that all text columns get
	properly clipped (was an issue for very long descriptions).

	* src/Libraries/Migo/Migo.csproj: Reference System.Web.

	* src/Libraries/Migo/Migo.Syndication/FeedItem.cs: Add StrippedDescription
	property and UpdateStrippedDescription that handles removing the HTML and
	HtmlDecoding.

	* src/Libraries/Migo/Migo.Syndication/RssParser.cs: Call
	StringUtil.RemoveNewlines here when setting item and feed
	title/descriptions.

	* src/Libraries/Migo/Migo.Syndication/Feed.cs: The RemoveNewlines call is
	now done in RssParser.

2008-09-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Mtp/Mtp/MtpDevice.cs: Prevent NRE (BGO #552428).

2008-09-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Makefile.am:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.csproj:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellYesNo.cs:
	New cell for bools that renders yes/no.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastSource.cs:
	Get rid of old combined status column, and add downloaded and new columns
	that are sortable.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackListModel.cs:
	Implement sorting for IsNew/IsDownloaded.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Whitespace.

2008-09-25  Marek Habersack  <mhabersack@novell.com>

	* src/Libraries/Migo/Migo.Syndication/MigoModelProvider.cs: newer
	versions of gmcs enforce ordering of 'where' constraints from less
	concrete to more concrete types (i.e. interface constraints must
	go last).

2008-09-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: Don't sync on
	eject if the device IsReadOnly, and consider the device to be readonly if
	the database isn't supported.

2008-09-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Run UPDATE queries against CoreTracks and PodcastItems to remove any
	newlines.

	* src/Libraries/Hyena/Hyena/Tests/StringUtilTests.cs:
	* src/Libraries/Hyena/Hyena/StringUtil.cs: Add and test new method for
	removing all newlines from a string.

	* src/Libraries/Migo/Migo.Syndication/Feed.cs: Remove newlines from title
	and description when setting them (BGO #550008).

2008-09-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Fix another NRE.

2008-09-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Fix NRE (BGO #553665) when editing audio cd tracks.

2008-09-24  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Extensions/Banshee.Sample/Banshee.Sample/SampleSource.cs: Update
	the sample extension so that it compiles again (BGO #551860).

2008-09-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Backends/Banshee.Hal/Banshee.HalBackend/DeviceMediaCapabilities.cs:
	Catch exceptions thrown by managed dbus (BGO #551311).

2008-09-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSync.cs: Call OnUpdated when the
	auto-sync pref changes too.

2008-09-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena/StringUtil.cs: Use the invariant culture to
	avoid invalid gconf keys (BGO #548144).

2008-09-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Make F11 work to
	fullscreen/unfullscreen Banshee too (BGO #553440).

2008-09-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: Instead of
	calling QueueSync after every added or deleted track call it only in
	OnTracksAdded/Deleted and when not syncing.  Should fix bug with 'Syncing
	iPod' showing up every 10 songs (BGO #552543).  Shorten the timeout till
	the actual sync since we no longer rely on it being long enough we'll
	add/remove a song and push it back before it goes off.  Could probably get
	rid of it altogther.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Add
	AcceptsUserInputFromSource method that returns the same value as
	AcceptsInputFromSource.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Override
	AccepsUserInputFromSource to base && CanAddTracks - which is set to false
	if the user shouldn't be able to drag tracks from a source to this one, if
	the destination is readonly, or a not-manually-managed dap, say.

	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs: Fix bug with sync
	not working because AcceptsInputFromSource was returning false because
	sync was enabled;  added another AcceptsUserInputFromSource that is used
	to turn on/off DnD from SourceView etc and that returns false still.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Make sure the file we're
	talking about transferring is exists.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapLibrarySync.cs: Remove some logging.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTile.cs: Don't
	hide the Status label iff it's ever been set to non-null/empty to avoid
	the height of the tile changing rapidly in some cases.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	Use new AccepsUserInputFromSource method.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Avoid NRE that was caught but spewed a lot of logging.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Style fixes,
	and don't set the AddTrackJob status to empty between tracks because that
	causes a strange height-change flicker.

2008-09-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Clients/Nereid/Nereid/ViewContainer.cs: Change the order of some
	hides so that the footer widget is hidden before changing the main source
	contents widget.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/RoundedFrame.cs: Fix bug with
	SizeRequest handler that caused the DapInfoBar and the Recommendations
	pane to not show up.

2008-09-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/BaseClientWindow.cs: Add a
	SetVisible method to allow explicitly setting the state, as opposed to
	relying on the Toggle logic, which breaks alt-f4 closing because
	apparently the window !IsActive when that's pressed (BNC #257350).

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Call SetVisible (false) explicitly from the CloseWindow method.

2008-09-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSync.cs: Update the sensitivities of
	the library sync prefs when the Manual Sync pref changes, and raise
	Updated when that happens too so that the Sync action is immediately
	hidden/shown (BGO #552654).

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/WidgetFactory.cs:
	Fix listening to changes on the Preference and setting the sensitivity and
	visibility of the widgets.

2008-09-23  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Gui/GtkUtilities.cs: Do nothing if the
	theme is null

2008-09-23  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	Removed the old Style override that didn't even work and caused theme
	change breakage

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Use the new and working AdaptGtkRcStyle utility 

	* src/Libraries/Hyena.Gui/Hyena.Gui/GtkUtilities.cs: Implement
	AdaptGtkRcStyle utility to look up colors through GtkRc and adapt 
	them to a given widget

2008-09-23  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Implement IPlayQueue

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/IPlayQueue.cs:
	Basic interface for adding files that are already in the library to the
	play queue

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Implement
	IDBusExportable and automatically register and unregister sources on the
	bus that implement IDBusExportable as well

2008-09-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Mtp/Mtp/Folder.cs:
	* src/Libraries/Mtp/Mtp/Album.cs:
	* src/Libraries/Mtp/Mtp/Track.cs: Patch from Salah Coronya adding support
	for libmtp >= 0.3.0 (aka libmtp8).  Modified by myself to #if/else the
	patch out if building against older versions of libmtp - so still
	compatible with libmtp >= 0.2.0 (BGO #542117).

	* src/Libraries/Mtp/Makefile.am: Set the define appropriately based on the
	version of libmtp we're building against.

	* build/m4/banshee/dap-mtp.m4: Allow libmtp >= 0.30.

	* build/build.rules.mk: Pass the BUILD_DEFINES variable to the actual
	build command, so assemblies can define things to #if around.

2008-09-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Metadata.FileSystem/FileSystemQueryJob.cs:
	Log a message when we ignore cover art in folders b/c too many files in
	the folder.

2008-09-23  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs:
	Add a method for raising the reloaded event, NotifyUpdated

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	Call NotifyUpdated on the model, not OnUpdated on the source; fixes the 
	redrawing when locking/unlocking tracks for playback during the rip 

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs: Do not 
	show the rip speed factor (e.g. 15x) until it has settled to an appropriate
	value, somewhere between 1x and 200x

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/AudioCdRipper.cs: Load
	either the Vorbis or FLAC audio profiles if there is no configured rip
	profile and set the active profile in this case; this fixes the bug where
	ripping a CD is not possible unless the user first chooses/changes the
	ripping profile in the preferences dialog (BGO #528621)

2008-09-22  Aaron Bockover  <abock@gnome.org>

	Banshee 1.3.1 Released

2008-09-22  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs:
	Compute the PCM file size for each track, set it on AudioCdTrackInfo, 
	and aggregate these values into a disc size

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs: 
	Implement IFileSizeAggregator and report the disc size

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/EditorTrackInfo.cs:
	Only dump the taglib read exception if the URI scheme is file

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Show either an Editor or Properties title based on the editor mode

2008-09-22  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	Override HasViewable/EditableTrackProperties to true so can finally edit
	audio CD track information again before ripping (BGO #532467).

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Don't require
	the source to have a DatabaseTrackListModel to view/edit props

2008-09-22  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Only draw the header separator if the column can be resized, or a previous
	header separator has already been drawn - this allows leading columns
	to appear as one column

2008-09-22  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSource.cs:
	Disable viewing read only properties

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: 
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Support read only and editable property items

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Added 
	HasViewableTrackProperties and HasEditableTrackProperties items, defaulting
	to false

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Override
	the new properties above to be true

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Renamed
	Title to Name

2008-09-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.MediaWeb/Banshee.MediaWeb/MediaWebSource.cs:
	* src/Extensions/Banshee.MediaWeb/Banshee.MediaWeb/MediaWebView.cs: Add
	debugging, and send to hulu not miroguide.com b/c the later doensn't work
	atm due to SSL certs.

	* configure.ac: Echo any manually-enabled unstable/unfinished features.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/DownloadManager/DownloadUserJob.cs:
	Currently transferring => Transferring

2008-09-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Fix bug I introduced the other day with not being able to DnD more than
	one track because all but the pointed-to track would get unselected when
	you tried to drag (BGO #552715).

2008-09-19  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Patch from
	Michael Monreal to make the help menu HIG compliant (BGO #552700).

2008-09-18  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs: Use
	the foreground selected color from the menu item, not the label

2008-09-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.ThickClient.csproj:
	* src/Core/Banshee.ThickClient/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellTrackAndCount.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellDiscAndCount.cs:
	New classes for N of M columns for track/disc #/count.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs:
	Make the track # column have no title in its header, and get rid of the
	disc/track count and disc # columns, replacing them with two new ones from
	the new classes.

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Rename
	DiscField to DiscNumberField, and sort the disc sort-key similar to how
	track# is sorted.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/Column.cs: Allow setting the Id.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Allow setting
	the min/max strings directly.  Used by two new columns to avoid creating
	TrackInfo objects just to set the min/max strings.

2008-09-18  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Fix math for choosing the number of rows to influence the number of
	columns for aesthetic column menu

2008-09-18  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Force the foreground color of embedded menu labels in the prelight state
	to use the foreground color from the selected state (BGO #524897)

2008-09-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Data/ColumnDescription.cs: Add a LongTitle
	property.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs:
	Use the QueryField.ShortLabel in the ColumnDescription for the Title, and
	set the LongTitle to the field's Label property.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs: Use
	the LongTitle in the menus.

2008-09-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellPublished.cs:
	Use the new SetMinMaxStrings method in ColumnCellText to define the
	min/max widths for these columns.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellUnheard.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellDownloadStatus.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellQueryText.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellDateTime.cs:
	Update to new ColumnCellText API, replacing the Text property with a
	GetText method so we can get the text for any arbitrary object (the
	min/max strings, for example) instead of just the bound object.

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Add ShortLabels
	for a few fields, and make sorting by Grouping the same as sorting by
	track.

	* src/Libraries/Hyena/Hyena.Query/QueryField.cs: Add a ShortLabel property
	that default to the value of Label.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/XmlColumnController.cs:
	Only set the min/max widths if they were actually specified in the XML.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellFileSize.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellTrackNumber.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellPositiveInt.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellDuration.cs:
	Use the new SetMinMaxStrings method and change to the new GetText method.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs:
	Set the Uri column to ellipsize in the middle of the string, and change
	the ColumnCellPositiveInt columns to use its new ctor to specify the
	min/max number of digits (eg always 4 for Year).  Use the QueryFields'
	ShortLabel property for the column Title.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnHeaderCellText.cs: Add
	static GetArrowWidth method and get rid of MinWidth property.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ISizeRequestCell.cs: Replace
	GetSize method with GetWidthRange.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/Column.cs: Add CalculateWidths
	method that is passed a Pango.Layout so we can calculate an accurate
	Min/Max width for a column

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/IHeaderCell.cs: Get rid of
	MinWidth property.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs: Call
	column.CalculateWidths before accessing the Min/MaxWidth properties.  When
	resizing a column, don't let it be resized bigger than the MaxWidth.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Handle escape key to stop column moving/DnD.  Reorder conditional to avoid
	iterating over all columns to see if there is a resizable column at the x
	position every time MotionEvent is fired - no need to do that unless the
	motion was inside the header. 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Replace Text
	property that returned the BoundObject with a GetText method that takes
	any object.  Add protected SetMinMaxStrings method that subclasses can
	use to specify objects, which are converted to strings using GetText and
	then their width retrieved using the Pango.Layout passed to GetWidthRange.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellRating.cs: Set the Xpad
	to 0 - there previously was too much padding on the left/right.  And
	replace GetSize and GetWidthRange.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellCheckBox.cs: Replace
	GetSize with GetWidthRange.

2008-09-18  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Break the column menu into multiple columns so it's easier to read and
	navigate, hopefully avoiding crappy menu scrolling in GTK; make the
	hide menu item have an icon and italicize the column name

2008-09-18  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Widgets/Banshee.Widgets/LinkLabel.cs: Implement
	proper size allocation and requisitioning, read the focus style properties
	from a GtkCheckButton on style set, and properly render the checkbutton
	focus style; fixes spacing/padding/theme issues with focus (was the 
	button style before, at the wrong offset/padding)

2008-09-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	Fix bug with not resetting the SkipTaskBar/Pager properties when the
	fullscreen window is hidden (BGO #546866).

2008-09-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/LargeTrackInfoDisplay.cs:
	Fix System.ArgumentOutOfRangeException (BGO #552820).

2008-09-17  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Removed
	commented out invocation of the old editor

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs:
	Removed the old editor implementation

	* src/Core/Banshee.ThickClient/Resources/banshee-dialogs.glade: Removed
	the old track editor and the obsolete/legacy burner options dialogs

2008-09-17  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Iterate over all ICanUndo's and disconnect/connect the adapters when
	loading new tracks; factored out the ForeachSyncButton methods into
	a generic ForeachWidget method taking a generic closure

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/EditorEntryUndoAdapter.cs:
	Implement a one-to-many adapter for entry undo adapters; this allows entry
	undo adapters to be adapted on a per-track basis to each editor field

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/ICanUndo.cs: 
	Interface for fields that support undo/redo

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/GenreEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TitleEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TextEntry.cs:
	Implement ICanUndo by way of EditorEntryUndoAdapter

	* src/Libraries/Hyena.Gui/Hyena.Gui/EntryUndoAdapter.cs: Added 
	Connect and Disconnect methods so multiple adapters can listen on the
	same widget

2008-09-17  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/FieldPage.cs:
	Set the Changed property on the current track in the Changed event
	
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/EditorTrackInfo.cs:
	Added a Changed property

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Implemented saving finally, it should work. Test it. File bugs. Made the
	message in the confirm cancel dialog slicker by showing the number of
	changed out of the total tracks

2008-09-17  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellDuration.cs:
	Use the new static override in DurationStatusFormatters

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/FieldPage.cs:
	Implement Changed event, raise when fields actually change

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/ITrackEditorPage.cs:
	Add Changed event

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/HelpPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/StatisticsPage.cs:
	Implement Change event, do not raise, because um, nothing is editable here

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Open a confirmation dialog when the user tries to cancel and has made
	changes

	* src/Core/Banshee.Services/Banshee.Sources/DurationStatusFormatters.cs:
	Added a new duration formatter, ApproximateVerboseFormatter and added
	overrides that do not require a StringBuilder

	* src/Core/Banshee.Widgets/Banshee.Widgets/HigMessageDialog.cs: Expose
	MessageLabel so it can be edited after the fact

2008-09-17  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Added logic to make focus and prelight play nice when doing the pulsing

2008-09-16  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theatrics/Pulsator.cs: Added a 
	Stopping property

2008-09-16  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	When the mouse is over the sync all button, tell all the other sync
	buttons to start pulsing

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/SyncButton.cs:
	Extend PulsingButton instead of Button

	* src/Libraries/Hyena.Gui/Hyena.Widgets/PulsingButton.cs: New button that
	pulses, it's hot

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theatrics/Tests/ChoreographerTests.cs:
	Unit tests for the choreographer compositions

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theatrics/Choreographer.cs: Factored
	out the scaling and pixel rounded from the core compose functions into
	separate methods

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theatrics/Pulsator.cs: Small Actor<T>
	wrapper that implements pulsing logic

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedWidget.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedBox.cs: Updated for
	API changes in Choreographer

2008-09-16  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/Models/ListModel.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/Models/FilterableListModel.cs:
	Comment out unused classes; should probably be removed.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapPlaylistSource.cs:
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/MediaGroupSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapSync.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapLibrarySync.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.SmartPlaylist.Gui/Editor.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistFileUtil.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistDefinition.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Update to use new DatabaseSource ctor that takes a PrimarySource, not its DbId.

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	Use new ctor, and explicitly set TrackModel.CanReorder to true.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/PersistentColumnController.cs:
	Persist on a per-source basis the sort column/direction (BGO #524656).

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/BaseTrackListView.cs:
	Set IsEverReordereable to true; but whether the TrackList is actually
	reorderable also depends on the IsReorderable property, which is set
	automatically if the SortColumn's SortType is None (BGO #551969).

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Added logic to ignore Sort requests if we already are sorted by the
	current key/direction.  Also, return true/false based on whether a new
	sort was applied (and therefore the model should be Reloaded).  Move the
	logic that iterates through None/Asc/Desc and that sets the initial
	direction to Asc when sorting by a different column into the ListView.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Rename
	ConfigurationId property to ParentConfigurationId, and add a new
	ConfigurationId property that is actually unique to this source.

	* src/Core/Banshee.Services/Banshee.Sources/ErrorSource.cs:
	* src/Core/Banshee.Services/Banshee.Collection/BansheeListModel.cs:
	* src/Libraries/Hyena/Hyena.Data/IListModel.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListViewTestModule.cs:
	Add CanReorder property.

	* src/Core/Banshee.Services/Banshee.Library/VideoLibrarySource.cs: Remove
	some more columns from the default (music) column list, and set a default
	sort-column.

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/GConfConfigurationClient.cs:
	Replace / chars in the namespace with _ for .-separated keys.

	* src/Libraries/Hyena/Hyena.Data/ISortable.cs: Change Sort to return bool.

	* src/Libraries/Hyena/Hyena.Data/ISortableColumn.cs: Add Id getter.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnController.cs: Add
	SortColumn property, used to get access to the currently-sorted-by column.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_DragAndDrop.cs:
	Replace Reorderable property into IsReorderable and IsEverReorderable,
	both of which must be set to true for the ListView to turn be a drag
	source/drop dest (overridable as before w/ the Force* properties).

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Reorderable renamed to IsReorderable.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Moved the logic for iterating through None/Asc/Desc here from
	DatabaseTrackListModel.cs.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs: When
	setting the ListView's model, update the sort column, since it is
	remembered on a per-source basis now.

2008-09-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/BaseClientWindow.cs: Change the
	ToggleVisibility method to Present the window if the window is minimized,
	hidden in the tray, or simply not the focused window.  Iff it is the
	active window, hide it (BGO #551916).

2008-09-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Allow shrinking selections with the shift-key pressed (BGO #535561).

2008-09-15  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Use the
	new editor, even though I still haven't finished implementing save

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/FieldPage.cs:
	Support setting a tooltip on the sync buttons

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/StatisticsPage.cs:
	Fix a crasher/NRE

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/BasicTrackDetailsPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/ExtraTrackDetailsPage.cs:
	Add tooltips

2008-09-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs: Bring
	back logic that scrolls to the first selected item when the view is
	refreshed unless it's already in the view (BGO #551970).

2008-09-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastSourceContents.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/FilteredListSourceContents.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseFilterListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Banshee.Services/Banshee.Collection/IFilterListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection/FilterListModel.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs: Fix
	issue with the ListViews getting scrolled to the top of the list every
	time you switched sources.

2008-09-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationEditor.cs:
	Apply the translation domain fix here too.

	* src/Core/Banshee.Core/Banshee.I18n/Catalog.cs: Add a note about the
	hardcoded "banshee" for if/when we use this class.

2008-09-15  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/GladeWindow.cs: Set
	the proper translation domain when loading glade XML files (BGO #536268).

2008-09-15  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Beroe/Beroe/IndexerClient.cs: Call ForceShutdown on the
	collection indexer service after 2.5 seconds to kick off anyone that
	did not respect the CleanupAndShutdown signal

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexerService.cs:
	Implemented a ForceShutdown method

2008-09-15  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Beroe/Beroe/RemoteClient.cs: Turn debugging on

	* src/Core/Banshee.Services/Banshee.Collection.Indexer.RemoteHelper/IndexerClient.cs:
	Add debug messages

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexerService.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexer.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexerService.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexer.cs:
	Moved internal interfaces from the DBus interface to the implementations

2008-09-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapContent.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapPropertiesDisplay.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/RoundedFrame.cs: Add protected
	IntPtr ctor to avoid GLib.MissingIntPtrCtorException I don't honestly
	understand (BGO #552169).

2008-09-15  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Beroe/Beroe/IndexerClient.cs: Support a --client option to
	run the fake indexer client

	* src/Clients/Beroe/Beroe/RemoteClient.cs: An example client indexer
	that doesn't really do anything

	* src/Core/Banshee.Services/Banshee.Collection.Indexer.RemoteHelper/IndexerClient.cs:
	First pass at a wrapper implementing the proper logic for interacting
	with the Banshee indexer and respecting the boot sequence and client
	startup hints

2008-09-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	Whitespace.

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/GConfConfigurationClient.cs:
	Replace all whitespace with underscores to prevent an invalid key/crash.

2008-09-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.PlayQueue/Makefile.am:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue.csproj:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueActions.cs:
	Separate out the PlayQueue actions into their own subclass of
	BansheeActionGroup, so they are disposed of properly when the plugin is,
	etc (BGO #552005).  Also, don't show Add to Play Queue action when in the
	play queue iteslf (BGO #551672).

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Check
	whether the action group is already registered before [un]registering.

2008-09-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.RemoteAudio/Banshee.RemoteAudio/RemoteAudioService.cs:
	Avoid NRE when disposing if the network isn't connected.

2008-09-12  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexerService.cs:
	Remove unused variable

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Recommendations/RecommendationService.cs:
	* src/Libraries/Hyena/Hyena.Collections/QueuePipelineElement.cs: Fixes to
	work around compiler bugs in gmcs 1.2.5

2008-09-11  Aaron Bockover  <abock@gnome.org>

	Banshee 1.3.0 Released

2008-09-11  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexerService.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexerService.cs:
	Split HasCollectionChanged method to HasCollectionCountChanged and 
	HasCollectionLastModifiedChanged methods

2008-09-11  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	Implement playlist loading into the FSQ

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistFileUtil.cs:
	Allow playlist importing to work against any PrimarySource

	* configure.ac: Disable the DEVEL_BUILD

2008-09-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* build/m4/banshee/dap-ipod.m4: Bump ipod-sharp to 0.8.1

2008-09-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Add
	Rescan action that triggers rescan of the Music Library folder.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportManager.cs:
	Remove unnecessary DateAdded set.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Add
	FileModifiedStamp and LastSyncedStamp properties.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Services.csproj:
	* src/Core/Banshee.Services/Banshee.Collection/RescanPipeline.cs: New file
	that scans all files in a Library's BaseDirectory, importing new items,
	removing items no longer on disk, and identifying items that were renamed.

	* src/Libraries/Hyena/Hyena.Collections/QueuePipelineElement.cs:
	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs: Factor a
	lot of the counting of the ImportElement up into QueuePipelineElement.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add the LastSynced and FileModified columns.

	* src/Core/Banshee.Core/Banshee.IO.SystemIO/File.cs:
	* src/Core/Banshee.Core/Banshee.IO/File.cs:
	* src/Core/Banshee.Core/Banshee.IO/IFile.cs:
	* src/Backends/Banshee.Unix/Banshee.IO.Unix/File.cs: Add GetModifiedTime
	method.

	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs: Set
	FileModified and LastSynced stamps.

	* src/Libraries/Hyena/Hyena.Collections/QueuePipeline.cs: Make sure no
	elements still have items left to process when considering if the pipeline
	is finished/empty.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Add
	CreateFetchCommand method that returns a HyenaSqliteCommand useful for
	fetching items from a model with a custom condition/limit/order.

2008-09-11  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/AboutDialog.cs: Do
	not display the two version strings if they are the same; Wiki->Website
	string update

	* configure.ac: Bump version to 1.3.0

2008-09-11  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Beroe/Beroe/IndexerClient.cs: Call 
	IndexerService.RegisterCleanupAndShutdown to notify any connected client
	using the indexer that it should release it and let the user use Banshee

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexerService.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexerService.cs:
	Added CleanupAndShutdown event for the DBus interface and a method
	for the client to trigger the raising of the event

	* src/generate-dbus-docs: Stupid script to dump DBus interfaces to an
	HTML blob that I can update on the web site:
	http://banshee-project.org/contribute/write-code/dbus-interfaces/

2008-09-11  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexerService.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexer.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexerService.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexer.cs:
	Use Hyena.Action instead of System.Action

	* src/Libraries/Hyena/Hyena/Delegates.cs: Implement Hyena.Action delegate

2008-09-11  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Halie/Halie/Client.cs: Moved the indexer reboot hint to 
	the booter client

	* src/Clients/Booter/Booter/Entry.cs: Finished implementing the new 
	boot sequence

	* src/Clients/Beroe/Beroe/IndexerClient.cs: DBus fixes

	* src/Core/Banshee.Services/Banshee.ServiceStack/DBusConnection.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/DBusServiceManager.cs:
	Support registering and finding objects on multiple busses without 
	horribly breaking API

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexerService.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexer.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexerService.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/IIndexerClient.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexer.cs:
	Register the indexer stuff on a new bus so it can be activated without
	spawning the thick client: org.bansheeproject.CollectionIndexer

	* configure.ac:
	* data/Makefile.am: 
	* data/org.bansheeproject.CollectionIndexer.service.in: Add the new 
	activatable service

2008-09-11  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Booter: New client to take care of the booting of other
	clients based on the crazy boot sequence logic (to be added)

	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs: Moved
	the non-GUI related boot logic to the new Booter client

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs:
	Call DBusConnection.Connect

	* src/Core/Banshee.Services/Banshee.ServiceStack/DBusConnection.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/DBusServiceManager.cs:
	Refactored slightly to allow for the use of multiple busses
	
	* src/Clients/Halie/Halie/Client.cs:
	* src/Clients/Beroe/Beroe/IndexerClient.cs: Updated to reflect small API
	change in DBusConnection

	* build/build.environment.mk:
	* Banshee.sln:
	* configure.ac: Add Booter

2008-09-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexerService.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexerService.cs:
	Fixed query, implemented Hello
	
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexer.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexer.cs:
	Use the Action delegate

2008-09-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/BaseTrackListView.cs:
	Add UriList as a DragDropSource and handle setting the data when such
	DragDataGet requests come in, meaning DnD to nautilus works again (BGO
	#535128).

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Add a
	debug message.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_DragAndDrop.cs:
	Allow overriding the DnD Drag and SourceEntries.

2008-09-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexerService.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexerService.cs:
	Implemented HasCollectionChanged and a signal for listening to live
	collection changes; these facilities are useful for third parties to
	know whether or not they should actually create a new index

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexer.cs:
	Use LibrarySource, not DatabaseSource

2008-09-10  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Halie/Halie/Client.cs: If an IIndexerClient is located
	on the bus, tell that client to reboot with any command line arguments
	passed, and exit, deferring the invocation

	* src/Clients/Beroe/Beroe/IndexerClient.cs: Made a real client, expose
	as IIndexerClient on DBus, and support booting into a separate Banshee
	process if desired (i.e. someone opens an MP3 file in nautilus while the
	indexer client process is running, this still respects the users action)

	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs: If 
	--indexer is passed, run the Beroe indexer client assembly

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexerService.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexerService.cs:
	Support shutting down

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/IIndexerClient.cs:
	Interface for the indexer client with the RebootWhenFinished method

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexer.cs:
	Print some debugging info, use TrackInfo.ExportVersion

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Added
	ExportVersion field

2008-09-10  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Halie/Halie/Client.cs: Do not present the UI if the 
	indexer argument is passed

	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs: Run
	Beroe if an indexer argument is present and Banshee is not already
	running

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexer.cs:
	Use TrackInfo.ExportVersion in the output

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Added an 
	ExportVersion field

2008-09-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexerService.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexerService.cs:
	Implement GetAvailableExportFields method

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexer.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexer.cs:
	Implement SaveToXml; added SetExportFields; added SaveToXmlFinished event

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Support exporting
	only certain fields; make GetExportableProperties public; since 
	GetExportableProperties is now public, enforce type derivation; do not
	export 0 value fields

2008-09-10  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Patch from Andrés G. Aragoneses to allow emptying the artist and album
	fields (BGO #549414).

2008-09-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtService.cs:
	Patch from Bertrand Lorentz working around crasher caused by brokenness in
	DatabaseConfigurationClient with respect to dates (BGO #538354).

2008-09-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlists.Formats/PlaylistParser.cs:
	Patch from Eric Butler, fixed up HACKING-wise by myself, adding support
	for HTTP auth in URLs for Internet Radio stations (BGO #548044).

2008-09-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Resources/contributors.xml: Add David.

2008-09-09  Gabriel Burt  <gabriel.burt@gmail.com>

	Patch from David Spreen adding cover art support to Mass Storage DAPs.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Add .is_audio_player options CoverArtSize, CoverArtFileName and CoverArtFileType 
	where a size of -1 means disabled, 0 means 'just use the current size of specific 
	cover' and x > 0 means resize cover to x by x pixels.
	Add code to transfer cover to mass storage device art in accordance with those 
	values to AddTrackToDevice method.

	* src/Core/Banshee.Services/Banshee.Hardware/IDeviceMediaCapabilities.cs:
	Add CoverArtSize, CoverArtFileName and CoverArtFileType to IDeviceMediaCapabilities.

	* src/Backends/Banshee.Hal/Banshee.HalBackend/DeviceMediaCapabilities.cs:
	Add CoverArtSize, CoverArtFileName and CoverArtFileType to HAL backend.

2008-09-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs: 
	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Fix bug with
	improperly getting the Uri of some tracks when fetching cover art (BGO
	#546234).

2008-09-09  Aaron Bockover  <abock@gnome.org>

	This commit implements the first pass at providing a mechanism for
	third party applications to query and index Banshee's collection in
	a safe way - both in process and over DBus. This is for you, GNOME Do.
	Still incomplete, but soon to be there. Lots already working. Yay.

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexerService.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexerService.cs:
	Factory service for creating indexers; accessible internally or over DBus

	* src/Core/Banshee.Services/Banshee.Collection.Indexer/ICollectionIndexer.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Indexer/CollectionIndexer.cs:
	Collection indexer implementation; allows snapshotting a track model
	and iterating over it to request tracks internally or over DBus; will
	be the object for third party applications to use to query/index Banshee's
	collection (GNOME Do, Beagle, Tangerine...)

	* src/Clients/Beroe/Beroe/Client.cs: A small standalone client that 
	boots only enough services to run the collection indexer service so
	applications can read the collection even if Banshee may not already 
	be running
	
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Finish
	implementing the exportable reflector, cache reflection results for faster
	subsequent exports; support property aggregation and set linking through
	the type hirearchy so all properties marked as exportable are handled
	regardless of the defining type; used for exporting/serializing objects
	over DBus and for merging different track objects (track editor)
	
	* src/Core/Banshee.Services/Banshee.Sources/ITrackModelSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs:
	Implement/Added ITrackModelSource.Indexable property

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Split the service manager initialization/registration chunks into separate
	methods so clients can have more control over which services they will
	depend on
	
	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs:
	Call the new startup methods on the service manager in a new Initialize
	method that clients can use

	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs: Call
	Application.Initialize

	* src/Core/Banshee.Services/Banshee.ServiceStack/DBusConnection.cs:
	Added GLib mainloop support for clients that may strictly do DBus (Beroe)

	* src/Core/Banshee.Services/Banshee.ServiceStack/DBusServiceManager.cs:
	Implemented object unregistering

	* src/Core/Banshee.Services/Banshee.Collection.Database/CachedList.cs:
	Implement a method to snapshot the origin model into a cache model
	
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Made UnfilteredQuery property public

	* src/Core/Banshee.Core/Banshee.Configuration/MemoryConfigurationClient.cs:
	Implemented a configuration client that stores everything to memory
	and does not persist

	* src/Core/Banshee.Services/Banshee.Configuration/DatabaseConfigurationClient.cs:
	Small fixes/optimization

	* src/Core/Banshee.Core/Banshee.Configuration/ConfigurationClient.cs:
	Make MemoryConfigurationClient the default client if Mono.Addins is
	not initialized, otherwise clients are loaded from extensions, and 
	the XmlConfigurationClient is the fallback	

	* src/Libraries/Hyena/Hyena/Timer.cs: Output the timer to stderr

	* src/Libraries/Hyena/Hyena.Query/QueryOrder.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs:
	* src/Libraries/Migo/Migo.Syndication/Feed.cs:
	* build/build.rules.mk: Build fixes for gmcs 2.0

2008-09-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	Don't set the active source to the FSQ until it's done importing and
	actually imported something.  Prevents it from popping up when OPML files
	are passed in.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Fix copyright header, handle OPML files passed in on the command line (or
	by Firefox from the Miro Guide, say).

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/DefaultApplicationHelper.cs:
	Refactor a bit.

	* src/Libraries/Migo/Migo.Syndication/OpmlParser.cs: Patch from Brandan
	Lloyd, cleaned up and modified slightly by me, for actually parsing feed
	URLs out of OPML files.

	* data/banshee-1.desktop.in.in:
	* data/mimetypes.txt: Add x-miro/x-democracy mimetypes.

2008-09-09  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Fix a crash after executing "banshee-1 --stop" (BGO #550777).

2008-09-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs: When the
	client is started and if appropriate, pop up a dialog asking if the user
	wants to set Banshee as the default media player.

	* src/Core/Banshee.ThickClient/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.ThickClient.csproj:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/DefaultApplicationHelperDialog.cs:
	New dialog asking the user if they want to set Banshee as the default, and
	with a checkbox to remember the decision.

	* src/Core/Banshee.Services/Banshee.Services.addin.xml: Add extension
	point for DefaultApplicationHelpers.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Services.csproj:
	* src/Core/Banshee.Services/Banshee.Configuration/DefaultApplicationHelper.cs:
	New static class that loads DefaultApplicationHelper backends (only one
	for GNOME exists atm), provides a simple API, and contains the
	SchemaEntrys for remembering the users previous choice in the matter.

	* src/Core/Banshee.Widgets/Banshee.Widgets/HigMessageDialog.cs: Add
	a convenience method for adding a custom Button.

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/GConfConfigurationClient.cs:
	Handle the namespace already being absolute (starting in '/') by not
	prepending it with /app/banshee-1/.

	* src/Backends/Banshee.Gnome/Banshee.Gnome.addin.xml:
	* src/Backends/Banshee.Gnome/Banshee.Gnome.csproj:
	* src/Backends/Banshee.Gnome/Makefile.am:
	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/DefaultApplicationHelper.cs:
	GNOME specific backend to the DefaultApplicationHelper extension point.
	Sets Banshee as the default handler for several uri schems, for audio
	devices, cds, and media in general.

2008-09-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* data/banshee-1.desktop.in.in: Patch from Pacho Ramos removing deprecated
	Encoding field and Application category (BGO #550449).

2008-09-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Widgets/ImageButton.cs: Fill and expand
	the label so that it's centered (BGO #551436).

2008-09-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: Fix threading
	issues with syncing playlists on eject/dispose.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Fix typo in comment

2008-09-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Don't add duplicate tracks
	to devices.

	* src/Libraries/Mtp/Mtp/AbstractTrackList.cs: Remove random WriteLine.

2008-09-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastActions.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastSource.cs:
	Set the PlayCount of items to zero when marked new and 1 when marked read,
	and add PlayCount = 0 as a SyncCondition so that only new items are synced.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Call SyncPlaylists when
	ejecting and Sync not enabled, because while tracks are transferred
	immeidately when you DnD them etc, playlists aren't saved.

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapContent.cs: Remove the testing
	status label and hrule.

2008-09-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Networking/Network.cs: Have the
	disable-network-features preference take effect immediately.

2008-09-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapSync.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Fix things up so that when Sync is enabled for a device the user cannot
	DnD tracks or sources onto it, can't create playlists, can't modify
	playlists on the device, etc.

2008-09-08  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlists.Formats/AsxPlaylistFormat.cs:
	http URLs in ASX files are in fact mmsh URLs. Patch by Félix Velasco with
	a suggestion from Gabriel (BGO #545646).

2008-09-08  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs: Fix a crash
	triggered by DAAP errors (BGO #549192).

2008-09-08  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	Handle relative paths as parameters on the command line (BGO #537600).

2008-09-08  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Fix
	an incorrect condition, so that DelayedInitialize is called on extensions
	that are enabled through the banshee UI (BGO #550555).

2008-09-08  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Backends/Banshee.NowPlaying.X11/libbnpx11/Makefile.am:
	* libbanshee/Makefile.am:
	* build/build.rules.mk: Some build fixes to allow parallel build with
	"make -j2" (BGO #546944).

2008-09-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Create GUI objects on the
	GUI thread.

	* src/Dap/Banshee.Dap/Makefile.am:
	* src/Dap/Banshee.Dap/Resources/ActiveSourceUI.xml:
	* src/Dap/Banshee.Dap/Resources/GlobalUI.xml: Move the Sync context menu
	item to GlobalUI.

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapContent.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapActions.cs: Make the DapActions
	static and work for multiple DapSources, including updating properly when
	right-clicked on even if not the ActiveSource.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Add an event
	for when we update the actions, so that other action groups or code that
	needs to update them for right-click context menus can easily do that.

2008-09-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Muinshee/Resources/GlobalUI.xml:
	* src/Clients/Muinshee/Muinshee/PlayerInterface.cs: Add the Play
	Song/Album items to the Media menu, and add the AccelGroup to the main
	window so that s and a (and other accels) work.

2008-09-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/PersistentWindowController.cs:
	Don't set the events mask for the controlled window to all - not needed.

2008-09-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/PersistentWindowController.cs:
	Fix NRE (BGO #550918).

2008-09-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Add a
	StorageName property that defaults to 'Drive', and is used for the
	DeleteFromDrive action's label.

	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs: When the Name
	property is set, set the StorageName too, so that the DeleteFromDrive
	action's label is still 'Delete From iPod' etc.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Clarify a couple error
	messages.

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Don't
	inherit action Label and IconName overrides from sources' parents since
	that can lead to strange things.  Fixes bug with the UnmapSourceAction's
	IconName being the eject icon for playlists under DapSources (BGO #549183)

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Use the
	StorageName property on the PrimarySource to set the DeleteFromDrive
	label.

2008-09-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTile.cs: Fix NRE
	in icon code (BGO #551302).

2008-09-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Fix deadlock hang
	triggered by Last.fm (BGO #551175).

2008-09-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Fix from Bertrand Lorentz (also applied to new FirstIndexOf method by me)
	fixing race condition that caused the Next button to not work half the
	time when you had a filter active (BGO #544415).

2008-09-06  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit adds playlist support to USB Mass Storage players, and fixes a
	bug that causes very slow initial loading of their tracks.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastFeedModel.cs:
	Fix model so that it's filtered by the filters before it.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Add playlist support, respecting the HAL
	portable_audio_player.playlist_format and playlist_path keys.

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Add helper
	AddYesNoDapProperty method and use it.

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Call OnTracksAdded
	manually after loading the tracks off the device.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSync.cs: Don't reload the models when
	the dap isn't yet loaded, or when we're syncing.

	* src/Core/Banshee.Services/Banshee.Playlists.Formats/PlaylistFormatDescription.cs:
	* src/Core/Banshee.Services/Banshee.Playlists.Formats/M3uPlaylistFormat.cs:
	* src/Core/Banshee.Services/Banshee.Playlists.Formats/AsxPlaylistFormat.cs:
	* src/Core/Banshee.Services/Banshee.Playlists.Formats/PlsPlaylistFormat.cs:
	Add a MimeType property to the description objects.

	* src/Core/Banshee.Services/Banshee.Playlists.Formats/PlaylistFormatBase.cs:
	In the BaseUri setter, make sure it ends with a directory separator char,
	and if not, fix it.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistFileUtil.cs: Add a
	new Load method, factored out from the ImportPlaylist method.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportManager.cs:
	ImportFinished renamed to Finished because uses the QueuePipeline event
	now. Allow setting the BaseUri in the Load/Import methods.

	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs: Fix
	painful bug caused by the pipelining of the importer.  The track
	processing element would sometimes (often) have zero items left when the
	scanning element was still working, but we were raising ImportFinished
	when that happened, instead of waiting for all elements in the pipeline to
	be finished (BGO #548254).

	* src/Libraries/Hyena/Hyena.Collections/QueuePipelineElement.cs: Add a
	Finished event.

	* src/Libraries/Hyena/Hyena.Collections/QueuePipeline.cs: Add a finished
	event, raised when all elements in the pipeline are finished.

2008-09-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/DownloadManager/DownloadUserJob.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/DownloadManager/DownloadManagerInterface.cs:
	Slightly more useful job status, shows how many total downloads in the job

	* src/Libraries/Mtp/Mtp/Track.cs: Hack around .m4v issue.

	* build/m4/banshee/dap-mtp.m4:
	* NEWS: Don't allow libmtp8 for now, and clarify how packages need to
	require libmtp (to ensure users have the same version the package was
	compiled against).

2008-09-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: Create a
	HyenaSqliteCommand to reuse for adding tracks to playlists - should be
	faster.

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Load and save
	playlists on MTP devices.

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpTrackInfo.cs: Save the
	Mtp.Track's ID in the ExternalID column, cleanup cruft.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapLibrarySync.cs: Don't add empty
	playlists to devices.

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Fix
	gui-thread issue.

	* src/Libraries/Mtp/Mtp/Folder.cs: Override ToString for debugging.

	* src/Libraries/Mtp/Mtp/Album.cs: Factor a lot of code that's useful for
	the Playlist class into AbstractTrackList, subclass from it.

	* src/Libraries/Mtp/Makefile.am:
	* src/Libraries/Mtp/Mtp/AbstractTrackList.cs: Factored out code from Album

	* src/Libraries/Mtp/Mtp/MtpDevice.cs: Add GetPlaylists () method.

	* src/Libraries/Mtp/Mtp/Playlist.cs: Subclass from AbstractTrackList,
	implement required methods, add to build.

2008-09-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Make UpdateUnfilteredAggregates public so we can get an accurate count
	without doing a full reload.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Support
	getting an accurate count before having reloaded the track model via a new
	UpdateCounts method.

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: Handle loading
	playlists when the device is plugged in, and syncing them.  Podcast
	playlists are still TODO - will require changes to ipod-sharp.

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodTrackInfo.cs: Do a better,
	more complete job of syncing metadata between TrackInfos and IPod.Track.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSync.cs: Call SyncPlaylists on the
	dap source when syncing.  Not a great API, but needed atm at least to tell
	the iPod support it needs to save the playlists even if (possibly) zero
	tracks were added/removed.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Remove playlists too when
	removing smart playlists.  Remove warning about playlists.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapLibrarySync.cs: Handle syncing all
	playlists from a library to the device.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Fix bug
	where we listened for TracksChanged etc events on our PrimarySource even
	before we were saved/had an id (BGO #550921).

	* src/Core/Banshee.Core/Banshee.Collection/TrackMediaAttributes.cs: Add
	comments.

2008-09-04  Brad Taylor  <brad@getcoded.net>

	* src/Core/Banshee.ThickClient/Banshee.Gui/InterfaceActionService.cs:
	Fix the build under Mono 1.2.6.  For some reason, it doesn't like the
	anonymous delegate that was here.

2008-09-04  Aaron Bockover  <abock@gnome.org>

	* *.csproj: fixups

	* src/Clients/Beroe: Stubbed new indexer client

2008-09-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Correct
	logged comment, and fix bug I just introduced with remember the expansion
	state of primary sources.

2008-09-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Metadata.Embedded/EmbeddedQueryJob.cs:
	* src/Core/Banshee.Services/Banshee.Metadata.FileSystem/FileSystemQueryJob.cs:
	Handle more gracefully the case that the directory or file is missing.

2008-09-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtService.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Recommendations/RecommendationService.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastActions.cs:
	* src/Extensions/Banshee.MiniMode/Banshee.MiniMode/SourceModel.cs:
	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapContainerSource.cs:
	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSource.cs:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapContent.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapActions.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapInfoBar.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/InterfaceActionService.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Library.Gui/ImportDialog.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTile.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceModel.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/FilteredListSourceContents.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceComboBox.cs:
	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/Brasero.cs: Use
	ThreadAssist.ProxyToMain to ensure GUI actions happen on the main thread.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	Get rid of virtual TypeUniqueId property, replace with protected setter.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastSource.cs:
	Use the TypeUniqueId setter, and define SyncCondition and MediaType
	properties.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackInfo.cs:
	Set the Podcast MediaType flag after loading the track info from file (if
	downloaded) to ensure it doesn't get unset.

	* src/Dap/Banshee.Dap.Mtp/Makefile.am:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/Tests/MtpDapTests.cs: Tests for
	converting from TrackInfo to Mtp.Track and back.

	* tests/Makefile.am: Add Banshee.Dap.Mtp to list of assemblies to test.

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Be more careful
	about threading, add a GetFolderForTrack method to support Podcasts, and
	move the TrackInfo/Mtp.Track conversion into MtpTrackInfo.

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpTrackInfo.cs: Try harder to
	set the MediaAttributes, and add an internal method for converting from
	TrackInfo to Mtp.Track.

	* src/Dap/Banshee.Dap/Makefile.am:
	* src/Dap/Banshee.Dap/Banshee.Dap/PodcastGroupSource.cs: New child of
	DAPs.

	* src/Dap/Banshee.Dap/Banshee.Dap/VideoGroupSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/MusicGroupSource.cs: Set the condition
	based on the Music/VideoLibrary's AttributesCondition.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSync.cs: Implement IDisposable, fix
	up preferences, listen for libraries to change and auto-sync if
	appropriate, move the to_remove list into each DapLibrarySync so they
	don't clobber other libraries' items.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Add PodcastGroupSource,
	use new TypeUniqueId setter, and auto-sync when plugged in if appropriate.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapLibrarySync.cs: Add to_remove smart
	playlist, and actually implement deleting the tracks from the DAP and
	adding the new ones.

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/WidgetFactory.cs:
	If the ShowDescription property of the pref is true, then pack the widget
	into a VBox and put the description in a label below it.

	* src/Core/Banshee.ThickClient/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.MediaProfiles.Gui/ProfileComboBoxConfigurable.cs:
	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/DescriptionLabel.cs:
	New class that shows text formatted and can be updated via a delegate,
	factored out from code in ProfileComboBoxConfigurable.

	* src/Core/Banshee.Services/Banshee.MediaProfiles/MediaProfileManager.cs:
	Add new GetProfileForExtension helper method.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Lazily initialize the provider.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Prevent NRE and handle empty strings in the AddCondition method.

	* src/Core/Banshee.Services/Banshee.Preferences/Root.cs:
	* src/Core/Banshee.Services/Banshee.Preferences/Collection.cs: Override
	Sensitive and Visible setters, setting the value for each child.

	* src/Core/Banshee.Services/Banshee.Preferences/SchemaPreference.cs:
	* src/Core/Banshee.Services/Banshee.Preferences/Preference.cs: Raise
	ValueChanged event when the value is changed.

	* src/Core/Banshee.Services/Banshee.Preferences/Section.cs: Return the
	SchemaPreference<T> object created in the Add (SchemaEntry<T>) helper.

	* src/Core/Banshee.Services/Banshee.Preferences/PreferenceBase.cs: Add
	ShowDescription property, and ValueChanged event.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Use the new
	TypeUniqueId setter, and fix how DbId and AfterInitialize etc are called.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Add
	DeleteAllTracks method, refactor creation of expanded_schema, and
	ProxyToMain OnTracksAdded etc calls.

	* src/Core/Banshee.Services/Banshee.Sources/ErrorSource.cs: Use new
	TypeUniqueId setter and ProxyToMain for OnCleared and OnReloaded methods.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Set the Podcast MediaAttribute on all items in the Podcast primary source,
	since we had that bug in PodcastTrackInfo that's now fixed.

	* src/Core/Banshee.Services/Banshee.Library/LibraryLocationPreference.cs:
	Raise ValueChanged where appropriate.

	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs: Add
	SyncCondition, AttributesCondition, MediaTypes, and NotMediaTypes
	properties.

	* src/Core/Banshee.Services/Banshee.Library/VideoLibrarySource.cs:
	* src/Core/Banshee.Services/Banshee.Library/MusicLibrarySource.cs: Set
	MediaTypes and NotMediaTypes to filter on audio/video/podcasts as
	appropriate.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	New AddCondition method for restricting a SmartPlaylist beyond the
	ConditionTree.

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Rename IsMedia to
	HasAttribute, and add SetAttributeIf (bool, attr) helper.

	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs: Only add new
	attributes in FindTrackMediaAttributes, don't remove current ones.

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/GConfConfigurationClient.cs:
	Handle null keys.

	* src/Libraries/Mtp/Mtp/MtpDevice.cs: Make sure the folder is set, falling
	back to the MusicFolder if it's not.

	* src/Libraries/Mtp/Mtp/Track.cs: Add a Year helper property that sets the
	ReleaseDate appropriately, and add InFolder method.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Fix bug
	where VirtualColumns (values from tables other than the primary one)
	caused the join-condition with their table to be duplicated.

	* Makefile.am: Add make mdb helper, though I haven't really gotten it to
	work great yet.

2008-09-04  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Libraries/Lastfm/Lastfm.Data/LastfmData.cs: Patch from Iain Lane to
	not validate characters in XML returned from Last.fm. The Last.fm API 
	accepts (and returns) invalid characters sent to it (BGO #538206).

2008-09-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastSourceContents.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/DownloadStatusFilterView.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellDownloadStatus.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastSource.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/DownloadStatusFilterModel.cs:
	* src/Extensions/Banshee.Podcasting/Makefile.am:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.csproj: Add another
	filter for episode downloaded status.

2008-09-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Add more
	properties that show up in the properties dialog.

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp.csproj: Reference Mtp.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSync.cs: Fix typo.

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapContent.cs: Subclass from
	DapPropertiesDiaplay and pack in the LargeIcon.

2008-09-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: Add a bunch of
	properties (model, color, firmware, etc) to the properties dialog.  When
	loading tracks, don't fail entirely if there is an exception on one.
	Improve how/when the name is retrieved off the device, and set as
	Activatable so the new Sync UI is visible.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Don't automatically save in the PlaybackError setter (BGO #539696).

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Add a
	SavePlaybackError method that sets it and then saves it.

	* src/Core/Banshee.Services/Banshee.Streaming/RadioTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs: Use
	the new SavePlaybackError method.

	* configure.ac: Remove remote audio/moonlight from the echo since they're
	not yet finished/usable.

2008-09-03  Aaron Bockover  <abock@gnome.org>

	* libbanshee/banshee-player-pipeline.c: Disabled the visualization 
	pipeline for now since it's a huge CPU hog

2008-09-03  Aaron Bockover  <abock@gnome.org>

	Converted project infrastructure from MonoDevelop 1.0 format (mds/mdp) to 
	VisualStudio 2005 format (sln/csproj) to help in getting the managed
	code to build in Windows

2008-09-03  Gabriel Burt  <gabriel.burt@gmail.com>

	Merged branches/banshee/gburt/ -r4443:4452 to trunk (muinshee, working
	well but no easy way for end users to run it other than cli).

2008-09-03  Aaron Bockover  <abock@gnome.org>

	Merged branches/banshee/abock/@4403 to trunk (the hot new track editor,
	but it's still not complete and is disabled by default right now)

2008-09-02  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/GtkTheme.cs: Change
	GetCairoTextMidColor to use AlphaBlend function (BGO #544840)

	* src/Libraries/Hyena.Gui/Hyena.Gui/CairoExtensions.cs: Implemented simple
	color alpha blending utility [P=(1-a)P_0 + aP_1]

	* src/Libraries/Hyena.Gui/Hyena.Gui/Contrast.cs: Add some color contrast
	utilities, copied from Tomboy and modified to work with Cairo colors

2008-08-30  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Resources/contributors.xml: Added his highness, Brad
	
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/LargeTrackInfoDisplay.cs:
	Increase spacing to 30px

2008-08-28  Brad Taylor  <brad@getcoded.net>

	* src/Extensions/Banshee.RemoteAudio/Resources:
	* src/Extensions/Banshee.RemoteAudio/Resources/GlobalUI.xml:
	* src/Extensions/Banshee.RemoteAudio/Banshee.RemoteAudio.addin.xml:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	* src/Extensions/Banshee.RemoteAudio/Banshee.RemoteAudio/RemoteAudioActions.cs:
	* src/Extensions/Banshee.RemoteAudio/Banshee.RemoteAudio/RemoteSpeakersComboBox.cs:
	* src/Extensions/Banshee.RemoteAudio/Banshee.RemoteAudio/RemoteSpeakersWidget.cs:
	Add UI to select a remote speaker.

	* src/Extensions/Banshee.RemoteAudio/Banshee.RemoteAudio/RemoteAudioService.cs:
	Thread safety and add debugging information.

	* src/Extensions/Banshee.RemoteAudio/Banshee.RemoteAudio/RemoteSpeaker.cs:
	Add a Name property that will hold the fuzzy name of the device.

	* src/Core/Banshee.Widgets/Banshee.Widgets/DictionaryComboBox.cs: Add a
	  clear method, and handle setting ActiveValue to null to deselect.

2008-08-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Muinshee/Resources/GlobalUI.xml: Add missing file.

2008-08-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Clients/Muinshee/Muinshee/PlayerInterface.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/BaseClientWindow.cs: Move a lot
	of method up to BaseClientWindow from Nereid's PlayerInterface so can be
	used by Muinshee too.

	* src/Clients/Muinshee/Makefile.am:
	* src/Clients/Muinshee/Muinshee.mdp: Add and remove files.

	* src/Clients/Nereid/Nereid/Client.cs:
	* src/Clients/Muinshee/Muinshee/Client.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs: Factor our a
	lot of common functionality into the parent class.

	* src/Clients/Muinshee/Muinshee/ViewContainer.cs: Deleted

	* src/Clients/Muinshee/Muinshee/MuinsheeActions.cs: Set disc icon on Play
	Album action, and launch the Dialogs when the actions are activated.

	* src/Clients/Muinshee/Muinshee/MuinsheeTrackInfoDisplay.cs:

	* src/Clients/Muinshee/Muinshee/AlbumDialog.cs:
	* src/Clients/Muinshee/Muinshee/SongDialog.cs:
	* src/Clients/Muinshee/Muinshee/BaseDialog.cs: Split dialog classes out,
	and implement query, queue, and play functionality.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellTrack.cs:
	Implement ITextCell.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/BaseTrackListView.cs:
	Factored out from TrackListView.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Inherit from BaseTrackListview.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TerseTrackListView.cs:
	Inherit from BaseTrackListview, getting us lots of goodies - DnD, context
	menu, o-to-play, and double-click to play.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackFilterListView.cs:
	Hide the header, and move RowActivated handler to virtual method.

	* src/Core/Banshee.ThickClient/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.ThickClient.mdp: Add new files.

	* src/Core/Banshee.ThickClient/Banshee.Gui/PersistentWindowController.cs:
	New class that can save and restore the size and/or position of a
	Gtk.Window.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Lazily load the missing pixbufs.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/BansheeDialog.cs: Add
	another convenience override.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumListModel.cs:
	Whitespace.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Add nifty IndexOfFirst (TrackInfo) class that uses the super-powers of
	MetadataHash.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Make the
	CurrentStatusFormat public.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ITextCell.cs: New inteface that
	has a FontWeight property.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Implement
	ITextCell.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Instead of checking for ColumnCellText objects and setting their weight,
	do the same for all ITextCell instances.

	* src/Libraries/Hyena.Gui/Hyena.Gui.mdp:
	* src/Libraries/Hyena.Gui/Makefile.am:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/ImageButton.cs: New convenience
	class for a Button that has an image and a label in it.

	* build/build.environment.mk: Add vars to enable linking against the
	PlayQueue.

	* Makefile.am: Temporarily start Banshee with the Muine client.  This
	needs to be reworked so that the previously used client is automatically
	used.

2008-08-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Fix bug
	by ensuring we get the UI resource file from the calling assembly.

2008-08-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Add
	Register and UnRegister methods that Add/Remove the ActionGroup from the
	InterfaceActionService.

2008-08-27  Brad Taylor  <brad@getcoded.net>

	* configure.ac:
	* build/build.environment.mk:
	* src/Extensions/Makefile.am:
	* build/m4/banshee/remote-audio.m4:
	* src/Extensions/Banshee.RemoteAudio/: Begin support for Remote Audio (aka
	  AirTunes).

2008-08-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Widgets/Banshee.Widgets/RatingActionProxy.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/CustomActionProxy.cs: Make work
	with Toolbars as well, so we can have custom toolbar widgets connected to
	Gtk.Actions.

2008-08-26  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Services.addins: Tell Mono.Addins
	to look in /tmp/banshee-addins-dev for extensions; developers who wish
	to run external extensions they are developing should copy their extensions
	here, run banshee

2008-08-26  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Fix the assembly versioning to eliminate the build 
	revision so MD doesn't go apeshit. Awesome. (BNC #352440, not fixed)

	* src/Core/Banshee.Core/Banshee.IO/StreamAssist.cs: Provide some overrides
	to avoid closing streams when writing if desired

	* src/Core/Banshee.Services/Banshee.Web/HttpRequest.cs: A reusable
	HttpRequest object that makes fetching streams and making requests easier
	and more unified and consistent for Banshee; probably not complete and
	not used anywhere yet

	* src/Core/Banshee.Core/Resources/translators.xml: Updated

2008-08-26  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Muinshee/Makefile.am:
	* src/Clients/Muinshee/Muinshee.mdp:
	* src/Clients/Muinshee/Muinshee/MuinsheeActions.cs: New file adding
	Muinshee's Gtk.Actions and UIManager XML.

	* src/Clients/Muinshee/Muinshee/PlayerInterface.cs: Instantiate and
	dispose the MuinsheeActions.

	* src/Clients/Muinshee/Muinshee/Client.cs: Change client's name.

2008-08-26  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Clients.mds:
	* src/Clients/Makefile.am:
	* src/Clients/Muinshee/Makefile.am:
	* src/Clients/Muinshee/Muinshee.mdp:
	* src/Clients/Muinshee/Muinshee/PlayerInterface.cs:
	* src/Clients/Muinshee/Muinshee/ViewContainer.cs:
	* src/Clients/Muinshee/Muinshee/Client.cs:
	* configure.ac: Groundwork for a new client: Muinshee

2008-08-25  Aaron Bockover  <abock@gnome.org>

	* build/pkg-config/Makefile.am:
	* build/pkg-config/*.pc.in: Use @libdir@ to make sure the .pc file 
	work on 64 bit (lib64)

	* configure.ac: Bump version

2008-08-24  Aaron Bockover  <abock@gnome.org>

	Phase 1 of Hackweek: wrote JSON tokenizer and parser/deserializer and 
	lots of unit tests. It covers 100% of the 'spec' at json.org, implemented
	from reading the grammar images published there.

	* src/Libraries/Hyena/Hyena.Json/Tokenizer.cs: Lex JSON according to
	the spec on json.org, transform to stream of tokens

	* src/Libraries/Hyena/Hyena.Json/Deserializer.cs: Parser built on top
	of the tokenizer that constructs the JSON objects from the token stream
	
	* src/Libraries/Hyena/Hyena.Json/IJsonCollection.cs: Collection interface
	providing Dump methods

	* src/Libraries/Hyena/Hyena.Json/JsonArray.cs:
	* src/Libraries/Hyena/Hyena.Json/JsonObject.cs: The two collection 
	objects in JSON, derived from List and Dictionary respectively

	* src/Libraries/Hyena/Hyena.Json/Token.cs:
	* src/Libraries/Hyena/Hyena.Json/TokenType.cs: Token class and type flags

	* src/Libraries/Hyena/Hyena.Json/Tests/DeserializerTests.cs:
	* src/Libraries/Hyena/Hyena.Json/Tests/TokenizerTests.cs: Unit tests for
	the tokenizer and deserializer

2008-08-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Resources/ActiveSourceUI.xml: Put
	'Mark New' above 'Mark Old'.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs:
	Add Album Artist, Comment, Track Count, Disc Count, Bpm, BitRate,
	Conductor, and Grouping column.

	* src/Core/Banshee.ThickClient/Banshee.Gui/InterfaceActionService.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Add
	helpers for adding/removing UIManager elements.

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Add
	AlbumArtist, Disc Count, TrackCount, Bpm, BitRate, Conductor, and Gruping
	query fields and sorting.  Add TrackNumber, which previously was defined
	as a query field but not in the default FieldSet.

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Don't increment the play/skip count if the file had an error.

2008-08-22  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Makefile.am:
	* src/Dap/Banshee.Dap/Banshee.Dap.mdp: Add new files.

	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs: Use the Name not the
	GenericName in the unmap and delete tracks action labels.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapLibrarySync.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapSync.cs: Use Banshee.Preferences.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Use Banshee.Preferences,
	expose DapSync object, set a Nereid.SourceContents override (and make
	activatable), and override Count to 0 so it doesn't show next to the main
	dap source.

	* src/Dap/Banshee.Dap/Resources/ActiveSourceUI.xml: Add eject and sync to
	the toolbar, and sync to the source context menu.

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapContent.cs: New class, completely
	unfinished, displays the preferences for syncing etc.

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapActions.cs: Add and handle a
	Synchronize action.

	* src/Core/Banshee.ThickClient/Banshee.Gui/InterfaceActionService.cs: Add
	and check a source property for the assembly the ActiveSourceUIResource
	file is located in.

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Make all
	actions important by default, but add protected property to use old
	behavior.  Add another override to UpdateAction.

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Set the
	default to not be all actions important.

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/WidgetFactory.cs:
	Listen for the preference's Changed event to update visible/sensitive.

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Add a
	placeholder in the removable source context menu.

	* src/Core/Banshee.Services/Banshee.Preferences/Root.cs: Add a Changed
	event and fire it when sensitive/visible change.

	* src/Core/Banshee.Services/Banshee.Preferences/Section.cs: Add
	convenience Add override that takes a SchemaEntry and creates a
	SchemaPreference automatically from its Short and LongDescription.

2008-08-22  James Willcox  <snorp@novell.com>

	* src/Extensions/Banshee.Lastfm/Resources/lastfm.glade:

	Make the entry activate the default action.

2008-08-22  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Fix a crash 
	caused by the DiscNumber property name change (BGO #548975).

2008-08-21  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Makefile.am:
	* src/Dap/Banshee.Dap/Banshee.Dap.mdp: Add new files.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSync.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapLibrarySync.cs: New classes that
	contain all the logic for syncing a DAP to the libraries.  Use smart
	playlists to represent the 

	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs: Add a virtual
	BytesAvailable property.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Remove temporary sync code
	I recently committed, add a schema pref for space_for_data and respect it
	when transferring files, override the BytesAvailable to subtract out the
	bytes reserved for data.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Move the
	MetadataHash property to TrackInfo.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Add an IsTemporary property, and delete temporary playlists from the
	database on startup.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Add another
	CreateSchema override that takes a namespace.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add IsTemporary columns to CorePlaylists/SmartPlaylists/PrimarySources.

	* src/Core/Banshee.Core/Resources/contributors.xml: Add Andrew Conkling -
	he has done so much work for so long in Bugzilla, should have been listed
	here long ago.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Fix
	small bug in HyenaDataReader in how/when it calls .Read on the underlying
	IDataReader.

	* build/m4/banshee/taglib.m4: Require 2.0.3 since that's when
	IsCompilation was introduced.

2008-08-21  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Networking/Network.cs: Turned into
	a real service and support overriding the connection status to support
	an offline mode, configurable in preferences
	
	* src/Core/Banshee.Services/Banshee.ServiceStack/IRegisterOnDemandService.cs
	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Added support for services to be registered when they are first requested
	
	* src/Core/Banshee.Services/Banshee.Equalizer/EqualizerSetting.cs:
	Use the player_engine namespace like the rest of the engine settings

	* src/Core/Banshee.Services/Banshee.Preferences/Page.cs: 
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	Added a misc section to the general prefs section; put replaygain there;
	not happy with this but it'll have to work for now

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtService.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastImageFetchJob.cs:
	* src/Core/Banshee.Services/Banshee.Metadata/MetadataServiceJob.cs:
	* src/Core/Banshee.Services/Banshee.Metadata.LastFM/LastFMQueryJob.cs:
	* src/Core/Banshee.Services/Banshee.Metadata.Rhapsody/RhapsodyQueryJob.cs:
	* src/Core/Banshee.Services/Banshee.Metadata.MusicBrainz/MusicBrainzQueryJob.cs:
	Updated to use the slightly changed network service API

2008-08-21  Sandy Armstrong  <sanfordarmstrong@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkManager.cs:
	Don't try to to scale cover art if the size specified is <= 1.  Fixes
	hangs described in BGO #548300.

2008-08-20  Aaron Bockover  <abock@gnome.org>

	Committed a revised/reorganized version of Chris Howie's <cdhowie@gmail.com>
	visualization support patch (BGO #529479); this does not actually implement
	visualization, but adds support for extensions to do so by harvesting
	spectrum data that is now readily available.

	* src/Core/Banshee.Services/Banshee.MediaEngine/IVisualizationDataSource.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/VisualizationDataCallback.cs:
	Add interface for PlayerEngines that can provide data for visualizations.

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	Implement IVisualizationDataSource, binding the unmanaged visualization
	support from libbanshee's BansheePlayer

	* libbanshee/banshee-player-vis.c
	* libbanshee/banshee-player-vis.h: Unmanaged support for gathering
	visualization data on the pipeline using the spectrum element

	* libbanshee/banshee-player-pipeline.c:
	* libbanshee/banshee-player-private.h: Integrate new vis code into the
	pipeline and player object

2008-08-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/MediaGroupSource.cs: Use the
	UnfilteredFileSize so that the dap info bar isn't inaccurate when
	filtering (BGO #537366).

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs: 
	Get the unfiltered total file size in addition to the count.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Make the
	getter for DatabaseTrackModel public.

2008-08-22  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Recursively find all SyncButton instances inside of the notebook and
	click them - this enables the 'sync all fields' button

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/FieldPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/EditorUtilities.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/SyncButton.cs:
	Removed the utility to create a sync button, replaced with a proper 
	SyncButton class so that type detection can be done at runtime

2008-08-22  Aaron Bockover  <abock@gnome.org>

	This commit enables view and edit modes for the dialog and allows pages
	to be displayed or hidden based on their type and the mode of the editor;
	help is also moved into its own extension page

	* src/Core/Banshee.ThickClient/Banshee.ThickClient.addin.xml: Add help page

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Use wrapper
	API for running the editor dialog

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/PageType.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/EditorMode.cs:
	Added enum for page types and editor mode

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/FieldPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/StatisticsPage.cs:
	Updated to implement new ITrackEditor page API

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/ITrackEditorPage.cs:
	Added TabWidget and PageType properties

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Support edit modes (view and edit) and only show pages as appropriate to
	the mode based on their type

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/HelpPage.cs: Moved
	the Help into an actual extension page

2008-08-22  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/StatisticsPage.cs:
	Name it "properties"

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Add a label showing which track/count we're at

2008-08-22  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/GenreEntry.cs:
	Use QueryEnumerable

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/StatisticsPage.cs:
	Some cleanup

2008-08-22  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellDuration.cs:
	Use the DurationStatusFormatters.ConfusingPreciseFormatter to display dur

	* src/Core/Banshee.Services/Banshee.Sources/DurationStatusFormatters.cs:
	Do not display minutes as {0:00} if hours < 1
	
	* src/Core/Banshee.ThickClient/Banshee.ThickClient.addin.xml: Added stats
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/ExtraTrackDetailsPage.cs:
	Fix bug, name the tab "Extra"

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/GenreEntry.cs:
	Implemented the genre combo box entry

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/StatisticsPage.cs:
	Implemented an awesome new stats page to show detailed file info

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/EditorTrackInfo.cs:
	Implement the TagLib file property

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Make the sync all button nicer

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TextViewEntry.cs:
	Restrict the comments field two two lines of text

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/BasicTrackDetailsPage.cs:
	Use the new genre entry

2008-08-20  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/FieldPage.cs:
	Hook up field syncing
	
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/EditorTrackInfo.cs:
	Support setting the index of the track in editor speak

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Split LoadTrack and GetTrack, provide ForeachNonCurrentTrack method

2008-08-20  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/ExtraTrackDetailsPage.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/BasicTrackDetailsPage.cs:
	Change the expand=false parameters to pass FieldOptions.Shrink; pass
	the dialog reference to the title entry field

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/FieldPage.cs:
	Do not add a sync button if the field has the FieldOptions.NoSync option

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TrackEditorDialog.cs:
	Make the navigation API public

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/FieldOptions.cs:
	Added an enum of options to reduce the AddField overloads

	* src/Core/Banshee.ThickClient/Banshee.Gui.TrackEditor/TitleEntry.cs:
	Implement keyboard navigation when activating the title entry

2008-08-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Metadata/MetadataService.cs: Avoid NRE.

2008-08-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Ensure TrackCount
	and DiscCount are never less than TrackNumber and DiscNumber respectively.

2008-08-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	* src/Core/Banshee.Core/Banshee.Collection/AlbumInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/FileTrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Streaming/SaveTrackMetadataJob.cs:
	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs:
	* src/Core/Banshee.Core/Banshee.Streaming/CommonTags.cs:
	* src/Core/Banshee.Core/Banshee.Base/Tests/TaglibReadWriteTests.cs:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/TagList.cs: Read BPM,
	Grouping, Bitrate, Conductor, DiscCount, and IsCompilation from TagLib#,
	and write the values that make sense (all but Bitrate).  This update
	triggers a metadata refresh to read in this info.

2008-08-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Add inner class for
	testing sync logic.  Currently will calculate how many items are on the
	device but not in the library and vice versa, and logs that info.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Add new
	HyenaDataReader convenience class.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Use the
	QueryEnumerable<T> method instead of manually reading the IDataReader.

2008-08-17  Ruben Vermeersch  <ruben@savanne.be>

	* src/Core/Banshee.Services/Banshee.Preferences/Page.cs: Add a checkbox to
	enable the renaming of files and folders.

2008-08-17  Ruben Vermeersch  <ruben@savanne.be>

	* src/Core/Banshee.Core/Banshee.IO/Utilities.cs: Split
	TrimEmptyDirectories out of DeleteFileTrimmingParentDirectories, useful in
	case  you don't need the Delete.

	* src/Core/Banshee.Services/Banshee.Collection/MoveOnInfoSaveJob.cs:
	Added. Moves a file after changing the metadata. This maintains the
	FileNamePattern even after changing metadata.

	* src/Core/Banshee.Services/Makefile.am: Add the new file to the build.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs: Queue a
	MoveOnInfoSaveJob when saving.

2008-08-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Fix bug with custom icon
	naming scheme for DAPs; was missing multimedia-player- prefix (BGO
	#537368).

2008-08-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Avoid scheduling artwork tasks for feeds we already have icons for.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellPodcast.cs:
	Fix the same disposing-the-default-pixbuf error.

2008-08-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Hardware/IDevice.cs:
	* src/Backends/Banshee.Hal/Banshee.HalBackend/Device.cs:
	* src/Backends/Banshee.Hal/Banshee.HalBackend/Volume.cs:
	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/PodSleuthDevice.cs:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Add Serial
	property, keeping Uuid for the HAL udi (or equiv on other backends).

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: Make more thread safe.

	* src/Core/Banshee.Services/Banshee.Base/ThreadAssist.cs: Add
	AssertInMainThread method; logs a warning if in --debug mode and not
	called from the main thread.

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Assert that
	we're in the main thread when adding and removing sources.

	* src/Core/Banshee.Core/Banshee.Kernel/Scheduler.cs: Fix up the logging so
	that jobs that have exceptions are actually logged.

2008-08-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Only update a feed on startup if it hasn't been updated in over an hour.

2008-08-16  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Avoid NRE (BGO #546864).

2008-08-16  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellAlbum.cs:
	Don't dispose the missing-coverart pixbuf, fixes recent issue with it
	disappearing.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkRenderer.cs:
	Fix issue with the Album Browser being really slow/mushy to scroll by only
	calling GC.Collect every 100th pixbuf.Dispose (BGO #547628).

2008-08-16  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Libraries/Hyena/Hyena.Query/UserQueryParser.cs: Fix handling of 
	special characters in quotes (BGO #547078).

	* src/Libraries/Hyena/Hyena.Query/Tests/QueryTests.cs: Unit test for
	the above bug, written by Sandy Armstrong and modified by me.	

2008-08-16  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Check if
	the cast of the TrackModel to DatabaseTrackListModel succeeded, to avoid
	a potential crash (BGO #547092).

2008-08-16  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Libraries/Hyena/Hyena/DateTimeUtil.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs: Enable
	the track editor to display the duration of tracks one hour or longer
	correctly. Adds some overloaded FormatDuration methods. Fixes BGO #537774.

2008-08-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapProxyWebServer.cs: Don't
	log DAAP socket errors.

2008-08-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapInfoBar.cs: Avoid NRE, and move a
	delegate to a method.

	* configure.ac: turn DEVEL_BUILD back on

2008-08-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: Be more careful about
	what we do inside lock().  Do actual interaction with SourceManager
	outside the lock() for Map/Unmap dap functions.

2008-08-15  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Dap/Banshee.Dap.Karma/Banshee.Dap.Karma.addin.xml:
	* src/Dap/Banshee.Dap.Karma/Banshee.Dap.Karma/KarmaTrackInfo.cs:
	* src/Dap/Banshee.Dap.Karma/Banshee.Dap.Karma/KarmaSource.cs:
	* src/Dap/Banshee.Dap.Karma/Makefile.am:
	* src/Dap/Makefile.am:
	* build/build.environment.mk:
	* configure.ac: Patch from Bob Copeland to add Karma DAP support. It is 
	enabled through the --enable-karma configure option and requires karma-sharp
	(BGO #541828).

2008-08-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Fix bug with sometimes doing
	GTK/UI work not in the main thread.

2008-08-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Data/PropertyStore.cs: Fix deadlock caused by
	a property change event triggering a propety get/set/remove.

2008-08-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Fix bug with not triggering metadata refresh when migrating from 0.13.2.

2008-08-15  Alexander Hixon  <ahixon@gnome.org>

	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs: Only use 'Log'
	rather than 'Hyena.Log' in the code since we've already referenced it.

	* src/Extensions/Banshee.MiniMode/Banshee.MiniMode/MiniModeWindow.cs:
	Make sure we can use the hotkeys from the main window. Based on a patch by
	Ruben Vermeersch. Fixes BGO #385849.

2008-08-15  Alexander Hixon  <ahixon@gnome.org>

	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs: Only post Now
	Playing information to AS servers after all tracks have been uploaded.
	Should also fix consecutive Now Playing updates. Closes BGO #524992.

2008-08-14  Aaron Bockover  <abock@gnome.org>

	* src/Clients/banshee-1.in: Fixes BGO #547725 (hyperair)

2008-08-14  Aaron Bockover  <abock@gnome.org>

	Merged the really nice and blingy cover art display back from r4350 now
	that 1.2.1 is out and we can afford more time to stress test it. Please
	file bugs.

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/VideoDisplay.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/XOverlayVideoDisplay.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingInterface.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkRenderer.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ClassicTrackInfoDisplay.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui/CairoExtensions.cs:

2008-08-14  Aaron Bockover  <abock@gnome.org>

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs: 
	Implement ReplayGain preference and cope with the volume format change

	* libbanshee/banshee-player.c:
	* libbanshee/banshee-player-pipeline.c:
	* libbanshee/banshee-player-private.h: Integrate the ReplayGain support
	into the pipeline/player object; store user volume in the player object
	since the pipeline volume may have a ReplayGain scale factor; use a 
	double [0..1] to store the volume to make life easier

	* libbanshee/banshee-player-replaygain.c:
	* libbanshee/banshee-player-replaygain.h: Implemented ReplayGain volume
	scaling, reading data from GST_TAG_[TRACK|ALBUM]_[GAIN|PEAK] tags; 
	implemented based on the http://replaygain.hydrogenaudio.org/ spec, 
	including the 10 track scale history to implement average scale on 
	tracks without ReplayGain data

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/NotebookPage.cs:
	Do not show empty sections
	
	* src/Core/Banshee.Services/Banshee.Preferences/Page.cs: Add an empty
	playback section
	
	* src/Core/Banshee.Services/Banshee.Preferences/SchemaPreference.cs:
	Support a notification callback when the schema value is toggled

2008-08-14  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Add protected MetadataHash property, really only used to store a hashed
	string of title, artist, album, genre, duration, etc.  Will be used for
	sql-powered sync - select all the MetadataHashes that are in the library
	but not the device, and vice-versa.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add MetadataHash column to CoreTracks, and trigger metadata refresh so the
	hashes are generated for existing tracks.

	* src/Libraries/Hyena/Hyena/CryptoUtil.cs: Speed up the MD5 hashing by
	caching the MD5 algorithm object, and speed up the IsMd5Encoded method by
	caching the Regex.

	* src/Libraries/Hyena/Hyena/Tests/CryptoUtilTests.cs: Make public instead
	of internal so these tests are actually ran, and add tests for null/empty
	strings.

2008-08-14  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: Lock on private object,
	not this to avoid deadlock with external code locking on this.

2008-08-14  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Torrent/Banshee.Torrent/TorrentService.cs: Fix
	style issues.

2008-08-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Extensions.mds:
	* src/Extensions/Makefile.am:
	* src/Extensions/Banshee.Torrent/Banshee.Torrent.mdp:
	* src/Extensions/Banshee.Torrent/Banshee.Torrent/TorrentService.cs:
	* src/Extensions/Banshee.Torrent/Banshee.Torrent/TorrentFileDownloadTask.cs:
	* src/Extensions/Banshee.Torrent/Makefile.am:
	* src/Extensions/Banshee.Torrent/Banshee.Torrent.addin.xml:
	* build/m4/banshee/torrent.m4:
	* build/build.environment.mk:
	* configure.ac: Patch from Alan McGovern adding support for downloading
	.torrent podcast enclosures, with some build/style fixes by me.  Is not
	built by default (requires --enable-torrent option) and probably not
	buildable at all except within MonoDevelop.  Still under development, do
	not enable unless you know what you're doing.

2008-08-13  Gabriel Burt  <gabriel.burt@gmail.com>

	Patch from Alan McGovern laying the groundwork for torrent support in Migo.

	* src/Libraries/Migo/Migo.DownloadCore/DownloadManager.cs: Add support for
	other types of DownloadTasks.

	* src/Libraries/Migo/Migo.Syndication/FeedEnclosure.cs: Strip the trailing
	.torrent extension for the file name.

2008-08-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/VideoDisplay.cs:
	Fix a NRE in the cover art display when the ArtworkId for a track is null
	(BGO #547520).

2008-08-12  Aaron Bockover  <abock@gnome.org>

	Banshee 1.2.1 Released

2008-08-12  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Bump version to 1.2.1

	* NEWS: Update

	* src/Extensions/Banshee.SqlDebugConsole/Makefile.am:
	* src/Extensions/Makefile.am: Fix build

2008-08-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Recommendations/RecommendationPane.cs:
	Fix bug where top album buttons tried to open the wrong URL.

2008-08-12  Aaron Bockover  <abock@gnome.org>

	* Revert: svn merge -r 4350:4349; backed out my large commit from yesterday
	due to some apparent internal windowing regressions experience by some;
	unfortunately no bling for 1.2.1, but I'll work to get it back into 1.2.2

2008-08-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	If there is no track loaded/playing and the user presses Play, if one or
	more items are selected, play the first intead of playing the first item
	in the source.

2008-08-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Catch and log exceptions
	thrown while loading the device's items.

	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs: Don't
	create the user job if it's just going to be hidden.  Avoid a NRE if the
	ImportElement already fired the Finished event and the job was destroyed.

	* src/Libraries/Hyena/Hyena.Collections/QueuePipelineElement.cs: Prevent
	NRE by making sure the element is threaded.  This and the above NRE fix
	should fix the bug with mass storage devices not getting loaded (BGO
	#545604).

2008-08-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Lastfm/Lastfm.Data/DataCore.cs: Patch from Félix Velasco
	and myself adding NRE protection, should fix some issues with
	recommendation pane not showing up (BGO #547177).

2008-08-11  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/LargeTrackInfoDisplay.cs:
	Implemented a new high resolution track info display; quite optimized for
	smooth xfade at higher resolutions through cairo; sits in the now playing
	source and works in full screen

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Support Cairo Surface caching

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ClassicTrackInfoDisplay.cs:
	Fixed some windowing issues

	* src/Libraries/Hyena.Gui/Hyena.Gui/CairoExtensions.cs: Added a 
	CreateSurfaceForPixbuf method

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/VideoDisplay.cs:
	Removed non-video rendering code (idle logo, album art)

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingTrackInfoDisplay.cs:
	LargeTrackInfoDisplay themed for the now playing source

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingContents.cs:
	Base contents widget for now playing source; random things can be packed,
	including the video display and the album art view

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/XOverlayVideoDisplay.cs:
	Eliminate an internal GdkWindow, attaching the video window to the root

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingInterface.cs:
	Use the NowPlayingContents widget as the main widget to be detached for
	fullscreen mode

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	Fixed rendering/mapping issue

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkRenderer.cs:
	Support specifying which corners to round

2008-08-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Query/RelativeTimeSpanQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/DateQueryValue.cs: Patch from Félix
	Velasco that makes never played tracks match 'last played > X' type
	queries (BGO #542930).

2008-08-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerBandScale.cs:
	Show the dB value in a tooltip against the band sliders

2008-08-08  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Extensions/Banshee.Daap/Daap/ServiceLocator.cs: Prevent a crash on
	exit when the DAAP browser could not start.

2008-08-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Make sure no modifiers are set when handling o like enter.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportManager.cs:
	Only reload a max of 5 times during a given import; every 250 items or
	20%, whatever is more.

	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs: Add a
	protected TotalCount property for the above 20% to use.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Fix bug where the metadata refresh was triggered for brand new databases.

	* src/Core/Banshee.Services/Banshee.PlayerMigration/AmarokPlayerImportSource.cs:
	Fix bug with rounding Amarok's ratings down (eg 7 down to 3, etc), and not
	migrating the added and last played stamps.

2008-08-06  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/QueryTermBox.cs: Patch from 
	Félix Velasco fixing a crash when editing a smart playlist with a date 
	field (BGO #539960).

2008-08-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/VideoDisplay.cs:
	Show cover art here when playing music (BGO #539180).

	* src/Core/Banshee.Services/Banshee.Metadata.FileSystem/FileSystemQueryJob.cs:
	Fix bug just introduced by recent commit that ignored the
	too-many-random-files-in-this-folder limit if the file was cover.jpg etc.

2008-08-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/Client.cs: Patch from Jo Shields fixing bug
	where --help-query-player didn't work (BGO #546334).

2008-08-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlists.Formats/PlaylistParser.cs:
	Instead of throwing an exception when the uri scheme isn't one we support,
	simply return false to indicate the parsing failed.  Fixes bug where
	mms:// URIs wouldn't load (BGO #546392).

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Call
	typeof (T) once instead of N times.

2008-08-05  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlists.Formats/AsxPlaylistFormat.cs:
	Another patch from Félix Velasco, this time to fix the parsing of ASX 
	playlists (BGO #545646).

2008-08-05  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSource.cs:
	Patch from Félix Velasco to select the proper source when showing the radio
	station editor (BGO #539397).

2008-08-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackFilterListView.cs:
	Enable dragging filter items (artists/albums/etc) the same as you would
	drag tracks - onto the play queue, etc (BGO #524418).

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	Check where the drag came from, and if it wasn't directly from the track
	view, assume it was from a filter view, and add everything in the track
	model to the drop destination instead of just the user-selected items.

	* src/Core/Banshee.Core/Resources/translators.xml: Updated

2008-08-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Factor out activate-selection code into protected method.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Handle 'o' the same as enter - activate the row(s), which starts playing
	them.

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Update links to
	the website.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Update
	copyright.

	* src/Core/Banshee.Services/Banshee.Library/ThreadPoolImportSource.cs:
	Make sure errors are reported on the main thread, avoid hanging when
	importing from Amarok.

2008-08-04  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Services/Banshee.Metadata.FileSystem/FileSystemQueryJob.cs:
	Patch from  Benjamín Valero Espinosa that adds preferential filenames when 
	looking for cover art file (BGO #545911).

2008-08-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Makefile.am:
	* src/Extensions/Extensions.mds:
	* src/Extensions/Banshee.MediaWeb/*: New but totally-unfinished extension
	for embedding WebKit.

	* configure.ac:
	* build/build.environment.mk:
	* build/m4/banshee/mediaweb.m4: Add config option to --enable-mediaweb
	that also checks for webkit-sharp.

	* src/Extensions/Template/Makefile.am:
	* src/create-extension: A few tweaks to do more for the user.

	* src/Core/Banshee.ThickClient/Banshee.Library.Gui/PhotoFolderImportSource.cs:
	Add a couple more possible photo folder paths.

	* NEWS:
	* src/Core/Banshee.Core/Resources/contributors.xml: Make our credits of
	Christopher Halse Rogers consistent.

	* src/Libraries/Lastfm/Lastfm.mdp: Remove duplicate Hyena ref.

2008-07-31  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/GnomeScreensaverManager.cs:
	Log a friendlier warning when the GNOME screensaver isn't running (BGO
	#545600).

2008-07-31  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Recommendations/RecommendationPane.cs:
	Mark a string for translation (BGO #545677).

2008-07-31  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackListModel.cs:
	Fix bug with podcasts not getting sorted by published date on startup.

2008-07-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceIconResolver.cs:
	Whoops, revert crasher from previous GetString changes.

	* data/audio-profiles/mp3-lame.xml.in: Add 256 kbps as an option.

2008-07-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Extensions.mds:
	* src/Extensions/Banshee.SqlDebugConsole/Makefile.am:
	* src/Extensions/Banshee.SqlDebugConsole/Resources/GlobalUI.xml:
	* src/Extensions/Banshee.SqlDebugConsole/Banshee.SqlDebugConsole.addin.xml:
	* src/Extensions/Banshee.SqlDebugConsole/Banshee.SqlDebugConsole.mdp:
	* src/Extensions/Banshee.SqlDebugConsole/Banshee.SqlDebugConsole/SqlActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Addins.Gui/AddinView.cs: New addin,
	not yet finished or really working, to view SQL queries that are run in
	Banshee, and eventually be able to run them and arbitrary queries in
	Banshee's connection, with an option to run them 50 or whatever times to
	benchmark them.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs: Add a new
	EventArgs subclass for the new CommandExecuted event.  This event is only
	fired if LogAll is true.

	* src/Core/Banshee.ThickClient/Banshee.ThickClient.addin.xml:
	* src/Extensions/Template/Template.addin.xml:
	* src/create-extension:
	* configure.ac: Clarify and simplify extension creation.

2008-07-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.ThickClient.addin.xml: Forgot to
	commit this, actually adds the photo folder import source.

2008-07-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.ThickClient.mdp:
	* src/Core/Banshee.ThickClient/Banshee.Library.Gui/PhotoFolderImportSource.cs:
	New import source to help people import videos they took on their digital
	cameras, located in their Photos directory.

2008-07-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/InterfaceActionService.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceIconResolver.cs:
	* src/Core/Banshee.Services/Banshee.Sources/Source.cs:
	* src/Libraries/Hyena/Hyena.Data/PropertyStore.cs: Change GetString calls
	to Get<string> calls, to avoid a lot of strings being marked for
	translation when they shouldn't be.

2008-07-30  Gabriel Burt  <gabriel.burt@gmail.com>

	Fix a bunch of translatability issues (BGO #545239).

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs: Fix plural
	string issue.

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs: Add
	and clarify translator comments.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/DownloadManager/DownloadUserJob.cs:
	Avoid contraction.

	* src/Core/Banshee.ThickClient/Banshee.Gui/ViewActions.cs: Avoid 'toggle'.

2008-07-30  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/ITrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Configuration.Schema/LibrarySchema.cs:
	* src/Core/Banshee.Core/Banshee.Base/FileNamePattern.cs: Patch from 
	Brian Teague adding the genre option to the file name pattern 
	construction (BGO #492181).

2008-07-29  Aaron Bockover  <abock@gnome.org>

	Banshee 1.2 Final (1.2.0) Released

2008-07-29  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs:
	Reworked the count query so that it really is fast now

2008-07-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs: Fix
	bug where the station list wasn't reloaded properly when a subscribed user
	was logged in, meaning their personal stations etc never loaded (BGO
	#512464).

2008-07-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add an index on CoreTracks that should help with the performance of the
	cover art query.

2008-07-29  Aaron Bockover  <abock@gnome.org>

	* gstreamer/equalizer/Makefile.am: -lm

	* src/Backends/Banshee.NowPlaying.X11/libbnpx11/Makefile.am: -lXrandr

2008-07-29  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Reset the
	fields about the last artist and last album imported when the artists 
	and albums are pruned from the DB.

2008-07-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapService.cs: Catch
	exceptions caused by not having any DAAP backends (avahi, etc).

2008-07-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Shorten track
	and title query labels.

2008-07-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Fix bug
	where IsLive tracks wouldn't change the play icon to stop (BGO #539021).

2008-07-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Make UpdateUnfilteredAggregates virtual, expose UnfilteredCount setter and
	Connection via protected properties.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackListModel.cs:
	Use the above changes to show the # of new podcast items in the
	SourceView, instead of the total # of items.

2008-07-29  Wouter Bolsterlee  <wbolster@svn.gnome.org>

	* src/Clients/Nereid/Nereid/ViewContainer.cs: Added
	translator comment.

2008-07-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	* src/Core/Banshee.ThickClient/Banshee.Gui/ViewActions.cs: Comment out
	Show Cover Art menu item/action.

2008-07-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Remove cruft.

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Set the
	focus index as well as the selection when jumping to current song (BGO
	#538227).

2008-07-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	Replace spaces with underscores in artist name before encoding for
	Wikipedia URL (BGO #537682).

2008-07-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/XspfMigrator.cs:
	Catch exceptions when migrating old internet radio stations over (BGO
	#539424).

	* NEWS: Some updates for 1.2

2008-07-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* build/m4/banshee/daap.m4: Enable DAAP by default.

	* configure.ac: Remove unstable warning for DAAP in configure.

2008-07-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	Fix the regression where the New Playlist wouldn't appear in the sources
	list when you were drag and dropping some tracks.

2008-07-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/ScreensaverManager.cs:
	Keep track of whether the screensaver is already inhibited.  Implement
	IDisposable and uninhibit when Disposed.

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingInterface.cs:
	Override Dispose and call Dispose on the ScreensaveManager.

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	Call Dispose on the NowPlayingInterface.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Make all track
	actions not visible/sensitive when dealing with a non ITrackModelSoure,
	for example the Now Playing source (BGO #538398).

2008-07-27  Gabriel Burt  <gabriel.burt@gmail.com>

	Patches from Bertrand Lorentz fixing issues with files in folders whose
	name start the same as the library folder.

	* src/Core/Banshee.Core/Banshee.Base/Paths.cs: Add
	CachedLibraryLocationWithSeparator property.  Fix MakePathRelative method
	to add a path seperator as needed (BGO #539511).

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Use the new -WithSeparator property, fixing copy-on-import (BGO #533177).

	* src/Core/Banshee.Core/Banshee.Base/Tests/FileNamePatternTests.cs: Unit
	tests written by me to make sure MakePathRelative works how we expect it
	to.

2008-07-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs:
	Create default columns within a private method so we can manipulate them
	beyond just their ctor (not yet done, but will use this to set better
	widths soon).  Also, use the new Column/QueryField integration to avoid
	duplication of names/labels.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Fix
	properly the detection of if any of the columns changed in a TracksChanged
	event are being sorted by, using the new Field property on SortableColumn.

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Add a
	PropertyName property used to create/bind columns from a QueryField
	object.  Add a comment field.  Modify the GetSort method just enough to
	work with the new 'sort keys' (QueryField.Name) that will be passed in.

	* src/Libraries/Hyena/Hyena.Query/QueryField.cs:
	* src/Libraries/Hyena/Hyena.Query/Tests/QueryTests.cs: Add PropertyName.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/SortableColumn.cs:
	* src/Libraries/Hyena/Hyena.Data/ISortableColumn.cs: Add QueryField Field
	property, the first step in integrating columns with QueryFields, which
	should probably be named something more generic like ModelFields.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Implement
	ISizeRequestCell and add delegate property to allow external code to
	specify what width a text cell should have.  Not used yet.

2008-07-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Add
	static UpdateAction convenience methods that set the
	visiblity/sensitivity of actions.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Hide the
	browser-related actions when the source doesn't have any filters.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	Fix issue with not allowing sources that didn't implement
	IFilterableSource to be used by this view.  Patch also created by Bertrand
	Lorentz (BGO #544989).

	* src/Core/Banshee.Services/Banshee.Sources/IFilterableSource.cs: Add
	AvailableFilters getter to the interface.

	* src/Core/Banshee.Services/Banshee.Library/VideoLibrarySource.cs:
	Override HasArtistAlbum to false.

2008-07-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseFilterListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/IDatabaseTrackModelCache.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs:
	Remove ClearManagedCache method, was redundant w/ Clear method.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: When the
	source is Deactivated, call InvalidateCache on the Track model and all
	filter models.  This should help prevent Banshee from using more and more
	RAM as you switch sources and scroll through lists.

2008-07-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	When a Uri list is dropped onto a source, import the uris into the
	library.

2008-07-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.DragDrop/DragDropUtilities.cs:
	Change the SplitSelectionData method to use String.Split, and to remove
	empty items.

2008-07-27  Todd Berman  <tberman@off.net>

	* src/Dap/Banshee.Dap.Ipod/IpodSource.cs: Implement Import (BGO #541684)

2008-07-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs: Ok,
	last fix for Cover Art, I swear.  Thought I'd fixed all the sql issues in
	the last commit, but hadn't - this one should really fix BGO #541469.

2008-07-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtService.cs:
	When the update cover art action is triggered, force refresh of cover art
	even for albums we've checked within the last N days.

2008-07-25  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Widgets/Banshee.Widgets/StreamPositionLabel.cs:
	Prevent crash when switching to mini-mode in a paused state; ensure stream
	position label's layout is rebuilt when the theme changes to account for
	any potential font size change (BGO #541102)

2008-07-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs: Fix
	major performance issue I introduced within the last week.  With this and
	snorp and my earlier commits, BGO #541469 is fixed.

2008-07-25  James Willcox  <snorp@snorp.net>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtService.cs:
	Properly respond to TrackChanged events, and only fetch cover art
	if something changed that we care about.

2008-07-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs:
	Schedule the cover art lookup job w/ the lowest priority.

2008-07-25  Aaron Bockover  <abock@gnome.org>

	* build/Makefile.am: Patch from Bertrand Lorentz to force UTF-8 local
	when extracting strings from po files to populate the translator
	credits (BGO #506556)

2008-07-24  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSource.cs:
	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSourceContents.cs:
	Temporary hack that provides a Genre browser for Internet Radio

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Support inherited
	source contents

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/ITrackModelSourceContents.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	Remove unnecessary interface API and disable the genre browser for now

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/FilteredListSourceContents.cs:
	Support forced positioning of the browser

2008-07-24  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Fix the 
	comparison between the field column and the current sort column, so that
	"CoreTracks.skippedcount" doesn't match "Track". Makes BGO #544415 less
	likely to happen, but doesn't fix it.

2008-07-24  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Base/FileNamePattern.cs: Replace string 
	concatenations with Path.Combine calls, and get rid of useless Substring
	call (BGO #544427).

2008-07-24  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Gui/GtkWorkarounds.cs: Work around a nasty
	little bug in GDK and subsequently Gdk# (2.8.5 through 2.12.1) where
	managed Gdk.Window.Destroy function does not obtain a normal (non-toggle)
	reference on the GdkWindow before calling gdk_window_destroy on it,
	which the native function apparently expects. This work around ensures
	that GdkWindows will be properly destroyed regardless of the Gdk# 
	version in use

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	Use GtkWorkarounds.WindowDestroy

2008-07-22  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Add a
	UriToSafeUri method that checks to see if the uri is relative and does the
	right thing.

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs: Set the
	Uri on the track object we pass to the metadata provider, fixes bug where
	the cover art extension wasn't able to use the new cover-art-in-folder
	lookup provider (BGO #544226).

2008-07-22  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Optimize the loop that checks to see if a click happened on a column's
	resize area.  Add some comments.

2008-07-22  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Fix glitch where the resize cursor would flash away when you actually
	pressed the mouse button, but then come back when you started moving.

2008-07-22  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Services.mdp:
	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Metadata.FileSystem/FileSystemMetadataProvider.cs:
	* src/Core/Banshee.Services/Banshee.Metadata.FileSystem/FileSystemQueryJob.cs:
	New provider that gets cover art files from the folder a track is in (BGO
	#528137, BGO #336249).  Looks for the largest JPG file in the folder.

	* src/Core/Banshee.Services/Banshee.Metadata/MetadataService.cs: Use the
	new provider, after the embedded provider.

	* src/Core/Banshee.Core/Banshee.Collection/IBasicTrackInfo.cs: Add Uri
	property.

2008-07-22  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit does the backend (non-UI) work to make filters (eg
	artist/album/genre/etc browsers) on sources customizable.  All the UI work
	still needs to be done - actually supporting showing an arbitrary number
	and set of filters, and the UI, perhaps menus, to actually
	add/remove/replace filters.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	Since the FilterModels property was removed from the ITrackModelSource, no
	longer need to implement it for sources that aren't filterable.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastSourceContents.cs:
	Renamed FilterModels property to CurrentFilters.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastSource.cs:
	Use the new AvailableFilters and DefaultFilters properties instead of just
	overriding the FilterModels property.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseQueryFilterModel.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastFeedModel.cs:
	Pass a name and label to the filter ctor, so we can expose the label in a
	menu later to make the filters customizable.

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSource.cs:
	Make the changes necessary to display a genre browser, but keep it hidden
	for now because the Composite widget is hard coded to show three filters,
	even if a source only has one.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseFilterListModel.cs:
	Set the FilterName and Label from the new ctor args.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Services.mdp:
	* src/Core/Banshee.Services/Banshee.Sources/IFilterableSource.cs: New
	interface that exposes CurrentFilters property and a FiltersChanged event.

	* src/Core/Banshee.Services/Banshee.Sources/ITrackModelSource.cs: Remove
	the FilterModels property (and comment cruft).

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Add a bunch
	of methods for allowing customization of filters -
	adding/removing/replacing them, and saving/loading to/from gconf.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Add CreateSchema
	convenience methods that given a name and a T give you a source-scoped
	SchemaEntry.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Avoid NRE by
	using a lazily-loaded property instead of its backing variable.

	* src/Core/Banshee.Services/Banshee.Collection/IFilterListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection/FilterListModel.cs: Add
	InvalidateCache method.

2008-07-21  Alexander Hixon  <ahixon@gnome.org>

	* src/Libraries/Lastfm/Lastfm.Data/DataCore.cs: Make sure that we check
	the hash string length before performing a substring operation to avoid
	out-of-range exceptions.

2008-07-21  Alexander Hixon  <ahixon@gnome.org>

	* src/Backends/Banshee.Gnome/Banshee.Gnome.addin.xml: Forgot to commit
	this so that the GNOME ScreensaverManager implementation gets loaded.

2008-07-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Add curlies.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistListModel.cs:
	Fix whitespace.

	* src/Core/Banshee.Services/Banshee.Collection/IFilterListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection/FilterListModel.cs: Add
	FilterName and FilterLabel properties that will be used in making the
	filters configurable.

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Add TODO
	comment, and get rid of static ctor where we set the labels for the
	QueryValue operators (they are set in Hyena now).

	* src/Libraries/Hyena/Hyena.Query/IntegerQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/QueryOperator.cs:
	* src/Libraries/Hyena/Hyena.Query/StringQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/NullQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/RelativeTimeSpanQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/DateQueryValue.cs: Set the translated
	labels for the operators in their ctors.

2008-07-20  Bertrand Lorentz  <bertrand.lorentz@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ClassicTrackInfoDisplay.cs:
	Add constructors to prevent seemingly random crashes (BGO #540728).

2008-07-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Lastfm/Lastfm.Data/DataEntry.cs: Patch from Arthur Carli
	fixing issue with parsing percentages from Last.fm without culture
	invariant info (BGO #539528).

2008-07-20  Bertrand Lorentz  <lorentz@siva>

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Add a lock 
	statement on the error_source field, to prevent a deadlock when importing
	songs with invalid mpeg headers (BGO #542915). 

2008-07-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Patch from Fabian Jost fixing issue with migrations - I added the new
	columns in both the migration and the initial db creation, but I forgot to
	add the columns to the data migration code (BGO #542345).

2008-07-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Widgets/Banshee.Widgets/Tile.cs: Prevent NRE when
	setting the Pixbuf of a Tile to null (BGO #542921).

2008-07-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Metadata.MusicBrainz/MusicBrainzQueryJob.cs:
	Patch from Peter de Kraker, looks up the release using the AlbumArtist
	instead of the track artist (BGO #539570).

2008-07-20  Gabriel Burt  <gabriel.burt@gmail.com>

	Patch from Peter de Kraker adding support for fetching cover art from
	Last.fm (BGO #536132), with a few tiny changes (mostly HACKING style
	issues) by me.

	* src/Core/Banshee.Services/Banshee.Metadata/MetadataService.cs:
	Whitespace issues, and add the Lastfm provider.

	* src/Core/Banshee.Services/Banshee.Services.addins:
	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Services.mdp:
	* src/Core/Banshee.Services/Banshee.Metadata.LastFM/LastFMMetadataProvider.cs:
	* src/Core/Banshee.Services/Banshee.Metadata.LastFM/LastFMQueryJob.cs: New
	files implementing cover art fetching from Last.fm.

	* src/Core/Banshee.Services/Banshee.Metadata.MusicBrainz/MusicBrainzQueryJob.cs:
	Whitespace fixes.

	* src/Libraries/Lastfm/Lastfm.mdp:
	* src/Libraries/Lastfm/Makefile.am:
	* src/Libraries/Lastfm/Lastfm.Data/DataEntry.cs:
	* src/Libraries/Lastfm/Lastfm.Data/LastfmAlbumData.cs: Wrap album
	information from Last.fm.

	* src/Core/Banshee.Core/Banshee.Core.mdp:
	* build/build.environment.mk: Banshee.Services now depends on Lastfm.
	Ideally we will move these providers out into extensions at some point.

	* src/Core/Banshee.Core/Resources/contributors.xml: Add Peter and Sandy.

2008-07-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Library.Gui/FileImportSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Library.Gui/FolderImportSource.cs:
	* src/Core/Banshee.Services/Banshee.PlayerMigration/AmarokPlayerImportSource.cs:
	* src/Core/Banshee.Services/Banshee.Library/ThreadPoolImportSource.cs:
	* src/Core/Banshee.Services/Banshee.Library/HomeDirectoryImportSource.cs:
	* src/Core/Banshee.Services/Banshee.Library/IImportSource.cs: Add a
	SortOrder int property so we can hint at the order import sources should
	be displayed in the import dialog.  In particular, puts the folder import
	first.

	* src/Core/Banshee.ThickClient/Banshee.Library.Gui/ImportDialog.cs: Sort
	the import sources before adding them to the combo box.

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Add a static
	IsPlayingMethod delegate used by the new IsPlaying property to determine
	if the current instance is playing.

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Set the TrackInfo.IsPlayingMethod to our IsPlaying (track) method.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs: Fix
	issue with the ListView position getting scrolled to the top of the list
	when it probably shouldn't be.  Add RowBoldPropertyName (like
	RowSensitivePropertyName) and IsRowBold method.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Set the RowBoldPropertyName to use TrackInfo's IsPlaying property.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	If IsRowBold set the FontWeight property to bold for all ColumnCellText
	cells.

	* src/Core/Banshee.Core/Resources/translators.xml: Automatically updated.

2008-07-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/FilteredListSourceContents.cs:
	Add comments.

2008-07-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseFilterListModel.cs:
	Fix bug where if a filter model (eg artist or album browser) had zero
	items in it (just the All Albums item), it wouldn't filter the view, so
	that if you had an artist selected and searched for a string that didn't
	match, the artist filter would be cleared and the search ran against all
	artists - not what you'd expect.  So this fixed that bug, but it should be
	improved more by remembering and restoring the last filter selection
	before the zero items query, so that when you back out your search you'll
	still have that artist (or albums, etc) selected.

2008-07-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: Use Banshee.Kernel
	instead of ThreadAssist.SpawnFromMain.

2008-07-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Cast CacheEntryIds to ints to get value comparison.  Fixes bug where the
	playback indicator next to the playing track would disappear, which was
	introduced when I committed the genre filter support and made the
	CacheEntryId an object.

2008-07-19  Alexander Hixon  <ahixon@gnome.org>

	Patch from Christopher Halse Rogers to disable the screensaver when
	watching fullscreen video (BGO #531192) under GNOME (with the ability to
	use other backends).

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/IScreensaverManager.cs: 
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/ScreensaverManager.cs: 
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying.addin.xml: Add an
	extension point for screensaver extensions for disabling the screensaver
	or power management while playing fullscreen.
	
	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/GnomeScreensaverManager.cs: 
	Implement a ScreensaverManager to control GNOME screensaver.

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingInterface.cs: 
	Use ScreensaverManager to inhibit the screensaver when switching to
	fullscreen, and re-enable it when switching away.

	* build/build.environment.mk:
	Add Banshee.NowPlaying to the references for Banshee.GnomeBackend to build
	GnomeScreensaverManager.

2008-07-17  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena/Hyena.Collections/RangeCollection.cs: Make
	CompareRanges static

2008-07-16  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena/Hyena.Collections/Tests/RangeCollectionTests.cs:
	Added some more tests, including negative indexes, and a real world
	IP address range test from Alan

	* src/Libraries/Hyena/Hyena.Collections/RangeCollection.cs: Fixed a serious
	bug with range and value-in-range comparisons exposed by MS.NET. The
	IComparable interface was removed from Range and the comparisons were
	split into the respective binary search implementations; no longer is
	Array.BinarySearch used either when searching for a value in a range
	so the comparison can be done inline without extra method calls; should
	be ever so slightly more efficient and works (all tests pass) on Mono
	and MS.NET

2008-07-15  Daniel Nylander <po@danielnylander.se>

	* data/banshee-1.desktop.in.in: Changed Comment to be translatable.

2008-07-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Query/UserQueryParser.cs: Patch from Michael
	Kaiser fixing issue with parsing user queries starting with a "-" (BGO
	#538203).  Fixes the two broken query parsing unit tests.

2008-07-01  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/X11NotificationAreaBox.cs:
	Ignore the first size allocation since it's the default window size and
	causes the notification area to resize to a huge dimension until a new
	request is queued for the actual icon size (BGO #540885)

2008-06-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Library/ThreadPoolImportSource.cs:
	Fix NRE that totally broke the Amarok importer.

	* src/Core/Banshee.Services/Banshee.PlayerMigration/AmarokPlayerImportSource.cs:
	Improve the Amarok importer, including fixes for broken rating importing.
	Also, migrate the podcast subscriptions.

2008-06-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastFeedModel.cs:
	Sort podcasts by case-insensitive title.

	* src/Extensions/Banshee.Daap/Daap/Database.cs: Fix bug with not
	specifying what meta fields to return when fetching playlists (actually
	crashed new RB and got bad data from old RB).

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapService.cs: Proxy UI
	actions to the main loop, and don't flash new shares within 5 seconds of
	starting the locator.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs: Make Disconnect
	and Import actions insensitive unless connected.  Handle disconnecting
	while loading the tracks (BGO #526817).  When we disconnect, show the
	disconnected error view.  Proxy ui actions to main loop.  While loading
	tracks, reload fewer times for big collections.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapPlaylistSource.cs: Proxy
	OnUpdated call to main.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Listen for
	the active source's Updated event and UpdateActions when it is raised.

	* src/Core/Banshee.Services/Banshee.Web/Browser.cs: Fix typo in UserAgent
	string (no closing parenthesis.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs:
	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Don't set a source
	as the active source unless source.CanActivate is true.

	* src/Libraries/Migo/Migo.Net/AsyncWebClient.cs: Some servers seem to
	return Bad Request when HttpWebRequest auto redirects (because it sets
	Content-Length:0, apparently) - so work around that by grabbing the final
	URI directly.  Fixes, for example, the ogg podcast of "this WEEK in Tech".

2008-06-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs: Fix
	bug I introduced yesterday for people starting w/ no db.

2008-06-26  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapService.cs: Make the
	service a DelayedInitializeService.  Seems to fix most (all?) of the
	problems finding shares on startup.

2008-06-26  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Remove WriteLines.

	* src/Core/Banshee.Services/Banshee.Collection.Database/FilterModelProvider.cs:
	Remove expensive ifnull call; all blank (empty or all white space) strings
	should now be saved as null.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	Increase the cache size if the library has > 10K tracks, use LogAll = true
	for sql debugging.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Update CoreTracks genre, composer etc to be null if blank/whitespace.
	Drop the CoreCache table - will be recreated as needed, and as a temporary
	table (small performance win).  Vacuum and analyze the db, for good
	measure.

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Remove
	expensive sort by Uri as the fallback for most non-URI sort options.

	* src/Libraries/Hyena/Hyena.Query/QueryTermNode.cs: Explicitly set the
	no-field-specified operator (to contains).

	* src/Libraries/Hyena/Hyena.Data.Sqlite/Tests/SqliteModelProviderTests.cs:
	Test that blank/whitespace strings get saved as null.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteUtils.cs: If a string is
	empty or whitespace only, save it as null.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Change
	Exists function to check sqltie_temp_master too.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Wrap the
	reload query (delete + insert into CoreCache) in a transaction.  Make the
	CoreCache table a TEMP table for performance.

2008-06-26  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit adds manual playlist (including play queue) sorting.  To
	manually sort a playlist, you need to turn off column sorting by clicking
	the sorted column until the sort arrow disappears (it has three states,
	asc, desc, manual sort order).

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Fix bug with my return-to-previous-playback-source code where if the Play
	Queue was the *next* playback source and was then emptied, it wouldn't
	fall back to the previous and/or current.  Also, force sorting by
	ViewOrder, enabling manual sort order.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Handle DragDrop for playlists, reordering the selected tracks.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Handle the new SortType (None) for playlists, sorting by ViewOrder.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Implement
	reordering and setting default order when adding tracks to a playlist.
	Adding tracks still uses a constant number of queries, but reordering uses
	N + 2 or 3 where N is the number of tracks you dragged.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Make sure the playlist order column is initialized w/ decent values.

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Add a
	MediaTypeName property, will be used for menu items and other UI for
	calling an item by a more descriptive name (eg Podcast, Video, etc).

	* src/Libraries/Hyena/Hyena.Data/SortType.cs: Add None type.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnHeaderCellText.cs: Don't
	draw an arrow if sort type is None.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/SortableColumn.cs: Explicitly set
	the default sort type to ascending.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_DragAndDrop.cs:
	Add protected helper method GetDragRow (int y) that returns the drop row
	index for a given y, such that if over the top half of a row, returns that
	index, else returns the one after.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	Add protected helper, TranslateToListY that subtracts the header height.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Factor out the reorder line painting into its own method, and fix a bug
	where the line wasn't drawn if the position was after the last row.

2008-06-25  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit has a few goodies.  The track header info for radio stations
	is much improved, showing song information (if we have it) plus the
	station name.  Transferring of DAAP tracks to the library (by DnD and via
	Importing) works now (with smooth progress updates for the transfer).  The
	AddTrack to library job is now cancellable.

	* src/Extensions/Banshee.Daap/Daap/Database.cs: Rework the Fetch/Stream
	methods to not require a Track object, but only the track_id and type,
	which is all they really need.  This lets us avoid the O(n) track lookup.
	Add yield return progress updates to the DownloadTrack method.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs: Implement
	CopyTrackTo and Import so that dragging and importing tracks from a DAAP
	share into the library works.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapTrackInfo.cs: Tweak the
	mimetype to save the DAAP.Track's Format without modification.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapPlaylistSource.cs: Get a
	more accurate count if some (or all) tracks are null.

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSource.cs:
	Set the track's Album and Artist from the station editor.

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/StationEditor.cs:
	Factor out the table-row entry code, and add a Station Creator row (aka
	artist).

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.cs:
	Ensure no user job is displayed for less than 1 second, to avoid things
	appearing and disappearing so fast some times.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Refactor a lot of code, and special case RadioTrackInfo objects, tacking
	on "on {radio station name}" to the second line if it has an artist or
	album, or just using the station name as the second line if it doesn't.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTile.cs: When
	the stop button is pressed and confirmed, set the job title to
	"Stopping..." and make the button not sensitive.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Not sure
	what SourceMergeType.All is really for, but treat it the same as
	SourceMergeType.Source.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Override
	AddAllTracks the same as AddSelectedTracks is overriden.  Allow cancelling
	the add job.

	* src/Core/Banshee.Services/Banshee.ServiceStack/IUserJob.cs: Expose
	IsCancelRequested property.

	* src/Core/Banshee.Services/Banshee.Streaming/RadioTrackInfo.cs: Default
	the title/artist/album for the track to its parent's values.

	* src/Core/Banshee.Services/Banshee.Collection.Database/CachedList.cs: Add
	another static helper for creating a cached list from an entire model.

	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs: Bring code over
	from stable, that when given a new track title splits it on " - " if the
	track.IsLive.

2008-06-25  Bertrand Lorentz <bertrand.lorentz@gmail.com> 

	* build/m4/banshee/boo.m4: Add a disable-boo flag. If boo is not present and
	disable-boo is not set, configure will fail (BGO #532420).

2008-06-25  Bertrand Lorentz <bertrand.lorentz@gmail.com> 

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs: Fix
	bug where the repeat and shuffle mode were restored when switching
	between two Last.fm stations (BGO #538946).

2008-06-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Query/Tests/QueryTests.cs: Make the query
	tests that used to pass pass again.

2008-06-25  Aaron Bockover  <abock@gnome.org>

	This commit fixes two new errors exposed due to fixes in gmcs trunk

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/PodSleuthDevice.cs: Due to 
	different assignment evaluation, type checking happens differently so
	int can't be assigned to short during zero-value initialization
	
	* src/Core/Banshee.Services/Banshee.MediaProfiles/MediaProfileManager.cs:
	Update ignore pragma for the different (more correct) warning 
	that is thrown now

2008-06-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Patch from Sandy Armstrong and Bertrand Lorentz, fixes bug where
	notification popups were no longer showing on track change (BGO #537004).

2008-06-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Lastfm.Gui/Lastfm.Gui/AccountLoginDialog.cs:
	* src/Libraries/Lastfm.Gui/Lastfm.Gui/AccountLoginForm.cs: Patch from
	Peter de Kraker adds ability to press enter from password entry on Last.fm
	login form to save and close the dialog (BGO #536328).

2008-06-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Daap/Banshee.Daap.mdp: Reflect addins mv and
	proxy file from last commit, new error view file and refs this commit.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs: Set the
	ErrorView when we fail to login to a share we detected.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapErrorView.cs: Tweak for
	trunk, subclassing from RoundedFrame and no border, and implementing
	ISourceContents.

	* src/Extensions/Banshee.Daap/Makefile.am:  Add the new error view.

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Listen for changed to the
	active source's Nereid.SourceContents property, keeping it synced - so
	that we can change to the error source for a daap share, and then back to
	the normal contents by unsetting the property.

2008-06-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Daap/Daap/Database.cs: Style.

	* src/Extensions/Banshee.Daap/Resources/Banshee.Daap.addin.xml:
	* src/Extensions/Banshee.Daap/Banshee.Daap.addin.xml: Move up from
	Resources, and add original DAAP plugin authors.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapProxyWebServer.cs: Copied
	from stable branch.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapService.cs: Create a new
	proxy server instance.  Make new shares pulsate.  Dispose shares
	recursively.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs: Prevent creating
	playlists/smart playlists, initialize count to 0, [un]register our
	database with the proxy server.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapTrackInfo.cs: Use the proxy
	server url, don't set CanSavetoDatabase to false, that prevents daap
	tracks from being used with the queue.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapPlaylistSource.cs: Override
	quite a few things: no removing/deleting tracks, renaming, unmapping, or
	adding tracks.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapContainerSource.cs:
	CanRename = false.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapErrorView.cs: Copied from
	stable, not yet used.

	* src/Extensions/Banshee.Daap/Makefile.am: Add the proxy server class,
	move the addins file.

2008-06-24  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ClassicTrackInfoDisplay.cs:
	Split out layout rendering and event logic from TrackInfoDisplay, 
	which is now abstract, into ClassicTrackInfoDisplay so the widget is 
	now easier to maintain and also new displays can be built by extending 
	TrackInfoDisplay - the extending class only has to worry about 
	rendering frames (no animation, group, xfade, etc.)

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/TrackInfoPopup.cs:
	* src/Extensions/Banshee.MiniMode/Banshee.MiniMode/MiniModeWindow.cs:
	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	Updated to use ClassicTrackInfoDisplay

2008-06-24  Gabriel Burt  <gabriel.burt@gmail.com>

	Importing playlists (.m3u and .pls) should work again.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapPlaylistSource.cs: Fix
	typo/bug.

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Uncomment out
	the playlist import action/handler.

	* src/Core/Banshee.ThickClient/Banshee.Library.Gui/FileImportSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Library.Gui/FolderImportSource.cs:
	Set some default shortcut folders for the file choosers, and set a
	FileFilter from the white listed files for the File importer.

	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs: Add
	exception handling/logging.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportManager.cs:
	Make string [] of white listed extensions public/readonly.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Reduce duplication in still-ugly *ForUri static methods.

	* src/Core/Banshee.Services/Banshee.Playlists.Formats/PlaylistParser.cs:
	Dispose of the input stream when finished with it.

	* src/Core/Banshee.Services/Banshee.Playlists.Formats/PlaylistFormatBase.cs:
	Add TODO.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistFileUtil.cs: Add
	ImportPlaylistToLibrary method, and use it for the Import Playlist(s)
	actions.  Implement the ImportPlaylistWorker class to work with trunk.

	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs: Add
	convenience method GetTrackIdForUrl that uses the DatabaseTrackInfo
	methods.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add some indices, and fix a bug where the changes from migration 12 were
	not also done for the intial db creation code.

	* src/Libraries/Hyena.Gui/Hyena.Gui/GtkUtilities.cs: Add two methods, one
	for creating a FileFilter from a string [] of extensions, and one for
	setting a bunch of shortcut folders for a file chooser (w/ try/catch).

2008-06-23  Gabriel Burt  <gabriel.burt@gmail.com>

	Some good changes to the DAAP extension.  It should now load the remote
	track list much much faster.  Still needs work though.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Bind the ExternalId in DatabaseTrackInfo.

	* src/Extensions/Banshee.Daap/Daap/ServiceLocator.cs: Clean up logging.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapService.cs: Remove the
	container source when disposing the service.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs: Get rid of the
	Dictionary track_map (instead use the CoreTracks.ExternalId column),
	improve logging, and purge tracks and unmap playlists when disposed.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapTrackInfo.cs: Set the
	MimeType and ExternalId properties.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapPlaylistSource.cs: First
	pass at making playlists much more efficient (one SQL command instead of
	N).

2008-06-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Avoid
	collection modified exception in AddSource.

2008-06-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Remember the last playback source when switching to the play queue, so
	when the queue is empty we can switch back to it.

	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	Have the playback source follow the active source when first started up.

2008-06-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellQueryText.cs:
	New class that shows the Text of the object, or if blank, a given string.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/QueryFilterView.cs:
	A simple ListView derivative for showing a ColumnCellQueryText column.

	* src/Core/Banshee.ThickClient/Banshee.ThickClient.mdp:
	* src/Core/Banshee.ThickClient/Makefile.am: The new files above.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	Add a genre browser, hardcoded in for now (like artist/album).  We should
	make these configurable, rearrangable, etc.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseQueryFilterModel.cs:
	Class that makes it very easy to have a new database-backed model for
	filters based on arbitrary columns from CoreTracks.  Currently used for
	the new genre browser.

	* src/Core/Banshee.Services/Banshee.Collection.Database/FilterModelProvider.cs:
	New class, derived from SqliteModelProvider, used for the new model
	mentioned above.  Overrides the Select statement so we'll be able to do
	things like "select distinct year/10" to get the decades of a track
	collection.

	* src/Core/Banshee.Services/Banshee.Collection.Database/QueryFilterInfo.cs:
	New class for each result row of the FilterModelProvider.  Holds the
	value, eg the decade in the above example, and has a settable Title.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseFilterListModel.cs:
	Update FetchCount to 40, implement new CachesValues property, and don't
	require the connection be a BansheeDbConnection.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistListModel.cs:
	Tweak both reload SQL fragments for performance.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/ICacheableDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/CachedList.cs:
	Add CachesValues property.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Implement CachesValues, and fix IndexOf to use new, improved
	cache.IndexOf.

	* src/Core/Banshee.Services/Banshee.Collection.Database/IDatabaseTrackModelCache.cs:
	Change IndexOf method to accept a ICacheableItem, and add an override that
	takes a cache_entry_id object.

	* src/Core/Banshee.Services/Banshee.Services.mdp:
	* src/Core/Banshee.Services/Makefile.am: Add new files.

	* src/Libraries/Migo/Migo.Syndication/MigoItem.cs:
	* src/Libraries/Hyena/Hyena.Data/ICacheableItem.cs:
	* src/Core/Banshee.Core/Banshee.Collection/CacheableItem.cs: CacheEntryId
	is now an object.

	* src/Libraries/Hyena/Hyena.Query/IntegerQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/StringQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/NullQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/DateQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/QueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/TimeSpanQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/QueryField.cs: Add abstract LoadString
	method and implement in subclasses.  Also fix the
	NullQueryValue.IsNullOrEmpty operator.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Add new
	AddColumn protected method so subclasses can manually define their
	columns.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs: Make classes
	public, not internal.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Implement new
	IndexOf methods, and check model.CachesValues, and if so, select straight
	out of the CoreCache table the stored distinct genre values, say.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/IListView.cs: Expose the
	SelectionProxy.

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/StringQueryValueEntry.cs: Use
	ParseUserQuery instead of SetValue, since the input text is from the user.

2008-06-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Recommendations/RecommendationPane.cs:
	Use the Banshee.Kernel to schedule/cancel recommendation refresh jobs.

2008-06-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/DownloadManager/DownloadUserJob.cs:
	Change the download user job's name to specify it's downloading podcasts.

2008-06-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	Don't put (disconnected) in the source name; it confuses some users,
	making them think scrobbling won't work, it's not very useful, and it
	makes the source name quite long.

2008-06-21  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying.addin.xml: Define
	the new FullscreenAdapter extension point

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenAdapter.cs:
	The manager fullscreen adapter that also provides stock GTK fullscreening

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	Get rid of the type hint since it really confuses older Compiz (on 10.3)

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/IFullscreenAdapter.cs:
	A basic interface for FullscreenAdapter extensions which allow platforms
	to define solid fullscreen behavior above and beyond that which stock
	GTK can provide

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingInterface.cs:
	Use the FullscreenAdapter stuff to go fullscreen

	* src/Backends/Banshee.NowPlaying.X11/Banshee.NowPlaying.X11: An X11 
	specific backend for providing an IFullscreenAdapter extension to the
	now playing video extension; this binds the hard and valued work of
	BaconResize found in Totem. Respek.

	* build/m4/banshee/bnpx11.m4:
	* src/Backends/Banshee.NowPlaying.X11/libbnpx11/bacon-resize.c: 
	* src/Backends/Banshee.NowPlaying.X11/libbnpx11/bacon-resize.h: Lovingly
	borrowed from our good friends, Totem. <3 Bastien. That is, the X11/XRandR
	support for doing proper fullscreen in some annoying situations, and the
	configure foo to detect it at build time

2008-06-20  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Recommendations/RecommendationPane.cs:
	Fix remaining layout and style issues, handle height allocation enforcement

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Recommendations/SimilarArtistTile.cs:
	Created a SimilarArtist tile

2008-06-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Collection/IBasicTrackInfo.cs: Patch from
	Peter de Kraker adding AlbumArtist property (BGO #539305).

2008-06-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Have AlbumArtist
	fall back on ArtistName.  Fixes issue with Last.fm cover art.

2008-06-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Try to subscribe to any uri passed on the command line that contains rss,
	xml, feed, or starts with itpc.

2008-06-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Makefile.am: MD sorting.

	* src/Clients/Nereid/Nereid/ViewContainer.cs: Change the main vbox spacing
	to 8px, like all the other boxes.

2008-06-19  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/ViewActions.cs:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Enabled the equalizer again in the UI

	* gstreamer/equalizer/gstiirequalizer.c:
	* gstreamer/equalizer/remove-n-and-3-bands.diff: Rename the built-in
	equalizer element 'banshee-equalizer' so we don't have to do as much
	inspection at runtime to figure out if the element is built-in or not

	* libbanshee/banshee-player-equalizer.c: Added a _bp_equalizer_new function
	that will always return a non-buggy equalizer or NULL; that is, it will
	check to see if the built-in equalizer is available, and if not, if
	the system equalizer is available /and/ is 0.10.9 or newer; the detection
	state is saved so the probing only needs to be done once

	* libbanshee/banshee-player-pipeline.c: Use _bp_equalizer_new and only
	create the other elements if we were actually given an equalizer (instead
	of always creating the other elements and unreffing if the equalizer was
	not returned)

	* libbanshee/banshee-player-equalizer.h: Expose _bp_equalizer_new	

	* libbanshee/banshee-player-private.h: Added a equalizer_status field to
	the private player structure

	* src/Core/Banshee.Core/Resources/translators.xml: Updated

2008-06-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Widgets/RoundedFrame.cs: Fix the
	OnSizeRequested override so that the Recommendations pane is the right
	height.  Proper implementation gleaned from gtkframe.c.

2008-06-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Fix misleading API, where setting the Rating on a DatabaseTrackInfo would
	automatically save.  Now if you want that behavior, use the SavedRating
	property.  This is the property now bound to the ListView, for example.

2008-06-19  Sebastian Dröge  <slomo@circular-chaos.org>

	* gstreamer/equalizer/Makefile.am:
	Link the equalizer with libgstaudio-0.10 to actually make it work.

2008-06-18  Gabriel Burt  <gabriel.burt@gmail.com>

	First pass at bringing the recommendations extension back.  It's got three
	big bugs atm: 1) background isn't white 2) height is too small 3) the
	similar artist tiles are not sized properly (they're tiny).

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Recommendations/RecommendationActions.cs:
	Small class for adding/removing/handling the Show Recommendations action.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Recommendations/RecommendationService.cs:
	Ported from 0.13.2, listens to the source changes and player engine
	changes and shows the recommendation pane when appropriate.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Recommendations/RecommendationPane.cs:
	Ported from 0.13.2 but made to use the Lastfm library, shows similar
	artists and the top albums and tracks for an artist.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSourceContents.cs:
	Move the TitledList class to not be an inner class; should really be in
	its own file.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.addin.xml: Update authors,
	add recommendations service.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.mdp: Add recommendations
	source files, and add hyena refs.

	* src/Extensions/Banshee.Lastfm/Makefile.am: Add recommendation sources
	and resouces.

	* src/Extensions/Banshee.Lastfm/Resources/RecommendationMenu.xml: Brought
	over verbatim from 0.13.2.

	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/BaseClientWindow.cs: Add
	ViewContainer property so that recommendations can put itself below the
	track list.

	* src/Core/Banshee.Widgets/Banshee.Widgets/Tile.cs: Add a convenience ctor
	for setting the primary text.

	* src/Libraries/Lastfm/Lastfm.mdp: Add a bunch of assembly refs.

	* src/Libraries/Lastfm/Lastfm.Data/DataEntry.cs: Add a couple missing
	properties to the SimilarArtist class.

	* src/Libraries/Lastfm/Lastfm.Data/LastfmData.cs: Set the collection this
	class backs to a static empty collection until it's loaded its own, so
	that the ICollection fucntions will not crash if called before its set.
	Move download code into DataCore.

	* src/Libraries/Lastfm/Lastfm.Data/DataCore.cs: Moved a bunch of functions
	here from LastfmData, and expose a new DownloadContent method so that the
	recommendations extension can download cover art and cache it in the
	lastfm cache.

	* src/Libraries/Lastfm/Lastfm.Data/DataEntryCollection.cs: In the
	XmlNodeList ctor, handle the list being null (used by the static
	collection mentioned in LastfmData above).

2008-06-18  Aaron Bockover  <abock@gnome.org>

	* gstreamer/equalizer/: Copied the GStreamer equalizer (10-band) element
	from GStreamer CVS so we can include it without depending on the very
	latest GStreamer. It has a number of necessary bug fixes which won't
	be available to many users for quite some time through normal distribution
	channels

	* gstreamer/COPYING: A copy of the LGPL
	
	* gstreamer/gst-package.mk: Define some metadata required for GStreamer
	plugins inside of the main GStreamer build environment

2008-06-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Fix crasher caused by trying to migrate playlist data from old (pre
	0.13.2) versions of Banshee (BGO #538993).

2008-06-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/OverlayWindow.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	Patch from Alex Launi, adds some parenthesis that Mono 1.2.6 seems to need
	to compile Banshee (BGO #538973).

2008-06-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Another unnecessary type check.

2008-06-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Hardware/HardwareManager.cs: Remove
	unnecessary type check.

2008-06-17  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/RadioColumnController.cs:
	Removed in favor of the XML column controller stuff I completely forgot
	that I had implemented

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSource.cs:
	Implement the column controller in XML

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs:
	Get action labels and icons through source inheritance 

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Allow the
	track properties action to have its settings overridden

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Gabe implemented
	GetInheritedProperty that will look for a given property in the
	source chain, walking up to the parent

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_DragAndDrop.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs:
	Fixes to ensure that the view will still work if there are no 
	adjustments (not packed in a scrolled window) or no model is set

2008-06-17  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit adds support for multi-artist (compilation) albums.  It
	triggers a metadata refresh for already imported items to get the
	AlbumArtist metadata from the files, and gets it for new ones on import.
	It also writes AlbumArtist back to the files if the preference is set.
	Given proper AlbumArtist info (editable in the information editor), the
	issues with sorting and many-copies-of-one-album in the album list should
	be fixed (BGO #517671)

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs: 
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdTrackInfo.cs:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs:
	Remove the AlbumArtist code, since this is taken care of at a higher level
	now.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs:
	Set the default sort column to track #, since sorting by artist doesn't
	work for compilation albums.

	* src/Core/Banshee.ThickClient/Resources/banshee-dialogs.glade:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs: Add a
	row for editing the album artist.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs: 
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add ArtistName and ArtistNameLowered columns to CoreAlbums.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumListModel.cs:
	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs:
	Order by the Album Artist named (lowered), fixed issues with
	sorting/grouping for compilation albums.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	When saving, find/create the album based on the AlbumArtist, which is set
	equal to the ArtistName by default, unless explicitly set to something
	else.  Add the AlbumArtist virtual column property.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseFilterListModel.cs:
	Whitespace.

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Add AlbumArtist
	virtual property.

	* src/Core/Banshee.Core/Banshee.Streaming/SaveTrackMetadataJob.cs:
	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs: Save and load
	the AlbumArtist metadata.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Make sure
	the model's table gets listed first in the FROM list of tables.  Fixes a
	performance issue I was noticing occuring every so often.

2008-06-17  Sandy Armstrong <sanfordarmstrong@gmail.com> 

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/X11NotificationAreaBox.cs:
	Get top_level_window from notification area box's event_box, so
	that panel orientation can be determined correctly (BGO #537679)

2008-06-17  Aaron Bockover  <abock@gnome.org>

	Ok, so I'm calling internet radio support 85% complete. Needs more polish,
	but it's working pretty well. Am almost liking it.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	If the track's PrimarySource and its TrackEqualHandler is set, proxy
	the comparison through that handler; split out the ID comparison into
	a reusable static method

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Added
	a TrackEqualHandler delegate/property that allows a primary source to
	override the default TrackEqual comparison on its child tracks

	* src/Core/Banshee.Services/Banshee.Streaming/RadioTrackInfo.cs: Support
	holding a reference to a parent track

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSource.cs:
	Run the XspfMigrator on startup; provide a TrackEqualHandler that ensures
	any RadioTrackInfo object bound to the player engine is associated 
	with its parent station track in the controller/view

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/XspfMigrator.cs:
	Added the first pass at migrating old XSPF stored playlists, so we don't
	piss users off by forgetting about their old stations :)

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/RadioColumnController.cs:
	Added an 'Artist' column (the station creator/owner)

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/StationTrackInfo.cs:
	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/StationEditor.cs:
	Reverted to not using a StationTrackInfo since we don't need it

2008-06-16  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs:
	Added the column for the Comments field

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	Support a TrackPropertiesHandler property that is an InvokeHandle; if set
	it runs the handle instead of the default track editor dialog; this allows
	sources to provide their own track editor

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSource.cs:
	Support station adding, editing, playback, and a custom column controller,
	making internet radio maybe 70% complete; it works, but it's still missing 
	polish and finishing touches, so stay tuned

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/RadioColumnController.cs:
	Custom column controller that exposes and customizes applicable fields
	for internet radio stations

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/StationEditor.cs:
	Added rating and support loading and saving of station data

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/StationTrackInfo.cs:
	DatabaseTrackInfo wrapper, not in use yet

2008-06-16  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.InternetRadio/: Created the internet radio 
	extension skeleton - it currently doesn't do anything

	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/InternetRadioSource.cs:
	The parent radio source, does nothing right now
	
	* src/Extensions/Banshee.InternetRadio/Banshee.InternetRadio/StationEditor.cs:
	Ported from legacy

	* src/Extensions/Banshee.InternetRadio/ThemeIcons/: Added radio icons

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs:
	* src/Core/Banshee.Services/Banshee.Library/VideoLibrarySource.cs:
	* src/Core/Banshee.Services/Banshee.Library/MusicLibrarySource.cs:
	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastSource.cs:
	Updated source orders

2008-06-16  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	Fix some special case playback issue that was broken depending on cache
	state between library and FSQ - if an item is not available yet, do not
	disable the play_enqueued state, instead defer to the next reload; fix
	the regression where the source was not visible at startup; I really hope
	this fixes the last of the FSQ issues - it's working *really* well for me
	but I am about to stab my eye balls out over this code.

	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs:
	* src/Libraries/Hyena/Hyena.Collections/QueuePipelineElement.cs: Removed
	two errant write lines

2008-06-16  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	Lots of bug fixes with FSQ behavior around starting a new instance with
	items in the queue, queueing items remotely, and playing back from the
	queue automaticaly when --play-enqueued is passed
	
	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs: Major
	update to use the new QueuePipeline and DirectoryScannerPipelineElement
	for improved parallelism, fixed threading issues, and more readable and
	reliable code

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportManager.cs:
	Added an ImportResult event; small API cleanup

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportResultHandler.cs:
	New delegate and args class that the DatabaseImportManager uses for the
	new result event

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Remove unnecessary casting

	* src/Libraries/Hyena/Hyena.Collections/QueuePipeline.cs: Container class
	for the async queue pipeline; links elements together

	* src/Libraries/Hyena/Hyena.Collections/QueuePipelineElement.cs: Base
	element class for the pipeline; items pushed into the element's queue are
	processed async and then pushed to the downstream element in the pipeline,
	which may run in its own thread; this allows for good parallelism in an
	easy, safe way (i.e. walk a directory tree while processing results from
	earlier in the walk at the same time)

	* src/Libraries/Hyena/Hyena.Collections/WriteLineElement.cs: A simple
	sync element that dumps results to stdout

	* src/Libraries/Hyena/Hyena.Collections/Tests/QueuePipelineTests.cs:
	Some unit tests for QP/QPE

	* src/Core/Banshee.Services/Banshee.Library/HomeDirectoryImportSource.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:
	* src/Core/Banshee.ThickClient/Banshee.Library.Gui/FileImportSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Library.Gui/FolderImportSource.cs:
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastImportManager.cs:
	Updated to reflect small API changes in base ImportManager class

	* src/Core/Banshee.Services/Banshee.Base/ThreadAssist.cs: 
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedMessageBar.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Remove
	EventHandler override for doing Invoke/ProxyToMain; just use InvokeHandler

	* src/Core/Banshee.Core/Banshee.IO/DirectoryScannerPipelineElement.cs:
	Moved the directory scanning code from ImportManager to a nice
	QueuePipelineElement so it can be reused inside threaded queue pipelines

	* src/Core/Banshee.Core/Banshee.Base/ApplicationContext.cs:
	* src/Libraries/Hyena/Hyena.CommandLine/CommandLineParser.cs: Remove the
	notion of --enqueue and just assume anything that does not start with --
	is a 'file'

	* src/Clients/Halie/Halie/Client.cs: handle files after all commands are
	handled, so the remote process can get an idea of what is coming

	* src/Clients/banshee-1.in: Added --redirect-log argument that dumps
	stdin/error to ~/.config/banshee-1/log; sort of a hack job
	
	* data/banshee-1.desktop.in.in: Pass --redirect-log and remove --enqueue
	
	* build/m4/shamrock/nunit.m4: Fix nunit detection

2008-06-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService_Interface.cs:
	Patch from Bertrand Lorentz to properly dispose the podcast actions when
	the extension is disposed (BGO #537066).

2008-06-12  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Ignore the prelit state if we're not embedded in a combo, fixes an
	works around a bug with some themes (ubuntu studio in particular)

2008-06-12  Aaron Bockover  <abock@gnome.org>

	* src/Clients/banshee-1.in: Ensure we're not always passing --debug to
	mono; this was quite an oversight and the wrapper script logic from
	0.13.x has been ported here - should account for about a 5MB savings of
	RSS on startup and could fix a number of mysterious leaks, since in 
	many cases Mono leaks stack traces when an exception is thrown in --debug
	mode (only in --debug mode, Mono does not leak otherwise); Whoops.

	* src/Core/Banshee.Core/Resources/translators.xml: Updated

	* configure.ac: Bump version and turn on the dev build

2008-06-06  Alan McGovern  <alan.mcgovern@gmail.com>
	
	* src/Libraries/Migo/Migo.Syndication/RssParser.cs:
	XmlDocument can't load xml which starts with whitespace.

2008-06-05

	Banshee 1.0 Final (1.0.0) Released

2008-06-05  Aaron Bockover  <abock@gnome.org>

	* libbanshee/banshee-player-pipeline.c: Enable the plugin installer support

	* libbanshee/banshee-player-private.h:
	* libbanshee/banshee-player-missing-elements.c: Keep the missing element
	details list preserved throughout the instance and allow showing the 
	installer for each different missing codec, but only once per codec

2008-06-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Avoid NRE.

2008-06-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Fix bug in migrating download preference for feeds.

2008-06-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Fix bug with our cell_context.Drawable going missing b/c we weren't
	transferring it to the new cell_context within OnStyleSet.

2008-06-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs: Set
	DelayShow = true to avoid it popping up so briefly so often.

2008-06-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs: Remove some
	verbose logging.

	* src/Extensions/Banshee.Podcasting/Resources/GlobalUI.xml:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Add
	the Subscribe to Podcast menu item to the Media menu.

2008-06-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	Only try 5 unplayable items instead of 20 before stopping playback.

2008-06-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellPositiveInt.cs:
	Prevent NRE (BGO #536724).

2008-06-04  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	Use Gtk.Rc.GetStyleByPaths to grab the GtkTreeView style directly and
	attach it to our ListView; this is the proper "fix" to bug (BGO #534731),
	though the bug in LP is again, still quite valid

	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListViewBase.cs:
	Reverted the hacky version of my theme fix from earlier today

2008-06-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Migo/Migo.Syndication/FeedManager.cs: Get rid of some racy
	wait handle usage that was causing shutdown to freeze sometimes.

2008-06-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	* src/Libraries/Migo/Migo.Syndication/RssParser.cs: Fix bug with earlier
	fix for <item> guids that would cause some duplicates under some
	circumstances.

2008-06-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs: Fix
	bug with link we were generating for the Last.fm track page (BGO #536682).

2008-06-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Remove the
	icon from the Source Rename action (BGO #536559).

2008-06-04  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_DragAndDrop.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListViewBase.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs:
	A pretty disgusting hack that forces the style of our source view 
	GtkTreeView into our custom ListView widget so at least the ListView 
	will end up with the same color set as the GtkTreeView; this is a 
	giant and ugly hack that works around a pretty serious bug in some of 
	Ubuntu's themes where the selection background color is different for
	GtkTreeView widgets than for other widgets causing inconsistency and 
	usability issues when reading text on the darker background (BGO #534731);
	https://bugs.launchpad.net/ubuntu/+source/human-theme/+bug/237261

	The only reason I opted to work around this downstream bug was that some
	users reported it difficult to read text due to the contrast issue, so
	I view this as a usability problem more than a cosmetic one.

2008-06-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.MediaProfiles/MediaProfileManager.cs:
	Avoid NRE, fixes BGO #536234.

2008-06-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	* src/Libraries/Migo/Migo.Syndication/FeedItem.cs:
	* src/Libraries/Migo/Migo.Syndication/Feed.cs: Fix bug with the guid we
	use for identifying podcast items.  Some feeds don't give a guid for
	items, so we were using the <link>, but that isn't unique.  Instead, fall
	back to using a combination of the title and pubdate.  Fixes BGO #536555.

	* src/Core/Banshee.ThickClient/Banshee.Gui/ViewActions.cs:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Comment out the eq actions.

2008-06-04  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedSeekSlider.cs:
	When the widget is created and the engine is in the paused state, 
	synthesize an engine iterate event so the correct state is reflected
	in the slider and label (BGO #536564)

	* src/Core/Banshee.Widgets/Banshee.Widgets/StreamPositionLabel.cs:
	Implement OnSizeRequested to properly do size requisitioning (BGO #536564)

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/TrackInfoPopup.cs:
	Updated to reflect small API change

2008-06-04  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Sources/ISource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/Source.cs:
	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs:
	Disabled exporting of the source manager and its children over DBus
	since there are issues that need to be worked out in NDesk DBus itself
	before this can be useful and working (BGO #536526)

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedSeekSlider.cs:
	Expose the StreamPositionLabel

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/TrackInfoPopup.cs:
	Set FormatString on the slider's label to small, not bold; fix padding
	and spacing after dropping unnecessary alignment

2008-06-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Migo/Migo.Syndication/RssParser.cs: If we fail to load a
	XML document b/c it's invalid, remove any non-linebreak control
	characters from it and try loading it again.

2008-06-03  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Remove the Iterate event from the event mask
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/X11NotificationAreaBox.cs:
	Do not update the popup since now all of its children do their own
	state/event handling

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/TrackInfoPopup.cs:
	Removed a bunch of crappy legacy code for showing the position/duration
	via the label and progress bar; replaced with our standard 
	SeekSlider widget in horizontal mode (BGO #536396)

2008-06-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Migo/Migo.Syndication/RssParser.cs: If a XML blob isn't
	valid XML, log the actual error so we have a hope of fixing or working
	around the problem.

2008-06-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs: Avoid
	issue with last_scan being MinValue and trying to subtract retry_every
	from it.  Also, wrap the entire fetch loop in a try/catch to make sure we
	exit the user job and log any exception.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Don't stop the entire migration because one track fails.  Log the
	exception, and keep going.

2008-06-03  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	Fixed focus bug with metacity (BGO #531187)

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapInfoBar.cs: Use only the normal
	background color and create a darker version of that to do the subtle
	gradient behind the bar (BGO #536052)

2008-06-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs:
	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtService.cs:
	Remove verbose logging.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedSeekSlider.cs:
	Fix bug where stream position label didn't return to 'Idle' when playback
	was stopped.

2008-06-03  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	Reconfigure the window when we're shown so we'll fullscreen to the
	proper monitor (whatever monitor the parent is on) (BGO #535982)

2008-06-03  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	In Play (), always call OnPlayWhenIdleRequest if we are in the idle state,
	otherwise call Play on the base engine (BGO #534472)
	
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportManager.cs:
	Also add mpga to the white list

2008-06-03  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Remove the footer widget
	property after destroying the widget to avoid a property notification cycle

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapInfoBar.cs: Wrap UpdateUsage
	in an exception catch/log

	* src/Backends/Banshee.Hal/Banshee.HalBackend/HardwareManager.cs: Catch
	any exceptions that HAL might through (particularly if the device no
	longer exists) when adding devices (BGO #528957)

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportManager.cs:
	Added oga and ogv file extensions to the white list (BGO #532561)

	* src/Extensions/Banshee.BooScript/Resources/vorbis-oga-extension.boo:
	Added a sample script that will change the Vorbis profile to write files
	with a .oga extension instead of a .ogg (BGO #532561)

2008-06-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Get rid of unnecessary Save call; DatabaseTrackInfo already calls save
	when you set the Rating.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Expose rating and some other members as protected so subclasses can set it
	without triggering the save (eg to load initial state).

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodTrackInfo.cs:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpTrackInfo.cs: Hacky fix for
	BGO #535898, use the protected rating member instead of the Rating
	property to initialize the rating, to avoid callign Save when we didn't
	mean to.

2008-06-03  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Nereid/Nereid/Client.cs: Use ?? 

2008-06-03  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Halie/Halie/Client.cs: Translate a few query fields to be
	more familiar, allow setting volume and seeking, support window hiding

	* src/Clients/Nereid/Nereid/Client.cs: Added --help and --version displays

	* src/Core/Banshee.ThickClient/Banshee.Gui/IClientWindow.cs: Added Hide ()
	
	* src/Libraries/Hyena/Hyena.Collections/CollectionExtensions.cs: Added
	some Join methods

	* src/Libraries/Hyena/Hyena.CommandLine/Layout.cs: Support displaying
	specific sets of groups

	* src/Libraries/Hyena/Hyena.CommandLine/CommandLineParser.cs: Added a
	ContainsStart method

	* src/Libraries/Hyena/Hyena.CommandLine/LayoutGroup.cs: Added index support

2008-06-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs:
	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtService.cs: And
	recommit the patch, now that Aaron approves. :)

2008-06-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs:
	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtService.cs:
	Revert last commit, apparently abock has some grand plans he didn't tell
	me about.

2008-06-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs:
	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtService.cs: Add
	a CoverArtDownloads table to keep track of when we last tried to download
	cover art for an album and if we were successful.  With this information,
	we can avoid trying to download artwork for an album more than once a
	week.  Fixes BGO #535988.  Should also fix issue with the cover art job
	saying it's at 100% while it keeps going for many more minutes.

2008-06-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellFileSize.cs:
	Avoid NRE, fix BGO #536148.

2008-06-03  Jordi Mas <jmas@softcatala.org>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumListModel.cs:
	Add GetString to localizable strings

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistListModel.cs:
	Add GetString to localizable strings

2008-06-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs: Don't
	display cover art as we download, but do show the same Network icon as
	shown for the podcast download job.  Fixes BGO #535989.

2008-06-02  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Widgets/RatingMenuItem.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/RatingEntry.cs: Only set the rating
	when the mouse is released; fix some small issues with leave notify on
	the menu item (BGO #535338)

2008-06-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	Patch from Bertrand Lorentz fixing BGO #536306; stop listening for player
	engine events after we're disposed.

2008-06-02  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/X11NotificationAreaBox.cs:
	Added Boyd's panel icon sizing code from Tomboy so we display the best
	icon for a given panel size, only scaling if we're in SVG territory; 
	this is so hot I think I'll make my panel like KDE now (BGO #526333)

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying.addin.xml:
	Make the Now Playing extension required for now

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/TrackInfoPopup.cs:
	Set the window hint to notification to prevent compiz from doing strange
	things with the windows when they are mapped/unmapped (BGO #526326)

	* src/Core/Banshee.ThickClient/Banshee.Addins.Gui/AddinView.cs: Do not
	show addins where the category starts with 'required:'
	
	* src/Core/Banshee.Services/Banshee.ServiceStack/DBusServiceManager.cs:
	Avoid possible NRE (BGO #532215)

2008-06-02  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	Switch to the FSQ source when items get added to it, set it as the next
	playback source if the --play-enqueued argument has been passed either
	locally or remotely

2008-06-02  Jordi Mas <jmas@softcatala.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Add GetString to localizable strings

2008-06-02  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDuplicator.cs:
	Bootstrapper for locating and running an IDiscDuplicator extension

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	Implement disc duplication by calling into AudioCdDiscDuplicator if 
	it is supported

	* src/Core/Banshee.Services/Banshee.Hardware/IDiscDuplicator.cs: Interface
	to expose disc duplication support

	* src/Core/Banshee.Services/Banshee.Services.addin.xml: Define a 
	DiscDuplicator extension point

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/Brasero.cs:
	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/GnomeService.cs: Expose
	Brasero functionality internally

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/DiscDuplicator.cs:
	Implement an IDiscDuplicator that first tries to use Brasero and falls
	back to nautilus-cd-burner

	* src/Backends/Banshee.Gnome/Banshee.Gnome.addin.xml: Implement the 
	DiscDuplicator extension point

	* data/banshee-1.desktop.in.in: Change the Name field to 'Banshee' to
	eliminate redundancy between Name and GenericNam

2008-06-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	Avoid NRE, fixes BGO #535909.

2008-06-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/ViewContainer.cs: Add the separator back
	between the filter options and the Help item.  Attempt to fix the
	"GdkWindow unexpectedly destroyed" warnings (and related partial UI
	freezing) by hiding the old content, adding and showing the new content,
	and then removing the old content when switching source contents.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/FilteredListSourceContents.cs:
	Remove WriteLine cruft.

2008-06-02  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Base/PlatformHacks.cs: Removed the 
	gdk_set_program_class call since it's GUI code and not even really a
	platform hack

	* src/Core/Banshee.Core/Makefile.am: 
	* src/Core/Banshee.Core/Banshee.Core.dll.config: Removed .config, not needed

	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs: Replaced
	the PlatformHacks.GdkSetProgramClass call with the proper 
	Gdk.Global.ProgramClass property setter

2008-06-02  Sebastian Dröge  <slomo@circular-chaos.org>

	* src/Core/Banshee.Core/Banshee.Core.dll.config:
	* src/Core/Banshee.Widgets/Banshee.Widgets.dll.config: Only add
	the required dllmaps.

2008-06-02  Jordi Mas <jmas@softcatala.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	Add GetString to localizable strings

2008-06-02  Sebastian Dröge  <slomo@circular-chaos.org>

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	Rename local variable from db to scale as it holds a scale factor
	which was calculated from a db value and not the other way around.

	* src/Core/Banshee.Services/Banshee.Equalizer/EqualizerManager.cs:
	* src/Core/Banshee.Services/Banshee.Equalizer/EqualizerSetting.cs:
	0dB is passthrough and should be used as default value. 1dB will make
	the sound a bit louder and can already lead to clipping in rare
	situations.

	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerView.cs:
	Make the preamp levels more consistent with the eq levels and don't
	always do (level / 10) * 10.

2008-06-02  Sebastian Dröge  <slomo@circular-chaos.org>

	* src/Core/Banshee.Core/Banshee.Core.dll.config:
	* src/Core/Banshee.Core/Makefile.am:
	* src/Core/Banshee.Widgets/Banshee.Widgets.dll.config:
	* src/Core/Banshee.Widgets/Makefile.am: Add some missing dllmaps.

2008-05-30  Aaron Bockover  <abock@gnome.org>

	Banshee 1.0 RC1 (0.99.3) Released

2008-05-30  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NotificationArea/Makefile.am: Build fix

2008-05-30  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Bump to RC1

	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt/CoverArtJob.cs: Remove
	redundant status message part

2008-05-30  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Nereid/Nereid/ViewContainer.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/SearchEntry.cs: Make the 
	filter menu work by inserting a query part when items are selected

	* libbanshee/banshee-player-pipeline.c: Disabled the equalizer yet again
	because the element is still too buggy in GStreamer causing static

2008-05-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/Queue.cs:
	Don't use Hyena.DateTimeUtil since it has a bug with
	timezone/daylight-savings that reports times an hour off in some cases.
	Should fix BGO #528195.

2008-05-30  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs:
	Show the correct number of songs that are ripping in the status area

	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Clients/Nereid/Nereid/ViewContainer.cs: Removed disk usage stuff
	and added footer widget support

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: 
	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodTrackInfo.cs:
	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/DatabaseRebuilder.cs:
	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/UnsupportedDatabaseView.cs:
	Ported the database rebuilder and the unsupported database UI from 0.13.x
	so now unsupported databases can be rebuilt and users will at least know
	their shitty iPod won't work in Banshee because they used it with shitty
	iTunes. Buy an MTP device.

	* src/Dap/Banshee.Dap.Ipod/ThemeIcons/scalable/devices/*.svg: Added the
	vector versions of the iPods

	* src/Dap/Banshee.Dap/Banshee.Dap/MediaGroupSource.cs: 
	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Support the new DapInfoBar
	in the footer of the source to show the stats on audio, video, and data
	usage for each DAP

	* src/Dap/Banshee.Dap/Makefile.am:
	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapInfoBar.cs: Sweet display for
	showing disk usage stats

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapPropertiesDisplay.cs:
	Start of a GUI page for DAPs, not really used yet except for the iPod
	when the database can't be read

	* src/Core/Banshee.Widgets/Banshee.Widgets/MessagePane.cs: Cleaned up
	to derive directly from table, less window hackery

	* src/Libraries/Hyena/Hyena.Query/FileSizeQueryValue.cs: Added support
	for converting terabytes and petabytes (IT WILL HAPPEN ONE DAY - GOOGLE
	ALREADY PROCESSES 20PB/day - JUST WAIT)

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellRating.cs: Fix NRE

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/Theme.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/GtkTheme.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/RoundedFrame.cs: Support setting
	a pattern as the background for the rounded frame background

	* src/Libraries/Hyena.Gui/Hyena.Widgets/SegmentedBar.cs: More fixes,
	support horizontal padding, greadly simplified the segment rendering
	by using two pattern passes instead of N pattern passes, fixes bugs where
	a segment was shorter than the radius causing strange shit to happen

2008-05-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/ViewContainer.cs: Remove the fields listed in
	the menu that popped up when you clicked the icon next to the search
	entry, since they did nothing.  Will probably be added back later, and
	made to prepend "artist" etc fields.

2008-05-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Collections/Selection.cs: Don't clear the
	FocusedIndex when we clear the selection - they shouldn't be so tightly
	linked.  Fixes bug with pressing enter not playing the focused song.
	Fixes BGO #535587.

2008-05-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs: Respect
	copy-to-library when dragging FileSystemQueue items to the library.

2008-05-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Add property
	defining whether we support playlists or not.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastSource.cs:
	For now, at least, we don't support playlists.

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Show the Add to Play Queue option if the source is a db source, not just
	if it's a library source.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Hide
	playlist-related actions unless the primary source SupportsPlaylists.

2008-05-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Save and
	restore the expanded state of all primary sources.

2008-05-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Addins.Gui/AddinTile.cs: Make some
	text translatable.

	* src/Core/Banshee.Services/Banshee.Preferences/Page.cs: Change "Manage
	Extensions" tab to "Extensions".

2008-05-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/Source.cs:
	* src/Core/Banshee.Services/Banshee.Collection/AlbumListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection/TrackListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection/BansheeListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Remove a bunch of crufty code and replace a bunch of NIEXs with Log.Error.

2008-05-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Don't pulse the podcasts source when feeds are changes, just when items
	are added.

	* src/Libraries/Migo/Migo.Syndication/FeedUpdateTask.cs: If the feed
	hasn't been updated since we last checked, pass notify=false to feed.Save.

	* src/Libraries/Migo/Migo.Syndication/Feed.cs: Don't raise FeedsChanged
	when DownloadStatus set, just in Save and Delete.  Add override to Save
	that takes bool notify arg.

2008-05-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Don't throw
	an exception when CopyTo isn't implemented, but log a warning.

2008-05-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Move the
	NeedsReload methods into DatabaseSource so they can be used by
	PrimarySource and others.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Only reload
	when track(s) change if needed, otherwise just invalidate the cache.
	Should help some with performance/CPU usage when changing songs.

2008-05-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Fix crasher
	in save-selection by being properly defensive and not assuming the item
	pointed to by the selection focus is still in the model.

2008-05-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Fix bug where if the play queue was empty but you double clicked on it, it
	would go recursive/eat all your RAM.  Should fix BGO #535369.

2008-05-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Add a bool
	IsLocal property.  If it's false and you drag tracks to a LibrarySource,
	it will ask the owning PrimarySource to copy the file to a given location
	by calling its CopyTrackTo method defined here (and implemented in each
	non-local subclass).

	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	Reload the FSQ on start to make sure it shows itself if it had saved
	items.  Also, set IsLocal = true so dragging files between the libraries
	and it doesn't do a file copy.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Fix bug with importing to the Library not just from the audio folders.
	Implement CopyTrackTo.

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: Add commented
	out CopyTrackTo skeleton.

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Implement
	CopyToTrack - the nicest implementation in a way, because we get granular
	progress updates.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Add some NRE defense and debugging for a NRE I saw but don't understand.

	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs:
	Set IsLocal = true, and fix up AddTrack method so that if the file is from
	a IsLocal PrimarySource it just 'moves' it (eg changes the
	PrimarySourceId) but otherwise it asks the owning PrimarySource to copy
	the file to a location in the library folder.

	* src/Core/Banshee.Services/Banshee.MediaEngine/TranscoderService.cs: Set
	the updatd MimeType on the file after transcoding it.

	* src/Core/Banshee.Core/Banshee.Base/FileNamePattern.cs: Add a BuildFull
	convenience overload.

2008-05-29  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Widgets/SegmentedBar.cs: Add label support

2008-05-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Fix crasher introduced by
	yesterday's keybinding fix.  Thanks to wfarr for catching it.

2008-05-29  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerView.cs:
	Small rounding fix

	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerWindow.cs:
	Ported from glade, some fixes

	* src/Core/Banshee.ThickClient/Banshee.Gui/ViewActions.cs: Only allow one
	instance of the equalizer to be shown; present the open version if exists

	* src/Core/Banshee.ThickClient/Resources/banshee-dialogs.glade: Removed
	the equalizer

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs
	* libbanshee/banshee-player-equalizer.c: White space cleanup

	* libbanshee/banshee-player-pipeline.c: White space cleanup and removed
	a redundant element link

2008-05-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Halie/Halie/Client.cs: Don't turn strings that start with
	*:// into local file paths.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs: Add
	method for creating a station given a lastfm:// url.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	Listen for command line file arguments starting in lastfm:// and try to
	create new stations for them.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Handle feed:// command line files, subscribing to them.

	* src/Core/Banshee.Core/Banshee.Base/CoverArtSpec.cs: Add TODO

2008-05-29  Sebastian Dröge  <slomo@circular-chaos.org>

	* libbanshee/banshee-player-equalizer.c: (bp_equalizer_set_gain),
	(bp_equalizer_get_bandrange), (bp_equalizer_get_nbands),
	(bp_equalizer_get_frequencies):
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	Get the number of frequency bands from the element and always take
	the complete gain range. Guard against some possible crashes and
	don't return an array that is allocated on the stack to the caller
	who provided us with a correctly allocated array already.
	
	* libbanshee/banshee-player-pipeline.c: (_bp_pipeline_construct):
	Some cleanup and only use the capsfilter hack with equalizer versions
	that had the clipping bug on integer samples.

2008-05-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellPodcastStatusIndicator.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastItemView.cs:
	Change grey to mean the podcast item is old, and the blue indicator to
	mean the podcast item has been downloaded.  Different than iTunes, but
	then so are we.  (Plus we let you stream podcast items).

	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceModel.cs:
	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Fix up
	drag and droppability for sources and tracks.  Fix bug with sources having
	a border drawn around them when a dnd is cancelled.  Only allowed but
	not-yet-functional dnd is from DapSource subclass (eg Music) to a library.

2008-05-28  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Nereid/Nereid/Client.cs: Force the gtk-menu-popup-delay
	setting to be 225ms (the GTK+ default value) to avoid a nasty bug when
	it is possibly set to 0ms by some gtkrc files (BGO #524706)

2008-05-28  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdService.cs:
	Split audio CD preferences into a separate tab

	* src/Core/Banshee.Services/Banshee.Preferences/Collection.cs:
	* src/Core/Banshee.Services/Banshee.Preferences/Root.cs:
	Ensure sections and pages actually get inserted in the proper sort order

	* src/Libraries/Hyena/Hyena.Collections/CollectionExtensions.cs:
	* src/Libraries/Hyena/Hyena.Collections/Tests/RangeCollectionTests.cs:
	Moved SortedInsert into a new CollectionExtensions helper class

2008-05-28  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	Load from the local instance argument queue at startup

	* src/Clients/Halie/Halie/Client.cs: Handle some crasher cases

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Work around a shitty managed DBus bug where sending an empty dictionary 
	will crash - related to the other shitty null bug

2008-05-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	Fix bug with removing all items and the ListView crashing.

2008-05-28  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.FileSystemQueue/Banshee.FileSystemQueue/FileSystemQueueSource.cs:
	The new file system queue, much like the old local queue - not finished
	but mostly working

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Fixed source order

	* src/Clients/Halie/Halie/Client.cs: Support presenting the main window

	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Clients/Nereid/Nereid/Client.cs: Call NotifyStartupComplete in case
	an instance was already running and the new process exits quickly; this
	prevents GTK/GDK/GNOME from spinning a cursor if the process was started
	through a GUI launcher

	* src/Core/Banshee.ThickClient/Banshee.Gui/IClientWindow.cs: New interface
	for client windows to expose remote functionality

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Added support
	for an AutoAddSource property - if it's set to false an extension source
	will not get added automatically to the source manager

	* src/Core/Banshee.Services/Banshee.ServiceStack/IDBusObjectName.cs:
	An interface that can be used to override the export name of a remote object

	* src/Core/Banshee.Services/Banshee.ServiceStack/DBusServiceManager.cs:
	Support IDBusObjectName interface naming

2008-05-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Add the AccelGroup back as
	soon as the focus leaves the focused Gtk.Entry.  Fixes bug where if you
	searched, then click to select a track, and hit a keybinding, it wouldn't
	work until the second press.  Thanks to Jorge Castro for investigating.

2008-05-28  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Listen to the new DBusCommandService

	* src/Clients/Halie/Halie/Client.cs: Proxy files to the DBusCommandService

	* src/Core/Banshee.Services/Banshee.ServiceStack/DBusCommandService.cs:
	A light weight remote object that raises events for command line arguments
	and files that can be pushed into it

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Register the DBusCommandService

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs:
	Use InternalName

2008-05-28  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Halie/Halie/Client.cs: Added command line support for 
	mostly fully controlling the engine and the playback controller

2008-05-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Only set the
	AcceptableMimeTypes if they are null/haven't been set.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Parse the .is_audio_player output_formats key.  The last fix required to
	close BGO #531769.

2008-05-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Only load files from the audio_folders directories.

2008-05-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs: Set the
	FileSize for just-ripped tracks.  Fixes BGO #532077.

2008-05-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Query/QueryField.cs: Fix bug with querying and
	smart playlists with "genre!:rock" would still match Rock.
	Fixes BGO #533143.

2008-05-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenControls.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedSeekSlider.cs:
	Add method to disconnect the seek slider so it's not still listening for
	player engine events and trying to update itself after it's been
	destroyed.  Fixes BGO #535213.

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/QueryTermBox.cs: Be more
	defensive to avoid ArrayIndexOutOfBounds.  Fixes BGO #535269;

2008-05-28  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Halie/Halie/Client.cs: A new Banshee client that runs only
	only the console and proxies command line arguments into DBus calls to
	communicate with and control an already running Banshee client

	* src/Core/Banshee.Services/Banshee.ServiceStack/DBusConnection.cs: Moved
	the connection logic out of the service since it needs to be used before
	any services start at the client level for single instance reasons

	* src/Core/Banshee.Services/Banshee.ServiceStack/DBusServiceManager.cs:
	Cleaned up, use DBusConnection

	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/IPlaybackController.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/IPlaybackControllerService.cs:
	Worked around stupid issues in NDesk dbus so the controller actually works
	as a remote object now

	* src/Libraries/Hyena/Hyena.CommandLine/CommandLineParser.cs: Added
	an Arguments property and added internal logic to keep sort order preserved
	on the arguments so they can be iterated over in proper order

2008-05-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.CoverArt/CoverArtJob.cs:
	* src/Extensions/Banshee.CoverArt/Makefile.am:
	* src/Extensions/Banshee.CoverArt/CoverArtService.cs: Fix the build and
	put C# files in their proper namespace directory.

2008-05-28  James Willcox  <snorp@novell.com>

	* src/Extensions/Extensions.mds:
	* src/Extensions/Banshee.CoverArt/CoverArtJob.cs:
	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt.addin.xml:
	* src/Extensions/Banshee.CoverArt/Banshee.CoverArt.mdp:
	* src/Extensions/Banshee.CoverArt/CoverArtService.cs:
	* src/Extensions/Makefile.am:

	Add Banshee.CoverArt extension which allows user-initiated and
	automatic cover art fetching for the entire MusicLibrary.

	* src/Core/Banshee.Services/Banshee.Metadata.Rhapsody/RhapsodyQueryJob.cs:
	Close the response when we're done with it, fixes some timeout
	issues when fetching many things at a time.

	* src/Core/Banshee.Services/Banshee.Metadata.Embedded/EmbeddedQueryJob.cs:
	Don't assume Track.Uri is set

	* build/build.environment.mk: Add refs for Banshee.CoverArt extension
	* configure.ac: 

2008-05-28  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerView.cs:
	Fix small bug where when loading presets from the EQ editor caused the
	manager to set the dB value for the preamp to 10 times what the value
	should have been.

2008-05-27  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellStatusIndicator.cs:
	Fix bug where pixbuf wasn't centered in the cell

2008-05-27  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellPodcastStatusIndicator.cs:
	Added support for the classic new item blue ball

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastItemView.cs:
	Implemented a cell data handler to set the opacity on text renderers

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackInfo.cs:
	Implemented a StatusText cell and some helper properties

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastSource.cs:
	Added a Status column

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Added a virtual ColumnCellDataProvider method that is called as soon as
	a data item is bound to a cell so the view can configure the cell

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs:
	Added an opacity property

2008-05-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Change
	InternalName from banshee to banshee-1, so we actually set the process
	name correctly, register the right name with MMKeys, etc.

2008-05-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/RatingMenuItem.cs: Fix bug with
	not saving the rating when set from either the context menu or the
	notification menu.

2008-05-27  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/XmlColumnController.cs:
	Support changing the renderer on columns

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellStatusIndicator.cs:
	Renamed to Status indicator instead of Playback indicator

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs:
	Updated to reflect rename of the indicator object

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/Column.cs:
	Support removing and clearing renderers

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellPodcast.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Dialog/PodcastSubscribeDialog.cs:

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastSource.cs:
	Load the podcast icons from the theme, not as resources

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellPodcastStatusIndicator.cs:
	A custom indicator renderer to show podcast item status

2008-05-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Widgets/RatingMenuItem.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/RatingEntry.cs: Fix bug where
	preview-on-hover stars weren't cleared before showing the track context
	menu (or notification menu) so you'd see whatever hover stars had been
	there the last time you opened it (even if for another track).  Fixes BGO
	#534460.

2008-05-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/IDatabaseTrackModelCache.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Fix two bugs,
	one I introduced in my last big podcast commit that made the play queue
	keep repeating the same song, and another more subtle one, in our
	implementation of IndexOf for findind the index of an item in playlists.
	Fixes BGO #534863.

2008-05-27  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Equalizer/EqualizerManager.cs:
	Handle when the equalizer XML file does not exist

2008-05-27  Michael Monreal  <mmonreal@svn.gnome.org>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastActions.cs:
	Use gtk-add instead of gtk-new icon in the podcast source to match the
	Last.fm source. Fixes BGO #534817.

2008-05-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackInfo.cs:
	Return the item's PubDate as the ReleaseDate.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs: If
	the current track is a podcast item, display "from X published Y" instead
	of "by X from Z".

2008-05-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastUnheardFilterView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/FilteredListSourceContents.cs:
	Fix the build.

2008-05-25  Gabriel Burt  <gabriel.burt@gmail.com>

	This patch adds another filter to the podcast browser - the ability to
	filter on all/new/old items.  The default is to only show New Items, in
	keeping with the most common use case of podcast users.  Items are marked
	as old after being played.  They can be marked old manually via the
	Edit menu and track context menu, or by selecting one or more items and
	pressing y.

	* *.mdp: MonoDevelop changed some <Project> attributes across all these.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Add hack to be able to not handle FeedItem changes when doing bulk ops.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastQuery.cs:
	New class, commented out, will replace BansheeQuery when in podcasting.
	Zero work done on it so far.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastSourceContents.cs:
	Add another filter list view with three options: All Items, New Items, and
	Old Items.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastActions.cs:
	Change the Mark as Old keybinding to y (ala gmail archive).  Implement
	mark old/new.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/PodcastSourceContents.cs:
	Move go Banshee.Podcasting.Gui namespace directory.  Add the all/new/old
	filter view.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/PodcastSource.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/Models/PodcastItemModel.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/Models/PodcastFeedModel.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/Views/PodcastFeedView.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/Views/PodcastItemView.cs:
	Move to namespace directories.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellUnheard.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastUnheardFilterView.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastUnheardFilterModel.cs:
	New classes to implement the all/new/old filter.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackInfo.cs:
	Override IncrementPlayCount and set the item as old (if not already set)
	when incremented.  Catch exceptions in processing file w/ taglib#.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastSource.cs:
	Move PodcastListModel out of here.  Create the all/new/old filter model
	and add it to the FilterModels.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackListModel.cs:
	Moved out of PodcastSource into its own file.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumListModel.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastFeedModel.cs:
	DatabaseBrowsableListModel renamed to DatabaseFilterListModel, and
	ItemToFilterValue made protected.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.mdp:
	* src/Extensions/Banshee.Podcasting/Makefile.am: Reflect new files and
	moevs.

	* src/Extensions/Banshee.Podcasting/Resources/ActiveSourceUI.xml: Add
	track actions to the Edit menu (not just the track context menu).

	* src/Core/Banshee.ThickClient/Banshee.Gui/PersistentPaneController.cs:
	Use String.Format not +, properly handle setting a new Paned when one was
	already set (stop listening to old one's events), avoid saving when the
	value hasn't changed.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	Give parent class a name for us (albumartist) for unique gconf position
	entries

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/FilteredListSourceContents.cs:
	Take a name in the ctor so we can save positions in gconf per
	filtered-list type (eg podcast and albumartist, atm).  Go back and
	implement packing the N filter views into Gtk.Paneds.  Refactor
	LayoutLeft/Top code to be the same.

	* src/Core/Banshee.Services/Banshee.Collection/IFilterListModel.cs: New
	interface.

	* src/Core/Banshee.Services/Banshee.Collection/AlbumListModel.cs:
	Implement Clear.

	* src/Core/Banshee.Services/Banshee.Collection/BrowsableListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection/FilterListModel.cs: Rename,
	made to not require that the filter model itself be database backed (eg
	the all/new/old model is just an in-memory enum model).

	* src/Core/Banshee.Services/Banshee.Collection/BansheeListModel.cs:
	Comment out (should remove) virtual implementations that just threw NIE.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistInfo.cs:
	Move ICacheableItem up (to parent class of *TrackInfo).

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseBrowsableListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseFilterListModel.cs:
	Rename.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Handle the provider.Where clause being empty, add spaces around AND'd
	sql filter fragments from our filtering models.

	* src/Core/Banshee.Services/Banshee.Services.mdp:
	* src/Core/Banshee.Services/Makefile.am: New/moved files.

	* src/Libraries/Migo/Migo.Syndication/MigoModelProvider.cs:
	* src/Libraries/Migo/Migo.Syndication/MigoItem.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeModelCache.cs: Add
	using Hyena.Data because ICacheableItem moved there.

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Cosmetic
	changes, getting ready to refactor so sources can set/customize the fields
	they can be queried with.

	* src/Core/Banshee.Core/Banshee.Collection/AlbumInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/ArtistInfo.cs: Add empty ctor,
	inherit from CacheableItem.

	* src/Core/Banshee.Core/Makefile.am:
	* src/Core/Banshee.Core/Banshee.Core.mdp:
	* src/Core/Banshee.Core/Banshee.Collection/CacheableItem.cs: New class,
	just a simple implementation of ICacheableItem.

	* src/Core/Banshee.Core/Resources/translators.xml: Updated.

	* src/Core/Banshee.Core/Banshee.Base/CoverArtSpec.cs: Check that the
	escaped artist/album strings aren't empty either (not just null).

	* src/Libraries/Mtp/Mtp/MtpDevice.cs: Move LIBMTP_Init into static ctor,
	get rid of internal method that called it; wouldn't want to call it twice.

	* src/Libraries/Hyena/Hyena.Collections/Selection.cs: Add convenience
	properties for FirstIndex and LastIndex.

	* src/Libraries/Hyena/Hyena.mdp:
	* src/Libraries/Hyena/Makefile.am:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/ICacheableItem.cs:
	* src/Libraries/Hyena/Hyena.Data/ICacheableItem.cs: Moved here from
	Hyena.Data.Sqlite.

	* src/Libraries/Hyena/Hyena.Data/ICacheableModel.cs: Inherit ISelctable.

	* src/Libraries/Hyena/Hyena.Data/ArrayModelCache.cs:
	* src/Libraries/Hyena/Hyena.Data/ModelCache.cs:
	* src/Libraries/Hyena/Hyena.Data/DictionaryModelCache.cs: Specify that T
	must be ICacheableItem.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/ICacheableDatabaseModel.cs:
	Inheritance from ISelectable moved to parent interface.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: When
	restoring the selection across a reload, restore the focused index as
	well, if possible.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCell.cs: If the item to
	bind is null, set the bound object and parent object to null too.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/AccordionPane.cs: New class,
	completely not done (or really started).  Would be great to refactor the
	awesome column sizing code out of ListView so could be used by this.  The
	idea is a new Paned-type widget with N children with min/max/relative
	widths etc all set, and resizing one will resize others to their min
	width, etc.

	* src/Libraries/Migo/Migo.Syndication/FeedItem.cs: Add an index to IsRead
	since we'll be filtering on it a lot.

	* data/mimetypes.txt: Add video/ogg and video/x-theora.

2008-05-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Be more careful about NREs in the metadata migration.  And, in case we do
	hit an unexpected exception, close the user-job so it doesn't stay up
	forever.

2008-05-23  Sebastian Dröge  <slomo@circular-chaos.org>

	* libbanshee/banshee-player-pipeline.c: (_bp_pipeline_construct):
	Enable the equalizer again and workaround the clipping bug that will
	be fixed with gst-plugins-good 0.10.10. Also don't leak some elements
	if the equalizer plugin is not installed.

2008-05-22  Aaron Bockover  <abock@gnome.org>

	Banshee 1.0 Beta 2 (0.99.2) Released

2008-05-22  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Migo/Migo.Syndication/FeedItem.cs: Fix issue with feed
	item Guids being empty so we'd have duplicates of items.

2008-05-22  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Don't set the
	PersistentColumnController within the composite_view check, move it to
	TrackListView so it's more general.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/PersistentColumnController.cs:
	Set loaded to false whenever reloading the source's settings.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	When setting the model, also set the source on the controller if it's a
	PersistentColumnController.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs: Fix
	bug with column cache not being invalidated, which caused checkboxes to
	try to show up in the music library after ejecting an audio cd, causing a
	crash.  Also, don't do anything if we're already set to the controller in
	question.

	* src/Libraries/Hyena/Hyena.Data/ColumnDescription.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/FilteredListSourceContents.cs:
	Comment out verbose logging.

2008-05-22  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Bumped to 1.0 Beta 2 (0.99.2)

2008-05-22  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdService.cs:
	Improve eject-when-done-importing label.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellFileSize.cs:
	Display nothing for file sizes == 0.

	* src/Core/Banshee.Core/Resources/contributors.xml: Add and alphabetize
	names.

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/Brasero.cs: Add ... at
	end of Write to CD label.

	* NEWS: Updated for forthcoming 0.99.2 release.

2008-05-22  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Added a
	SelectionChanged event

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Allow the placeholders in the edit menu above the add to playlist entry

	* src/Core/Banshee.Core/Banshee.Base/Paths.cs: Added FindProgramInPath

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/Brasero.cs: A quick 
	hack to allow launching selected tracks in Brasero as an audio CD project

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/GnomeService.cs: Load
	Brasero support if it's found on the system

2008-05-22  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Offset the cell damage areas by the view adjustment values

2008-05-22  Gabriel Burt  <gabriel.burt@gmail.com>

	There were some pretty big performance issues with podcasting if you had
	quite a few items in your library.  The two issues were not having proper
	indices (to join CoreTracks.ExternalID = PodcastItems.ItemID for example)
	and hitting the database to get Migo.Feed/FeedItem/FeedEnclosure objects
	when we already had them cached in our MigoModelProviders' dictionaries.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Schedule a delegate job to reload the feeds on startup.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add an index on CoreTracks for the ExternalID column.

	* src/Core/Banshee.Core/Makefile.am:
	* src/Core/Banshee.Core/Banshee.Core.mdp:
	* src/Core/Banshee.Core/Banshee.Kernel/DelegateJob.cs: New class for
	running parameterless methods/delegates as a Job.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Add a
	CreateIndex convenience method, and make FetchSingle virtual

	* src/Libraries/Migo/Migo.Syndication/FeedItem.cs:
	* src/Libraries/Migo/Migo.Syndication/FeedEnclosure.cs:
	* src/Libraries/Migo/Migo.Syndication/Feed.cs: Add indices, speeds up
	podcast queries a whole lot.

	* src/Libraries/Migo/Migo.Syndication/MigoModelProvider.cs: Override
	FetchSingle to pull directly from the dictionary and avoid the DB entirely
	if possible (happens very frequently).

	* src/Libraries/Migo/Migo.Syndication/FeedManager.cs: Only download 2
	feeds at at time, not 4.

2008-05-22  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellCheckBox.cs: Save and
	reset the bound object on motion/pointer leave to a hover object variable
	and draw the checkbox as prelit if that's set

2008-05-22  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/PodcastSourceContents.cs:
	* src/Core/Banshee.ThickClient/Banshee.ThickClient.mdp:
	* src/Core/Banshee.ThickClient/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/ListBrowserSourceContents.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/FilteredListSourceContents.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/PodcastSourceContents.cs:
	Rename ListBrowserSourceContents to FilteredListSourceContents.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellDuration.cs:
	Right align durations.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Avoid passing null string to gtk.

2008-05-22  James Willcox  <snorp@novell.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTiles.cs:
	Set tooltips on the status label since it frequently gets ellipsized

2008-05-21  Scott Peterson  <lunchtimemama@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/FeedManager.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Feed.cs:
	Add IsSubscribed to Feed and modified migration code to use true as the
	default.

2008-05-21  Scott Peterson  <lunchtimemama@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/PodcastSourceContents.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	Add null checks to avoid NRE.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Removed rendering canvases.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Removed rendering canvases and fixed some bugaboos with cell event
	proxying.

2008-05-21  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellPodcast.cs:
	Replace the disc image for 'All Podcasts' with the podcast icon.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Dialog/PodcastSubscribeDialog.cs:
	If the user has some text on the clipboard that starts with http,
	automatically put that in the url entry.  Make the dialog a big wider.

2008-05-21  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	When migrating old podcast data, call SyncWithFeedItem to get a bunch of
	good settings (Genre, MediaAttributes, etc).

2008-05-21  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/PodcastSource.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/Models/PodcastFeedModel.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseBrowsableListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistListModel.cs:
	Change BrowsableListModels to automatically filter on any 'upstream'
	filters (ones defined before them), so upshot is albums filters on artists
	again.

2008-05-21  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Migrate podcast feeds and items from 0.13.2 podcast plugin.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/PodcastSource.cs:
	Allow sorting on download status and published date, make the default
	PubDate descending.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/XmlColumnController.cs:
	Allow defining the sort direction in addition to the default sort column.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Add an override for GetTrackForUri method.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Expose SortQuery via protected property, and make GenerateSortQueryPart
	virtual.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Skip items with non-local URIs.

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Add FileSize
	sorting.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Add
	QueryEnumerable<T> methods.

	* src/Libraries/Migo/Migo/Migo.Syndication/FeedItem.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/FeedEnclosure.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Feed.cs: Create the model
	within the Init function.

2008-05-21  Scott Peterson  <lunchtimemama@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/GtkTheme.cs: Fixed rendering
	problem with sort arrow if the first column was sorted.

2008-05-21  Scott Peterson  <lunchtimemama@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Fixed first column being unsortable.

2008-05-21  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs:
	Added an EnabledCount property

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	Added a check box column to control the RipEnabled property on each CD 
	track; when the EnabledCount on the model is zero, disable the rip action

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdTrackInfo.cs:
	When RipEnabled is set or unset, increment or decrement the EnabledCount
	on the model if the value actually changes

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: NRE protection

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Do not layout
	text if it's null or empty

2008-05-21  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/IInteractiveCell.cs:
	Added a PointerLeaveEvent method

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Save last cell reference so it can be sent a pointer leave event when 
	the pointer focuses on another cell or leaves the widget entirely; 
	computer proper cell damage rectangles for when Scott fixes area redrawing

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellRating.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellCheckBox.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListViewTestModule.cs:
	Implemented PointerLeaveEvent

2008-05-21  Scott Peterson  <lunchtimemama@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Headers.cs:
	Make sure that a columns max height is not less that its min height. This
	fixes some aweful bugs.

2008-05-21  Mike Urbanski  <michael.c.urbanski@gmail.com>

	* src/Libraries/Migo/Makefile.am: 
	* src/Libraries/Migo/Migo.mdp: 
	* src/Libraries/Migo/Migo/Migo.TaskCore/AsyncCommandQueue/CommandQueueManager.cs: 
	Added CommandQueueManager.

	* src/Libraries/Migo/Migo/Migo.TaskCore/GroupStatusManager.cs:
	* src/Libraries/Migo/Migo/Migo.TaskCore/GroupProgressManager.cs: 
	* src/Libraries/Migo/Migo/Migo.TaskCore/AsyncCommandQueue/AsyncCommandQueue.cs:
	* src/Libraries/Migo/Migo/Migo.TaskCore/Migo.TaskCore.Collections/TaskCollection.cs:
	* src/Libraries/Migo/Migo/Migo.TaskCore/TaskGroup.cs:
	* src/Libraries/Migo/Migo/Migo.TaskCore/Task.cs:
	* src/Libraries/Migo/Migo/Migo.DownloadCore/DownloadManager.cs:
	* src/Libraries/Migo/Migo/Migo.DownloadCore/DownloadGroupStatusManager.cs:
	* src/Libraries/Migo/Migo/Migo.DownloadCore/HttpFileDownloadTask.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/FeedsManager.cs:
	Transparent architectural changes to promote looser coupling between 
	TaskCore components (i.e.  removing hacketry.)

2008-05-21  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Metadata/MetadataServiceJob.cs:
	Return the full HttpWebResponse instead of the response stream

	* src/Core/Banshee.Services/Banshee.Metadata.MusicBrainz/MusicBrainzQueryJob.cs:
	Updated to reflect API change above

	* src/Core/Banshee.Services/Banshee.Metadata.Rhapsody/RhapsodyQueryJob.cs:
	Updated to reflect API change above and to check the content type on
	the response to ensure it's text/xml - Rhapsody now redirects to the
	best-match HTML page if there is no exact match - before they just gave
	a 404 response

2008-05-21  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Makefile.am: Reorder.

	* src/Extensions/Banshee.Podcasting/Resources/GlobalUI.xml:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastActions.cs:
	Add Download All action to podcast context menu.

	* src/Libraries/Migo/Migo/Migo.Syndication/FeedEnclosure.cs: Avoid
	queueing the download if we're already download.

2008-05-20  Gabriel Burt  <gabriel.burt@gmail.com>

	With the amazing help of Scott Peterson, we have knocked out two subtle,
	but annoying Last.fm bugs.

	* src/Extensions/Banshee.NotificationArea/Resources/NotificationAreaMenu.xml:
	Add placeholder.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	Implement IBasicPlaybackController, so that if we are selected as the new
	playback source and asked to play First or Next, we will as soon as we've
	loaded some songs (and we're still the playback source).

	* src/Extensions/Banshee.Lastfm/Makefile.am:
	* src/Extensions/Banshee.Lastfm/Resources/LastfmTrackActions.xml:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	Load some TrackActions when we're the playback source (specifically, put
	Love/Hate in the notification menu).

	* src/Core/Banshee.Services/Banshee.Services.mdp:
	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Collection/IHasTrackSelection.cs:
	Removed.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: TODO
	note.

2008-05-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Streaming/SaveTrackMetadataJob.cs: Disable
	writing metadata to file for video files for now, since TagLib# seems to run
	at 100% and consume lots of memory when we try.

2008-05-20  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellRating.cs: Tell the
	renderer what opacities we like

	* src/Libraries/Hyena.Gui/Hyena.Gui/RatingRenderer.cs: Take the color
	opacities from the argument stack instead of hard coding

	* src/Libraries/Hyena.Gui/Hyena.Widgets/RatingEntry.cs: Set desired
	opacities and added an AlwaysShowEmptyStars property; moved the motion
	event handler to an internal HandleMotionNotify method

	* src/Libraries/Hyena.Gui/Hyena.Widgets/RatingMenuItem.cs: Proxy the
	menu's motion notify event to the entry so we get the sweet preview;
	do not activate the menu when we set the rating so the menu stays visible
	and we can see the rating actually changed

2008-05-20  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit fixes a major (though one-line) bug with threading that should
	fix "xcb" related crashes.  It improves podcast support, including
	automatically switching to Now Playing for videos and supporting Media RSS
	feeds.

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	Also switch to Now Playing if the trackinfo is updated and it is a video.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	Delay refreshing the feeds, and don't try to download artwork if feed not
	fetched.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastActions.cs:
	Implement deleting a podcast feed, feed context menu.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/PodcastSource.cs:
	Show a message if the user creates a playlist under the Podcast source.
	Should be allowed, but doesn't work properly yet, so we don't allow it.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackInfo.cs:
	Set the LicenseUri and MediaAttributes.

	* src/Extensions/Banshee.Podcasting/Resources/GlobalUI.xml: Add a context
	menu just for the All Podcasts item.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellFileSize.cs:
	Right align and always show one decimal point.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastImageFetchJob.cs:
	* src/Core/Banshee.Services/Banshee.Metadata/IMetadataLookupJob.cs:
	* src/Core/Banshee.Services/Banshee.Metadata/MetadataService.cs:
	* src/Core/Banshee.Services/Banshee.Metadata/MetadataSettings.cs:
	* src/Core/Banshee.Services/Banshee.Metadata/IMetadataProvider.cs:
	* src/Core/Banshee.Services/Banshee.Metadata/BaseMetadataProvider.cs:
	* src/Core/Banshee.Services/Banshee.Metadata/MetadataServiceJob.cs:
	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Metadata.MusicBrainz/MusicBrainzMetadataProvider.cs:
	* src/Core/Banshee.Services/Banshee.Metadata.MusicBrainz/MusicBrainzQueryJob.cs:
	* src/Core/Banshee.Services/Banshee.Metadata.Rhapsody/RhapsodyMetadataProvider.cs:
	* src/Core/Banshee.Services/Banshee.Metadata.Rhapsody/RhapsodyQueryJob.cs:
	* src/Core/Banshee.Services/Banshee.Metadata.Embedded/EmbeddedMetadataProvider.cs:
	* src/Core/Banshee.Services/Banshee.Metadata.Embedded/EmbeddedQueryJob.cs:
	* src/Core/Banshee.Services/Banshee.Services.mdp:
	Get rid of MetadataSettings and use NetworkDetect.  Don't lookup if
	podcast MediaAttribute set.  Fix bug with calling GTK+ things from the
	metadata update thread; probably the cause of the xcb crashes.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Trim artist and album names when set.

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngine.cs: Don't
	ignore media engine tags if the current track is not a local file.  This
	lets GStreamer tell us the streaming file is a video so Now Playing can
	switch to itself.

	* src/Core/Banshee.Core/Banshee.Collection/IBasicTrackInfo.cs: Add
	ArtworkId and MediaAttributes properties.

	* src/Core/Banshee.Core/Banshee.Collection/LicenseInfo.cs: New file, not
	in build.  Idea is to parse and represent Creative Commons license info.

	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs: Handle the
	VideoCodec tag, setting the VideoStream attribute.

	* src/Libraries/Hyena/Hyena/StringUtil.cs:
	* src/Libraries/Hyena/Hyena.Query/FileSizeQueryValue.cs: Allow specifying
	that one decimal point should always been shown.  By default, we hide the
	decimal point and tenths place if the number is within 0.05 of an int.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Make
	Delete methods virtual, add LIMIT 1 to FetchFirstMatching, and use
	DeleteCommand property instead of field.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Add a
	protected Pango.Alignment property.

	* src/Libraries/Migo/Makefile.am:
	* src/Libraries/Migo/Migo.mdp:
	* src/Libraries/Migo/Migo/Migo.Syndication/XmlUtils.cs: Removed, code
	moved into RssParser.

	* src/Libraries/Migo/Migo/Migo.Syndication/FeedItem.cs: Add LicenseUri
	property, and fix loading of the enclosure.

	* src/Libraries/Migo/Migo/Migo.Syndication/FeedEnclosure.cs: Tweaks.

	* src/Libraries/Migo/Migo/Migo.Syndication/RssParser.cs: Merge the code
	from XmlUtils into here, add more namespaces so can pull out Creative
	Commons LicenseUri and can pull the highest bitrate <media:content> if
	there is no <enclosure> tag - eg for The Onion News Network.  Should
	probably allow setting global or per-podcast preference for preferred
	quality if there are ever options.

	* src/Libraries/Migo/Migo/Migo.Syndication/MigoModelProvider.cs: Make
	Delete methods override; as 'new' they weren't working.

	* src/Libraries/Migo/Migo/Migo.Syndication/Feed.cs: Get rid of TTL and
	Interval properties, replace with UpdatePeriodMinutes property.  Fix
	Delete method.

	* configure.ac: Enable the podcast extension by default.

2008-05-19  Aaron Bockover  <abock@gnome.org>

	* build/build.rules.mk: Set ENABLE_TESTS as a define variable; this will
	allow unit tests to be compiled in only if Nunit is available and we are
	not building a release

	* Tons of files: Surgery to move unit tests into the proper assemblies
	instead of one big test assembly hack job thing; some stuff is still 
	broken and incomplete

2008-05-19  Aaron Bockover  <abock@gnome.org>

	* tests/Hyena/RangeCollectionTests.cs: Use a SortedInsert method instead
	of Add*N + Sort for the reference collection so it's a little faster;
	reduce the iterations to 75k to appease Gabe

2008-05-19  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkRenderer.cs:
	Added native handle NULL checks when checking for null against a Gdk.Pixbuf;
	for some reason we sometimes get a managed GdkPixbuf object that wraps
	a NULL native GdkPixbuf pointer - possibly a bug in Gdk# - though it only
	seems to happen when image data comes from the Net, so it could just be
	a case of bad things happening with bad image data

2008-05-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* tests/Makefile.am: Patch from Bertrand Lorentz that forces tests to be
	run in Italian with timezone = Chicago, apparently fixing failures for him.

2008-05-17  Gabriel Burt  <gabriel.burt@gmail.com>

	Massive commit that brings Podcasting back to the land of the living.  Our
	internal classes for doing track filtering and showing the browsers have
	been made generic, so that Podcasting can use all of them to show its
	Browser (with a single Podcast filter).  I still do NOT recommend users use
	this; it needs more work to migrate 0.13.2 podcasting data, and probably
	has bugs that will eat your children.

	* src/Core/Banshee.ThickClient/Banshee.Gui/ViewActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackRepeatActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackShuffleActions.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	Update to use new BansheeActionGroup ctor and properties.

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	Implement empty FilterModels property.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastService_Interface.cs:
	Listen to the events offered up in Migo, grab podcast artwork, and move
	most of the action-related code into PodcastActions.cs.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastImageFetchJob.cs:
	New MetadataServiceJob subclass for fetching podcast artwork.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastCore_Interface.cs:
	Renamed to PodcastService.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellPodcast.cs:
	Hot new renderer for podcasts, showing artwork, name, and when last
	updated.  Duplicates a ton of code with ColumnCellAlbum, should be
	refactored.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/ColumnCellPublished.cs:
	Override for ColumnCellDateTime to just print the short date.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastActions.cs:
	New class, a BansheeActionGroup subclass, for registering and handling
	podcast actions.  Quite a few actions aren't implemented yet (like mark
	new/old and delete podcast).

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Dialog/PodcastFeedPropertiesDialog.cs:
	Get rid of bold titles, make casing consistent, don't put ""s around the
	description.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Dialog/PodcastSubscribeDialog.cs:
	Casing, grammer, get rid of expander.

	* src/Extensions/Banshee.Podcasting/Makefile.am:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastItem.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastTrackInfo.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Dialog/PodcastPropertiesDialog.cs:
	PodcastItem renamed to PodcastTrackInfo, pulls more data from FeedItem and
	the enclosure/file.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/ColumnCells/PixbufColumnCell.cs:
	Add new ctor required by new ColumnController business.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/ColumnCells/ItemActivityColumnCell.cs:
	Add new ctor, get rid of Video and New Item icons; just show download status

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/PodcastSourceContents.cs:
	Change to be a ListBrowserSourceContents subclass, which is what
	CompositeTrackListView inherit from too.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/PodcastSource.cs:
	Change to inherit from LibrarySource, add a XML column controller property
	to add Published and Download Status columns.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/Models/PodcastFeedModel.cs:
	Change to inherit from DatabaseBrowsableListModel, which goes against the
	db and knows how to filter the track model.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/Views/PodcastFeedView.cs:
	Change to inherit from TrackFilterListView and to use the new Podcast
	renderer.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/Views/PodcastItemView.cs:
	Fix up columns, names.

	* src/Extensions/Banshee.Podcasting/Resources/ActiveSourceUI.xml: Use the
	normal TrackContextMenu for podcast items, but add some things to it when
	podcast source is active.

	* src/Extensions/Banshee.Podcasting/Resources/GlobalUI.xml: Get rid of
	PodcastItemViewPopup, add several normal Library-source context menu
	items, remove some items from PodcastFeedPopup that didn't make sense.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.addin.xml: Update
	copyright info.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.mdp: Lots of new
	files, ref TagLib, System.Xml, gdk.

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Fix assumptions regarding
	composite_view, and get rid of IHasTrackSelection crap.

	* src/Core/Banshee.Services/Banshee.Metadata.Embedded/EmbeddedQueryJob.cs:
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Metadata.MusicBrainz/MusicBrainzQueryJob.cs:
	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodTrackInfo.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Rename TrackInfo.ArtistAlbumId to ArtworkId.

	* src/Dap/Banshee.Dap/Banshee.Dap/MediaGroupSource.cs: Fix delete from
	drive action label, reload after intialized.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Add the two media sources
	before loading, avoiding ThreadAssist nastiness.

	* src/nuke-gconf-keys: New scriptlet for clearing your banshee-1 gconf
	keys, for testing from a clean slate.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/XmlColumnController.cs:
	Add ability to set a default <sort-column>column-id</sort-column>.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/AlbumListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtistListView.cs:
	Inherit from TrackFilterListView, getting rid of a lot of dupe code.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellFileSize.cs:
	New column cell renderer for file sizes.  Should be changed to always spit
	out one decimal point and to right align, for scanability.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Move RowActivated handler here from Nereid.PlayerInterface, so that any
	TrackListView instance/subclass will start playing when you double click
	on a row.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackFilterListView.cs:
	New class, refactored Album and Artist code here.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellDuration.cs:
	Don't display anything if duration is zero.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs:
	Add FileSize column, make duration column a bit smaller by default.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellDateTime.cs:
	Add DateTimeFormat to control what format of date/time string is used.

	* src/Core/Banshee.ThickClient/Banshee.ThickClient.mdp: Add new files.

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Add
	ShowContextMenu method, take the interface_action_service in the ctor and
	expose through Actions property.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Get rid of
	awful TrackSelector crap.

	* src/Core/Banshee.ThickClient/Makefile.am: Updates.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/ListBrowserSourceContents.cs:
	Refactored out of CompositeTrackSourceContents, made generic so can be
	used with any ITrackModelSource with its arbitrary FilterModels.  Means we
	can have different types of browsers for different sources (Music Library
	vs Podcasts, for instance) and they share a lot of code, and the top/left
	preference.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	Inherit from ListBrowserSourceContents.

	* src/Core/Banshee.Services/Banshee.Metadata/MetadataServiceJob.cs: Fix
	bug where files were used before they were fully downloaded by saving to a
	temp file and moving once finished writing.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/ITrackModelSource.cs: Get rid
	of AlbumModel and ArtistModel, replaced by generic FilterModels.

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Add the
	conditions intead of setting them, meaning we can play nicely with
	other conditions instead of racing.

	* src/Core/Banshee.Services/Banshee.Collection/BrowsableListModel.cs: New
	abstract subclass of BansheeListModel, that defines the Selection as a
	SelectAllSelection.

	* src/Core/Banshee.Services/Banshee.Collection/BansheeListModel.cs: Add
	FocusedItem getter, and make RaiseReloaded public.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistListModel.cs:
	Inherit from DatabaseBrowsableListModel

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseBrowsableListModel.cs:
	New abstract class for filter models.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Sort of lame, but put the actual Provider.Save/Refresh calls inside
	virtual methods so that PodcastTrackInfo can use its own provider.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Get rid of ReloadTrigger enum, replaced by just passing in the actual
	IFilterModel that triggered the reload (if any).  Reload algorithm made
	generic, uses the ITrackModelSource's list of FilterModels, so will work
	with 0 - N filter models (used by PodcastSource to filter just on Podcast,
	atm).  Get rid of built-in album/artist assumptions.

	* src/Core/Banshee.Services/Banshee.Services.mdp: New files.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	New migration, drop any podcast tables created using the 1.0 series
	- 0.13.2 data shouldn't be affected - so we can start over.  Add an
	ExternalId column to CoreTracks.

	* src/Core/Banshee.Services/Banshee.Database/BansheeModelCache.cs: Don't
	require BansheeModelProvider since SqliteModelProvider suffices fine.

	* src/Core/Banshee.Services/Makefile.am: New files.

	* src/Core/Banshee.Core/Resources/translators.xml: Updated.

	* src/Core/Banshee.Core/Banshee.Base/CoverArtSpec.cs: Make the actual
	escaping code public (so we can use it to make podcast artwork ids).  Log
	a message stating where the album art directory is.

	* src/Libraries/Hyena/Hyena.Collections/Selection.cs: Add a FocusedIndex
	property, factored out of ListView, so that we can get to it so long as we
	can get to the Selection, instead of having to get to the ListView.

	* src/Libraries/Hyena/Hyena/Log.cs: Add WarningFormat.

	* src/Libraries/Hyena/Hyena.Query/RelativeTimeSpanQueryValue.cs: Added
	convenience factory method RelativeToNow.

	* src/Libraries/Hyena/Hyena.Query/TimeSpanQueryValue.cs: Determine the
	best factor after having our value set.

	* src/Libraries/Hyena/Hyena.Data/IFilterable.cs: Rename Filter to
	UserQuery.

	* src/Libraries/Hyena/Hyena.Data/IListModel.cs: Add non-generic IListModel
	interface.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Make Save,
	Load, and Delete methods virtual, change FetchFirstMatching to not
	duplicate FetchAllMatching code, change both to accept params, fix bug
	with Refresh, and add protected PrimaryKeyFor method.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/IListView.cs: Add non-generic
	interface.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCell.cs: Add useful
	debugging logging if a specified property doesn't exist.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Change to use Selection.FocusedIndex.

	* src/Libraries/Migo/Migo.mdp:
	* src/Libraries/Migo/Makefile.am: New files, only build if
	--enable-podcast set.

	* src/Libraries/Migo/Migo/Migo.Net/AsyncWebClient.cs: Add a public static
	UsreAgent property so we can set it to Banshee.Web.Browser.UserAgent.  Get
	rid of many try {} catch {} statements to avoid swallowing exceptions.

	* src/Libraries/Migo/Migo/Migo.TaskCore/AsyncCommandQueue/AsyncCommandQueue.cs:
	* src/Libraries/Migo/Migo/Migo.DownloadCore/DownloadManager.cs:
	* src/Libraries/Migo/Migo/Migo.TaskCore/TaskGroup.cs: Fix formatting,
	logging.

	* src/Libraries/Migo/Migo/Migo.DownloadCore/HttpFileDownloadTask.cs: Don't
	set the UserAgent here.

	* src/Libraries/Migo/Migo/Migo.Syndication/FeedsManager.cs: Separated most
	of this code out into FeedManager and EnclosureManager.  This class was
	trying to be too many things to too many users.

	* src/Libraries/Migo/Migo/Migo.Syndication/XmlUtils.cs: Add
	GetNamespaceManager method, and GetITunesDuration method.

	* src/Libraries/Migo/Migo/Migo.Syndication/FeedItem.cs: Default active to
	true, change provider to be a MigoModelProvider, add static Exists (guid)
	method, many of fixes.

	* src/Libraries/Migo/Migo/Migo.Syndication/FeedEnclosure.cs: Change
	provider and inherit from MigoItem, fix up SetFileImpl method, database
	properties, etc.

	* src/Libraries/Migo/Migo/Migo.Syndication/Feed.cs: Inherit from MigoItem,
	uset MigoModelProvider, fix up db properties, add method that starts
	automatically downloading any new items when appropriate.

	* src/Libraries/Migo/Migo/Migo.Syndication/Rfc822DateTime.cs: Fix so
	parses some dates it wasn't parsing before.

	* src/Libraries/Migo/Migo/Migo.Syndication/OpmlParser.cs: New class, not
	at all finished, for parsing OPML files.

	* src/Libraries/Migo/Migo/Migo.Syndication/RssParser.cs: Get the image url
	from itunes:image first, since it's probably higher quality.  Get the
	keywords and category properties too.  Get the duration for enclosures, if
	set.

	* src/Libraries/Migo/Migo/Migo.Syndication/MigoModelProvider.cs: A
	subclass of SqliteModelProvider with an interesting twist: every item that
	is retrieved is cached in a Dictionary indexed by DbId, which allows us to
	combine the power of Migo's downloading ability (which wouldn't work if
	there were multiple instances of a FeedItem, for example, that all
	represented the same actual item/db row, with the power of
	SqliteModelProvider for finding items.  So you can do
	Feed.Provider.FetchAllMatch ("LastDownloadedAt < ?', some datetime) and
	be returned the already-instantiated objects.

	* src/Libraries/Migo/Migo/Migo.Syndication/FeedUpdateTask.cs: Fixed up.

	* src/Libraries/Migo/Migo/Migo.Syndication/EventArgs/FeedItemEventArgs.cs:
	Chagned, but I don't think this is used anymore.  Should be culled.

	* src/Libraries/Migo/Migo/Migo.Syndication/FeedManager.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/EnclosureManager.cs: New
	classes taking over for things FeedsManager did before (namely, managing
	downloads and firing off events).

	* src/Libraries/Migo/Migo/Migo.Syndication/MigoItem.cs: Simple abstract
	class that implements ICacheableItem and has an abstract DbId property.

	* build/build.environment.mk: Tidy up MIGO deps.

	* tests/Makefile.am: Add Migo/XmlTests.

	* tests/Migo/XmlTests.cs: Add tests for itunes:duration parsing and
	Rfc822DateTime parsing.

	* tests/BansheeTests.cs: add TransformPair struct.

2008-05-17  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs: Added
	Genre list population back to the track editor (BGO #533530)

2008-05-17  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Bind to a private rating field and call Save in the property setter

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs:
	Add the rating column with the new hot rating cell

2008-05-17  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/Column.cs: FIxed improper ctor
	chain; set Min/MaxWidth if a cell is ISizeRequestCell when packing
	by calling GetSize on the cell

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCell.cs: Allow setting
	BoundObject on a cell, added a BoundObjectParent that can be used
	to track which data item (instead of which data property on an item)
	is being bound

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellCheckBox.cs: Implemented
	a check box interactive cell renderer that binds to boolean properties

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellRating.cs: Implemented
	a rating cell renderer based on the new rating renderer

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/IInteractiveCell.cs: Interface
	for cells that would like to have keyboard/mouse events proxied to them

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ISizeRequestCell.cs: Interface
	for cells that actually care about their size and refuse to adapt to
	what the view can provide

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Implemented first pass at cell level interaction - namely through 
	ProxyEventToCell which currently supports transforming and proxying
	Gdk.EventButton and Gdk.EventMotion events from the view to a cell; also
	fix a bunch of potential NRE when the model selection is null

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Fix a bunch of potential NRE when the model selection is null

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListViewTestModule.cs: Started
	a test module for stressing functionality of the ListView
	
	* src/Libraries/Hyena.Gui/Hyena.Gui/RatingRenderer.cs: A new renderer to
	do all drawing/logic for things that want to embed a rating

	* src/Libraries/Hyena.Gui/Hyena.Widgets/ComplexMenuItem.cs: Moved to
	Hyena.Widgets

	* src/Libraries/Hyena.Gui/Hyena.Widgets/RatingEntry.cs: Moved to 
	Hyena.Widgets and largely rewritten to use the new RatingRenderer

	* src/Libraries/Hyena.Gui/Hyena.Widgets/RatingMenuItem.cs:  Moved to
	Hyena.Widgets and do not call into the EventBox rendering hack since the
	RatingEntry no longer derives from EventBox
	
	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs:
	* src/Core/Banshee.ThickClient/Banshee.Query.Gui/RatingQueryValueEntry.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/CustomActionProxy.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/RatingActionProxy.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Updated to reflect the move of Rating stuff to Hyena.Gui

2008-05-17  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena/Hyena.Collections/RangeCollection.cs: Made the
	indexer code more sexy so it doesn't look like I wrote it at 4:30 in
	the morning, ensure that negative indexes throw IOORE

	* tests/Hyena/RangeCollectionTests.cs: Added an indexer stress test and
	some extra specific tests for ensuring IndexOutOfRange is thrown when
	it should be

2008-05-17  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena/Hyena.Collections/RangeCollection.cs: Fixed the 
	horribly broken indexer that looked like a late night copy and paste of
	the IndexOf logic but never worked - we don't use it, so it's never been
	a problem, but the unit test had always complained - yay tests

	* tests/Hyena/RangeCollectionTests.cs: Improved test for the indexer

2008-05-17  Aaron Bockover  <abock@gnome.org>

	Patch from Bertrand Lorentz (BGO #533099)

	* src/Libraries/Hyena/Hyena.Collections/RangeCollection.cs: Fix a 
	dyslexia bug in the NET_1_1 version of the array resize code

	* build/build.rules.mk: Define NET_2_0 on the build so we end up
	using the better version of RangeCollection - whoops

	* tests/Hyena/RangeCollectionTests.cs: Added test to check for the
	NET_1_1 array resize bug fixed above

2008-05-14  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Base/FileNamePattern.cs: Added %year% 
	from stable 

2008-05-14  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Library/VideoLibrarySource.cs: Defined
	a column controller for video sources

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellPlaybackIndicator.cs:
	Added the proper ctor

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs:
	Made the default column properties instance properties since they can
	now be modified and should not be global

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	If a source has an XML column controller definition but not a column
	controller object, load the object from the XML and persist/use it

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/XmlColumnController.cs:
	A new column controller that extends the default controller and allows
	new columns to be fully defined, existing ones to be modified or removed

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/SortableColumn.cs: Allow SortKey
	to be set

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceComboBox.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	Use a common cell layout data handler delegate

2008-05-13  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/DefaultColumnController.cs:
	Implemented a proper default column controller with the columns as static
	properties so derived implementations don't have to redefine common columns

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Use the new DefaultColumnController; check the active source (walking
	up to the root parent) for a column controller to use instead of the
	default; if none found, use the default

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmColumnController.cs:
	Implement a custom column controller for Last.fm derived

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	Set LastfmColumnController on the source

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs:
	Make SetModel virtual

	* data/audio-profiles/wavpack.xml.in: Small fix to the pipeline

	* src/Core/Banshee.Core/Resources/contributors.xml: Added the Andy

2008-05-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Streaming/SaveTrackMetadataJob.cs: Patch
	from Nicholas Parker working around bug in TagLib# where setting the genre
	to string [] {null} would crash.

	* tests/Banshee.Core/TaglibReadWriteTests.cs: Unit test for above fix.

2008-05-09  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceComboBox.cs:
	Set ParentWidget on the renderer to self

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Fixed small selection rendering regression and fix the state calculation
	for when the widget is a combo box and is prelit but not showing the menu

2008-05-09  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceComboBox.cs:
	Moved from MiniMode; use the new SourceModel and use the SourceRowRenderer

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceModel.cs: Pulled
	out model specific code from SourceView into a new TreeModel subclass
	that SourceView and SourceComboBox can use

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Implemented proper CellRendererState -> StateType mapping so the renderer
	works properly inside other widgets (i.e. GtkComboBox); add some default
	sizing for non TreeView widgets

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	Fixed up to use the new SourceModel

	* src/Extensions/Banshee.MiniMode/Banshee.MiniMode/MiniModeWindow.cs:
	Fixed up to use the new SourceComboBox

2008-05-09  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit greatly improves performance when editing/saving track
	information and on each track transition by avoiding many unnecessary
	source reloads.

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs: Improve
	auto-rip label.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedSeekSlider.cs:
	Avoid changing to 'Idle' when transitioning between songs, and avoid
	jumpiness by not setting the duration until the first Iteration event.
	Makes things much smoother.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs: Fix the
	horrible save performance by avoiding reloading until after having saved
	all the tracks, instead of after each one.  Fix whitespace.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Change
	OnTracksChanged to take an array of QueryFields that were modified.  Add
	protected InvalidateCaches method used to clear the managed cache for the
	track/artist/album model, but not reload it (eg the display data has
	changed, but sort order/contents have not).

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Change
	TracksChanged to QueryField array.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistListModel.cs:
	Remove ClearCache method, and add InvalidateCache method.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Specify which fields are updated in the IncrementPlay/SkipCount methods to
	allow sources to optimize whether they need to reload b/c of the change.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Add InvalidateCache method, and expose the currently parsed QueryNode, if
	any.

	* src/Core/Banshee.Services/Banshee.Collection.Database/IDatabaseTrackModelCache.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs:
	Add ClearManagedCache method.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	In TrackChanged handler, only Reload if we are actually affected by the
	change - so if the change was play count, and we're not sorted by it,
	querying on it, or if we're a smart playlist, defined by it, then just
	InvalidateCaches.

	* src/Libraries/Hyena/Hyena.Query/QueryOrder.cs:
	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Associate a
	QueryField with QueryOrders.

	* src/Core/Banshee.Widgets/Banshee.Widgets/StreamPositionLabel.cs: Avoid
	updating twice as often as needed.  Use String.Format instead of +.

	* src/Libraries/Hyena/Hyena.Query/QueryNode.cs: Add GetTerms and GetFields
	convenience methods.

2008-05-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Widgets/SmoothScrolledWindow.cs: Increase
	both accel and decel, and fix bug where things would bounce back and
	forth, overshooting the target.

2008-05-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Fix
	issue with parent source not getting expanded when it should.  MTP and
	iPod sources should autoexpand properly now.

2008-05-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Fix bug with
	updating/removing the album when removing a track.

2008-05-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Mtp/Mtp/MtpDevice.cs: Add mimetype for .m4a files.

2008-05-08  Sebastian Dröge  <slomo@circular-chaos.org>

	* src/Libraries/Hyena.Gui/Makefile.am: Dist and install
	Hyena.Gui.dll.config.

2008-05-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdService.cs: Add
	AutoRip and EjectAfterRipped schemas and preferences.  Fix the mnemonic
	for the profile chooser.

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs: If
	AutoRip is true, start ripping when the CD is loaded (assuming it's not
	already in the library).  When a CD is done importing, eject if 
	EjectAfterRipped is true.

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs: Add a
	Finished event.

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/WidgetFactory.cs:
	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/SectionBox.cs:
	* src/Core/Banshee.Services/Banshee.Preferences/Root.cs: Add a
	optional MnemonicWidget property.  If not set, returns the DisplayWidget,
	otherwise can be used to override the mnemonic widget.

	* src/Core/Banshee.ThickClient/Banshee.MediaProfiles.Gui/ProfileComboBoxConfigurable.cs:
	Always SetDescription, so even if a user doesn't yet have a preference,
	the description shows the currently selected option.

	* build/m4/banshee/dap-mtp.m4:
	* build/m4/banshee/dap-ipod.m4:
	* configure.ac: Make iPod and MTP support the default, such that if you
	don't have ipod-sharp or libmtp, you will get a configure error unless you
	pass --disable-ipod/mtp.  Should help clarify what we view a default
	Banshee install to include.

2008-05-06  Aaron Bockover  <abock@gnome.org>

	Banshee 1.0 Beta 1 (0.99.1) Released

2008-05-06  Aaron Bockover  <abock@gnome.org>

	* configure.ac:
	* src/Dap/Banshee.Dap.Ipod/Makefile.am:
	* src/Extensions/Banshee.BooScript/Makefile.am:
	* src/Extensions/Banshee.MiniMode/Makefile.am: Fixed last build issues

2008-05-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Fix bug with play queue getting recreated each time.  Ugh.

2008-05-06  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastCore.cs:
	Build fixes

2008-05-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	* src/Extensions/Banshee.NotificationArea/Resources/NotificationAreaMenu.xml:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Put
	the Next action above the Previous action.

2008-05-06  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: Make the
	progress notification for iPod syncing much better

2008-05-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Parse the .is_audio_player file, except not setting the output formats
	yet.  Install some dap properties.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Add DapProperties property
	that the Dap dialog shows.

	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapPropertiesDialog.cs: Show the
	DapProperties.

	* src/Backends/Banshee.Hal/Banshee.HalBackend/Device.cs: Cache the uuid.

	* src/Backends/Banshee.Hal/Banshee.HalBackend/Volume.cs: Catch property
	exception for volume that was suddenly removed.

2008-05-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Fix a bug where we
	attempted to transcode video files.  We don't support that yet.

2008-05-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Fix bug just introduced with mass storage support via .is_a_p files.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Get rid of silly non-DAP
	fallbacks for generic name and icons.

2008-05-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Ignore iPods unless they have a .is_audio_player file.

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: Remove
	unnecessary override and OnTracksAdded call.

2008-05-06  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Revert CanPlay
	to not be smart with playback errors; it's probably best if the engine
	just be allowed to try whenever a track is requested to play

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Consolidated Open and OpenPlay logic into a single method to eliminate
	duplication

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: Implemented
	track remove support

2008-05-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Style.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Fix bug that caused mass
	storage DAPs to be ignored.

2008-05-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Backends/Banshee.Hal/Banshee.HalBackend/Volume.cs: Catch exceptions
	while trying to identify a HAL device as a volume.  Should fix BGO
	#528481.

2008-05-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Make SetStatus and
	HideStatus methods public.

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Move loading of
	tracks into LoadFromDevice method.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Override SetStatus and
	HideStatus methods to set it on the parent source and all of our children.

2008-05-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs: Don't delay add and
	delete user jobs, since removable devices are slow and we might as well
	show the progress bars asap.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: Make sure the device
	mapping doesn't happen on the main thread.  Aaron will love this.  MTP's
	DeviceInitialize method can be very slow (10+ seconds) and we definitely
	shouldn't block the ui for it.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Make sure
	adding files to a primary source happens not on the main thread.  Add
	protected properties for deciding whether to delay the add/delete jobs.

2008-05-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Mtp/Mtp/Album.cs: Be more careful with native code.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Avoid NRE.

2008-05-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/AlbumSet.cs:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpDap.cs: Removed old files.

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Add and remove
	album art as needed when adding/removing files.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	Move DeleteSelectedTracks handler to Abstract class so is inherited by
	SmartPlaylistSource too.

	* src/Libraries/Mtp/Mtp/Album.cs: Add public GetById method.

	* src/Libraries/Mtp/Mtp/MtpDevice.cs: Add FileType to mimetype method.

2008-05-05  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs:
	Implement the new iPod syncing model - it's mostly done, but still some
	glitches that need to be addressed

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodTrackInfo.cs: Implemented
	full two way copy of database tracks to iPod tracks and back again - 
	track media attributes are preserved in both directions, so this allows
	for video syncing - yes, I said video syncing. You can now use Banshee
	to manage videos on your iPod. Epic. Stop using iPods though, they suck.
	Buy an MTP device, save a seal, vote Obama.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	Removed the thread stuff which needs to be moved to DapSource (not done,
	so don't tell Gabe)

2008-05-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Library/VideoLibrarySource.cs: Move
	favorites before unwatched.

	* src/Core/Banshee.Services/Banshee.Library/MusicLibrarySource.cs: Moved
	Unhear to defaults, and Unrated to predefined.  Added Recently Added.

	* NEWS: Some updates for the upcoming release.

2008-05-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellPlaybackIndicator.cs:
	Be more defensive with checking for null/cast errors.

2008-05-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Library/VideoLibrarySource.cs: Heh,
	whoops, unwatched should be plays=0 not plays=4.

2008-05-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Query.Gui/PlaylistQueryValueEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Query.Gui/SmartPlaylistQueryValueEntry.cs:
	Better handle there not being any playlists or smart playlists.

	* src/Core/Banshee.ThickClient/Banshee.SmartPlaylist.Gui/Editor.cs: Fix
	loading a predefined playlist into the editor.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: If the user
	has no smart playlists and we've never done this before, create the
	default smart playlists for a primary source.

	* src/Core/Banshee.Services/Banshee.Library/VideoLibrarySource.cs: Define
	some default smart playlists.

	* src/Core/Banshee.Services/Banshee.Library/MusicLibrarySource.cs: Tweak a
	default smart playlist.

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/QueryTermBox.cs: Fix bug with
	not setting the value of the editor entry to the value of the saved smart
	playlist.

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/QueryTermsBox.cs: When setting
	the QueryNode condition tree, clear out any old conditions that may be
	in the editor already.

2008-05-05  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Moved the smart playlist
	purging to a separate method

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Load
	the DbId when it is first requested

2008-05-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs:

2008-05-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs: Fix
	up disposing.

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: 
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Get rid of
	IDisposable in DatabaseSource, reflect changes in subclasses.

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: When the
	SourceManager is being disposed, recursively dispose any extension
	sources.  Also dispose them when their extension goes away.  Do not
	dispose other sources; leave that to whoever created them.

	* src/Core/Banshee.Core/Banshee.Streaming/SaveTrackMetadataJob.cs: Remove
	WriteLines.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs: Add public
	static LogAll property that can be enabled/disabled at run time to turn on
	logging/timing for every single SQL command.

	* tests/ConsoleUi.cs: Modified to not use a separate test AppDomain,
	allowing us to fully load Banshee from within a unit test.

	* tests/Banshee.ThickClient/GuiTests.cs: Still commented out, some tweaks
	though.

	* tests/Makefile.am: Put the assemblies into DIR_BIN, and run from there;
	simplifies the MONO_PATH and mono.addins business when running tests.

	* tests/Banshee.Core/TaglibReadWriteTests.cs: Update paths.

	* tests/BansheeTests.cs: Tweaks to the StartBanshee stuff, not used yet.

2008-05-05  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Widgets/SegmentedBar.cs: Added a 
	ShowReflection property to enable/disable the reflection

2008-05-05  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Widgets/SegmentedBar.cs: Minor fixes

2008-05-04  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Widgets/SegmentedBar.cs: Added a spin
	entry to change the height for testing; queue a resize when the bar
	height changes

2008-05-04  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTile.cs: Only
	update the progress if it hasn't changed and if we're already pulsing
	and at 0

	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs: Show
	the number of files walked while building the total count so it doesn't
	look like we might have frozen while walking a huge directory tree

	* src/Libraries/Hyena.Gui/Hyena.Gui/CairoExtensions.cs: Added some
	Rgb uint->cairo color utility functions, make ColorShade preserve alpha

	* src/Libraries/Hyena.Gui/Hyena.Widgets/SegmentedBar.cs: Started working
	on a hot disk usage bar for DAP; very incomplete - run 'make hg' to see

2008-05-04  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	Added error handling so that no more than 20 attempts will be made to 
	play from the active source if those attempts result in an error

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Bind to the PlaybackError property to the LastStreamError column so any
	errors (missing codec, resource not found, etc.) are persisted in the 
	database

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Added a migration for adding the new LastStreamError column on CoreTracks

	* src/Core/Banshee.Services/Banshee.MediaEngine/NullPlayerEngine.cs:
	Updated to reflect API changes in the base class

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEvent.cs: Added
	the loading state

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngine.cs:
	Make Play/Pause abstract instead of virtual; do not set any event or
	state in Open and make the underlying engine responsible for these

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Changed the definition of IsPlaying to mean the engine is in one of
	playing, paused, or loaded states

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: made CanPlay
	return the set value and whether or not there is a playback error set

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	Set the engine states based on state transitions from GStreamer proper
	instead of synthesizing so many based on API

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellPlaybackIndicator.cs:
	Indicate an error if one is set on the track

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Updated to act on proper engine state

	* libbanshee/banshee-player.c:
	* libbanshee/banshee-player-pipeline.c:
	* libbanshee/banshee-player-missing-elements.c: Add some playbin checks
	to prevent warning messages from being spewed when playbin is torn down
	in some cases, particularly when there is a pipeline error

2008-05-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Save the
	cached count after every reload.

2008-05-02  Aaron Bockover  <abock@gnome.org>
	
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Set the sensitive property on the cell context 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Render 
	insensitive rows by changing the normal text color's alpha

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/CellContext.cs: Added a 
	Sensitive property since Gtk.StateType sucks and we care to preserve
	the selection state for insensitive rows

2008-05-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs: Set
	Love/Hate as Important so text shows up; accidentally removed.

	* src/Core/Banshee.ThickClient/Banshee.SmartPlaylist.Gui/Editor.cs: Get
	the list of predefined smart playlists from the PrimarySource.  Show the
	SmartPlaylistDescription to make a prettier, more informative TreeView of
	predefined options.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Add
	Default/NonDefault/PredefinedSmartPlaylist properties.

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Remove
	unnecessary ConfigurationClient.Initialize ().

	* src/Core/Banshee.Services/Banshee.Library/MusicLibrarySource.cs:
	Override the SmartPlaylist properties.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistDefinition.cs:
	New struct that holds the definition of a smart playlist (and a
	description), and that has a method for producing a SmartPlaylistSource
	from itself.

	* src/Core/Banshee.Core/Banshee.Configuration/ConfigurationClient.cs: Do
	not require Initialization call, instead do it implicitly/lazily.

	* src/Core/Banshee.Core/Banshee.Base/Paths.cs: Use GetExecutingAsembly
	intead of GetEntryAssembly in attempt to get Nereid-within-unit-test
	working.

	* src/Libraries/Hyena/Hyena.CommandLine/CommandLineParser.cs: Allow
	programatically setting a command line option's value.

	* build/build.environment.mk: Add LINK/DEPS vars for Nereid so unit tests
	can link against it.

	* tests/Hyena/RangeCollectionTests.cs:
	* tests/Hyena/DbBoundType.cs:
	* tests/Hyena/SqliteModelProviderTests.cs:
	* tests/Hyena/CryptoUtilTests.cs:
	* tests/Hyena/SqliteCommandTests.cs:
	* tests/Hyena/StringUtilTests.cs:
	* tests/Banshee.Services/PlaylistFormatTests.cs:
	* tests/Banshee.Core/FileNamePatternTests.cs:
	* tests/Banshee.Core/KernelTests.cs:
	* tests/Hyena/SelectionTests.cs: Add copyright information.

	* tests/Hyena/QueryTests.cs: Subclass from BansheeTests, and move the
	AssertForEach to it.

	* tests/Hyena/BansheeTests.cs: New abstract class that provides
	AssertForEach method, and some new methods for progamatically starting
	Banshee (currently unused, not working).

	* tests/Banshee.ThickClient/GuiTests.cs: New class for testing starting
	banshee from unit test.  Currently commented out.

	* tests/Banshee.Services/SmartPlaylistTests.cs: New tests to ensure all
	predefined smart playlists can be created successfully.  Currently
	commented out.

	* tests/Makefile.am: Add new test classes.

	* tests/Banshee.Core/TaglibReadWriteTests.cs: Subclass from BansheeTests
	and move some static initialization there.

2008-05-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Query/QueryField.cs: Fix bug with queries on
	fields that have a custom 'column' (eg maybe they search two different
	columns at once, like MimeTypeField does) not having necessary parenthesis
	around them.

2008-05-02  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/GtkTheme.cs: Explicitly 
	destroy gradient patterns and tweak the selection gradient a bit

2008-05-02  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Use ColumnCellPositiveInt to show the year so 0 will show as empty

2008-05-02  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellAlbum.cs:
	Do all layout rendering directly to Cairo, not through GTK

2008-05-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* tests/Hyena/SqliteCommandTests.cs: Update to not use ApplyValues; fix
	the build.

2008-05-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs: Set
	SourceManager.Dispose property to true so that the SourceManager knows to
	Dispose us, even though we're an extension source.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	Listen to the PlaybackController.SourceChanged event, and disable
	shuffle/repeat when switching to a StationSource, and restore when
	switching away and Disposing (so that the original state is not
	overwritten in gconf).  Fixes BGO #526033.

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Fix silly bug that caused the playback source to switch to the Music
	Library erroneously.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Load the tracks in the LoadFromDevice method, and turn threading off on
	the importer since LoadFromDevice is already called from a thread.

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Comment out
	ImportPlaylist stuff that's not done.

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackShuffleActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackRepeatActions.cs: Add
	Sensitive override that triggers the Changed event.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/RepeatActionButton.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/NextButton.cs:
	Set the sensitivity of the button to the ActionGroup's sensitivity.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Fix bug
	where we had a SqliteModelProvider created for every DatabaseSource
	instead of sharing one.

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Dispose
	extension sources that have the property SourceManager.Dispose == true.

	* tests/Hyena/QueryTests.cs: 
	* src/Libraries/Hyena/Hyena.Query/FileSizeQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/TimeSpanQueryValue.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DurationStatusFormatters.cs:
	* src/Libraries/Hyena/Hyena/StringUtil.cs:
	Renamed FormatDouble to DoubleToTenthsPrecision.  Also changed it to use
	Math.Round and fixed bug where 14.96 would show up as 15.0 instead of 15.
	Also changed it to use the N string formatter, which causes separators to
	be shown, eg 1,000

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Remove
	superflous assignment. 

	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs: Add a
	Threaded bool property, and if false don't use the ThreadPool.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Configuration/DatabaseConfigurationClient.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs:
	Do not explicitly call ApplyValues, but pass the values in the Query or
	Execute method calls.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportManager.cs:
	Comment out use of transactions for now; were causing deadlock;

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistFileUtil.cs: Comment
	out unfinished playlist import code.

	* tests/Hyena/StringUtilTests.cs: Add tests for DoubleToTenthsPrecision
	and DoubleToPluralInt methods.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs: Make
	ApplyValues an internal method, accessibly implicitly by passing params to
	the Query or Execute methods.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Lock the
	command before calling ApplyValues.  Comment out the transaction methods,
	since they can cause deadlock.

	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs: Better logging.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/MenuButton.cs: Rename member,
	add protected Arrow and ToggleButton properties so that their sensitivity
	can be changed, etc.

2008-05-02  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	New event system for raising handlers based on a desired event mask; 
	handler masks can be modified, handlers can be removed, and handlers
	can be prepended or appended to the event handler list

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEvent.cs: New
	player event definitions and argument classes

	* src/Core/Banshee.Services/Banshee.MediaEngine/IPlayerEngineService.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngine.cs:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/GtkNotificationAreaBox.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/INotificationAreaBox.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/X11NotificationAreaBox.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/VideoDisplay.cs:
	* src/Extensions/Banshee.Bookmarks/Banshee.Bookmarks/BookmarksService.cs:
	* src/Extensions/Banshee.MiniMode/Banshee.MiniMode/MiniModeWindow.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellPlaybackIndicator.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/AlbumListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/ViewActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedSeekSlider.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedVolumeButton.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	Updated to use the new player events API

2008-05-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtistListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/AlbumListView.cs:
	* src/Extensions/Banshee.MiniMode/Banshee.MiniMode/SourceComboBox.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	Use NextSource instead of Source.

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue.mdp: Updated.

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Change to the play queue on the next transition after adding items to it.
	Fixes BGO #524637.

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Clean up method.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Override ToString = Name

	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	Add NextSource property, which you can set to change the source on the
	next transition.

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Add IsPlaying () convenience method.

2008-05-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Migo/*: Move some files up into their namespace folder.

2008-05-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellDuration.cs:
	Fancy rounding commented out since it's not consistent with what is done
	in libbanshee.  Fixes BGO #520648.

2008-05-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* build/m4/banshee/dap-mtp.m4:
	* configure.ac: Enable MTP support by default (if libmtp is available).

2008-05-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* build/build.environment.mk:
	* configure.ac:
	* src/Extensions/Banshee.MiniMode/Banshee.MiniMode.addin.xml:
	* src/Extensions/Banshee.MiniMode/Banshee.MiniMode.mdp:
	* src/Extensions/Banshee.MiniMode/Banshee.MiniMode/MiniModeService.cs:
	* src/Extensions/Banshee.MiniMode/Banshee.MiniMode/MiniModeWindow.cs:
	* src/Extensions/Banshee.MiniMode/Banshee.MiniMode/SourceComboBox.cs:
	* src/Extensions/Banshee.MiniMode/Banshee.MiniMode/SourceModel.cs:
	* src/Extensions/Banshee.MiniMode/Makefile.am:
	* src/Extensions/Banshee.MiniMode/Resources/minimode.glade:
	* src/Extensions/Extensions.mds:
	* src/Extensions/Makefile.am: Patch from Bertrand Lorentz porting mini
	mode from stable, fixes BGO #527412.  The extension is built by default,
	but must be enabled in the Preferences dialog.

2008-04-30  Aaron Bockover  <abock@gnome.org>

	* build/m4/banshee/boo.m4: Require Boo 0.8.1

	* src/Extensions/Banshee.BooScript/Makefile.am: Do not try to build if
	we don't actually have the Boo requirement met

	* src/Extensions/Banshee.BooScript/Resources/duration-status-formats.boo:
	Fixed header

2008-04-30  Aaron Bockover  <abock@gnome.org>

	* build/build.environment.mk:
	* build/m4/banshee/boo.m4:
	* configure.ac: Build stuff for the BooScript extension

	* src/Core/Banshee.Core/Banshee.Base/Paths.cs: Added GetTempFileName

	* src/Core/Banshee.Services/Banshee.MediaEngine/TranscoderService.cs:
	Use the new Paths.GetTempFileName

	* src/Core/Banshee.Services/Banshee.Sources/DurationStatusFormatters.cs:
	Created a new collection that holds formatter handlers and add our 
	default formatters; this allows scripts and extensions can add their own

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Move the default
	duration formatters into DurationStatusFormatters and create a static
	instance of that collection to use for sources

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodTrackInfo.cs:
	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: Small progress
	on syncing, not much

	* src/Libraries/Hyena/Hyena.CommandLine/CommandLineParser.cs: Require
	arguments taking value to have the --arg=value form on the command line
	and treat all non -- starting arguments as 'files'

	* src/Extensions/Banshee.BooScript/Banshee.BooScript.addin.xml:
	* src/Extensions/Banshee.BooScript/Banshee.BooScript/BooScriptService.cs:
	Ported the Boo scripting support from old Banshee

	* src/Extensions/Banshee.BooScript/Resources/duration-status-formats.boo:
	* src/Extensions/Banshee.BooScript/Resources/filename-transform.boo:
	The first two Boo scripts that work on the new Banshee

2008-04-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Reload the music and video
	child sources after creating them, since Reloads don't happen
	automatically any more.

2008-04-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Don't begin/commit a transaction or run InnerMigrate if the version is
	current.  Use Hyena.Log instead of WriteLines.

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Got rid
	of unnecessary if.

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Add
	better logging for when a required service fails to start.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/Migrator.cs:

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Dispose all
	non-extension sources and their children, but don't dispose extension
	sources.

	* src/Extensions/Banshee.PlayQueue/Makefile.am:
	* src/Extensions/Banshee.PlayQueue/Resources/Banshee.PlayQueue.addin.xml:
	Move addin.xml file up from Resources

	* src/Libraries/Hyena/Hyena/Log.cs: Make showUser default to false
	everywhere.

	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkManager.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Explicitly set showUser = true.

2008-04-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Add a
	ClientStarted event, which is raised for clients that are already started
	and for new ones.

	* src/Core/Banshee.Services/Banshee.ServiceStack/Client.cs: Add a
	IsStarted property, and change the Started event to use a Action<> handler.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Use
	new Application.ClientStarted event, and handle in method, not anonymous
	delegate.

2008-04-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Backends/Banshee.Unix/Banshee.IO.Unix/Directory.cs: Comment style.

	* src/Core/Banshee.Services/Banshee.ServiceStack/Client.cs:
	* src/Clients/Nereid/Nereid/Client.cs: Use Log.InformationFormat instead of
	Log.Information (String.Format

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs: Add a
	log statement.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Get rid of unnecessary thread, and move reload all from anonymous delegate
	to private method.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: Make OnUserNotifyUpdated
	protected and add public NotifyUser method.

2008-04-29  Gabriel Burt  <gabriel.burt@gmail.com>

	Prior to this commit, all sources (playlists, etc) were reloaded on
	startup, meaning startup got slower and slower the more playlists you had.
	This is no longer the case, playlists are reloaded the first time you
	activate (select) them.

	* src/Clients/Nereid/Nereid/Client.cs: Add information line at start of
	Main, useful to get more accurate startup timing.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add columns for SavedCount to CorePrimarySources etc.  Trigger all the
	sources to reload when the client is started up, just one more time, to
	bootstrap the SavedCount.

	* src/Core/Banshee.Services/Banshee.ServiceStack/Client.cs: Log when the
	client has fully started up.

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	Save is now an override, and got rid of NotifyUpdated since not needed now
	that Source.OnUserNotifyUpdated is public.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Load and save SavedCount.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Add a
	SavedCount protected property, used to be able to show a count in the
	source list on startup without having to query every soure. Implement
	IDisposable, and Save the source when disposed.  Also, implement default
	Activate method that checks if the source has been reloaded this session,
	and reloads it if not.

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Make sure
	all sources are Disposed (if : IDisposable) when removed, including child
	sources.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Make
	OnUserNotifyUpdated method public, and use it in SourceActions.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: Call OnUserNotifyUpdated
	on new DapSources so they pulse in the source list.

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Chain Dispose calls.

2008-04-29  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedImage.cs: Do not chain
	SizeAllocated if the allocation doesn't actuall change - not sure why
	GtkImage raises this when the image changes even if the dimensions are 
	the same. Lame.

2008-04-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs:
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Get media capabilities from the volume's parent (the block device).

2008-04-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Add
	ClientAdded event.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.ServiceStack/IDelayedInitializeService.cs:
	New interface for services that shouldn't be started until there is at
	least one Client that has started.  In practice, means DapService doesn't
	scan and load DAPs until after the GTK client is fully loaded.

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: When
	at least one client is started, call DelayedInitialize on
	IDelayedInitializeServices.

	* src/Core/Banshee.Services/Banshee.ServiceStack/Client.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs: Add Started
	event and call it when appropriate.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: Implement
	IDelayedInitializeService.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedMessageBar.cs:
	Remove bandaid fix for AnimatedImage since abock has committed the real
	fix.

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Remove self from
	SourceManager within Dispose, so MTP source actually disappears when
	ejected.

2008-04-29  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedImage.cs: When hidden,
	preserve the active state and pause the stage to prevent iterations and
	restore the active state/resume the stage (if active); the more correct
	fix for the cause of BGO #523646.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/MessageBar.cs: Explicitly show/hide
	the animated image when the bar show/hides

2008-04-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Be more careful
	with unregistering handlers to status message events.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedMessageBar.cs:
	Fix memory leak/cpu usage seen after selecting a Last.fm source, caused by
	AnimatedImage's stage continuing to play after the status message should
	have been hidden/removed.  Its still strange that while the AnimatedImage
	is shown/animating it triggers so many ExposeEvents on the ListView, but
	at least they stop once the status message goes away.  Fixes BGO #523646.

	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs: Explicitly mark
	private members as private.

2008-04-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* tests/Hyena/DbBoundType.cs: Fix build.

2008-04-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/InterfaceActionService.cs: Add
	RemoveActionGroup convenience override.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs: Make
	sure to dispose actions when the extension is disposed, fixing crasher
	when you tried to disable/reenable the extension.

2008-04-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationEditor.cs:
	* src/Extensions/Banshee.Lastfm/Resources/lastfm.glade: Remove name entry
	from Last.fm dialog.

2008-04-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Libraries/Hyena/Hyena.Query/QueryOrder.cs: Implement smart
	playlists limited by file size and duration.  Fixes BGO #522889.

2008-04-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Fix bug with incrementing skip count instead of play count when a song
	ended and the next one began (behavior was correct if the song hadn't
	ended and the user manually pressed next.)  Fixes BGO #527879.

2008-04-28  Gabriel Burt  <gabriel.burt@gmail.com>

	WARNING: This commit is a first pass at reworking some of the Podcast/Migo
	internals to use Hyena and be more consistent with Banshee's style.  It
	severely breaks the podcast extension for the time being, so unless you
	are working with Mike and me to fix it, you should not build or run it.

	* build/build.environment.mk: Link Migo against Hyena.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Update to new Load method (w/o superflous int arg).

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Fix DatabaseColumn attributes to be on properties, not private members.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Use new IDatabaseTrackModel[Provider|Cache] interfaces to allow this class
	to handle DatabaseTrackInfo subclasses (eg to handle PodcastInfo objects).

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	Override AfterInitialized method, moving quite a bit of track model
	property setting there.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Change static LoadAll method to take a primary source id, so that as
	primary sources are loaded, they fetch/load only their playlists.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Add virtual
	HasArtistAlbum property so sources can avoid instantiating the
	Artist/Album models at all if they don't use them.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Check the
	artist/album models aren't null before using them.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackModelCache.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackModelProvider.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/IDatabaseTrackModelCache.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/IDatabaseTrackModelProvider.cs:
	New interfaces/classes to enable DatabaseTrackInfo subclasses to be
	used/loaded by DatabaseTrackListModel and therefore any DatabaseSource
	subclass.

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Override HasArtistAlbum to false.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastItem.cs:
	Migo's FeedItem class is backed by a database table (PodcastItems), so
	the idea is intead of having another table for Banshee specific podcast item
	information, push as much as possible into Migo, and have PodcastItem
	actually subclass from DatabaseTrackInfo, and pull in information from the
	Migo tables as necessary (using VirtualDatabaseColumn attributes).

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastFeed.cs:
	Deleted, since we just use the Migo table/Feed class now.
	
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Dialog/PodcastFeedPropertiesDialog.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Dialog/PodcastPropertiesDialog.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Dialog/PodcastSubscribeDialog.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Dialog/SyncPreferenceComboBox.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/ColumnCells/FeedActivityColumnCell.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/Models/PodcastFeedModel.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/PodcastSourceContents.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/Views/PodcastFeedView.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/Views/PodcastItemView.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastCore.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastCore_Interface.cs:
	Many HACKING fixes, quite a lot of work to do still.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/Models/PodcastItemModel.cs:
	Remove the custom model since we use a DatabaseTrackListModel now.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/PodcastSource.cs:
	Change to subclass from PrimarySource.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs: Fix bug in
	exception logging.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Use
	Action<IDataReader> instead of custom delegate type for AggregatesUpdated
	event.

	* src/Core/Banshee.Services/Banshee.Database/BansheeModelProvider.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Make not
	abstract, taking default properties and empty virtual methods from
	BansheeModelProvider.  Remove unused int arg in Load method.  Add
	FetchAllMatching, FetchFirstMatching, FetchSingle (id), and Delete
	methods.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteUtils.cs: Handle bools.

	* src/Libraries/Migo/Makefile.am:
	* src/Libraries/Migo/Migo.mdp: Several files removed, a few added.

	* src/Libraries/Migo/Migo/Migo.Syndication/EventArgs/FeedDownloadCompletedEventArgs.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/EventArgs/FeedDownloadCountChangedEventArgs.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/EventArgs/FeedEventArgs.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/EventArgs/FeedItemCountChangedEventArgs.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/EventArgs/FeedItemEventArgs.cs:
	Renamed to follow HACKING.

	* src/Libraries/Migo/Migo/Migo.Syndication/Feed.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/FeedEnclosure.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/FeedItem.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/FeedUpdateTask.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/FeedsManager.cs: Many updates,
	including HACKING fixes, trying to get rid of unnecessary dictionaries
	etc.  There are some commented out pieces of code in this commit that have
	broken podcasts temporarily until they are 'ported'.  For the
	database-backed classes (Feed, FeedItem, and FeedEnclosure) use
	Hyena.Data.Sqlite [DatabaseColumn] attributes to flag db-backed
	properties.

	* src/Libraries/Migo/Migo/Migo.Syndication/IFeed.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/IFeedEnclosure.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/IFeedItem.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/IFeedsManager.cs: Deleted.

	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/TablesManagers/EnclosuresTableManager.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/TablesManagers/FeedsTableManager.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/TablesManagers/ItemsTableManager.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/Utilities/DataUtility.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/Utilities/DatabaseManager.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/Utilities/DbDefines.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/Utilities/QueuedDbCommand.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/Utilities/SQLiteUtility.cs:
	Deleted; Migo uses Hyena.Data.Sqlite now for db related functionality.

	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/Wrappers/Db/DataWrapper.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/Wrappers/Db/FeedDataWrapper.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/Wrappers/Db/FeedEnclosureDataWrapper.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/Wrappers/Db/FeedItemDataWrapper.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/Wrappers/IFeedEnclosureWrapper.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/Wrappers/IFeedItemWrapper.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/Wrappers/IFeedWrapper.cs: 
	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/Wrappers/Rss/RssFeedEnclosureWrapper.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/Wrappers/Rss/RssFeedItemWrapper.cs:
	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/Wrappers/Rss/RssFeedWrapper.cs:
	Deleted; Wrapper concept had a lot of redundancy in property definitions
	etc.  The Db wrappers are unnecessary since Hyena.Data.Sqlite uses
	reflection to instantiate objects/set properties.

	* src/Libraries/Migo/Migo/Migo.Syndication/Migo.Syndication.Data/RssParser.cs:
	New class largley taken from the Rss*Wrapper classes.

	* tests/Hyena/SqliteCommandTests.cs: Test SQLification of bools.

2008-04-28  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Make ConditionSql virtual and add a protected setter; make CanUnmap virtual

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Add Music and Video 
	group sources; delete all smart playlists and entires associated with
	the primary source when starting and disposing

	* src/Dap/Banshee.Dap/Banshee.Dap/MediaGroupSource.cs: Base source for
	media groups, extends SmartPlaylistSource

	* src/Dap/Banshee.Dap/Banshee.Dap/MusicGroupSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/VideoGroupSource.cs: A source to show
	all music on the device and one for all video

	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs: Do not implement
	IDiskUsageReporter - MediaGroupSource does this now

	* src/Libraries/Hyena.Gui/Hyena.Gui/TestModuleAttribute.cs: Attribute
	for flagging UI test modules

	* src/Libraries/Hyena.Gui/Hyena.Gui/TestModuleRunner.cs: Show a list
	of UI test modules and run them when activated

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/QueryDebugger.cs: A UI test 
	module for playing with the query parser

2008-04-26  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: Do not try
	to read the name from the iTunesDB until after we have finished loading
	that database

2008-04-26  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Hardware/HardwareManager.cs:
	Support runtime loading/unloading of hardware provider extensions

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/PodSleuthDeviceProvider.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/ICustomDeviceProvider.cs:
	Implement IDisposable

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs:
	Support runtime loading/unloading of extension sources

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod.addin.xml: Order the 
	hardware provider for podsleuth first in the extension list just in case

2008-04-25  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.ServiceStack/IExtensionService.cs:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/Service.cs: Require
	all extension services to implement IDisposable

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Listen to the addin manager for when service extensions are enabled or
	disabled and enable/disable accordingly; this allows all service extensions
	to now be enabled or disabled at runtime

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs:
	Added an override for removing an action by name

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdService.cs:
	Moved the UI actions from the source to the service since all of the
	UI here is global; fixes issue where there were UI conflicts with multiple
	CDs and also helps with the runtime enable/disable of the service

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs: 
	Reflect said changes above

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/X11NotificationAreaBox.cs:
	Many fixes for runtime enable/disable

2008-04-25  Aaron Bockover  <abock@gnome.org>

	This commit hopefully addresses remaining hardware and threading issues
	with DAP support and fixes the Mono.Addins dependency issue that people
	have been complaining about for the last couple of days

	* src/Backends/Banshee.Hal/Banshee.HalBackend/Volume.cs: Cache the uuid
	of the volume once it's been resolved so the device doesn't have to
	be queried for it again, which is problematic if the device is removed
	forcefully

	* src/Core/Banshee.Services/Banshee.Hardware/HardwareManager.cs:
	Listen directly on the inner manager for device added/removed and 
	raise those events from within the service scope, performing the 
	cast to custom device in the device added event

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: Defer the
	loading of the database to the LoadFromDevice threaded call so startup
	is faster; implement eject

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/PodSleuthDeviceProvider.cs:
	Allow the provider to adapt the PodSleuthDevice to either the top level
	iPod storage device or the actual iPod data volume so iPod support works
	when an iPod is plugged in while Banshee was already running

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: Reworked the DapSource
	instantiation to deal with older Mono.Addins; fully dispose and unmap
	any devices bound to a DAP provider extension if that extension is
	removed at runtime; fully tear down the top level DAP service if it
	is disposed, so DAP support can be fully disabled at runtime as well

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Replaced the IDevice
	ctor with a virtual DeviceInitialized method to cope with older
	Mono.Addins - this should fix the problem people have been complaining
	about for 2 days; store the addin ID on the source as well for 
	unmapping in the service

	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs: Removed bad
	threading decisions, race issues, and excessive dispose calls; it is
	up to the device implementation to call dispose as needed inside eject

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Updated to reflect
	minor DapSource API changes due to Mono.Addins

	* src/Libraries/Hyena/Hyena/Log.cs: Walk the exception chain to generate
	a full stack trace printout 

2008-04-24  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Added
	a PurgeTracks method that will nuke all entries in CoreTracks with
	a matching primary source ID

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: Read the
	track database from the iPod

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodTrackInfo.cs: Map the
	iPod tracks to Banshee database tracks

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: Call LoadDeviceContents
	after creating a DapSource

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Added LoadDeviceContents
	and a virtual LoadFromDevice method; LoadFromDevice should be implemented
	by DapSources and will run async - currently only used by IpodSource

2008-04-24  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: Some more 
	cleanup, organizing, and implemeneted icon name support

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Whitespace

2008-04-24  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs:
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Updated to the new DapSource API

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: Uses the new enforced
	IDevice ctor that DapSources must have to create the device, if 
	InvalidDeviceException is thrown, the source is discarded

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Lots of refactoring and
	cleaning; get rid of Resovle and Initialize (IDevice) and rolled all
	that into the ctor; better error messages, more result checking, easier
	to read code

	* src/Dap/Banshee.Dap/Banshee.Dap/InvalidDeviceException.cs: New exception
	that DapSource implementors must throw in the ctor if they can't support
	the device being passed to them

	* src/Libraries/Hyena/Hyena/Log.cs: Log exceptions through Log.Warning
	and added an override to provide a message with the exception

2008-04-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Ipod/Makefile.am: Disable ipod build unless
	ENABLE_IPOD set.

2008-04-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Fix bug
	with seek and jump-to-playing not being sensitive when they should be.
	Fixes BGO #528198.

2008-04-24  Aaron Bockover  <abock@gnome.org>

	* build/build.environment.mk:
	* build/build.rules.mk:
	* build/m4/banshee/dap-ipod.m4:
	* configure.ac: Build foo for iPod support

	* src/Backends/Banshee.Hal/Banshee.HalBackend/BlockDevice.cs: Do not
	check if info.category is storage since the capability query for block
	will validate the device, and info.category may not be storage for all
	storage devices (it could be portable_audio_player)

	* src/Core/Banshee.Services/Banshee.Hardware/IDevice.cs:
	* src/Backends/Banshee.Hal/Banshee.HalBackend/Device.cs: Added HAL 
	method wrappers for properties that should only be used with extreme care;
	probably need to enforce how these are used. They're really just for
	proxying custom properties from custom IDevices; I'm not totally happy
	with this

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs:
	* src/Backends/Banshee.Hal/Banshee.HalBackend/Volume.cs:
	* src/Backends/Banshee.Hal/Banshee.HalBackend/HardwareManager.cs: Some
	cleanups, notes

	* src/Core/Banshee.Services/Banshee.Services.addin.xml:
	* src/Core/Banshee.Services/Banshee.Hardware/HardwareManager.cs:
	Implemented the ICustomDeviceProvider extension, pass all IDevice queries
	through the custom device providers to allow them to transform/replace
	a device with some custom device

	* src/Core/Banshee.Services/Banshee.Hardware/ICustomDeviceProvider.cs:
	The new interface for custom device providers

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod.addin.xml: iPod extension def

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/IpodSource.cs: The beginning
	of the iPod DAP support; doesn't do anything yet

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/PodSleuthDevice.cs: A device
	that translates PodSleuth properties to the iPod device from ipod-sharp

	* src/Dap/Banshee.Dap.Ipod/Banshee.Dap.Ipod/PodSleuthDeviceProvider.cs:
	Custom device provider for taking an iPod storage device and transforming
	its iPod volume into a PodSleuthDevice

2008-04-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Lastfm.Gui/Lastfm.Gui/AccountLoginDialog.cs: Fix bug with
	not saving the account info when the user clicked (vs pressing space or
	enter) the save button.

2008-04-23  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.cs:
	Use new StartPadding.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedBox.cs: Added
	StartPadding and EndPadding properties.

2008-04-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Be more careful
	when Disposing.

2008-04-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Handle the situation of
	the user not having any encoders and trying to transfer an unsupported
	file type.

2008-04-23  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Addins.Gui/AddinDetailsDialog.cs:
	* src/Core/Banshee.ThickClient/Banshee.Addins.Gui/AddinTile.cs:
	* src/Core/Banshee.ThickClient/Banshee.Addins.Gui/AddinView.cs: Moved
	these widgets into their own proper namespace

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/DefaultPreferenceWidgets.cs:
	Changed to reflect said move

2008-04-23  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/BansheeDialog.cs:
	Allow setting the parent/transient for window

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/AddinDetailsDialog.cs:
	Added a simple details dialog for an addin

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/AddinView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/AddinTile.cs:
	Better tile UI and added enable/disable and details buttons to the tile;
	actually enable/disable addins when the button is pressed - BE WARNED
	this has not been tested too much yet

	* src/Libraries/Hyena.Gui/Hyena.Widgets/WrapLabel.cs: Added a Wrap
	property that will allow text to be ellipsized to one line if unset

	* src/Core/Banshee.ThickClient/Banshee.MediaProfiles.Gui/ProfileComboBoxConfigurable.cs:
	* src/Core/Banshee.ThickClient/Banshee.MediaProfiles.Gui/ProfileConfigurationDialog.cs:
	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/DefaultPreferenceWidgets.cs:
	Updated to use the new WrapLabel

	* src/Libraries/Hyena.Gui/Hyena.Widgets/TextViewLabel.cs: Removed now
	that we have a proper WrapLabel
	
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer.addin.xml:
	* src/Backends/Banshee.Gnome/Banshee.Gnome.addin.xml:
	* src/Backends/Banshee.Hal/Banshee.Hal.addin.xml:
	* src/Backends/Banshee.Unix/Banshee.Unix.addin.xml:
	* src/Core/Banshee.Core/Banshee.Core.addin.xml:
	* src/Core/Banshee.Services/Banshee.Services.addin.xml:
	* src/Core/Banshee.ThickClient/Banshee.ThickClient.addin.xml:
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage.addin.xml:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp.addin.xml:
	* src/Dap/Banshee.Dap/Banshee.Dap.addin.xml:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd.addin.xml:
	* src/Extensions/Banshee.Bookmarks/Banshee.Bookmarks.addin.xml:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.addin.xml:
	* src/Extensions/Banshee.MultimediaKeys/Resources/Banshee.MultimediaKeys.addin.xml:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying.addin.xml:
	* src/Extensions/Banshee.PlayQueue/Resources/Banshee.PlayQueue.addin.xml:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.addin.xml:
	Updated addin metadata

2008-04-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Migo/*: Rename a few more enums.

2008-04-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Podcasting/*:
	* src/Libraries/Migo/*: Rename FEEDS_DOWNLOAD_STATUS enum to
	FeedDownloadStatus.  (Props to MD for making this dead easy).

2008-04-23  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Fix typo in
	delete tracks user job message.

	* src/Extensions/Banshee.Podcasting/*:
	* src/Libraries/Migo/*: Fix assembly references in .mdp, and rename one
	enum and its values to FDG standards.

2008-04-23  Aaron Bockover  <abock@gnome.org>

	This commit adds the initial work for the extension manager to allow
	you to enable and disable extensions; it does not yet work and there 
	are still many interaction and rendering issues; no complaining

	* src/Core/Banshee.Services/Banshee.Preferences/Page.cs: Add the new
	extensions page to the preference set

	* src/Core/Banshee.Services/Banshee.Preferences/PreferenceBase.cs:
	* src/Core/Banshee.Services/Banshee.Preferences/Root.cs: Moved
	DisplayWidget to Root

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/DefaultPreferenceWidgets.cs:
	Adapt the new AddinView for our extensions to the extensions page

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/NotebookPage.cs:
	Support pages with their own DisplayWidgets

	* src/Libraries/Hyena.Gui/Hyena.Widgets/WrapLabel.cs: Added a new label
	that doesn't suck for proper wrapping; this label uses a width allocation
	from its parent to compute the layout and forces a height request to
	fit the wrapped layout; it is awesome; someone tell me if the standard
	GtkLabel can do this - I have in many years never been able to do this

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/AddinTile.cs: Hot 
	new tile widget that displays information about an addin/extension and
	will allow you to enable/disable it; not completely done

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/AddinView.cs: A view
	that lays out the AddinTiles

2008-04-22  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit adds transcoding support to DAPs.  Transcoded files are stored
	in ~/.config/banshee-1/transcoder/, and that folder is deleted every
	Banshee session.  One improvement over stable's transcoding is file
	transfers can happen at the same time as transcoding.

	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs: Make IsReadOnly public.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Enable property dialogs
	for DapSources.  Also, override AddTrack methods to first transcode if
	necessary.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Reflect updates in two parent classes.

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs:  Lock use of the
	mtp device so only one operation happens at a time.  Make adding track
	work with new transcoding support.  Add fine-grained progress when adding
	tracks.

	* src/Dap/Banshee.Dap/Makefile.am:
	* src/Dap/Banshee.Dap/Banshee.Dap.Gui:
	* src/Dap/Banshee.Dap/Banshee.Dap.Gui/DapPropertiesDialog.cs: Ported from
	stable.  Advanced properties and owner entry commented out.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: If the Source
	has a property named 'SourceProperties.GuiHandler' that is a
	OpenPropertiesDelegate, invoke it OnSourcePropertiesAction.

	* src/Core/Banshee.ThickClient/ThemeIcons/22x22/actions:
	* src/Core/Banshee.ThickClient/ThemeIcons/22x22/actions/encode.png: Copy
	icon from stable.

	* src/Core/Banshee.ThickClient/Banshee.MediaProfiles.Gui/ProfileConfigurationDialog.cs:
	* src/Core/Banshee.ThickClient/Banshee.MediaProfiles.Gui/ProfileComboBoxConfigurable.cs:
	* src/Core/Banshee.Services/Banshee.MediaProfiles/MediaProfileManager.cs:
	* src/Core/Banshee.Services/Banshee.MediaProfiles/PipelineVariable.cs:
	* src/Core/Banshee.Services/Banshee.MediaProfiles/Profile.cs:
	* src/Core/Banshee.Services/Banshee.MediaProfiles/Pipeline.cs:
	* src/Core/Banshee.Services/Banshee.MediaProfiles/ProfileConfiguration.cs:
	Renamed *ID properties to *Id.  Also, use the ProfileConfiguration in
	several places we used to return just the Profile, since multiple
	ProfileConfigurations can share a Profile, we need to make sure this
	configurations variables are loaded when we use it.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Define
	OpenPropertiesDelegate.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Handle
	AddTracks not being synchronous (since there may be transcoding).

	* src/Core/Banshee.Services/Banshee.ServiceStack/BatchUserJob.cs: Add
	DetailedProgress that is the percent complete of the current sub-job.

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Load
	the TranscoderService.

	* src/Core/Banshee.Services/Banshee.Services.addin.xml: Define
	/Banshee/MediaEngine/Transcoder extension node.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Services.mdp:
	* src/Core/Banshee.Services/Banshee.MediaEngine/ITranscoder.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/TranscoderService.cs: New
	files that give us transcoding.  Largely ported code from stable.

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/GConfConfigurationClient.cs:
	Remove / characters from key names.

	* src/Backends/Banshee.GStreamer/Makefile.am:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer.addin.xml:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/Transcoder.cs: Add
	GStreamer implementation of MediaEngine.ITranscoder, mostly ported from
	stable.

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/AudioCdRipper.cs: Tweak
	way Profiles are loaded to ensure they're configured.

	* src/Libraries/Mtp/Mtp/Track.cs: Remove WriteLine.

	* libbanshee/banshee-transcoder.c: Fix broken progress updates, and Gtk
	criticals.

	* build/build.environment.mk: Require Banshee.ThickClient in Banshee.Dap
	now b/c of properties dialog.

	* data/audio-profiles/*.xml.in: Add taglib/* mimetypes.

	* data/banshee-1.desktop.in.in:
	* data/mimetypes.txt: Update list of mimetypes with some ones from TagLib#
	we didn't have.

2008-04-22  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/PreferencesDialog.cs:
	* src/Core/Banshee.ThickClient/Resources/banshee-dialogs.glade: Nuke
	the old crappy hardcoded preferences dialog

2008-04-22  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Preferences/Page.cs: Cleaned up 
	the default preferences

	* src/Core/Banshee.Services/Banshee.Preferences/PreferenceService.cs:
	Added an InstallWidgetAdapters event and a RequestWidgetAdapters method

	* src/Core/Banshee.Services/Banshee.Preferences/VoidPreference.cs:
	A wrapper to use for fake preferences that will basically be containers
	for advanced widgets bound to other preferences

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/DefaultPreferenceWidgets.cs:
	A little cleanup and use VoidPreference

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/PreferenceDialog.cs:
	Call RequestWidgetAdapters to notify listeners that they need to create
	and bind their widget adapters to preferences they own

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/SectionBox.cs:
	Set the MnemonicWidget if the preference gets a label

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdService.cs:
	Last of the preference migration - adds the import profile combo

2008-04-22  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.MediaEngine/IAudioCdRipper.cs:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/AudioCdRipper.cs:
	Added a enableErrorCorrection argument to the Begin method

	* src/Core/Banshee.Core/Banshee.Configuration.Schema/ImportSchema.cs:
	Removed the error correction schema

	* src/Core/Banshee.Services/Banshee.Preferences/Collection.cs: Added remove

	* src/Core/Banshee.Services/Banshee.Preferences/Preference.cs:
	* src/Core/Banshee.Services/Banshee.Preferences/Root.cs:
	* src/Core/Banshee.Services/Banshee.Preferences/SchemaPreference.cs:
	Added Description property and ctor overrides

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/PreferencesDialog.cs:
	Removed crap

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/SectionBox.cs:
	Set tooltips

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs:
	Pass the schema value ot Begin

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdService.cs:
	Add the first preference for audio CD support
	
	* src/Libraries/Hyena.Gui/Hyena.Gui/TooltipSetter.cs: A new awesome
	tooltip wrapper that will either use the old Gtk.Tooltips API or the new
	Gtk.Widget.TooltipText property, depending on what is available

2008-04-22  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Preferences/Page.cs: Set up default
	preferences for some more things

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/DefaultPreferenceWidgets.cs:
	Added widget adapters for the file/folder pattern preferences

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/SectionBox.cs:
	Layout preference widgets properly using a table so everything lines 
	up and looks pretty

	* src/Core/Banshee.Services/Banshee.Preferences/Collection.cs: Added
	FindOrAdd method

	* src/Core/Banshee.Services/Banshee.Preferences/PreferenceBase.cs:
	Added a ShowLabel property
	
	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/WidgetFactory.cs:
	Remove a console.writeline

	* src/Libraries/Hyena.Gui/Hyena.Widgets/TextViewLabel.cs: Moved from
	somewhere in Banshee proper

	* src/Core/Banshee.ThickClient/Banshee.MediaProfiles.Gui/ProfileComboBoxConfigurable.cs:
	* src/Core/Banshee.ThickClient/Banshee.MediaProfiles.Gui/ProfileConfigurationDialog.cs:
	Reflect the moving of TextViewLabel to Hyena.Widgets

2008-04-22  Aaron Bockover  <abock@gnome.org>

	This commit adds very initial and incomplete support for better preference
	management that makes it easy for extensions to add new preferences

	* src/Core/Banshee.Services/Banshee.Preferences/Root.cs: A root object
	for all things preferency

	* src/Core/Banshee.Services/Banshee.Preferences/Collection.cs: A base
	preference object that represents a collection of preference things

	* src/Core/Banshee.Services/Banshee.Preferences/Page.cs: Non gui collection
	representing pages for the preference dialog

	* src/Core/Banshee.Services/Banshee.Preferences/Section.cs: A section
	is a group of preferences in a page

	* src/Core/Banshee.Services/Banshee.Preferences/Preference.cs: Generic
	preference object that maps to as single preference item

	* src/Core/Banshee.Services/Banshee.Preferences/PreferenceBase.cs: Base
	single item preference object (non-generic)

	* src/Core/Banshee.Services/Banshee.Preferences/PreferenceService.cs:
	The core preference service

	* src/Core/Banshee.Services/Banshee.Preferences/SchemaPreference.cs:
	A preference item object that binds to our lovely SchemaEntry configuration
	objects that makes exposing configuration as preferences really easy

	* src/Core/Banshee.Services/Banshee.Library/LibraryLocationPreference.cs:
	Preference object for setting the library location

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Load the preference service

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/BansheeDialog.cs:
	A new base dialog object that makes writing new dialogs very nice

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/PreferenceDialog.cs:
	The new preference dialog

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/NotebookPage.cs:
	A GUI wrapper for the preference Page object
	
	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/SectionBox.cs:
	A GUI wrapper for the preference Section object

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/WidgetFactory.cs:
	A static class that builds and binds widgets to non-GUI preferences

	* src/Core/Banshee.ThickClient/Banshee.Preferences.Gui/DefaultPreferenceWidgets.cs:
	A set of default preference widget adaptors that represent more complex
	UI for interacting with preferences
	
	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Open the
	new preferences dialog

2008-04-19  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedVolumeButton.cs:
	Added a classic ctor override

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/RepeatActionButton.cs:
	Allow the button to have only the icon

	* src/Core/Banshee.Widgets/Banshee.Widgets/VolumeButton.cs:
	Added a classic mode that just pops up the slider above the widget,
	which is best for fullscreen

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenControls.cs:
	Ensure the controls don't go away if the volume button is active

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	Some fixes; increase the timeout to 5s

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/OverlayWindow.cs:
	Make the background slightly transparent if compositing is supported

	* src/Libraries/Hyena.Gui/Hyena.Gui/CompositeUtils.cs: Utilities for
	dealing with awesome stuff in composited environments that doesn't 
	require the latest bleeding GTK; ported from F-Spot, thank you Larry

	* src/Libraries/Hyena.Gui/Hyena.Widgets/RoundedFrame.cs: Fix the 
	frame rendering

2008-04-19  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenControls.cs:
	Add the default accel group and make it as wide as the screen (probably 
	lame but gabaug was complaining)

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	Add the default accel group and some custom keybindings for seeking
	and showing/hiding the control bar

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/OverlayWindow.cs:
	Make gabaug happy and move the bar to the bottom of the screen

2008-04-19  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedSeekSlider.cs:
	Added new horizontal layout mode that is nice for fullscreen

	* src/Core/Banshee.Widgets/Banshee.Widgets/StreamPositionLabel.cs: 
	Rebuild the layouts when the format string changes

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenControls.cs:
	Allow the seek slider to fill any remaining space in the window and
	make sure the window takes 85% of the screen width

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	Fixed the popup auto-hide when the mouse was over the controls

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/OverlayWindow.cs:
	Added better sizing to allow the window to adapt to the screen size

	* src/Libraries/Hyena.Gui/Hyena.Widgets/MenuButton.cs:
	Implemented two empty method overrides to avoid GtkContainer's bitching

2008-04-19  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenControls.cs:
	First pass at adding fullscreen controls - it's by no means complete, and
	yes I know there are some bugs and missing items

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	Show/hide the controls overlay window when necessary

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/OverlayWindow.cs:
	Started porting the overlay controls window from F-Spot

	* src/Core/Banshee.ThickClient/Banshee.Gui/ViewActions.cs: Use F instead
	of F11 as the fullscreen accel

	* src/Libraries/Hyena.Gui/Hyena.Widgets/MenuButton.cs: Moved the widget
	construction to a protected function and added a default ctor

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/NextButton.cs: Added
	a small wrapper for creating the next action button
	
	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Use the new NextButton

2008-04-19  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	Lots of window manager and parent window interaction stuff so that 
	fullscreen behaves properly when a user does strange window management
	like alt-tab when in fullscreen

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingInterface.cs:
	Ensure that if for some reason the source is changed underneath the
	fullscreen, it's merged back into the source UI

	* src/Libraries/Hyena.Gui/Hyena.Widgets/RoundedFrame.cs: Use the proper
	drawing call for non-standard border renders

2008-04-18  Aaron Bockover  <abock@gnome.org>

	* libbanshee/banshee-player-video.c: (bp_video_find_xoverlay): Do not
	let the video sink handle X events

2008-04-18  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	Hide the cursor if it hasn't moved in 2.5 seconds, allow 150px of movement
	before showing it again if it was hidden already

2008-04-18  Aaron Bockover  <abock@gnome.org>

	This commit adds video rendering to the fullscreen window and fixes all
	of the GTK CRITICAL messages that could be seen when switching from the
	now playing source to something else

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingInterface.cs:
	Implemented a sweet widget reparenting hack to work around the windowing
	issues with GstXOverlay; when the video wiget is not to be displayed,
	it is reparented to the fullscreen window, which will be hidden; this
	also implements the rest of fullscreen support as far as video rendering
	is concerned (there are no fullscreen controls yet, but you can press
	escape to close the window)

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	Hide and unfullscreen self instead of destroying

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/VideoDisplay.cs:
	Abstracted non GstXOverlay specific pieces of the video widget to make
	the code easier to maintain

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/XOverlayVideoDisplay.cs:
	Fixes with the internal windowing to better work with the reparenting
	hack outlined above

2008-04-18  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	We were instantiating a List<string> on every render. Now we just
	use one list per instance and clear it on each render.

2008-04-17  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingInterface.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	Moved the fullscreen UI logic from the source to the interface

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	Use Destroy explicitly

2008-04-17  Scott Peterson <lunchtimemama@gmail.com> 

	* tests/Hyena/SqliteModelProviderTests.cs: Added test for null strings.

2008-04-17  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Look
	for DB-bound members amoung the public fields. Don't know what we
	didn't do that before.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Don't
	throw an exception if we can't retrieve a schema due to the table
	not existing. This is important because the Provider uses
	Scheme.Count == 0 to detect a non-existant table!

	* tests/Hyena/DbBoundType.cs: A type which can be used with an
	SqliteModelProvider for testing purposes.

	* tests/Hyena/SqliteModelProviderTests.cs: Logical tests for the
	SqliteModelProvider.

2008-04-16  Aaron Bockover  <abock@gnome.org>

	* Makefile.am: Add a gdb target

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Added
	AddImportant override for ToggleActionEntry

	* src/Core/Banshee.ThickClient/Banshee.Gui/BaseClientWindow.cs: Moved
	the fullscreen code

	* src/Core/Banshee.hickClient/Banshee.Gui/ViewActions.cs: Implement the
	fullscreen action and allow the fullscreen logic to be overridden

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/FullscreenWindow.cs:
	The window that will house the fullscreen UI for video playback

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingInterface.cs:
	Add a property for getting the VideoDisplay widget

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	Added a custom fullscreen handler that will fullscreen the video window
	when fullscreen action is toggled and the now playing source is active

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/VideoDisplay.cs:
	Inherit from GtkEventBox since it does what we needed and simplifies some
	things; still has that CRITICAL warning though

	* src/Extensions/Banshee.NowPlaying/Resources/ActiveSourceUI.xml: UI for
	merging the fullscreen action into the toolbar

2008-04-16  Alexander Hixon  <hixon.alexander@mediati.org>

	* build/build.environment.mk
	* src/Extensions/Banshee.Daap/Daap/ServiceLocator.cs: We don't like
	bandaids.

2008-04-16  Wouter Bolsterlee  <wbolster@svn.gnome.org>

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapLoginDialog.cs:
	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting/PodcastCore_
	Interface.cs:

	Added a few translator comments.

2008-04-16  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Specify what
	folder to upload the track to - Music or Video.

	* src/Libraries/Mtp/Mtp/MtpDevice.cs: Set the parent_id on the track
	before uploading it.

	* src/Libraries/Mtp/Mtp/Track.cs: Improve the DetectFileType method.

	* src/Libraries/Hyena/Hyena.Query/FileSizeQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/RelativeTimeSpanQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/TimeSpanQueryValue.cs: Parse values as
	doubles instead of ints, allowing queryies and smart playlists to specy
	"size>2.2MB" for instance.

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/FileSizeQueryValueEntry.cs:
	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/TimeSpanQueryValueEntry.cs: Add
	a single decimal place to the spin button.

	* src/Libraries/Hyena/Hyena/StringUtil.cs: Improve FormatDouble method,
	now returns 1 if N < 1.1, etc.

2008-04-16  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	When the CorePrimarySource table was modified a few commits back (after
	Alpha 3, I think) I forgot to make the change for new databases as well.
	Patch from Bertrand Lorentz, fixes BGO #528469.

2008-04-16  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Fix bug
	introduced by Alex's last commit.  Fix a couple style issues.

2008-04-16  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs: Reverted
	IL injection changes.

2008-04-16  Alexander Hixon  <hixon.alexander@mediati.org>

	This commit basically changes the DAAP namespace to Daap, removes the
	server bits from daap-sharp, and puts in support for using avahi-sharp
	instead of Mono.Zeroconf when compiling the extension (note that the
	build stuff hasn't quite been hooked up yet). There's also a few
	changes to using generics in daap-sharp, and DaapPlaylistSource uses
	the database, rather than keeping stuff in memory.

	* src/Extensions/Banshee.Daap/Daap/ContentFetcher.cs:
	* src/Extensions/Banshee.Daap/Daap/Client.cs:
	* src/Extensions/Banshee.Daap/Daap/User.cs:
	* src/Extensions/Banshee.Daap/Daap/ServerInfo.cs:
	* src/Extensions/Banshee.Daap/Daap/BrokenMD5.cs:
	* src/Extensions/Banshee.Daap/Daap/ContentParser.cs:
	* src/Extensions/Banshee.Daap/Daap/LoginException.cs:
	* src/Extensions/Banshee.Daap/Daap/AuthenticationException.cs:
	* src/Extensions/Banshee.Daap/Daap/Playlist.cs:
	* src/Extensions/Banshee.Daap/Daap/Utility.cs:
	* src/Extensions/Banshee.Daap/Daap/Track.cs:
	* src/Extensions/Banshee.Daap/Daap/ContentWriter.cs
	* src/Extensions/Banshee.Daap/Daap/Hasher.cs:
	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapLoginDialog.cs:
	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapService.cs:
	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapTrackInfo.cs:
	Simple namespace change from DAAP to Daap.

	* src/Extensions/Banshee.Daap/Daap/ContentCodeBag.cs:
	* src/Extensions/Banshee.Daap/Daap/Database.cs: Use Generics instead of
	regular Collection classes. Also update the namespaces from DAAP to Daap.

	* src/Extensions/Banshee.Daap/Daap/ServiceLocator.cs: Provide support for
	avahi-sharp as well as Mono.Zeroconf. Also use Hyena logging instead of
	spewing via Console.WriteLine.

	* src/Extensions/Banshee.Daap/Daap/sync-tree.sh: Remove this since it's
	practically useless now.

	* src/Extensions/Banshee.Daap/Daap/Server.cs: Remove this since we're
	not serving up DAAP shares from Banshee directly anymore.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs:
	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapPlaylistSource.cs: Track
	the database IDs rather than the entire track information, and use the
	new namespace.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Add
	virtual AddTrack method that should be overriden by implementing classes
	before use.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: New
	AddTrack methods for adding existing tracks from the database to a
	playlist without reassigning the ParentSource property.

	* build/build.environment.mk: Nasty hack to include the avahi-sharp
	bindings at compile time. This should really be optional, but my auto*
	foo is poor. Good thing we don't enable DAAP by default. :)

2008-04-16  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Patch by Bertrand Lorentz that fixe an NRE when the player engine would be
	disposed before the TrackInfoDisplay. Fixes BGO #527888.

2008-04-16  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.cs:
	Use a BorderWidth of 8 for the AnimatedVBox. This adds 8 pixels on
	all sides.

2008-04-16  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theatrics/Choreographer.cs: More
	accurate easing equations.

2008-04-16  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedBox.cs: Added support
	for BorderWidth. Sexeh!

	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedWidget.cs: Use
	QueueRedrawNoResize rather than QueueRedraw. This makes things
	smoother with Downstage blocking.

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theatrics/SingleActorStage.cs: Add
	an overload for Reload which takes a new duration.

2008-04-15  Scott Peterson <lunchtimemama@gmail.com> 

	This patch does two things. First, it cleans up the AnimatedBox classes
	and improves the spacing logic. Spacing should now behave correctly
	under all situations. Second, we use Relfection.Emit to compile IL that
	gets and sets database-bound members to and from the database
	formats. We were previously using regular old relfection. This puts to
	rest any concerns about the performance of an attribute-based
	model design.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Changed
	to handle generic DatabaseColumn.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs: Made
	DatabaseColumn classes generic. Generate IL for saving/loading data
	to database-bound members.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedBox.cs: Previously
	there was a lot of code dup between AnimatedVBox and AnimatedHBox
	with the only differences being the height/width properties. All
	size negotiation is now done in the abstract AnimatedBox which has
	a "horizontal" bool in its protected constructor.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedVBox.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedHBox.cs: Moved logic
	into base class.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedWidget.cs:
	AnimatedWidgets now have thier own size computation logic. They
	also have a horizontal bool in the ctor.

2008-04-13  Christopher James Halse Rogers  <chalserogers@gmail.com>

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/AudioCdRipper.cs:
	Hook up the paranoia-mode logic to the error-correction preference.

2008-04-12  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit adds usable MTP device support.  Still no transcoding for any
	DAPs, but that's next.

	* src/Backends/Banshee.Hal/Banshee.HalBackend/Device.cs: If usb.serial
	property exists on the device, use it for the Uuid.  Used for matching Mtp
	devices to the libmtp device list.

	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Clients/Nereid/Nereid/ViewContainer.cs: Add a disk usage
	label/progres bar and display it when the source implements
	IDiskUsageReporter.  Also, show the source context menu when the source's
	title in the view container is right clicked.

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Set the default
	MediaAttributes to Default.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Add GetTrackIdForUri method, used by Mtp support to associate existing
	tracks when mtp device entries.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Change CorePrimarySource entries for Library/VideoLibrary to use UniqueId.

	* src/Backends/Banshee.Hal/Banshee.HalBackend/HardwareManager.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/HardwareManager.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/IHardwareManager.cs: Add
	GetAllDevices call.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Use UniqueId
	to identify primary sources, not TypeUniqueId.  Add user notify calls when
	deleting items.  And every 10 items added or deleted, refresh.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Use String.Format
	instead of concat.

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Implement track
	loading, adding, and deleting.  Implement disk usage, and eject, and
	renaming.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Sources/IDiskUsageReporter.cs: New
	interface for sources that want disk usage info displayed (eg DAPs).

	* src/Dap/Banshee.Dap.Mtp/Makefile.am:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpDapTrackInfo.cs:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpTrackInfo.cs: Fixes to
	property mapping, renamed, added to build.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: Listen for DapSources
	being removed by the SourceManager and remove them from the map. Also,
	when unmapping them, call Dispose on them.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs:  Override AddChildSourc
	with warning about how they aren't saved to the device (yet).  Add
	internal Device property.

	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs: Implement
	IDiskUsageReporter.

	* src/Libraries/Mtp/Mtp/Track.cs: Style fixes.

	* Makefile.am: 
	* tests/Makefile.am: Change make test instead of make run-test

	* tests/Banshee.Core/TaglibReadWriteTests.cs: Add unit tests to make sure
	Banshee.IO.System and Banshee.IO.Unix read and write tags properly.

	* src/Backends/Banshee.Unix/Banshee.IO.Unix/DemuxVfs.cs: Fix major bug
	where writing metadata to file wasn't working in trunk if you were using
	Banshee.IO.Unix (which most/all people are).

2008-04-11  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Do not automatically
	resize the source view (BGO #527340)

2008-04-11  Aaron Bockover  <abock@gnome.org>

	* libbanshee/banshee-gst.c: 
	* libbanshee/banshee-gst.h: Implemented our own logging functions that
	can call a handler function which is defined in managed code; this allows
	libbanshee to use the same logging facilities that are available to managed
	code

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/Service.cs: Implement
	the native logging function and proxy calls to the Hyena logger

	* libbanshee/banshee-player-private.h: Made the bp_debug macro expand to
	the new native logging function

	* src/Libraries/Hyena/Hyena/Log.cs: Made Commit method public

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Pack the status label in
	an EventBox; when the event box is clicked, call CycleStatusFormat on
	the active source; use the new MainMenu widget instead of fetching it
	directly from the UI manager

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Implemented
	CycleStatusFormat and some supporting properties; and two new status
	formatters for time; added a ConfigurationId property

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/PersistentColumnController.cs:
	Use the Source.ConfigurationId property

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/MainMenu.cs: Load the
	main menu from the UI manager and connect the new repeat and shuffle menus

	* src/Core/Banshee.ThickClient/Banshee.Gui/InterfaceActionService.cs:
	Split FindAction into a FindActionGroup method

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackRepeatActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackShuffleActions.cs:
	Implemented CreateSubmenu and AttachSubmenu methods

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Add some
	NRE defenses

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Removed the hardcoded menu entries for shuffle and repeat

	* src/Extensions/Banshee.NotificationArea/Resources/NotificationAreaMenu.xm:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Added shuffle and repeat menus back to the tray menu

2008-04-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Fix IndexOutOfBounds exception.

2008-04-11  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Make sure we don't handle header-related interaction stuff if the
	header isn't shown. Fixes BGO #527510.

2008-04-11  Sebastian Dröge  <slomo@circular-chaos.org>

	* build/m4/banshee/gtk-sharp.m4: gconf-sharp is part of gnome-sharp
	so check for it there and not a second time here.

2008-04-11  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedBox.cs: Use bools
	instead of the None enums (previously instituted to eliminate some
	nullables.
	
	* src/Libraries/Hyena.Gui/Hyena.Widgets/MenuButton.cs: Got rid of
	OnRealized OnUnrealized overrides - we don't really need them.
	
	* src/Libraries/Hyena.Gui/Hyena.Gui.Theatrics/Choreographer.cs: Got rid
	of Easing and Blocking.None

2008-04-10  Aaron Bockover  <abock@gnome.org>

	Banshee 1.0 Alpha 3 (0.98.3) Released

2008-04-10  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedWidget.cs: Fixed stupid
	stupid crash.

2008-04-10  Aaron Bockover  <abock@gnome.org>

	* NEWS: Updated
	
	* configure.ac: Turned off the DEVEL_BUILD flag for the release

2008-04-10  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/VideoDisplay.cs:
	Do /not/ call base.OnRealized because we don't like to crash

2008-04-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* NEWS: Update for 0.98.3

2008-04-10  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	We now inherit from Widget and render to the parent GdkWindow and
	call base.OnRealize (). This fixes BGO #524429.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_DragAndDrop.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs:
	Call base.OnRealize () and inherit from Widget.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/MenuButton.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedWidget.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/VideoDisplay.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedBox.cs: Call
	base.OnRealize ().

2008-04-10  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdTrackInfo.cs:
	Added an override for TrackEqual that addresses audio CD track equality

2008-04-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/AlbumListView.cs:
	Refresh when a track info updated event is raised by the player engine;
	this fixes BGO #524865

2008-04-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	Fix capitalization of menu items, use 'Last.fm' instead of 'Audioscrobbler'.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	Encode url bits.

	* src/Libraries/Lastfm.Gui/Lastfm.Gui/AccountLoginDialog.cs: Replace Close
	button with Cancel / Save and Log In buttons.  Should fix BGO #525585.

	* src/Libraries/Lastfm.Gui/Lastfm.Gui/AccountLoginForm.cs: Make Save
	method public.

2008-04-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/AlbumListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtistListView.cs:
	Call Next () instead of First () when source/artist/album activated, so that
	random works.  Fixes BGO #527218.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Lock around Reload, GetRandom, and this[] to avoid refresh race.  Fixes
	BGO #525031.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Fix bug with double clicking on an item not activating it every other
	time.

2008-04-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection/TrackListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection/MemoryTrackListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Implement GetRandom method, using SQL for DatabaseTrackListModel.

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Move IncrementPlay/SkipCount logic into public IncrementLastPlayed method.

	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	Cann IncrementLastPlayed before getting the next song since that affects
	the random query method.  Fix repeat/restart in linear query.  Change
	QueryTrackRandom to call GetRandom on TrackModel.

	* src/Core/Banshee.Services/Banshee.PlaybackController/IBasicPlaybackController.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/ICanonicalPlaybackController.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Add restart arg to Previous.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Add GetSingle
	method that can be passed a condition/order by fragment and returns one
	item.

2008-04-10  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Use the fancy new
	PersistantPanController. FANCY!

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/PersistentColumnController.cs:
	Got rid of now-unnessisary volatile modifier.

	* src/Core/Banshee.ThickClient/Banshee.Gui/PersistentPaneController.cs:
	The PersistentPanController can be used to save/restore the
	position of a Gtk.Pane automatically. Passing a Gtk.Paned and some
	schema info to the static Control method will set it up and it will
	always do the right thing.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	Use PeristentPaneController for browser panes. This fixes BGO
	#522470.

	* src/Core/Banshee.Core/Banshee.Configuration/SchemaEntry.cs: Since
	this is a public struct, we do the neighborly thing and impliment
	IEquatable. I thought I was going to use this but ended up not
	doing so. Still, it's the right thing to do.

2008-04-10  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.ThickClient/Banshee.Gui/InterfaceActionService.cs:
	Added a ViewActions property.

	* src/Core/Banshee.ThickClient/Banshee.Gui/BaseClientWindow.cs: Handle
	fullscreen toggling. This fixes BGO #526618.

2008-04-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellPositiveInt.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	* src/Core/Banshee.ThickClient/Makefile.am: Add Disc column.  Fixes
	BGO #385543.

2008-04-10  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Better vadjustment handling. This fixes BGO #526689.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/MenuButton.cs: Minor, perhaps
	unessiary, changes.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedWidget.cs: Use a bool
	instead of a nullable type.

2008-04-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Add
	information popup if user tries to add track(s) to a playlist from outside
	its primary source (since not yet implemented).

	* src/Core/Banshee.Services/Makefile.am: Reorder.

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Gui/PodcastManager/Source/PodcastSource.cs:
	Set CanAddTracks to false since it doesn't work.

2008-04-09  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit makes adding and deleting from a PrimarySource async, and pops
	up UserJobs if those operations take very long.  Very importantly, it also
	adds the ability to copy the track model selection so slow running jobs
	can process it w/o risking it changing on them.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	Handle having no artist or album model gracefully.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Fixed up
	Add/Delete methods.

	* src/Core/Banshee.Services/Banshee.ServiceStack/UserJob.cs: Handle
	multiple Finish calls gracefully.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: New
	AddAllTracks method for use by MergeSource method.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Change slow
	operations to use a new CachedList object instead of iterating over the
	model's Selection, since it or the model might change underneath us.  Add
	UserJobs for adding/deleting.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Don't raise
	UserNotifyUpdated if we're the active source.

	* src/Core/Banshee.Services/Makefile.am: New files

	* src/Core/Banshee.Services/Banshee.Collection.Database/CachedList.cs: New
	class that contains a SqliteModelCache, so it's backed by CoreCache and
	can be used to store info (eg the selected tracks from a source) so they
	can be operated on independent of the original selection/model.

	* src/Core/Banshee.Services/Banshee.ServiceStack/BatchUserJob.cs: UserJob
	convenience subclass.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	Do MergeSource operations in a thread.  Should probably be done in
	PrimarySource.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Whitespace.

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Get rid of OnUserNotifyUpdated, this is done in DatabaseSource now.

	* src/Libraries/Hyena/Hyena.Collections/RangeCollection.cs: Add Count
	property to Range to avoid doing End - Start + 1 everywhere.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Make work
	without a Selection.

2008-04-10  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theatrics/Choreographer.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedBox.cs: Avoid using
	nullable types for some stuffs

2008-04-09  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Widgets/MenuButton.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedWidget.cs: Fixed
	style attachtment problem which was gave spew when the theme was
	changed.

2008-04-09  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/StreamPositionLabel.cs:
	Fix DPI and size request issues

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Use the generic CreateLayout cairo method in CairoExtensions

	* src/Libraries/Hyena.Gui/Hyena.Gui/CairoExtensions.cs: Moved the 
	CreateLayout method from the list view to this utils class

	* src/Libraries/Hyena.Gui/Hyena.Widgets/MenuButton.cs: Added OnUnrealized

2008-04-09  Aaron Bockover  <abock@gnome.org>

	* configure.ac:
	* build/build.rules.mk: Added a DEVEL_BUILD variable - if set, compiler
	warnings will be treated as errors. We'll always keep it on except for
	when we distcheck for a release

	* build/m4/banshee/gtk-sharp.m4: Require Gtk# 2.10

	* data/icon-theme-hicolor/Makefile.am: Copy the app icons to the local
	uninstalled icon theme

2008-04-09  Aaron Bockover  <abock@gnome.org>

	* build/build.rules.mk:
	* build/m4/banshee/daap.m4:
	* build/m4/banshee/libbanshee.m4:
	* build/m4/banshee/mono-zeroconf.m4:
	* build/m4/shamrock/gstreamer.m4:
	* configure.ac: Lots of build fixes, disable DAAP and Podcasting by default;
	only link against core gstreamer libraries and gdk-x11

	* libbanshee/banshee-transcoder.c: Remove all GnomeVFS code

2008-04-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection/IHasTrackSelection.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Services.mdp:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs:
	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Rename *ListDatabaseModel to Database*ListModel.

2008-04-09  Aaron Bockover  <abock@gnome.org>

	* build/build.environment.mk:
	* configure.ac: Set up the sample extension in the build

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Added a new TrackIntercept event that allows objects to stop the
	player engine from opening a trac

	* src/Extensions/Banshee.Sample/: Set up a quick sample extension to help
	new developers; it sort of breaks things right now, but I'll fix that soon

2008-04-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Fix issue
	with reloading way too many things when adding tracks to a source.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	Fix issues with the 'New Playlist' that appears when you drag over the
	source list.  It now will appear under any LibrarySource when you hover
	over it or its children.  And it will only expand the LibrarySource when
	within it, and collapse it when out of it (if it was collapsed to start
	with).  Fixes BGO #410121.

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	When items are added to the play queue and the PlayerEngine is not already
	playing, set us as the playback source.

2008-04-09  Scott Peterson <lunchtimemama@gmail.com> 

	OK, I totally re-did the arrow button stuff. We still don't use the
	standard Gtk MenuToolButton because I am WAY to cool for it.
	It like _thought_ it was all cool enough to sit at my lunch table,
	but I was all like Ut-Uh! So we now use the sufficiently cool and
	totally custom MenuButton. This sucker is lean, mean, with an
	emphasis on correctness. No hacky-hacky here. Nosiree. I'd
	maybe entertain the idea that there's a better way to handle
	the RepeatActionButton, but I'm seriously fine with it as-is.

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Use the new stuff.

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackShuffleActions.cs,
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackRepeatActions.cs:
	Added nice CreateMenu() method which does just what you think.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/NextArrowButton.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui/IRadioActionGroup.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/ArrowButton.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/ActionGroupButton.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/ActionButton.cs: Got rid of
	these god-aweful classes.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/RepeatActionButton.cs:
	Redone to use MenuButton.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/MenuButton.cs: This is the
	lovely new widget. Pass it a widget (like a Button or a MenuButton,
	for example) and it will menu-fy it! If showArrow is true, a
	way-pretty arrow will appear to the side of the widget you pass,
	providing access to the menu. If showArrow is false, the widget you
	pass will get packed inside the button and clicking anywhere will
	open the menu.

2008-04-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* build/build.environment.mk: Banshee.Dap.Mtp depends on Mtp library.

	* src/Backends/Banshee.Hal/Makefile.am:
	* src/Backends/Banshee.Hal/Banshee.HalBackend/DeviceMediaCapabilities.cs:
	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Hardware/IDeviceMediaCapabilities.cs:
	New files for exposing portable_audio_player properties.

	* src/Backends/Banshee.Hal/Banshee.HalBackend/Device.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/IDevice.cs: Add Product,
	Vendor, and MediaCapabilities properties.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Add copy ctor.

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Add
	ShuttingDown bool property.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Add
	CanAddTracks and Merge-related overrides.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Add Dispose
	method, and override AddTrack/Merge methods.

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Get rid
	of WriteLine.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Add the ability to add tracks to DAPs.  No transcoding yet, and doesn't
	respect FolderDepth yet.

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs: Copy more
	initialization code over.  Still far from usable.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: Call DapSource.Resolve
	instead of Initialize.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Add better defaults.

	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs: Move Dispose method
	up to PrimarySource.  Get rid of Merge/AcceptsInput overrides.

	* src/Core/Banshee.Services/Banshee.Sources/ITrackModelSource.cs:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapPlaylistSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs: Add
	CanAddTracks property.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs: Call
	base.Dispose ().

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Use updated AddSelectedTracks method.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs: Add GetRawValue
	method for use in provider's Copy method.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Add Copy
	method for transferring all db fields (except pk) from one instance to another.

2008-04-09  Mike Urbanski  <michael.c.urbanski@gmail.com>    

	* src/Extensions/Banshee.Podcasting/Banshee.Podcasting.Data/PodcastFeed.cs:
	Fixes table name clashes on dbs migrated from banshee 0.x.  drr...

2008-04-08  Aaron Bockover  <abock@gnome.org>

	This commit adds the initial checkin of the new podcasting code by
	Mike Urbanski. It's rough in many areas around the extension, but it 
	works for the most part. It's very much a WIP, but it's quite awesome.

	* build/build.environment.mk:
	* configure.ac: Integrate the Migo and Banshee.Podcasting assemblies
	into the build

	* src/Libraries/Migo: Migo is the new library that does all the feed
	reading and downloading, among other things; it's reusable and not
	Banshee specific, sort of like Hyena for feed related problems

	* src/Extensions/Banshee.Podcasting: Banshee.Podcasting is the extension
	that provides the actual podcast support in Banshee, and uses Migo to 
	do the heavy lifting

2008-04-08  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Extensions/Banshee.NotificationArea/Resources/NotificationAreaMenu.xml:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	Got rid of references to old ShuffleAction.

2008-04-08  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Widgets/ActionButton.cs: Fixed stupid
	NRE error.

2008-04-08  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Widgets/ArrowButton.cs: Cosmetic
	change.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/ActionButton.cs: Got rid of
	some useless checks. There are some cornercases I'm just not
	prepared to spend the energy to handle properly.

2008-04-08  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackShuffleActions.cs:
	Ctor now takes a PlaybackActions object so that it always has a
	reference to the next action.

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Move
	instantiation of the repeat and shuffle actions to after the other
	actions so that the shuffle action can change the next action's
	icon.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/NextArrowButton.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/RepeatActionButton.cs:
	Set visual style in ctor.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/ArrowButton.cs: Derives from
	ActionGroupButton and uses an ActionButton for the "main" button
	part. Also proxies things like style, relief, &c. to the main
	ActionButton.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/ActionGroupButton.cs: Now
	derives from ActionButton.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/ActionButton.cs: ActionButton
	is now the base of custom action-bound buttons. It doesn't do the
	cool Action.ConnectProxy shit that ToolButton does (because Gtk+
	Suxorz Teh Big One!!1!11), but it's pretty close. It also
	integrates with the style of a Toolbar you pass it.

2008-04-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellAlbum.cs:
	Properly calculate the row height based on actual pango layout calculations
	so that the row height will adapt to DPI changes

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Recalculate the header size when DPI changes

2008-04-07  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Gui/PangoCairoHelper.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Let Cairo know what DPI we're using so text is rendered at the right size,
	and recalculate the row height on style set in case the DPI changed; 
	fixes BGO #522500, and is completely awesome - I recommend people change
	their DPI settings while Banshee is running a few times to really take in
	the awesomeness of this fix. Really.

	I also added a nicer way for row heights to be queried so renderers can
	provide their desired heights; it's a better solution than the previous
	hack, which was not nice. 

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellAlbum.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellTrack.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Provide
	row height calculating functions; ColumnCellText's version is static and
	is referenced by ListView as the default calculator

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TerseTrackListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/AlbumListView.cs:
	Set the renderer row height computing functions to the view

2008-04-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	Disable the case-sensitive LIKEs pragma as it was breaking queries.  Fixes
	BGO #526371.

2008-04-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs: Patch from
	Michael Monreal adding a disconnect icon.  Fixes BGO #526815.

2008-04-07  Gabriel Burt  <gabriel.burt@gmail.com>
	
	* ChangeLog: Forgot to thank Bertrand two commits ago.

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/AlbumSet.cs:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpDap.cs:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpDapTrackInfo.cs: Copied over
	from stable, not yet built.

2008-04-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.Mtp/Makefile.am: Don't build unless enabled.

2008-04-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* build/build.environment.mk: Add Mtp and Banshee.Dap.Mtp deps.

	* build/build.rules.mk: Handle *.config files.

	* build/m4/banshee/mono-zeroconf.m4:
	* src/Extensions/Banshee.Daap/Makefile.am: Make Daap support optional,
	though on by default.  Thanks to Bertrand Lorentz for the patch.  Fixes
	BGO #526797.

	* build/m4/banshee/dap-mtp.m4:
	* configure.ac: Check for libmtp, and make MTP support optional (currently
	off by default, enable with --enable-mtp).

	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp.addin.xml:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp.mdp:
	* src/Dap/Banshee.Dap.Mtp/Banshee.Dap.Mtp/MtpSource.cs:
	* src/Dap/Banshee.Dap.Mtp/Makefile.am:
	* src/Dap/Dap.mds:
	* src/Dap/Makefile.am: New skeleton for Mtp device support.

	* src/Libraries/Libraries.mds:
	* src/Libraries/Makefile.am:
	* src/Libraries/Mtp/*: Move libmtp-sharp code over from latest in stable.
	Reorganize.

2008-04-07  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/ExtensionManagerDialog.cs:
	Nothing here yet, hopefully I can actually spare some time for it

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui/ShadingTestWindow.cs: Removed rogue
	LayoutPath calls, replaced with ShowLayout

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Did some 
	profiling and switched the text renderer to Cairo since it's actually
	faster than GTK - this is fucking awesome:

	    Cairo (pango_cairo_show_layout): 0.303
	    GTK   (gtk_paint_layout):        0.369
	    Cairo (pango_cairo_layout_path): 0.980

	This means text is now drawn directly to the cairo context and not to
	the GdkDrawable, which means we'll be able to cache the rendering to
	an image surface which supports an alpha channel (unlike GdkPixmap), which
	will lead to more performance improvements, specifically when dragging

	* src/Libraries/Hyena.Gui/Hyena.Gui/PangoCairoHelper.cs: Added a contract
	argument to LayoutPath that conveys it has crappy performance

2008-04-07  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Pack in the
	NextArrowButton.

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackShuffleActions.cs:
	Adds all of the shuffle action definitions.

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Use new
	shuffle actions.

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackRepeatActions.cs:
	Replaced if/elses with a cast of the action value to the enum type.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/NextArrowButton.cs:
	The next button now has a drop-down menu to select the shuffle
	setting.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/RepeatActionButton.cs:
	Moved all of the logic into Hyena.Widgets.ActionButton.

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Added new shuffle actions to the menu, replace the old next button
	with a placeholder for the fancy new one.

	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackShuffleMode.cs:
	Added values for shuffling by song, artist, album.

	* src/Libraries/Hyena.Gui/Hyena.Gui/IRadioActionGroup.cs: An interface
	we seem to need until someone comes up with a more creative
	solution.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/ArrowButton.cs: This widget
	visually works just the Firefox 2 forward/back buttons. There is a
	main button which is tied to the active action and an arrow to the
	right side. Clicking the arrow brings up a menu of the actions in
	the IRadioActionGroup.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/ActionButton.cs: An
	ActionButton is a button which pops up a menu when you click on it.
	It is tied to an IRadioActionGroup.

2008-04-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs: Remove
	unnecessary Reload calls and method/property overrides.

2008-04-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Save the
	original IconName for an action within UpdateAction, like we do for
	labels, so we can restore it when we switch to a source that doesn't
	override it.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Use IconName
	instead of the StockId so icons can be overridden.

2008-04-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportManager.cs:
	Add force_copy protected bool that we pass to CopyToLibraryIfAppropriate.
	Used when importing DAPs to force copy to library.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Rename CopyToLibrary method, and add bool arg that forces it to copy the
	track, even if the user's preference is not to do so.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Fix up
	ImportSourceAction so it's now functional.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Avoid spawning unnecessary thread.  Fix bug with accessing the
	BaseDirectory; cache the Hal.Device's mount point property.  Implement
	IImportSource, so can now import MassStorageSources from the Media ->
	Import menu and via its context menu (dnd to come).

	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs: Implement most of
	IImportSource.

2008-04-07  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapService.cs: Only show the
	DAAP container source if we actually have any shares available, otherwise
	don't spam the source list.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs:
	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapPlaylistSource.cs: Make
	sure elements are actually in the list before we do any operations on
	them.

2008-04-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	Fix love/ban icons.

	* src/Libraries/Lastfm/Lastfm/RadioConnection.cs: Remove unnecessary
	logging, log exceptions with Log.Exception (e).

2008-04-06  Aaron Bockover  <abock@gnome.org>

	This commit functionally complete ripping. Ripped albums will now show
	up in the library with all the metadata properly stored and organized.
	There are now only a few things to polish regarding ripping.

	* libbanshee/banshee-ripper.c: Removed a bad unref call - the pipeline
	should only be unreffed when destroying it

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/TagList.cs: Merge
	release date, and musicbrainz ID properties into the tag list

	* src/Core/Banshee.Core/Banshee.Collection/AlbumInfo.cs: Added Release
	Date and MusicBrainzId properties

	* src/Core/Banshee.Core/Banshee.Collection/ArtistInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Added 
	MusicBrainzId properties

	* src/Core/Banshee.Core/Banshee.Streaming/CommonTags.cs: Added GStreamer
	tag names for MusicBrainz

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Bind MusicBrainzId properties to respective database columns so these
	are now stored/loaded properly

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs:
	Support saving a lot of extra information from MusicBrainz and properly
	create the album, artist, and album artist records

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs:
	Save the track, artist, and album artist records into the database
	when a track finishes ripping

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdTrackInfo.cs:
	Extend DatabaseTrackInfo and persist artist, album, and album artist
	objects on the track which can be saved to the database when ripped

2008-04-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistInfo.cs:
	Make sure to load all columns in FindOrCreate methods.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportManager.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:
	Change PrimarySourceIds to a int [].

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Fix bug in ContainsUri method.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs: Add support
	for Arrays as query values (for use in "IN (?)" conditions).

	* tests/Hyena/SqliteCommandTests.cs: Test array support.

2008-04-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistInfo.cs:
	Add UpdateOrCreate methods that will overwrite an artist/album if it
	already exists, otherwise will just save the new one.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Change Edit
	Track Metadata to Edit Track Information in pursuit of user-friendliness.
	Thanks to Chris Lord for the suggestion.

2008-04-06  Gabriel Burt  <gabriel.burt@gmail.com>

	This patch extends the relative-Uri goodness we use for Library tracks to
	any PrimarySource's tracks, meaning if your DAP has one mount point one
	time, and another the next, we'll detect the songs that are already in the
	database since we now check against the relative Uri.  Also, delete from
	MassStorage sources is working.

	* src/Core/Banshee.Core/Banshee.IO/IFile.cs:
	* src/Core/Banshee.Core/Banshee.IO/File.cs:
	* src/Core/Banshee.Core/Banshee.IO.SystemIO/File.cs:
	* src/Backends/Banshee.Unix/Banshee.IO.Unix/File.cs: Add Copy method.

	* src/Core/Banshee.Core/Banshee.Base/Paths.cs: Factory MakePathRelative
	out, not-library specific.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportManager.cs:
	Add a couple virtual properties for making the relative-Uri stuff
	PrimarySource agnostic.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Make the process of making a Uri relative and reconstructing it from the
	relative path saved in the db generic so it can be used by other
	PrimarySources.  Scope ContainsUri method to one or more primary sources,
	since it's fine if a track is on a DAP and in the library.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Add methods
	for making the Uri of a track relative (if possible).  Add default
	DeleteTrackRange implementation pulled from LibrarySource, but make it
	call a virtual DeleteTrack method that each PrimarySource can implement.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs: Override
	DeleteTrack method to delete files from disk.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Don't show the
	context menu at all if it has no visible items.  Fix crasher with the
	playlist menu b/c of recent icon changes.

	* tests/Makefile.am:
	* tests/Banshee.Core/TaglibReadWriteTests.cs: Test our read/write tags to
	file code. Commented out b/c abock doesn't want the 390KB of music files
	in svn.

	* tests/Hyena/QueryTests.cs: Changes to AssertForEach method.

2008-04-06  Aaron Bockover  <abock@gnome.org>

	* libbanshee/banshee-gst.c: Added banshee_is_debugging and 
	banshee_get_version_number functions; gstreamer_initialize now takes a
	debugging argument that banshee_is_debugging will return

	* libbanshee/banshee-ripper.c: Save the GstTagList that is passed to
	the rip function to the encoder element; fixed bug with setting the
	encoder version tag

	* libbanshee/banshee-tagger.c: Added bt_tag_list_add_date and 
	bt_tag_list_dump, which will dump the entire contents of a GstTagList
	for debugging purposes

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/AudioCdRipper.cs:
	Delete a ripped file if the file was not finished

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/Service.cs:
	Pass the debug mode to libbanshee

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/TagList.cs:
	Added AddDate and AddYear functions, binding bt_tag_list_add_date

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs:
	Read the disc number and release date from musicbrainz and set it on
	the disc tracks so this information will be written to the output files

2008-04-06  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/GtkTheme.cs: Fixed column
	separator height

2008-04-06  Aaron Bockover  <abock@gnome.org>

	* build/build.rules.mk: Fixed up the new private icon theme rules so the
	icons get 'installed' when building, installing, and uninstalling; this
	should fix the missing icon issues now when you run banshee installed

	* build/private-icon-theme-installer: A script for installing and 
	uninstalling the private icon theme files

	* src/Extensions/Makefile.am: Enabled DAAP again, halex says it won't
	ruin the database now

2008-04-06  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/X11NotificationAreaBox.cs:
	Fixed the icon sizing issue hopefully once and for all - still the same
	proper result but without the invalid size warning

2008-04-06  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/RepeatActionButton.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackRepeatActions.cs: Fixed
	some more icon theme issues relating to switching a lot of stuff from
	stock icons to theme icons

	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerLevelsBox.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/DiscUsageDisplay.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/SearchEntry.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/Tile.cs: Updated to use some
	of the drawing utilites that moved into Hyena.Gui

	* src/Core/Banshee.Widgets/Banshee.Widgets/ActionButton.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/CoverArtThumbnail.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/CoverArtView.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/DrawingUtilities.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/EllipsizeLabel.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/FadingAlignment.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/LinearProgress.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/MultiStateToggleButton.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/RadialProgress.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/ShadowContainer.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/SimpleNotebook.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/ToggleState.cs: Deleted these
	legacy widgets, hooray for bloat cut

2008-04-06  Aaron Bockover  <abock@gnome.org>

	* libbanshee/banshee-ripper.c: More cleanup and refactoring, it's mostly
	working but tags are not yet saved since I changed the way we do tagging
	and I'm not done

	* libbanshee/banshee-tagger.c: Basically this API provides a 1:1 with
	the GstTagList API and exists to make managed interop easier

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/TagList.cs: A wrapper
	and utility class around GstTagList that converts TrackInfo objects
	into GstTagList objects that can be passed directly to a GStreamer
	element that supports tagging

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/AudioCdRipper.cs:
	Wrote most of the ripper stuff - it works, but there are quirks not
	yet solved - it's not completely done

	* src/Core/Banshee.Services/Banshee.MediaEngine/IAudioCdRipper.cs:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs:
	Updated some interface members

2008-04-05  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/MusicBrainz/*: Synced w/ MB#

2008-04-05  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs:
	Got rid of unnessisary null checks.

2008-04-05  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs:
	Got rid of now unnessiary work around and use new Query overload.

	* src/Libraries/MusicBrainz/MusicBrainz/MusicBrainzObject.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/Relation.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/Label.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/Release.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/Event.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/Disc.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/MusicBrainzEntity.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/XmlRequestEventArgs.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/LocalDisc.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/Utils.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/DiscLinux.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/Track.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/MusicBrainzItem.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/Query.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/MusicBrainzException.cs:
	 src/Libraries/MusicBrainz/MusicBrainz/DiscWin32.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/Artist.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/MusicBrainzService.cs: Synced
	MusicBrainz# code.

2008-04-05  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Reverted last change - it apparently borks migration :(

2008-04-05  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Minor SQL improvement when getting the count of items in an
	unfiltered model.

2008-04-05  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapPlaylistSource.cs: Small
	woops.

2008-04-05  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Daap/Daap/ServiceLocator.cs: Try to resolve all
	possible addresses for the first resolved hostname if it gives us an IPv6
	address.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapPlaylistSource.cs: Child
	playlist source for DAAP sources. Uses DaapTrackInfo from parent source to
	populate trackmodel.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs: Create playlist
	sources if the DAAP share provides any. Also hookup different icons for
	protected/unprotected shares. Now also handles the remote removing tracks
	from the share and updating our local view to reflect changes.

2008-04-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmTrackInfo.cs:
	Whoops, I had Alex only scrobble TrackInfos with the Music attribute, but
	I forgot Last.fm radio tracks didn't.  Fixes BGO #525464.

2008-04-04  Aaron Bockover  <abock@gnome.org>

	* libbanshee/banshee-ripper.c: Renamed and new API akin to what I did
	for the player engine; started cleaning up the code, but not finished

	* libbanshee/gst-cd-rip.h:
	* libbanshee/gst-misc.h: Removed, not needed

	* libbanshee/gst-transcode-0.10.c: Fixed bloated ctor and removed dead code

2008-04-03  Aaron Bockover  <abock@gnome.org>

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/AudioCdRipper.cs:
	Get the cd importing profile and generate the pipeline for the encoder

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/Service.cs: Ported
	the GStreamer media profile process stuff, including the SExpEngine 
	extensions/GStreamer binding, fully enabling GStreamer media profiles

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs:
	Cleaned up

	* src/Libraries/Hyena/Hyena.SExpEngine/EvaluatorBase.cs: Minor API fix

2008-04-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Only load volumes that have a .is_audio_player file.  For now.

2008-04-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	When the Play Queue is initialized, if it has tracks and the PlayerEngine
	is not already playing, set it as the playback source.

2008-04-03  Aaron Bockover  <abock@gnome.org>

	* build/build.rules.mk:
	* data/audio-profiles/Makefile.am: Changed the uninstall data directory
	layout inside of bin/; copy audio profiles as well so they'll work 
	bundled or uninstalled

	* src/Core/Banshee.Core/Banshee.Base/ApplicationContext.cs: Minor fixes

	* src/Core/Banshee.Core/Banshee.Base/Paths.cs: Fixed up the code to detect
	what to use as 'datadir' - if there is a share directory in the directory
	that contains the entry assembly, we will use that directory as the
	installation prefix which means external datadir files will work 
	when running uninstalled or if bundled, like we'll ship on Windows; 
	otherwise the proper prefix is calculated (i.e. /usr)

	* src/Core/Banshee.Services/Banshee.MediaProfiles:
	* src/Core/Banshee.ThickClient/Banshee.MediaProfiles.Gui: Renamed from
	Banshee.AudioProfiles* since one day we'll support video profiles as well

	* src/Core/Banshee.Services/Banshee.MediaProfiles/MediaProfileManager.cs:
	Fix up the profile loading/path code so profiles actually load now

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/PreferencesDialog.cs:
	Reflect the API

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeIconFactory.cs:
	Use the new datadir detection path

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs:
	Stubbbbs

2008-04-03  Gabriel Burt  <gabriel.burt@gmail.com>

	This patch adds back the extension code from DapCore and completes the
	separation of the MassStorage support from the DapService.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs: Provide a way for Sources
	to be lazily initialized with a protected virtual Initialize method that
	each subclass overrides, calling base and then its own intialization.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	Rename Initialize method so doesn't conflict with above.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage.addin.xml:
	Extend the DeviceClass node.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Lazily intialize, after its seen that the Initialize (IDevice) will
	succeed.

	* src/Dap/Banshee.Dap/Makefile.am:
	* src/Dap/Banshee.Dap.MassStorage/Makefile.am: Fix build.

	* src/Dap/Banshee.Dap/Banshee.Dap.addin.xml: Define DeviceClass extension
	point, from DapCore.

	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs: When new DAP
	DeviceClasses are loaded, check existing devices to see if they are now
	supported.

	* src/Makefile.am: Add Dap back to the build.

2008-04-03  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.MediaEngine/IAudioCdRipper.cs:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/AudioCdRipper.cs:
	Added error reporting
	
	* src/Backends/Banshee.Hal/Banshee.HalBackend/CdromDevice.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/ICdromDevice.cs:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs:
	Added drive door locking support

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs: Handle
	errors and dispose better; lock and unlock the drive door

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	Better error handling and do not allow ejecting if the door is locked

2008-04-03  Gabriel Burt  <gabriel.burt@gmail.com>

	Almost done with move.  Banshee.Dap* not in build yet.

	* build/build.environment.mk:
	* configure.ac: Add Banshee.Dap setup.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/DapService.cs:
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/DapSource.cs:
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/RemovableSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapService.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/DapSource.cs:
	* src/Dap/Banshee.Dap/Banshee.Dap/RemovableSource.cs: Moved.

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage.mdp:
	* src/Dap/Banshee.Dap.MassStorage/Makefile.am: Removed the above files.

	* src/Dap/Banshee.Dap/Banshee.Dap.addin.xml:
	* src/Dap/Banshee.Dap/Banshee.Dap.mdp:
	* src/Dap/Banshee.Dap/Makefile.am: New files for Banshee.Dap.

	* src/Dap/Dap.mds:
	* src/Dap/Makefile.am: Add Banshee.Dap.

	* src/Extensions/Extensions.mds:
	* src/Extensions/Makefile.am: Remove the Dap.MassStorage extension entries.

2008-04-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Dap.MassStorage/*:
	* src/Dap/Banshee.Dap.MassStorage/*: Move from Extensions to Dap.

2008-04-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/*: Remove obsolete code.

2008-04-03  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs:
	Implemented all of the rip queue/interaction logic and user job stuff;
	very nice and pretty status reporting including speed calculations; this
	part of the ripper is mostly done, only need to do the GStreamer work now

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/AudioCdRipper.cs:
	Implemented a dummy ripper that pretends to be ripping but is really
	just some fancy clock work so I could have something to test the 
	extension ripper code as I went without destroying my drive

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	Added UnlockAllTracks

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdTrackInfo.cs:
	Added RipEnabled property that we'll connect to check boxes at some point

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/X11NotificationAreaBox.cs:
	Force the icon size to 22px so it doesn't look funny - the image was 
	choosing a 16px icon which looked like ass and didn't fit in

2008-04-03  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/UserJob.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/TestUserJob.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/InterfaceAction.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/IUserJob.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTile.cs:
	Removed the Name property from UserJob as it's a bit redundant and annoying

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Set the
	IconName property instead of StockId

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeIconFactory.cs: Removed
	a ton of legacy code to load theme and resource icons into the icon theme
	and stock icon set; support loading of a custom proper icon theme from 
	disk; no more resources - much easier to maintain and properly flexible

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationType.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs: Updated
	to use theme icons

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs: Stubbed
	the user job stuff

	* build/build.rules.mk: Copy theme icons into a proper private icon theme
	that will work when running uninstalled

2008-04-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Backends/Banshee.Hal/Banshee.HalBackend/Device.cs: Bring a function
	for getting the best name for a Hal.Device over from stable.

	* src/Extensions/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/RemovableSource.cs:
	Add BytesUsed, BytesCapacity, and StorageUsageFraction properties.

	* src/Extensions/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	Implement BytesUsed, BytesCapacity.

2008-04-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Avoid NRE when loading dependents of smart playlist.

2008-04-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Playlists
	and smart playlsits loaded by each PrimarySource now.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: When loaded,
	load our playlists and smart playlists.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: In AddChildSource
	check that we don't already have this child.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Hide the
	Remove and Delete actions unless CanRemove/Delete true.  Previously just
	set them insensitive.

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Add
	RemovableSource context menu.

	* src/Extensions/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/RemovableSource.cs:
	Set the context menu action path property.  On dispose, clear children.
	And don't allow removing tracks (delete only).  Add Merge* foo from
	PlaylistSource, but not really hooked up yet.

	* src/Extensions/Banshee.Dap.MassStorage/Makefile.am: MD sorted.

2008-04-03  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnHeaderCellText.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Explicitly set TextAsForeground as necessary when entering the header
	and row drawing methods since now we use a single cell context object;
	fixes regression where lists with headers had all cell text drawn using
	the foreground color, not the foreground color for the header and the
	text color for the rows

2008-04-03  Gabriel Burt  <gabriel.burt@gmail.com>
	
	This patch adds the first support for DAPs to trunk.  It currently only
	support loading the songs/videos on a USB drive, but synching, adding,
	removing, transcoding etc are not implemented yet.

	* configure.ac:
	* build/build.environment.mk:
	* src/Extensions/Makefile.am:
	* src/Extensions/Extensions.mds: Add Banshee.Dap.MassStorage

	* src/Backends/Banshee.Hal/Banshee.HalBackend/Device.cs: Make Uuid virtual
	and HalDevice internal.

	* src/Backends/Banshee.Hal/Banshee.HalBackend/Volume.cs: Do not treat
	unmounted volumes as existing - intead, wait for them to be mounted and
	then notify they've been added.

	* src/Backends/Banshee.Hal/Banshee.HalBackend/HardwareManager.cs: Make
	method internal so Volume can access them.

	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs: Add
	property to keep the user job hidden, used by MassStorageSource when
	loading its tracks.

	* src/Backends/Banshee.Hal/Banshee.HalBackend/BlockDevice.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/IBlockDevice.cs: Add
	IsRemovable property.

	* src/Core/Banshee.Services/Banshee.Hardware/IVolume.cs: Remove IsMounted
	property, rename IsMountedReadOnly to IsReadOnly, and add ShouldIgnore and
	FileSystem properites.

	* src/Core/Banshee.Services/Banshee.Library/MusicLibrarySource.cs: Authors.

	* src/Core/Banshee.Services/Banshee.PlayerMigration/AmarokPlayerImportSource.cs:
	Call renamed ImportTrack method.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Lazy
	initialize the ErrorSource.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:
	Factor most everythign out into DatabaseImportManager so can be reused for
	all sorts of disk-based primary sources.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseImportManager.cs:
	Take most methods from LibraryImportManager, allow setting the ErrorSource
	and the method that chooses what primary source to put a DatabaseTrackInfo
	into.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Add SetStatus that
	gives access to every detail of the StatusMessage.

	* src/Extensions/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage.addin.xml:
	* src/Extensions/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage.mdp:
	* src/Extensions/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/DapService.cs:
	* src/Extensions/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/DapSource.cs:
	* src/Extensions/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/MassStorageSource.cs:
	* src/Extensions/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/RemovableSource.cs:
	* src/Extensions/Banshee.Dap.MassStorage/Makefile.am: New extension, first
	pass at loading disk-based volumes.  Currently only loads usb mass storage
	drives.  Adding and deleting tracks on these drives is not yet tested.

	* src/Libraries/Hyena/Hyena.Data/PropertyStore.cs: Handle set value == null.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtistListView.cs:
	Add todo for artist/browser context menu.

2008-04-03  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	Instantiate the CellContext on realization.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Use one CellContext all the time, just changing properties when we
	need to.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/CellContext.cs: Made all
	properties settable and got rid of fancy constructor.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/SmoothScrolledWindow.cs: Made
	slightly better.

2008-04-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Query/QueryField.cs: Fix issue with searching
	and NULL values, eg "a not like '%a%'" would not match NULL values.

2008-04-02  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Widgets/SmoothScrolledWindow.cs: More
	better.

2008-04-02  Scott Peterson <lunchtimemama@gmail.com> 

	You can now pass --debug-sql to get a full log of all SQL commands
	executed.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	Listen to Executing event and log the command text if we're
	debugging the SQL.

	* src/Core/Banshee.Core/Banshee.Base/ApplicationContext.cs: We're also
	debugging if --debug-sql was passed.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs: Raise
	HyenaSqliteConnection.Executing event.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Added
	Executing event.

2008-04-02  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Widgets/SmoothScrolledWindow.cs:
	Removed max velocity limit.

2008-04-02  Aaron Bockover  <abock@gnome.org>

	* libbanshee/banshee-player.c: Implement better null/pause state selection
	when handling a playback stop request; always go to NULL if the caller
	requests it, but override PAUSED requests with NULL if the playing
	resource is not CDDA

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngine.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Allow Close callers to force the NULL state (e.g. release all resources
	forcefully so ejecting media can happen cleanly, for instance)

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs: 
	Stubbed some more stuff out, still not working (ripping); ejecting while
	playing works again

2008-04-02  Scott Peterson <lunchtimemama@gmail.com> 

	This adds experimental smooth scrolling. The behavior still needs to be
	tweaked, and comments/opinions are welcome. To enable smooth
	scrolling, run banshee with the command line argument --smooth-scroll.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedBox.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedVBox.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedHBox.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedWidget.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui.Theatrics/Choreographer.cs: Fixed
	some namespace stuff.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	Use smooth scrolling if --smooth-scroll command argument is passed.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/SmoothScrolledWindow.cs: A
	first-pass smooth scrolling widget.

2008-04-02  Sebastian Dröge  <slomo@circular-chaos.org>

	* src/Extensions/Makefile.am: Include the Daap extension here too.

2008-04-02  Sebastian Dröge  <slomo@circular-chaos.org>

	* src/Backends/Banshee.Unix/Banshee.IO.Unix/Directory.cs:
	* src/Core/Banshee.Core/Banshee.Base/SafeUri.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/RadialProgress.cs:
	DllImport libglib-2.0.so.0 and libgdk-x11-2.0.so.0 instead of
	libglib-2.0.so and libgdk-x11-2.0.so as the latter are only
	in the development packages for many distributions.

2008-04-01  Aaron Bockover  <abock@gnome.org>

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/AudioCdRipper.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/IAudioCdRipper.cs: More
	stubbing, no real glory yet

2008-04-01  Aaron Bockover  <abock@gnome.org>

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer.addin.xml:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/AudioCdRipper.cs:
	Stub an implementation of IAudioCdRipper and expose it as an extension

	* src/Core/Banshee.Services/Banshee.MediaEngine/IAudioCdRipper.cs:
	Interface for implementing an audio CD ripping engine

	* src/Core/Banshee.Services/Banshee.Services.addin.xml:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Added the AudioCdRipper extension point, rename the PlayerEngine extenion
	point so that there is a common parent node in the path

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Log extension exceptions

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeIconFactory.cs:
	Make AddResourceToIconSet public

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdRipper.cs:
	Stubbed an implementation of the AudioCdRipper (engine agnostic)

	* src/Extensions/Banshee.AudioCd/Resources/ActiveSourceUI.xml:
	* src/Extensions/Banshee.AudioCd/Resources/GlobalUI.xml:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	Implement the UI actions for duplicating and ripping CDs

2008-04-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Disable
	actions that require a playing track when there is none.  In restart
	song action, check that the track is not null.

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	* src/Extensions/Banshee.NotificationArea/Resources/NotificationAreaMenu.xml:
	Change the Music menu to the Media menu.

2008-04-01  Scott Peterson <lunchtimemama@gmail.com> 

	This fixes BGO #525453

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Set the indicator column's min and max width to 30.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/Column.cs: Add constructor
	that takes min and max width (we need C# 3! Object initialization
	FTW).

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Added support for MaxWidth. Some scenearios are still not supported
	but I'll get the corner cases later.

2008-04-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Fix bug where newly migrated databases kept refreshing metadata each time
	Banshee started.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs: Fix
	bug with assuming the column cache has > 0 items in it.  Fixes BGO #525598.

2008-04-01  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Daap/Daap/ServiceLocator.cs: Use Generics instead
	of Hashtable. Use IPv4 addresses where available, but still provide
	fallbacks to whatever we first got if we didn't get any other alternatives.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapService.cs: Update from
	changes in ServiceLocator, since we get OnServiceAdded multiple times now.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs: Spit out a
	warning dialog if we fail to connect. Hookup the TrackAdded callback, and
	stubbed out TrackRemoved. Implement IImportSource (doesn't do much yet).

2008-04-01  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Daap/Daap/ServiceLocator.cs: Slightly better
	workaround for IPv6 addresses (that is, only listen for IPv4 addresses).

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapContainerSource.cs: Remove
	commented Add/RemoveChildSource and Count overrides.

2008-04-01  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Extensions.mds:
	* src/Extensions/Banshee.Daap/Banshee.Daap.mdp: Add the DAAP extension to
	the Extensions solution, and add new files.

	* src/Extensions/Banshee.Daap/Daap/ServiceLocator.cs: Workaround for bug
	in Mono where we can't correctly work with IPv6 addresses.

	* src/Extensions/Banshee.Daap/Makefile.am:
	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs: Add Unmap
	support, remove hacky Client connecting code, remove tracks from DB once
	we're finished with them, cleaned up status messages, and use new classes.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapLoginDialog.cs: Port login
	dialog from stable.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapTrackInfo.cs: Move
	DAAP.Track to TrackInfo logic out into seperate class that inherits from
	DatabaseTrackInfo.

	* src/Core/Banshee.Core/Banshee.Base/Paths.cs: Check to see if the path
	passed was null or empty before performing path operations.

	* build/build.environment.mk: Depend on ThickClient, not just Services.

2008-03-31  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/ErrorSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/Source.cs:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapContainerSource.cs:
	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	Change the default for CanSearch and CanRename to false, and add a virtual
	Count implementation that returns 0.  Less cruft for many subclasses to
	implement.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Don't show
	the menu unless it has > 0 visible items.

2008-03-31  Aaron Bockover  <abock@gnome.org>

	* libbanshee/banshee-player-cdda.c:
	* libbanshee/banshee-player-cdda.h:
	* libbanshee/banshee-player-equalizer.c:
	* libbanshee/banshee-player-missing-elements.c:
	* libbanshee/banshee-player-missing-elements.h:
	* libbanshee/banshee-player-pipeline.c: 
	* libbanshee/banshee-player-pipeline.h:
	* libbanshee/banshee-player-private.h:
	* libbanshee/banshee-player-video.h:
	* libbanshee/banshee-player.c: 
	* libbanshee/banshee-player.h: Hopefully the last big round of changes
	to the player engine; moved the main pipeline and equalizer code into
	separate modules so banshee-player is basically just the p/invokable 
	'public' API and doesn't contain much logic at all
	
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs: 
	Updated to reflect API changes in libbanshee

2008-03-31  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Handle Title/Name being null in *Lowered getter. Fixes BGO #525448.

2008-03-31  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Query/DateQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/IntegerQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/RelativeTimeSpanQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/TimeSpanQueryValue.cs: Pass
	InvariantCulture in ToString calls, though probably not too necessary for
	ints and strings.

	* tests/Makefile.am:
	* tests/Hyena/QueryTests.cs: New tests for query parsing etc.
	Currently failing to round trip a couple user queries.

2008-03-31  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs: Make sure
	to create the SQL with culturally invariant string formatting.  Fixes BGO
	#524871.

	* tests/Hyena/SqliteCommandTests.cs: Test HyenaSqliteCommand in many ways,
	including testing for the above bug.

	* tests/Makefile.am: Set to run in it_IT so we can check for cultural
	issues.

2008-03-31  Aaron Bockover  <abock@gnome.org>

	* libbanshee/banshee-player.c:
	* libbanshee/banshee-player.h:
	* libbanshee/banshee-player-video.c: 
	* libbanshee/banshee-player-video.h: Split out video related code into a
	separate module

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs: 
	Updated to reflect changes in libbanshee

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Make the engine service IDisposable and dispose of its child engines

2008-03-31  Aaron Bockover  <abock@gnome.org>

	* libbanshee/banshee-player.c: 
	* libbanshee/banshee-player.h:
	* libbanshee/banshee-player-missing-elements.c: 
	* libbanshee/banshee-player-missing-elements.h: Moved code that handles
	missing plugins/plugin installation into a separate module

2008-03-31  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.IO/Utilities.cs: Uncomment
	DeleteFileTrimmingParentDirectories method, fixes BGO #524914.

2008-03-31  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Before incrementing play/skip count, Refresh the track so we don't
	overwrite any changes that have been made since it started playing.  Fixes
	BGO #525061.

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Remove
	debug WriteLine.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Add
	Refresh method that takes an object and reloads its data from the database.

2008-03-31  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	Only pulse Now Playing if the new item is a video and we're not auto
	switching to Now Playing.

2008-03-31  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Move SetStatus and
	HideStatus methods here from StationSource since they are generally useful.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs: Use
	Source's SetStatus and HideStatus methods, and move the account button
	status code into a static method on LastfmSource.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs: Set
	the status when not connected.

2008-03-31  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: When one of our
	SourceMessages is updated, notify the message bar.  Fixes bug where the
	message bar didn't update with new icon/text etc.

	* src/Core/Banshee.Services/Banshee.Sources/SourceMessage.cs: Get rid of
	unnecessary Interlocked calls.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs: Add
	check for whether personal station is for this user, and if so, don't load
	for non-subscribers.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationType.cs: Don't
	set the personal station type as subscriber-only - this was my
	misunderstanding; non-subscribers can have personal stations for any user
	but themselves.

2008-03-31  Sebastian Dröge  <slomo@circular-chaos.org>

	* build/m4/banshee/daap.m4: Remove old, obsolete file.

2008-03-31  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Widgets/Banshee.Widgets/TileView.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSourceContents.cs:
	Fix up some style issues on the last.fm data screen.  Still have white
	fonts on darkilouche when should be black.

2008-03-31  Aaron Bockover  <abock@gnome.org>

	* build/build.environment.mk:
	* src/Extensions/Banshee.Daap/Makefile.am:
	* src/Extensions/Extensions.mds:
	* src/Extensions/Makefile.am: Enable the DAAP extension in the build

2008-03-31  Sebastian Dröge  <slomo@circular-chaos.org>

	* build/m4/banshee/mono-zeroconf.m4:
	* configure.ac:
	* src/Extensions/Banshee.Daap/Makefile.am: Add autotools magic to
	build the Daap extension. It's still not built by default yet.

2008-03-31  Aaron Bockover  <abock@gnome.org>
	
	* libbanshee/banshee-player-cdda.h: Split out all of the special code
	for handling CDDA nicely into a separate easy to maintain file; fixes
	some CDDA bugs and is documented so I don't forget why I wrote half
	this crap again
	
	* libbanshee/banshee-player.c: Renamed a lot of stuff to be less confusing
	with actual GStreamer API, uses bp_ function prefix and BansheePlayer 
	prefix for structs and callbacks

	* libbanshee/banshee-player.h: Split out some stuff to a proper header 
	file even though it should never be used outside of p/invoke from managed

	* libbanshee/gst-tagger.c:
	* libbanshee/gst-tagger.h: Nuked, this code has never actually been used
	since we use a fully managed tagging solution (TagLibg#) - it's just been
	library bloat for a couple of years - awesome

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs: 
	Updated to call into the new bp_ functions

2008-03-31  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/PersistentColumnController.cs:
	Queue saving of column widths.

	* src/Libraries/Hyena/Hyena.Data/ColumnDescription.cs: Added a
	WidthChanged event.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnHeaderCellText.cs:
	Better MinWidth math.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/Column.cs: Formatting fixes.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnController.cs: Seperate
	reaction to width changes from visibility changes. Get rid of
	QueueUpdate since it is no longer used.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_DragAndDrop.cs:
	Abstracted out the drag scroll stuff so that it can be used for
	both the hadjustment and vadjustment.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	Call new column resize methods when nessisary. Moved canvas
	generation into its own method so that it can be done after column
	resizing.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Loads of fun stuff. Columns now never get smaller than their
	minimum size. All availible width is used, and when there is no
	more room, we have an hadjustment. Lots of math to make sure that
	columns maintain their reletive sizes for as long as possible.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Take the hadjustment into account when rendering.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Added horizontal adjustment. Abstracted some of the
	OnMotionNotifyEvent stuff so we can send synthetic motion events
	when the list is automatically scrolling horizontally, but the
	mouse is not moving.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs:
	Use new UpdateAdjustments override.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Use virtual
	property rather than private field for ellipsize mode.

2008-03-30  Aaron Bockover  <abock@gnome.org>

	* build/m4/banshee/gstreamer.m4: Link against CDDA base library

	* libbanshee/: Starting to reorganize some things, added an MD project

	* src/Libraries/MusicBrainz/MusicBrainz/MusicBrainzItem.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/Release.cs:
	* src/Libraries/MusicBrainz/MusicBrainz/Track.cs: Fix synced from 
	main repository 

2008-03-30  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit adds Jump to Playing support, and hides the search box for
	sources that can't be search.

	* Makefile.am: Add make test target.

	* src/Clients/Nereid/Nereid/ViewContainer.cs: Keep the visibility of the
	search entry tied to whether its sensitive (eg hide if !source.CanSearch).

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: When changing the active
	source is changed, if the view used implements the new
	ITrackModelSourceContents interface, set some properties on the source
	itself linking ith with the Track/Artist/Album views.

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Be even more
	defensive when setting the active source.

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Add Jump to
	Playing Song/Video action.

	* src/Core/Banshee.ThickClient/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/ITrackModelSourceContents.cs:
	New interface for source contents that have track, artist, and album
	IListView<T>s.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	Implement ITrackModelSourceContents.

	* src/Libraries/Hyena.Gui/Makefile.am:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/IListView.cs: New interface that
	ListView implements.  Will allow us to implement alternative views for
	track/artist/albums but still have some sharing functionality (like jump
	to playing track).

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/Column.cs: Fix newlines.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView.cs: Implement
	IListView.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Change ScrollToRow to ScrollTo, and add CenterOn method (both implementing
	IListView).

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs: Use
	CenterOn method instead of implementing it here too.

2008-03-30  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Daap/daap-sharp/Mono.Zeroconf: Nuke this since
	we now use the Mono.Zeroconf assembly instead of some random stuff we
	compile.

2008-03-30  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Daap/daap-sharp/Server.cs
	* src/Extensions/Banshee.Daap/daap-sharp/Database.cs:
	* src/Extensions/Banshee.Daap/daap-sharp/Client.cs: Fix some warnings so
	it is actually possible to build the thing.

	* src/Extensions/Banshee.Daap/daap-sharp/ContentCodeBag.cs: Only load the
	content-code resource, instead of everything.

	* src/Extensions/Banshee.Daap/daap-sharp/ServiceLocator.cs:
	* src/Extensions/Banshee.Daap/daap-sharp/Server.cs: Use Mono.Zeroconf
	instead of having #if statements all over the place to support both direct
	Avahi support and Mono.Zeroconf.

	* src/Extensions/Banshee.Daap/Makefile.am: Use the Mono.Zeroconf package
	directly. We should probably build this info the build/*.mk stuff.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs: Try to connect
	to the source anyway, even if we fail - wrap it in a try as well.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapService.cs: Dispose any
	child sources that are connected to stuff when we dispose the service.

	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapContainerSource.cs:
	Implement Count override. Woops.

2008-03-30  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Daap/daap-sharp: Copy across daap-sharp from
	old-code.

	* src/Extensions/Banshee.Daap/Banshee.Daap.mdp:
	* src/Extensions/Banshee.Daap/Makefile.am:
	* src/Extensions/Banshee.Daap/Banshee.Daap:
	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapSource.cs:
	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapService.cs:
	* src/Extensions/Banshee.Daap/Banshee.Daap/DaapContainerSource.cs:
	* src/Extensions/Banshee.Daap/Resources/Banshee.Daap.addin.xml: Import
	Daap extension that I've completed so far. Isn't hooked up to the 
	the Extensions Makefile yet, so this doesn't build. Also, if you did
	hook it up, my autotools foo isn't up to scratch so you'd probably have
	to modify something. :)

2008-03-30  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs: Changed a few
	multiline comments to single line comments. Fixed some logging bits that
	would accidentally be displayed to the user instead of silently being
	sent to the console. Closes BGO #524954.

2008-03-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/GConfConfigurationClient.cs:
	Optimize CreateKey method.

	* src/Core/Banshee.Core/Banshee.Base/Paths.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Use the CachedLibraryLocation to save a lot of unnecessary work.
	LibraryLocation should probably just be cached itself.

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: If a
	service fails to start, log the exception.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Add a
	couple TODOs about reusing some object [].

	* tests/Hyena/StringUtilTests.cs: Add another test case.

2008-03-30  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Core/Banshee.Services/Banshee.PlaybackController/ICanonicalPlaybackController.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/IBasicPlaybackController.cs:
	Update interfaces to provide for repeat support in playback controller.

	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	Add repeat support to controller service, call updated PlaybackController
	methods provided by sources. 'Repeat Single' only activates at the end of
	a stream, not if you forcefully change tracks.

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackRepeatActions.cs:
	Don't disable the repeat actions, since they're now working. Also hook
	up changing the RadioAction to changing the current PlaybackRepeatMode.

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Update to reflect changes in playback controller interfaces.

2008-03-29  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdTrackInfo.cs:
	Prepare the CDDA URI properly (it needs the track number, not index)

2008-03-29  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdService.cs:
	Remove all AudioCdSources when disposing the service and clear the map

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	If the disc is playing, tell the player engine that track information was
	updated after the metadata is loaded from MB; disable all tracks when
	ejecting so they can't be played while the eject is in progress

2008-03-29  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Queue a timeout when the engine goes to idle; if when the timeout handler
	runs the engine is still idle, then fade the display out; the timeout is
	necessary to avoid a fade when we are really just transitioning tracks

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Set
	action.StockId if the <Action>IconName property is set

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs: Set
	the unmap icon to eject and do not allow renaming of the source

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Update the source title
	in the view container when the active source is updated

2008-03-29  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Widgets/Banshee.Widgets/HoverImageButton.cs: Removed
	unnecessary property override

2008-03-29  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Widgets/Banshee.Widgets/SearchEntry.cs: Properly fix
	the style/color issue with the search entry (BGO #504633) by doing a style
	update when the entry style changes and when the entry state changes

	* src/Core/Banshee.Widgets/Banshee.Widgets/HoverImageButton.cs: Call the
	base expose event, which was preventing the style changes from being
	reflected (BGO #504633)

2008-03-29  Aaron Bockover  <abock@gnome.org>

	* libbanshee/gst-playback-0.10.c: Actually set the pipeline to NULL, not
	PAUSED when stopping the pipeline so any resources locked by the pipeline
	are released

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Added ClearMessages

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs:
	Search for metadata using MusicBrainz

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	Show status messages when searching for metadata and ejecting; if the
	playing track is located on the disc that is to be ejected, stop the
	playback before ejecting to release the device lock

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdTrackInfo.cs:
	Hold a reference to the model on each track in the model so it can
	be checked when ejecting

2008-03-29  Gabriel Burt  <gabriel.burt@gmail.com>

	Thanks to Allan Day for suggesting these changes.

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Change the title to be
	"title by artist" instead of "title (artist)".

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Change the skip button text to 'Skip this item' instead of 'Play next item'.

2008-03-29  Sebastian Dröge  <slomo@circular-chaos.org>

	* libbanshee/gst-transcode-0.10.c:
	Remove 'const' keyword from the output_uri as we don't use it as
	const and this produces compiler warnings.

2008-03-29  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackRepeatActions.cs:
	Simple fix that removes the mnemonic conflict between 'Repeat Single' and
	'Next'. Closes BGO #501889. Based on patch from Alex Kloss.

2008-03-29  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Remember
	the shuffle state over restarts. Fixes BGO #523681.

	* src/Core/Banshee.Widgets/Banshee.Widgets/HoverImageButton.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/SearchEntry.cs: Make sure we
	set the background colour correctly depending on the Sensitive state.
	Closes BGO #504633.

2008-03-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSourceContents.cs:
	Remove all children when refreshing.  And add playcount to top artist tiles.

2008-03-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection/MemoryTrackListModel.cs:
	Fully bounds check the index before accessing it.  Fixes BGO #524805.

2008-03-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSourceContents.cs:
	Make much much prettier.  Pack in a RoundedFrame, draw white bg, add Top
	Artists, make button presses pretty, make vertically scrollable.

	* src/Core/Banshee.Widgets/Banshee.Widgets/TileView.cs: Fix bug where
	wouldn't expand set a height request of more than 1, so unless packed in a
	vbox with fill/expand = true, it wasn't visible.

	* src/Libraries/Hyena.Gui/Hyena.Widgets/RoundedFrame.cs: Fix bug with not
	having the child calculate its size request before trying to get it.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add improved metadata refreshing support - store a value in the
	CoreConfiguration when its successful, meaning it will keep retrying unti
	it is (so if you close it or it dies before its done, no big deal).

	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs:
	* src/Libraries/Lastfm/Lastfm/RadioConnection.cs: Clean up
	comments/debugging.

	* src/Core/Banshee.ThickClient/Banshee.Gui/IconThemeUtils.cs: Check name
	and return if null/empty.

2008-03-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Be more
	careful with types when iterating over action proxies.  Should fix BGO
	#524706.  Thanks to Matt Enright for the pointer.

2008-03-28  Aaron Bockover  <abock@gnome.org>

	* src/Backends/Banshee.Hal/Banshee.HalBackend/BlockDevice.cs:
	* src/Backends/Banshee.Hal/Banshee.HalBackend/Volume.cs: Actually return
	a real device node

	* src/Core/Banshee.Services/Banshee.Hardware/IVolume.cs: Added a DeviceNode
	property since volumes have 'em as well

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs:
	Read the audio CD tracks from the disc and push to the model

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	Load the model

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdTrackInfo.cs:
	TrackInfo object specific to the audio cd

2008-03-28  Aaron Bockover  <abock@gnome.org>

	* build/build.environment.mk:
	* build/pkg-config/banshee-1-core.pc.in:
	* build/pkg-config/banshee-1-musicbrainz.pc.in:
	* configure.ac:
	* src/Libraries/Libraries.mds:
	* src/Libraries/Makefile.am:
	* src/Libraries/MusicBrainz/: Added Scott's musicbrainz-sharp code locally
	to the project for now; in the future we will just depend on the library
	but for now we'll incubate it

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDiscModel.cs:
	Renamed from AudioCdDisc, inhereit MemoryTrackListModel

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdService.cs:
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	Changes to reflect the model stuff

2008-03-28  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Hardware/IVolume.cs: Added Eject
	and Unmount properties/methods

	* src/Backends/Banshee.Hal/Banshee.HalBackend/Volume.cs: Implemented
	the new Eject/Unmount members

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdService.cs:
	Make UnmapDiscVolume internal so the source can call it when being
	unmapped by the user

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	Implement the unmap method to eject the disc from the drive

	* src/Libraries/Hyena/Hyena/Log.cs: Added an Exception method to which
	all exceptions that are handled should be logged; currently it just
	prints the exception, but we should later save them to a log file

2008-03-28  Aaron Bockover  <abock@gnome.org>

	* src/Backends/Banshee.Hal/Banshee.HalBackend/HardwareManager.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/HardwareManager.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/IHardwareManager.cs: Added
	hardware add/remove events and properly resolve the devices in the HAL
	backend 

	* src/Backends/Banshee.Hal/Banshee.HalBackend/Volume.cs: Resolve a 
	volume device manually if no parent is passed

	* src/Core/Banshee.Services/Banshee.Collection/MemoryTrackListModel.cs:
	Moved from Last.fm since it's useful for other sources; provides a 
	track model that uses an in-memory generic List for storage

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: 
	Provide a property for easily accessing the HardwareManager
	
	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdDisc.cs: Empty
	stub of the disc object we'll need soon

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdService.cs:
	Implemented most of the service that manages disc sources from the 
	HardwareManager; awesome

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdSource.cs:
	Stubbed out most things we'll need in the audio CD source

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	Use the MemoryTrackListModel object

2008-03-28  Aaron Bockover  <abock@gnome.org>

	* build/build.environment.mk:
	* configure.ac:
	* src/Extensions/Extensions.mds:
	* src/Extensions/Makefile.am: Build the new audio CD service

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd.addin.xml: Addin mainifest
	for the audio CD extension

	* src/Extensions/Banshee.AudioCd/Banshee.AudioCd/AudioCdService.cs: 
	Stubbed out the empty audio CD service object

2008-03-28  Aaron Bockover  <abock@gnome.org>

	* src/Backends/Banshee.Hal/Banshee.HalBackend/BlockDevice.cs: Implement
	GetEnumerator to provide child volumes

	* src/Backends/Banshee.Hal/Banshee.HalBackend/Device.cs:
	* src/Backends/Banshee.Hal/Banshee.HalBackend/DiskDevice.cs:
	* src/Backends/Banshee.Hal/Banshee.HalBackend/CdromDevice.cs: 
	* src/Backends/Banshee.Hal/Banshee.HalBackend/HardwareManager.cs: Fix up
	protection levels and support holding on to the manager reference

	* src/Backends/Banshee.Hal/Banshee.HalBackend/Volume.cs: Implemented the
	base HAL volume object with some properties

	* src/Backends/Banshee.Hal/Banshee.HalBackend/DiscVolume.cs: Implemented
	a child HAL volume object for optical disc volumes

	* src/Core/Banshee.Services/Banshee.Hardware/IDiscVolume.cs: Added 
	MediaCapacity property

	* src/Core/Banshee.Services/Banshee.Hardware/IVolume.cs: Make Available
	long instead of ulong since it could be invalid (-1)
	
	* src/Core/Banshee.Services/Banshee.Hardware/HardwareManager.cs: Add
	some more tests/debug

2008-03-28  Gabriel Burt  <gabriel.burt@gmail.com>

	This patch adds proper case-insensitive sorting and searching.  It should
	also speed searching and other ops up a bit.

	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	Add internal Reload method that doesn't raise Reloaded right way, so that
	the track model can trigger them to reload, reload itself, but get its
	alert out first so its can start redrawing while the others refresh. Also,
	sort by new *Lowered column.

	* src/Core/Banshee.Services/Banshee.Collection/BansheeListModel.cs: Add
	internal RaiseReload method for the track model to use on artist/album
	models.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Do the above mentioned shenanigans.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Add Title/NameLowered properties with Select = false, meaning the value is
	not retrieved in SELECT queries, but is INSERTed/UPDATEd.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs: Set
	some more pragas in the quest for better performance.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add Title/NameLowered columns to CoreTracks/Artists/Albums.  Is literally
	just obj.Name/Title.ToLower (), but means we can do case-insensitive
	sorting and searching w/o having to use Sqlite's lower() method (which is
	slow to use on the fly vs caching this, and only works for latin1.)  Also,
	remove a bunch of indicies and add some new ones, in search of
	performance. Trigger another metadata refresh to fill the *Lowered columns.

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Use the
	*Lowered columns for sorting and querying.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/DatabaseColumnAttribute.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Allow
	setting Select = True/false on the DatabaseColumn attribute, and if its
	false, do not SELECT it (or requier a setter on the property/field).
	Also, do not UPDATE or INSERT the primary key.

	* src/Libraries/Hyena/Hyena.Query/QueryField.cs: Determine once (instead
	of every time we generate SQL) whether the given column is a custom
	format.  Also, scan for 'Lowered' and if it's there, do not use the hacky
	"a like b OR lower(a) like b.ToLower ()".

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmTrackListModel.cs:
	Whitespace.

2008-03-27  Aaron Bockover  <abock@gnome.org>

	* src/Backends/Banshee.Hal: First pass at the HAL implementation for the
	new hardware layer; very incomplete

	* src/Core/Banshee.Services/Banshee.Hardware/IHardwareManager.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/HardwareManager.cs: Filled
	out some functionality; GetAllBlockDevices, GetAllCdromDevices, and
	GetAllDiskDevices

	* src/Core/Banshee.Services/Banshee.Hardware/IBlockDevice.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/ICdromDevice.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/IDevice.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/IDiscVolume.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/IDiskDevice.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/IVolume.cs: Stubbed out
	more interfaces for the hardware object model

	* src/Core/Banshee.Services/Banshee.Services.addin.xml: Added the 
	hardware manager extension point

2008-03-28  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs::
	Make sure we only scrobble and set the Now Playing information on Music
	tracks, rather than anything played.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/Queue.cs:
	Removed some extra debug spew that was unnecessary.

2008-03-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	Change some string comparisons to use IsNullOrEmpty.

2008-03-27  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Hardware/HardwareManager.cs: Stubbed
	the base hardware manager service out; load extension managers from MA

	* src/Core/Banshee.Services/Banshee.Hardware/IBlockDevice.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/IDevice.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/IHardwareManager.cs:
	* src/Core/Banshee.Services/Banshee.Hardware/IVolume.cs: Stubbed some
	basic hardware related interfaces

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/UserJobManager.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	Implement IRequiredService since we can't survive without these

	* src/Core/Banshee.Services/Banshee.ServiceStack/IRequiredService.cs: 
	Services that are important enough to cause startup to fail if they cannot
	be started should implement IRequiredService

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Do not bail if a core service throws an exception that is not an 
	IRequiredService

2008-03-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Fix formatting
	issue with showing full precision in certain cases when the value was < 2.

2008-03-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistInfo.cs:
	Fix issue with importing items that have null artist or album names.
	Fixes BGO #524600.

2008-03-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	The First () method is used to start playback when a source, artist, or album
	is activated, and represents a break from the previous playback.  It should
	not raise the Transition event.  Fixes BGO #524556.

2008-03-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/AlbumListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtistListView.cs:
	When an artist or album is activated, make sure we switch playback to the
	active source before playing the first song in the playback source.  Fixes
	BGO #524609.

2008-03-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	Pulse the Now Playing source when a song or video starts playing and it's
	not the active source.

2008-03-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* data/mimetypes.txt: List of mimetypes, one per line, combining what we
	already had with Totem's list.

	* data/mimetypes.pl: Perl script that sorts and removes duplicates from
	mimetypes.txt, and prints out a ; separated list suitable for the .desktop
	file.

	* data/banshee-1.desktop.in.in: Use the output from mimetypes.pl, and
	change the name to Banshee Media Player.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: Add
	some more file extensions to the whitelist.

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Load
	smart playlists here just like we load playlists.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Services.mdp:
	* src/Core/Banshee.Services/Banshee.Query/SmartPlaylistQueryValue.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistCore.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Remove
	SmartPlaylistCore.  The functionality from it that remained is now in
	SmartPlaylistSource, mostly as static methods.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Moved the SmartPlaylistCore code into here.  On the first Reload call, if
	we haven't yet Refresh'd, do it.

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Avoid
	activating a source twice by returning if it's already the active souce.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/PersistentColumnController.cs:
	If the source has a Parent, use its UniqueId to determine what columns to
	show, otherwise use the source's UniqueId.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Add UniqueId
	property, and protected abstract TypeUniqueId that doesn't have to be
	unique across different Source subclasses.

	* src/Core/Banshee.Services/Banshee.Sources/ErrorSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	Override TypeUniqueId and use UniqueId.

2008-03-26  Aaron Bockover  <abock@gnome.org>

	Banshee 1.0 Alpha 2 (0.98.2) Released

2008-03-26  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea.dll.config:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/X11NotificationArea.cs:
	Change the default DllImport for libX11 directly to libX11.so.6 and then
	provide a .config file map that distributors could override if necessary

2008-03-26  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/VideoDisplay.cs:
	Some code clean up and render the idle logo when there is no video playing

	* src/Libraries/Hyena.Gui/Hyena.Gui/EntryInsertAction.cs: Avoid an NRE
	in the merge code

2008-03-26  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Streaming/SaveTrackMetadataJob.cs: Port
	fix for Artist tag saving from stable.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs: Remove
	artist/album readonly warning, whitespace fixes.

2008-03-26  Gabriel Burt  <gabriel.burt@gmail.com>

	* NEWS: Update for forthcoming 0.98.2 release.

2008-03-26  Sebastian Dröge  <slomo@circular-chaos.org>

	* build/m4/banshee/notify-sharp.m4:
	* src/Extensions/Banshee.NotificationArea/Makefile.am:
	* configure.ac: Allow building against an external notify-sharp if one
	is found. This is especially important as the next notification-daemon
	release in a few days changes the DBus API and a newer notify-sharp is
	required then.

2008-03-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/AlbumListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtistListView.cs:
	Start playing when activated.  Fixes BGO #524412.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkManager.cs:
	Catch exceptions with loading artwork.  Catches 'no data in image' error.

2008-03-25  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Emergency fix0rz!!1!

2008-03-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	Don't display 'Add Station' action when on a station source.

2008-03-25  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Use QueueDraw.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	New QueueDraw method so that new rendering model will properly
	update.

2008-03-25  Aaron Bockover  <abock@gnome.org>

	* build/Makefile.am: Removed the old .pc file, SUBDIRS the new pkg-config 

	* build/pkg-config/Makefile.am: Generate .pc files from the .pc.in files

	* build/pkg-config/banshee-1-core.pc.in:
	* build/pkg-config/banshee-1-hyena-gui.pc.in:
	* build/pkg-config/banshee-1-hyena.pc.in:
	* build/pkg-config/banshee-1-lastfm-gui.pc.in:
	* build/pkg-config/banshee-1-lastfm.pc.in:
	* build/pkg-config/banshee-1-mono-media.pc.in:
	* build/pkg-config/banshee-1-services.pc.in:
	* build/pkg-config/banshee-1-thickclient.pc.in: .pc files that represent
	the entire assembly layout of the core Banshee Media Framework

	* configure.ac: Bumped version

2008-03-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	Change icon to application-multimedia.  Not perfect, but at least not
	confusing with the play button.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Override
	clear, calling base and resetting the first_order_id, fixing bug in
	IndexOf that was causing playback issues with smart playlists.

	* src/Libraries/Hyena/Hyena.Data/ArrayModelCache.cs:
	* src/Libraries/Hyena/Hyena.Data/DictionaryModelCache.cs:  Remove lock
	around Clear method since now done in subclass.

2008-03-25  Wouter Bolsterlee  <wbolster@svn.gnome.org>

	reviewed by: Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:

	Correctly guard against null SourceView instances, so
	that non-Nereid clients without a SourceView do not
	instantly crash upon startup. Patch suggested by Gabriel
	Burt on IRC.

2008-03-25  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	Set the source on the track view column controller when it changes

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/PersistentColumnController.cs:
	Preliminary work to allow column settings to persist against each primary
	source; all settings go to the default save location for now

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Set the FillAlpha when rendering the sort rectangle for the column so it
	blends with the row rules

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/GtkTheme.cs: Render the
	row rule with a set FillAlpha

2008-03-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistInfo.cs:
	In FindOrCreate methods, cache the last result to avoid looking up an
	artist and album for each track in an album.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Within the Save method make sure the artist and album are up to date and
	in the database.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:
	Album/artist creation now done in DatabaseTrackInfo.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs:
	Re-enable editing of artist/albums.

	* src/Libraries/Hyena/Hyena.Data/ArrayModelCache.cs: Forgot to put
	threading fix in this when previously updated DictionaryModelCache.

2008-03-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:
	* src/Core/Banshee.Services/Makefile.am: Rename LibraryArtistInfo class to
	DatabaseArtistInfo.

2008-03-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Resources/translators.xml: Updated.

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	Don't allow renaming or searching.

2008-03-24  Gabriel Burt  <gabriel.burt@gmail.com>

	This patch fixes issues with smart playlist/search date fields not working
	right/at all.  Also adds support for different widgets within one field on
	the smart playlist editor dialog (eg absolute dates vs relative dates for
	date fields).

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Use new
	TimeSpanQueryValue for DurationField, and use RelativeTimeSpanQueryValue
	in addition to DateQueryValue for LastPlayed/Skipped.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/Migrator.cs: Use new
	RelativeTimeSpanQueryValue class.

	* src/Core/Banshee.ThickClient/Banshee.Query.Gui/SmartPlaylistQueryValueEntry.cs:
	Avoid crashing if there are no smart playlists.

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/DateQueryValueEntry.cs: Old code
	moved mostly to *TimeSpanQueryValueEntry, replaced with an actual abs date
	entry.

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/NullQueryValueEntry.cs: Empty,
	if the user has selected this 'operator', no more UI is needed.

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/QueryTermBox.cs: Handle
	QueryFields having multiple ValueTypes (each with their own set of
	operators).  This allows us to have both relative dates and absolute date
	widegts for one field (LastPlayed, say).

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/QueryTermsBox.cs: When creating
	a new row, set it to the previous row's field/operator.

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/QueryValueEntry.cs: Connect new
	QueryValue types to their Entry types.  Add static lookup method.

	* src/Libraries/Hyena/Hyena.Query/DateQueryValue.cs: Move the
	relative/TimeSpan code out.

	* src/Libraries/Hyena.Gui/Makefile.am:
	* src/Libraries/Hyena/Hyena.Query/NullQueryValue.cs: New QueryValue class with
	one operator to see if a value is null.

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/RelativeTimeSpanQueryValueEntry.cs:
	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/TimeSpanQueryValueEntry.cs: New
	classes, mostly a copy of the old DateQueryValueEntry code, with an entry
	and a units (factors) dropdown (and an "ago" label for the Relative one).

	* src/Libraries/Hyena/Hyena.Query/QueryField.cs: Instead of QueryFields
	having one ValueType, make it an array.

	* src/Libraries/Hyena/Hyena.Query/QueryTermNode.cs:
	* src/Libraries/Hyena/Hyena.Query/QueryValue.cs: Handle multiple ValueTypes.

	* src/Libraries/Hyena/Hyena.Query/QueryOperator.cs: If the Label is null
	return the Name.  Useful for debugging with adding new operators.

	* src/Libraries/Hyena/Makefile.am:
	* src/Libraries/Hyena/Hyena.Query/TimeSpanQueryValue.cs:
	* src/Libraries/Hyena/Hyena.Query/RelativeTimeSpanQueryValue.cs: New files
	for representing time spans in queries.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSourceContents.cs:
	Use new ExtensionCacheRoot.

2008-03-24  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Use
	InstalledApplicationData to build the catalog path for gettext and 
	initialize it (whoops) (BGO #523047)

	* src/Core/Banshee.Core/Banshee.Base/Paths.cs: Added
	InstalledApplicationPrefix, InstalledApplicationDataRoot, and 
	InstalledApplicationData properties that are detected at runtime based
	on the path of the entry assembly (used to figure out datadir, basically,
	without having to hardcode the paths at compile time)

2008-03-24  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Nereid/Nereid/Client.cs: Implement new ClientId property

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Support
	a stack of client objects; ideally we'll be able to run multiple clients
	in a single application instance (think mini mode) - this is probably
	not well thought out, but it's a start

	* src/Core/Banshee.Services/Banshee.ServiceStack/Client.cs: Added a new
	base Client class that is not GUI based
	
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/PersistentColumnController.cs:
	Support loading/saving the column widths

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Set up some good visibility defaults for the columns

	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs: Extend the
	new Client class and push itself into the application client stack

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/SortableColumn.cs: Some new ctor
	signatures

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/Column.cs: Some new ctor signatures
	and removed the IsVisible property

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnController.cs: Added a 
	QueueUpdate method

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Call QueueUpdate on the column controller when a column is resized

2008-03-24  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Base/CoverArtSpec.cs: Use XDG_CACHE_HOME
	as the base directory for the album art disk cache

	* src/Core/Banshee.Core/Banshee.Base/Paths.cs: Changed some other paths
	to use XDG_CACHE_HOME, especially for extension caches

	* src/Core/Banshee.Core/Banshee.Base/XdgBaseDirectorySpec.cs: Moved the
	XDG code into its own class from Paths

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkManager.cs:
	Ensure the artwork cache directory gets created if it doesn't exist

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/Queue.cs:
	Use the new ExtensionCacheRoot path

2008-03-24  Aaron Bockover  <abock@gnome.org>

	* libbanshee/gst-playback-0.10.c: Disable the equalizer
	temporarily as it is causing a few audio problems for some people
	and is not properly implemented in the pipeline (BGO #523878)

2008-03-24  Aaron Bockover  <abock@gnome.org>

	* libbanshee/gst-playback-0.10.c:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngine.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/VisualisationConfigBox.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingInterface.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying.mdp:
	* src/Extensions/Banshee.NowPlaying/Makefile.am: Reverted Alexander Hixon's
	visualization patches from 2008-03-23 since a number of people have been
	reporting playback issues after this landed - also it had no review

2008-03-21  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/GnomeService.cs: Attempt
	to fix compiler error for older versions of mono.

2008-03-23  Alexander Hixon  <hixon.alexander@mediati.org>

	* libbanshee/gst-playback-0.10.c: Fix up some tab to space formatting.

2008-03-23  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.NowPlaying/Makefile.am:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying.mdp:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingInterface.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/VisualisationConfigBox.cs:
	Add a new cool-looking visualisation switcher bar to the top of the
	visualisation display. Hides away if we watch video.

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngine.cs:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	* libbanshee/gst-playback-0.10.c: Add support for multiple visualisations,
	with configurable sizes.

2008-03-22  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Moved the ColumnHeaderCellText.HasSort determination from
	PaintHeaderCell into RegenerateColumnCache. This means we run that
	code less often.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Fixed stupid bug in rendering which I can't believe I missed.
	Better, faster, stronger.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Regenerate the column cache after the sort column changes so that
	we re-assign the HasSort properties of the ColumnHeaderCellText

2008-03-22  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/Column.cs: Added MaxWidth
	property (currently not used anywhere).

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Began reworking the column layout code. Columns will now resize
	themselves to take up the header width. No logic yet for min or max
	column widths: that's tommorrow!

2008-03-22  Alexander Hixon  <hixon.alexander@mediati.org>

	* libbanshee/gst-playback-0.10.c: Hookup the 'goom' visualisation element
	to the playbin so we can watch wicked things during Now Playing for an
	audio track. We'd probably want to go throught the element registry
	to find a suitable element later.

2008-03-21  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_DragAndDrop.cs:
	Fixed rendering issue when dragging ends.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	New column sorting effect.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Fixed column resize cursor appearing when the mouse is over the
	list.

2008-03-21  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	Minor improvements to rendering. Vertical resizing is now much more
	efficient, only rendering new rows that com into view as a result
	of resizing (rather than rendering everything on every pass).

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Minor improvements to rendering.

2008-03-21  Gabriel Burt  <gabriel.burt@gmail.com>

	This patch implements actually updating the play/skip counts and last
	played/skipped stamps.

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Update the status bar when
	the active source is Updated.

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Add
	IncrementSkipCount method and LastSkipped property, and update LastSkipped
	and LastPlayed within their respective Increment methods.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Save the track after incremting its play/skip count.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add a LastSkippedStamp column to CoreTracks.

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	When opening a new track or uri, if there is a currently playing song, if
	it's over half way done, call IncrementPlayCount on it, otherwise call
	IncrementSkipCount.

	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs: 
	Add a NOTE about refactoring to allow models to provide the random track
	functionality.

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Add LastSkipped
	query field and sorting.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Add a Last Skipped column.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmTrackInfo.cs:
	Within IncrementPlayCount override call the base method.

2008-03-21  Aaron Bockover  <abock@gnome.org>

	This commit should make Banshee look better on darker themes

	* src/Clients/Nereid/Nereid/Client.cs: Allow ignoring the gtkrc if
	--no-gtkrc is passed; nice for debugging

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Remove the subtle 
	midtone coloring since I can't figure out a reliable way to make it
	work on darker themes and lighter themes; GTK themes seriously suck and
	I hate them and where in the hell is GTK 3. Seriously.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Hacky version of the mid tone stuff since it's absolutely necessary here

	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs:
	Set a GLib log handler when in --debug mode

	* src/Core/Banshee.Widgets/Banshee.Widgets/SearchEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Get a proper mid tone using the base and text colors

	* src/Core/Banshee.Widgets/Banshee.Widgets/StreamPositionLabel.cs:
	Render text using the foreground, not text colors, like other text that
	should be rendered on background and not base

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/CellContext.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnHeaderCellText.cs: Allow
	rendering text in the cell as foreground or text colors

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Fixed some small rendering/theme issues; do not render a highlight under
	the sorted column since it looks like ass on some themes and I'm tired
	of GTK themes

	* src/Libraries/Hyena.Gui/Hyena.Gui/CairoExtensions.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/GtkTheme.cs: Add some 
	color foo

	* src/Libraries/Hyena.Gui/Hyena.Gui/ShadingTestWindow.cs: Just something
	I'm working on, nothing interesting, never used

2008-03-21  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Override QueueDraw to use our own methods. (Fixes bug where
	hiding/showing columns did not update list)

2008-03-21  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	Added some rendering fixes, hook up the Pixmap canvases.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Rendering of the list is now done to an off-screen Pixmap. This is
	done so that we can recycle pixels when scrolling the list: the
	contents of the pixmap are shifted up or down by the amount of
	scrolling, and only the newly visible rows are rendered in place.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Don't paint everything when we're scrolling vertically.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs:
	Paint everything when the model changes.

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/Theme.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/GtkTheme.cs: Add
	DrawListBackground, re-ordered some methods to match their
	execution order for readability.

2008-03-21  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.SmartPlaylist.Gui/QueryBuilder.cs:
	* src/Core/Banshee.ThickClient/Banshee.SmartPlaylist.Gui/QueryBuilderModel.cs:
	Remove.

2008-03-21  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Core/Banshee.Widgets/Banshee.Widgets/VolumeButton.cs: Patch missing
	from previous revision.

2008-03-21  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/PreferencesDialog.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/AboutDialog.cs:
	Unbreak builds for people using newer versions of Gtk#.

2008-03-20  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	Better polymorphism, removed unnessisary qualifications.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Better polymorphism.

2008-03-20  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	This fixes the header disapearing if you switch to and from the Now
	Playing source.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Whitespace.

2008-03-20  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TerseTrackListView.cs:
	Started a new track view that can be very narrow and won't have columns;
	think, 'is this what a detachable play queue looks like?'

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellTrack.cs:
	Started a cell renderer for showing a track in a list with a single column

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/BetaReleaseViewOverlay.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Get rid of the preview release overlay thingy. It sucked.

2008-03-20  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Better
	polymorphism.

2008-03-20  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Minor rendering fix when reordering columns.

2008-03-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Patch from Michael Miceli adding a composer column to the TrackListView,
	fixes BGO #523666.

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Add a Composer
	sort case.

2008-03-20  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Fixed rendering in with non-composited window managers.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Got rid of private method - instead use Gdk.Rectangle.Contains()

2008-03-20  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.cs:
	Got rid of padding stuff. That will be taken care of in
	AnimatedVBox.

2008-03-20  Scott Peterson <lunchtimemama@gmail.com> 

	This gets rid of the 5 (count 'em: five) GdkWindows we were using
	to render the ListView. We now render everything to the GdkWindow
	of the ListView's parent.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	ListWindow is no more.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellAlbum.cs:
	Use Style to paint the layout rather than the Drawable. This is not
	ideal, but nessisary so we can clip.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnHeaderCellText.cs: Moved
	triangle-drawing code into the Theme.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_DragAndDrop.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs:
	InvalidateListWindow is now InvalidateList.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	Replaced five input-output GdkWidows with one input-only GdkWindow.
	Also improved RowsInView calculation.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Changed the math to account for just one GdkWindow, got rid of
	unnessisary method ShowHideHeader().

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Rework of rendering. Everything draws to a single GdkWindow.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Changed the math to account for just one GdkWindow. Split the
	OnButtonPressEvent and OnButtonReleaseEvent methods into methods
	specific to the header and list.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Clip to the
	clipping box.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/CellContext.cs: Add a clip
	property for the clipping box.

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/Theme.cs: Added
	DrawRectangle. Split DrawFrame into DrawFrameBackground and
	DrawFrameBorder.

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/GtkTheme.cs: Added
	DrawRectangle. Split DrawFrame into DrawFrameBackground and
	DrawFrameBorder. Misc rendering improvements.

2008-03-20  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Revert change from
	previous revision.

2008-03-20  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.cs:
	Added left padding, so it doesn't look so bad on fullscreen. Also made
	addition to code comment from previous commit, and some evil whitespace.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Patch to fix small bug introduced in r3487 where the missing pixbuf icon
	would be displayed as an album cover type when it shouldn't be (ie the
	black box around the icon).

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Slightly more
	awesome status bar text, shamelessly ported from stable.

	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs: Removed
	more mentions of 'songs' and replaced with 'media'.

2008-03-20  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.cs:
	Stop hiding the job tile host, so that any ease-out animations that occur
	with only a single widget in the host display correctly, instead of being
	completely hidden.

2008-03-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Bookmarks/Banshee.Bookmarks/BookmarksService.cs:
	Work around issue with CanSeek being equal to false for a bit after the
	engine loads the song we want to jump within.

2008-03-19  Gabriel Burt  <gabriel.burt@gmail.com>

	Patch from Bertrand Lorentz porting the Bookmarks plugin.

	* build/build.environment.mk:
	* configure.ac:
	* src/Extensions/Banshee.Bookmarks/Banshee.Bookmarks.addin.xml:
	* src/Extensions/Banshee.Bookmarks/Banshee.Bookmarks.mdp:
	* src/Extensions/Banshee.Bookmarks/Banshee.Bookmarks/BookmarksService.cs:
	* src/Extensions/Banshee.Bookmarks/Makefile.am:
	* src/Extensions/Banshee.Bookmarks/Resources/BookmarksMenu.xml:
	* src/Extensions/Extensions.mds:
	* src/Extensions/Makefile.am: Port the Bookmarks plugin to trunk.

2008-03-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs:
	* src/Core/Banshee.Services/Banshee.Sources/Source.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Lots of 'song'
	to 'item' changes.

2008-03-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs: Take the title
	from the filename if needed.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Display a video icon for missing video 'album art'.

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Change 'song' to 'item' in a few places.

2008-03-19  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	Added a TrackStarted event that will always be raised, even if the 
	playback controller did not transition to the track, but most importantly
	it will _always_ be raised after the Transition event; this allows
	users to connect to both events to determine if the track that is 
	playing was manually played or not

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	Activate the now playing source if the user manually started playing a
	track with a video stream; uses the nice transition/track start stuff
	noted above

2008-03-19  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Stubbed
	some stuff out to allow showing separator rows; not complete

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingInterface.cs:
	Pack the video widget into a rounded frame to look sexy

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/VideoDisplay.cs:

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/GtkTheme.cs: Respect ShowStroke

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/ThemeContext.cs: Added 
	ShowStroke property

	* src/Libraries/Hyena.Gui/Hyena.Widgets/RoundedFrame.cs: Allow setting
	a custom fill color and the ability to hide the border/stroke

2008-03-19  Aaron Bockover  <abock@gnome.org>

	* build/m4/banshee/gstreamer.m4: Link gstinterfaces and gstvideo libraries

	* libbanshee/gst-playback-0.10.c: First pass at hopefully properly 
	implementing the GstXOverlay stuff; adds video rough video support
	to the pipeline/player engine

	* src/Core/Banshee.Services/Banshee.MediaEngine/NullPlayerEngine.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngine.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Implement a few video related features to allow setting/exposing to a
	GdkWindow for video support

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	Send the GdkWindow/Video calls into the player engine - binds the 
	pipeline XOverlay to a window in the UI

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/VideoDisplay.cs:
	Managed GdkWindow and video slab display widget thingy that can be
	drawn on by an engine

2008-03-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Forgot to make the db schema changes in the InitializeFreshDatabase method.

2008-03-18  Aaron Bockover  <abock@gnome.org>
	
	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Hide the view container
	when the source doesn't support custom contents or has a track model

	* src/Core/Banshee.Services/Banshee.Library/MusicLibrarySource.cs:
	* src/Core/Banshee.Services/Banshee.Library/VideoLibrarySource.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Fix up the source ordering to allow for some play

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Changed the argument to have MA spew its guts to --debug-addins

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	Changed to reflect the Nereid source contents properties and hide the
	source contents header since it's pointless for Last.fm

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingSource.cs:
	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/NowPlayingInterface.cs:
	Stubbed out the basics for the new 'Now Playing' source that will be used
	to display video, visualizations, and other data related to the currently
	playing track

	* src/Extensions/Banshee.NowPlaying/Banshee.NowPlaying/VideoDisplay.cs:
	Basic placeholder GdkWindow to be used to render video

2008-03-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	Set ShowBrowser to the same value as our Parent, by default.  So playlists
	under VideoLibrary will not show the browser.

2008-03-18  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit makes it easy/possible to create playlists and smart playlists
	on any PrimarySource.

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add PrimarySourceID column to Core[Smart]Playlists.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Load and save PrimarySourceID.

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistCore.cs:
	Handle loading smart playlists from various primary sources.

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs:

	* src/Core/Banshee.ThickClient/Resources/banshee-dialogs.glade:
	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Change Music
	to Media where appropriate.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistFileUtil.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.SmartPlaylist.Gui/Editor.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: When creating
	new playlists, create them with the correct primary source.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	This needs to be fixed up - the 'New Playlist' playlist that appears when
	you drag tracks over the SourceView only displays for the Music Library
	atm.

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Update to new PlaylistSource ctor.

2008-03-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: If a
	file contains video, put it in the VideoLibrary instead of the
	MusicLibrary.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Library/MusicLibrarySource.cs:
	* src/Core/Banshee.Services/Banshee.Library/VideoLibrarySource.cs: New
	files. VideoLibrarySource turns off the browser.

	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs: Changed to
	not be music specific.  Subclassed by new Music/VideoLibrarySource classes.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	* src/Core/Banshee.Services/Banshee.Library/ThreadPoolImportSource.cs:
	Update SourceManager.Library references to SourceManager.MusicLibrary.

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Create
	VideoLibrarySource.

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Rename
	Library property to MusicLibrary, and add VideoLibrary property.

	* src/Core/Banshee.ThickClient/Banshee.Gui/IconThemeUtils.cs: Check the
	executing assembly for the resource file if it's not found in the given
	assembly.

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Rename ImportMusicAction to ImportAction.

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Change icon to normal playlist icon for now since the Music Library now
	uses our old icon.  Listen for events on the VideoLibrary too.

2008-03-18  Sebastian Dröge  <slomo@circular-chaos.org>

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerView.cs:
	Change the unit of the preamp setting into dB, otherwise the scale
	next to it is confusing.

2008-03-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs: Fix delete
	from library code so that remove tracks from database is only called once
	per Range.

2008-03-17  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Sources/MessageAction.cs: Non-GUI
	action that can be attached to a SourceMessage

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Added SourceMessage
	support to replace the Message.* properties; supports a stack of messages

	* src/Core/Banshee.Services/Banshee.Sources/SourceMessage.cs: Message
	class replacing all of the Message.* properties

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedMessageBar.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	Updated to use the new Source/SourceMessage changes

	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedBox.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedHBox.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedVBox.cs: Some code
	clean ups and the ability to remove all widgets at once

	* src/Libraries/Hyena.Gui/Hyena.Widgets/MessageBar.cs: Minor rendering fix

2008-03-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Widgets/Banshee.Widgets/RatingEntry.cs: Add ability
	preview-on-hover, but keep it disabled for now.

2008-03-16  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Collection/TrackMediaAttributes.cs: 
	Defined a starting set of general flags that can be used to describe
	the track, including VideoStream, AudioStream, Podcast, AudioBook, etc.

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Added a 
	MediaAttributes property

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Override MediaAttributes and bind it to the Attributes column

	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs: Detect and merge
	some MediaAttributes into the track (i.e. if taglib says the file
	has audio and/or video streams, apply those as attributes)

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Added the first schema changes using the migrator now that we have actually
	made a release, we don't want to break users' database; add a column called
	Attributes to CoreTracks

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:
	NotifyTracksAdded a little more frequently than we do right now

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteUtils.cs: Special case
	Enum types so that we can convert integer values in the database to
	the enum values they represent if a bound property's type is an enum

2008-03-16  Scott Peterson  <lunchtimemama@gmail.com>

	Added animated layout widgets to Hyena.Gui

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs:
	Cast the shutdown handlers in the foreach statement.
	
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.
	cs: User jobs now use the fancy fancy AnimatedVBox.
	
	* src/Libraries/Hyena.Gui/Hyena.Gui.Theatrics/Actor.cs:
	Added an overload for Rest which takes a new duration.
	
	* src/Libraries/Hyena.Gui/Hyena.Gui.Theatrics/Choreographer.cs:
	A static class which provides math-o-magical easing equations.
	
	* src/Libraries/Hyena.Gui/Hyena.Gui.Theatrics/Stage.cs:
	Added an overload for Rest which takes a new duration and &= the
	ActorStepHandlers together to fix a theoretical bug.
	
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedBox.cs:
	A base class for doing animated packing.
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedHBox.cs:
	A container for animatedly packing widgets into a horizontal box.
	
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedVBox.cs:
	A container for animatedly packing widgets into a vertical box.
	
	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedWidget.cs:
	An internal class used by the AnimatedBox classes
	
	* src/Libraries/Hyena.Gui/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Services.mdp:
	* src/Libraries/Hyena.Gui/Hyena.Gui.mdp:

2008-03-16  Wouter Bolsterlee  <wbolster@svn.gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/AboutDialog.cs:
	Use a real en dash for date ranges. This is 2008 and we
	do speak Unicode nowadays! :)

2008-03-14  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Define
	a property for the icon name that is expected to be in the GTK icon theme;
	set this value to the new media-player-banshee icon name (used to be
	music-player-banshee, changed to avoid conflicts)

	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/GtkNotificationAreaBox.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/X11NotificationAreaBox.cs:
	Remove all hardcoded references to music-player-banshee, the old icon
	name, and replaced with the new Application property

2008-03-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Fix mono
	1.2.4 build issue.

2008-03-14  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Mono.Media/Mono.Media.mdp: Removed unnessisary reference.

2008-03-13  Aaron Bockover  <abock@gnome.org>

	Banshee 1.0 Alpha 1 (0.98.1) Released

2008-03-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.SmartPlaylist.Gui/Editor.cs:
	Disable one broken pre-defined smart playlist, and ensure the others are
	refreshed/reloaded when 'selected for use'.

2008-03-13  Aaron Bockover  <abock@gnome.org>

	* NEWS: Updated for 0.98.1

	* configure.ac: Require Mono 1.2.2, oops

2008-03-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena/DateTimeUtil.cs: Super ugly hack to work
	around ArgumentOutOfRangeException thrown by DateTime parser.

2008-03-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs: Add
	Banshee Group radio station as a default.

2008-03-13  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Protect against
	NRE when comparing track objects

2008-03-13  James Willcox  <snorp@snorp.net>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Correctly update after cover art appears
	
2008-03-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Resources/audioscrobbler.png: Replace
	24x24 version with 22x22 version.

2008-03-13  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackRepeatActions.cs:
	Disable repeat modes in the UI since they are not actually implemented
	in the playback controller at this time

2008-03-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	Patch from Alexander Hixon fixing the Audioscrobbler now-playing delay
	issue, properly listens for the account being updated to update
	links/actions.

	* src/Core/Banshee.Core/Resources/contributors.xml: Add Michael Monreal to
	Artists.

2008-03-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Avoid
	GtkCritical warning by checking that the TreeIter is not Zero before
	setting a value on it.  Fixes bug with closing the Error Source.

2008-03-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteUtils.cs: Patch from Scott
	Peterson fixing up some DateTime/SQL related issues.

2008-03-13  Aaron Bockover  <abock@gnome.org>

	* configure.ac:
	* src/AssemblyInfo.cs.in: 
	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs:
	Expose a display version in assembly metadata and API

	* src/Core/Banshee.Core/Banshee.Base/ProductInformation.cs: Fix small bug

	* src/Core/Banshee.Core/Resources/contributors.xml: Updated

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/AboutDialog.cs: 
	Some minor fixes and cosmetic polish; the link works again

2008-03-12  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Base/Paths.cs: Redefine 
	LegacyApplicationData to mean the previous ApplicationData, not the
	one from when we were using ~/.gnome2/banshee

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkManager.cs:
	Migrate cover art from the new LegacyApplicationData path

	* src/Core/Banshee.Services/Makefile.am: Fixed build

2008-03-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseAlbumInfo.cs:
	Rename LibraryAlbumInfo to DatabaseAlbumInfo.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Change all DateTime.MinValue stamps to NULL.

	* src/Extensions/Banshee.Lastfm/Makefile.am: Alphabetize.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteUtils.cs: Serialize and
	unserialze DateTime.MinValue as NULL.

	* src/nuke-core-tables: Update to new config subdir.

2008-03-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Resources/banshee-dialogs.glade:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs: Disable
	artist/album editing and add note explaining they are disabled for the
	preview release.

	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs:
	* src/Core/Banshee.Core/Banshee.Streaming/SaveTrackMetadataJob.cs: Save
	all metadata possible back to files, and add notes about keeping these two
	classes in sync.

2008-03-12  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs: Don't
	copy the old db file unless it exists.

2008-03-12  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Make
	CanPlay false if there is a stream error on the track

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationType.cs:
	Change some of the icons for now

2008-03-12  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Base/Paths.cs: Change the application
	data directory to banshee-1; create the directory if it doesn't exist;
	added ExtensionsData to Paths

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	Copy the old library to the new path if it exists - this will allow
	both old and new Banshee series to fully coexist

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/Queue.cs:
	Use the ExtensionsData path

2008-03-12  Aaron Bockover  <abock@gnome.org>

	Yes. I made all the build stuff refer to Banshee as banshee-1 instead
	of banshee-preview. This includes all paths, launchers, and even
	gconf keys.

2008-03-12  Aaron Bockover  <abock@gnome.org>

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/GnomeService.cs:
	Fixed the null check, actually works now

	* src/Clients/Nereid/Nereid/ViewContainer.cs: Add a 'Help' menu item 
	to the bottom of the search entry filter menu

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Add a menu item that takes the user to the documentation on the Wiki
	for query/search syntaxt and examples

	* src/Core/Banshee.Widgets/Banshee.Widgets/SearchEntry.cs: Expose the Menu

	* src/Libraries/Lastfm/Lastfm/Account.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	Hook up the web browser stuff again so account links work

	* src/Libraries/Lastfm.Gui/Lastfm.Gui/AccountLoginDialog.cs: Add the
	account signup button back

	* src/Libraries/Lastfm/Lastfm/Browser.cs: Fixed up to work again

2008-03-12  Aaron Bockover  <abock@gnome.org>

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/GnomeService.cs:
	Added an all-singing, all-dancing GNOME entry service; currently this 
	just hooks up Gnome.Url.Show (gnome-open) to Banshee.Web.Browser; 
	ideally Process.Start would work properly, but it's got some issues, 
	even though it does use xdg-open (which gnome-open should use); 
	gnome-open is also a bit more backwards compatible and may be necessary
	on SLED, for instance; phew.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Fixed the playback indication for database tracks (BGO #520503)

	* src/Core/Banshee.Services/Banshee.Web/Browser.cs: Implemented an
	OpenHandler to allow extensions to override the default way of opening
	a link in a browser

	* src/Backends/Banshee.Gnome/Banshee.GnomeBackend/GConfConfigurationClient.cs:
	Renamed namespace from Banshee.Gnome to Banshee.GnomeBackend since there
	is a possibility of conflicts with the standard Gnome namespace

	* build/build.rules.mk: Add some rules to filter out duplicate references
	that will be passed to the compiler due to the dependency chain in the
	build environment; makes debugging easier even though the compiler would
	filter this out by itself; also put hard target dependencies on assemblies
	that are referenced in bin/; hopefully will help some occasional build
	problems

2008-03-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Call
	RefreshAndReload on smart playlist Refresh action.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistCore.cs:
	Call RefreshAndReload when loading the smart playlists if we just migrated
	them.

2008-03-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:
	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/ICacheableItem.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Add a
	CacheModelId property to Track/Artist/Album classes, and rename
	SourceEntryId to CacheEntryId.

2008-03-11  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit cleans up and speeds up reloading.

	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	Listen for Selection.Changed event and reload the track model with the
	appropriate ReloadTrigger argument.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Add a Reload method that takes a ReloadTrigger argument identifying what
	caused the reload (user query, artist or album filter) so each can be
	handled optimally.  Should fix performance regressions introduced in
	yesterday's bug fixes.

	* src/Core/Banshee.Services/Banshee.Collection/SelectAllSelection.cs: If
	there is only one real item and it's selected, then AllSelected = true.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add a bunch more indexes to CoreTracks.

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Do not call
	lower() within ORDER BY fragments for track sorting.  This means it will
	be case sensitive for now.  Sqlite's lower() method doesn't work with
	non-LATIN characters, and it's slow.  We need to add columns where we
	store the result of lowercasing Album, Artist, and Title in C#.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Add a new Refresh method that actually regenerates the smart playlist
	entries, since this doesn't need to happen on every Reload.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Move the
	complicated Reload logic into the *ListDatabaseModels.  Get rid of
	FilteredDuration/FileSize properties.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs:
	* src/Core/Banshee.Services/Banshee.Sources/IFileSizeAggregator.cs:
	* src/Core/Banshee.Services/Banshee.Sources/IDurationAggregator.cs: Remove
	Filtered* properties - we never display both, so might was well not require it
	or bother to calculate the un-filtered version.

	* src/Libraries/Hyena/Hyena.Data/IFilterable.cs:  Remove Refilter method.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Fix bug with default sort column where it was based on your column order.

	* src/Core/Banshee.ThickClient/Banshee.SmartPlaylist.Gui/Editor.cs: Call
	new Refresh method on SmartPlaylistSources.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	Remove selection-changed source reload code - that's handled internally by the
	*ListDatabaseModels now.

	* src/Libraries/Hyena/Hyena.Data/ModelCache.cs: Change Reload to return
	void.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Use slightly
	faster INSERT INTO pattern, and don't automatically Save/RestoreSelection
	and UpdateAggregates within Reload.

2008-03-11  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Gui/CairoExtensions.cs: Do not crash
	if the native Cairo pop/push group functions do not exist

2008-03-11  Aaron Bockover  <abock@gnome.org>

	* build/build.rules.mk:
	* build/m4/banshee/gtk-sharp.m4:
	* configure.ac: Check for Gtk# 2.10 or better and define HAVE_GTK_2_10
	on all the assemblies; this will allow the build to succeed on Gtk# 2.8

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/GtkNotificationAreaBox.cs:
	Do not build if we don't HAVE_GTK_2_10, since GtkStatusIcon was introduced
	in that version; we only use GtkStatusIcon as a fallback if we are not
	running on X11/Unix anyway (i.e. it's mainly used for Windows)

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Do not try to instantiate GtkNotificationAreaBox if we don't HAVE_GTK_2_10;
	and since now we are not guaranteed to have some sort of 
	INotificationAreaBox, properly dispose the notification area service
	if we never get a reference to one (i.e. running on not X11/Unix and
	not Gtk# 2.10+)

2008-03-11  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Remove a bad line where
	I set the colormap of the window to be RGBA for no reason; I was playing
	around one night and committed this awful thing; SORRY

2008-03-11  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Gui/PangoCairoHelper.cs: Wrap the 
	Pango Cairo calls we care about so we'll build and run on GTK 2.8 again,
	which is quite important (yay SLED)

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/BetaReleaseViewOverlay.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Use the new
	Hyena.Gui.PangoCairoHelper API

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/CairoHelper.cs: Nuked

2008-03-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationType.cs:
	* src/Extensions/Banshee.Lastfm/Makefile.am: New tag, recommended,
	neighbour, and personal icons.

	* src/Libraries/Lastfm.Gui/Lastfm.Gui/AccountLoginForm.cs: Do not update
	the account information until the Close button is pressed.

2008-03-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	Removed Equals and GetHashCode override that ignored type differences, and
	caused the playqueue to disappear if you had a smartplaylist of the same
	id.

2008-03-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs: Fix
	scrolling to jump to the first selected item only if a selected item is
	not already in view.  If the model count < the visible rows, scroll to the
	top.

2008-03-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnController.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs:
	Default the sort of the TrackList to sort by Artist.

2008-03-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeModelProvider.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/ICacheableItem.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Rename
	CacheId to SourceEntryId, only require T : ICacheableItem in *ModelCache
	classes, and set the SourceEntryId in SqliteModelCache.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Remove cruft.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Comment out
	logging.

2008-03-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Fix bug with
	inconsistent table name in SQL.

2008-03-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	Add CacheId property that can be used to uniqued ID an item within a list.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Notify the Library about the metadata-refreshed tracks after closing the
	user job so it doesn't look like it's hung.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: SpawnFromMain
	a few methods.

	* src/Core/Banshee.Services/Banshee.Database/BansheeModelCache.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeModelProvider.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs:
	* src/Libraries/Hyena/Makefile.am:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/ICacheableItem.cs: New interface
	containing CacheId property that *ModelCache and *ModelProvider classes
	require.

2008-03-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Change 
	AudiblyEqual to TrackEqual since it makes more sense; make the base 
	comparison compare the track URIs

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Override TrackEqual and use database IDs for comparisons since that
	is much more efficient; not complete however; renamed DbId to TrackId

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Changed to use TrackId instead of DbId

2008-03-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTile.cs:
	Patch from Lukas Lipka to use the stop icon instead of close icon
	in the UserJobTile widget (BGO #520342)

2008-03-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: 
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Fix smart playlists to work with new ReloadTrack override.

2008-03-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/ViewActions.cs: 
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	Use the new Ready state instead of Initialized

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngine.cs: Do not
	allow state transitions unless the engine is setting itself to the 
	ready state; send the idle state automatically once the engine sends
	the ready state; all engines must transition to ready before anything
	else

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Handle the NotReady state in much the same way Idle is handled; some
	generic code cleanup

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineState.cs:
	Removed Initialized state in favor of Ready, added the NotReady state,
	which is the default state for all engines; engines must manually
	transition to the Ready state before any other state changes can occur

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Set the playing track when PlayerEngineEvent.StartOfStream is raised;
	do not set the playing track manually when querying the model

2008-03-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:

2008-03-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	Add override to Reload method with options for suppressing notification
	and filtering.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Remove
	RateLimitedFilter method, rework Reload to do suffice.  Remove cruft.
	Call track model's Reload with arguments to suppress notification and
	artist/album filtering.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Remove
	cruft, call PruneArtistsAlbums from within OnTracksDeleted

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	Simplify Selection changed handler to just call Reload on the source.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/ISourceContents.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/ObjectListSourceContents.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSourceContents.cs: 
	Change to use ISource instead of Source.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Prevent unnecessary Selection.Changed raising.

	* src/Libraries/Hyena/Hyena.Collections/Selection.cs: Add ToString
	override for debugging.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:
	Do ++count so Library gets refreshed on even 500s instead of N*500 + 1.

2008-03-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Removed all
	of the excessive [potential] thread spawning; it will be moved to where
	it is actually necessary (it is not necessary in most cases, is overkill,
	and can cause unexpected problems); this fixes the regression in the
	Play Queue

2008-03-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Fix the
	build.

2008-03-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	Now depends on the Artist model, resets the artist filter at each reload,
	exposes CacheId and ClearCache.

	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	Expose CacheId property and ClearCache method.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Keep references to the artist/album models and regenerate the artist/album
	filter for each reload.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: Reset
	the count to 0 when finished importing.

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	Whitespace.
	
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Avoid
	triggering the Reloaded event when reloading it twice in a row - no
	flicker.  OnTracksRemoved now reloads the current source, but not the
	library etc.  New PruneArtistsAlbums method that deletes artists/albums
	from the cache that have been removed from the library.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Rename
	TracksRemoved event to TracksDeleted for clarity/parity with method names.
	Override PruneArtistsAlbums method.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	Fix reloading when selection changes.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	TracksRemoved event renamed to TracksDeleted for clarity.

2008-03-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Avoid
	unnecessary db queries in saving/restoring selection.  Fix bugs with
	IndexOf method.

	* src/Libraries/Hyena/Hyena.Data/DictionaryModelCache.cs: Add lock
	around Clear command.

2008-03-07  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_DragAndDrop.cs:
	Calculate the row index for reordering

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Render a line to indicate the row reordering index

2008-03-07  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_DragAndDrop.cs:
	Some minor fixes and cleanups

2008-03-07  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_DragAndDrop.cs:
	Added another partial class for drag and drop specific stuff for the
	view; implement variable velocity scrolling when dragging rows in the
	view; it's awesome; added a Reorderable property, but it does not do
	anything yet (other than the awesome scrolling)

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Moved some DnD code into the new partial class

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Set Reorderable and ForceDragSourceSet properties

	* src/Core/Banshee.ThickClient/Banshee.Gui.DragDrop/DragDropTarget.cs:
	Removed the model selection target

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	Use the model selection target from hyena

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSourceContents.cs:
	Fixed a crasher/NRE

2008-03-07  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena/Hyena/ConsoleCrayon.cs: Added Hutch's terminfo
	changes to do all the coloring properly

2008-03-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Streaming/CommonTags.cs:
	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add Composer, Copyright, LicenseUri, and Comment columns to CoreTracks.

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Add Composer
	field.

2008-03-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	Add ToString override for debugging purposes.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	Scroll to the top if artist or album selection changes to all selected.

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs: When
	refreshing the view for the model, scroll to the first selected item if
	possible.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs:
	* src/Libraries/Hyena/Hyena.Data/ModelCache.cs: Add locks to make
	thread-safe, solves (at least some) spurious browser issues people have
	been seeing.

2008-03-06  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Widgets/Banshee.Widgets/StreamPositionLabel.cs: 
	Render the buffering progress bar using the GTK styles, take care of
	the pango layout manually instead of using a GtkLabel to be able
	to render the text in two colors, depending on the progress bar

	* build/build.rules.mk: Do not pass -warnaserror if mono is older than
	1.2.4 since there appear to be some fake warnings raised with the older
	gmcs compiler

	* build/m4/shamrock/mono.m4: Added a method to detect the mono version but
	not bail if it wasn't met, and set a result

	* configure.ac: Check for at least mono 1.2.4 and export the result

2008-03-05  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/BetaReleaseViewOverlay.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Use the allocation passed to Render to do the maths

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	Expose ListAllocation as a protected property

2008-03-05  Aaron Bockover  <abock@gnome.org>

	Lots of build fixes, preparing for the release

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Always update the addin registry so new/changed addins are rescanned

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	Workaround for a mono 1.2.4 bug

2008-03-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Small but
	powerful fix - was not clearing the selection between reloads at all.

2008-03-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Base/RateLimiter.cs: Change to prevent
	the method from being called while it is still running, queueing another
	run to happen when the current one finishes, instead of specifying a
	specific rate limit.

	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	Set HasSelectAllItem on cache to true.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Avoid parsing the user query if it hasn't changed since we last parsed it.
	Add SuppressReloads method so we can update both the album and artist
	filter before doing a Reload, and add a ClearArtistAlbumFilters method
	that directly, quickly does that.

	* src/Core/Banshee.Services/Banshee.Collection/AlbumListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection/ArtistListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection/BansheeListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection/TrackListModel.cs: Create
	the selection object within each subclass so that Album and Artist models
	can create a SelectAllSelection.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Collection/SelectAllSelection.cs: New
	class that makes sure the first item is selected as the AllSelected = true
	state.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Override new ReloadTrackModel method which is called by DatabaseSource's
	RateLimitedReload and RateLimitedFilter methods.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Add
	RateLimitedFilter method for spawning off the filter handler.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	Updated to work with SelectAllSelection and to trigger two track model
	updates when the artist model changes - one that is not filtered by any
	artists or albums, and one that is filtered by the artist/album selection,
	if any.

	* src/Libraries/Hyena/Hyena.Collections/Selection.cs: Change AllSelected
	and SelectAll to be virtual, add a MaxIndex getter.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Update the
	SaveSelection and RestoreSelection code to work with artist/album
	selections that have a first (fake) item "All *".

2008-03-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.ServiceStack/DBusServiceManager.cs:
	Ignore deprecation warning.

2008-03-05  Aaron Bockover  <abock@gnome.org>

	* build/build.rules.mk: Turned on -warnaserror and only show the bold
	compiling message if the terminal supports colors and is a tty

	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackRepeatActions.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/CairoHelper.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs:
	Fixed warnings

2008-03-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Resources/COPYING: Update to 2008.

	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Fix warnings.

2008-03-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	Replace confusing constructors with static FindOrCreate methods.  Should
	fix an issue with finding/creating/associating new albums too.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: Use
	new FindOrCreate methods.

2008-03-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Data/ISelectable.cs: Forgot to commit new file.

2008-03-04  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit fixes a long standing bug in trunk - selections now persist
	across source reloads (assuming the tracks are still in the source/not
	filtered).

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Add a bool CachesJoinTableEntries property so Smart Playlists can use the
	join table but fill the CoreCache with TrackIDS not EntryIDS - needed,
	since their EntryIDs don't last long b/c they are wiped/created anew every
	time its Reloaded.

	* src/Core/Banshee.Services/Banshee.Collection/BansheeListModel.cs: Don't
	clear the selection on reload.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Override CachesJoinTableEntries to false.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Check
	model.CachesJoinTableEntries instead of JoinTable != null.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Whitespace.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/ICacheableDatabaseModel.cs:
	Inherit from ISelectable and add CachesJoinTableEntries property. 

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: SaveSelection
	before a Reload and RestoreSelection afterward.

	* src/Libraries/Hyena/Hyena.Data/ModelCache.cs:
	* src/Libraries/Hyena/Hyena.Data/ArrayModelCache.cs:
	* src/Libraries/Hyena/Hyena.Data/DictionaryModelCache.cs: Update to use
	Int64s where appropriate.

	* src/Libraries/Hyena/Hyena.Data/IListModel.cs: Inherit from ISelectable.

	* src/Libraries/Hyena/Hyena.Data/ModelSelection.cs: Comment out
	unimplemented IndexOf method.

	* src/Libraries/Hyena/Makefile.am: New ISelectable interface.

2008-03-04  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit adds more granular events for when tracks are added, changed,
	and removed to each track's PrimarySource.  Playlists etc can listen for
	these events, and only reload when necessary (still work to do on this
	front).  Reloads happen not in the main thread, so actions (like rating
	4800 songs at once) return quickly, but other sources may take a second or
	few to be updated.

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	In Save method, trigger PrimarySource's TrackAdded or Changed method as
	appropriate.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Cache the unfiltered query string.

	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs: Call
	OnImportFinished even if cancelled.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add CoreRemovedTracks table.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: Pass
	false to DatabaseTrackInfo.Save method, and manually trigger TracksAdded
	event every 500 songs or when finished/cancelled.

	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs: Use
	RemoveTrackRange instead of remove_track_command.

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	Add stamps for tracking when last handled Tracks* events, add count
	commands for use in determining if an event affects this source.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Handle
	TracksChanged and TracksRemoved events from our PrimarySource parent.
	Right now we just always trigger a Reload, but these handlers are ripe for
	optimizations that will avoid Reloads unless absolutely necessary.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Trigger the
	Track* events on the primary source when adding/changing/removing tracks.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Add
	TracksAdded, TracksChanged, and TracksRemoved methods.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Make
	SetParentSource a virtual method.

	* src/Core/Banshee.Services/Banshee.Collection/BansheeListModel.cs:
	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Make
	sure GUI-related events are handled in the main loop.

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs: Turn
	DateTime values into integers.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Add
	another override for Query/Query<T>/Execute (HyenaSqliteCommand, params).

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Cache the
	reload command.

2008-03-04  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena/Hyena/Log.cs: Added InformationTimer methods
	akin to DebugTimer methods that will work without --debug mode

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Use InformationTimer instead of DebugTimer to show the overall startup
	time; set the addin cache path to just be the application data path,
	since Mono.Addins creates its own subdirectory underneath

	* src/Core/Banshee.Services/Banshee.Services.addins: Scan Extensions
	and Backends directories for addins

	* build/build.environment.mk: Define EXTENSIONS_INSTALL_DIR, 
	BACKENDS_INSTALL_DIR

	* src/Backends/Banshee.GStreamer/Makefile.am:
	* src/Backends/Banshee.Gnome/Makefile.am:
	* src/Backends/Banshee.Unix/Makefile.am:
	* src/Extensions/Banshee.Lastfm/Makefile.am:
	* src/Extensions/Banshee.MultimediaKeys/Makefile.am:
	* src/Extensions/Banshee.NotificationArea/Makefile.am:
	* src/Extensions/Banshee.PlayQueue/Makefile.am:
	* src/Extensions/Banshee.Skins/Makefile.am: Set the INSTALL_DIR to 
	either EXTENSIONS_INSTALL_DIR or BACKENDS_INSTALL_DIR so addins are
	a bit more organized in the install/packages

	* src/Extensions/Makefile.am: Disable the skins extension

2008-03-04  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena/Hyena/ConsoleCrayon.cs: A workaround for the somewhat
	broken terminfo driver for setting console colors in System.Console on
	Mono. If xterm and tty is detected, ANSI control codes will be used to
	color the console, otherwise if the runtime is not mono and the OS is
	not unix, the regular System.Console API will be used

	* src/Libraries/Hyena/Hyena/Log.cs: Use Hyena.ConsoleCrayon instead of
	System.Console to set/reset the terminal colors

2008-03-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmTrackInfo.cs:
	Catch Web exceptions in Love and Ban methods, avoiding crashing.

2008-03-03  Gabriel Burt  <gabriel.burt@gmail.com>

	This patch fixes a poor assumption made quite a while ago that for
	playlists put the TrackID into the CoreCache table, which if you had a
	song in a playlist twice would make it impossible to remove one and not
	the other.

	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	Fix reload fragments to use the track_model's JoinTable etc when needed.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Add JoinTable, JoinPrimaryKey, and JoinColumn properties that allow the
	model to specify that it joins, for example, the CoreTracks table with the
	CoreCache table via the CorePlaylistEntries table.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add a EntryID primary key to CoreSmartPlaylistEntries, and create an index
	for it.

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	Add JoinPrimaryKey virtual property, and set the Join* properties.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Fix
	AddTrackRange method to work with track model's that have a join table.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Change INSERT to add NULL so primary key automatically set.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Implement
	RemoveTrack by calling RemoveTrackRange with an appropriate Range.  Add
	ReloadPrimarySource method that reloads the current source's "nearest"
	PrimarySource - either itself, its parent, or all PrimarySources.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Remove
	RemoveTrack method - fully implemented in DatabaseSource.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/ICacheableDatabaseModel.cs: Add
	Join properties.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Handle models
	that specify a JoinTable.

2008-03-02  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackRepeatActions.cs:
	Activate the repeat action when it's loaded from configuration

2008-03-02  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/BetaReleaseViewOverlay.cs:
	Fix some small bugs; do not show with --debug passed

2008-03-02  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Add a null check before sorting out dependencies, so we don't bomb out on
	creating a new simple Smart Playlist.

2008-03-01  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/BetaReleaseViewOverlay.cs:
	A sweet overlay thingy that draws some big warning/welcome for users
	about the state of trunk/preview release

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Render the hot overlay

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	Expose some properties as protected

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theatrics/Stage.cs:
	Fix a bug when iterating actors in the stage by creating a copy to
	iterate; this allows actor step handlers to modify the stage actors

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/GtkTheme.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/Theme.cs: Added DrawPie

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/ThemeContext.cs: Add some
	more state properties

2008-03-01  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena/Hyena.Query/QueryNode.cs: Got rid of unnecessary
	condition.

2008-03-01  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena/Hyena.Query/QueryNode.cs: Added methods to search a
	QueryNode tree for values of a given type either by depth or breadth.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Consume the new QueryNode.SearchForValues method.

2008-03-01  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Fixed typo.

2008-03-01  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	Implements new HasDepenencies property.

	* src/Core/Banshee.Services/Banshee.Sources/ITrackModelSource.cs: Added
	HasDependencies property.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: The public Children
	property is now a ReadOnlyCollection<Source> since other code has no
	business modifying the collection directly.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: No longer
	reload a child source if it has dependencies (the dependencies will
	trigger a reload of the source which depends on them).

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	Overrided Equals and GetHashCode to compare DbId.

	* src/Core/Banshee.Services/Banshee.Query/SmartPlaylistQueryValue.cs:
	Implements new abstract member Resolve(). Used to turn a DbId into a
	SmartPlaylistSource.

	* src/Core/Banshee.Services/Banshee.Query/PlaylistQueryValue.cs: Implements
	new abstract memeber Resolve () (right now it just returns null b/c we
	don't use the ObjectValue of a PlaylistQueryValue. In the future, this
	may change).

	* src/Core/Banshee.Services/Banshee.Query/AbstractPlaylistQueryValue.cs:
	Added abstract query value to handle the OperatorSet overload used by
	both SmartPlaylistQueryValue and PlaylistQueryValue.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistCore.cs: Made
	to use generics and addded GetSmartPlaylistFromDbId () method.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Now keeps track of SmartPlaylistSources on which it depends. Used for
	listening to dependencies' Update events.

	* src/Libraries/Hyena/Hyena.Query/IntegerQueryValue.cs: SetValue made
	virtual.

	* src/Libraries/Hyena/Hyena.Query/IntegerKeyedObjectQueryValue.cs: New
	abstract class which allows an IntegerObjectValue to map to an object.

2008-02-29  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.PlayerMigration/AmarokPlayerImportSource.cs:
	Fixed warnings.

2008-02-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Show the
	FilteredFileSize in the status message, like we show the FilteredDuration.

2008-02-29  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmTrackInfo.cs:
	Modify the LastfmTrackInfo object, and add in the new trackauth variable
	in the constructor and associated property. We get the trackauth value
	from the track returned from Last.fm (lastfm:trackauth).

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	Only submit NowPlaying tracks if the track is more than 30 seconds in length
	and the user has enabled scrobbling of tracks.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/Queue.cs:
	Support the new TrackAuth property in LastfmTrackInfo, submit that and the
	correct source code if the track was from radio, otherwise say it was from
	the library.

	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs: Lots of cleanups
	to do with HACKING guidelines, trying to send stuff when we're not allowed
	to (ie not connected), and *heaps* of logic/name cleanups. 

	* src/Libraries/Mono.Media/Media.Playlists.Xspf/Track.cs: Expose some lame
	kind of method to get extra key values.

2008-02-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Fix
	calculation figuring out whether or not the click is on the expander.

2008-02-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Base/RateLimiter.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/QueryBox.cs:
	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/QueryLimitBox.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs:
	* src/Libraries/Lastfm.Gui/Lastfm.Gui/AccountLoginDialog.cs:
	* src/Libraries/Lastfm.Gui/Lastfm.Gui/AccountLoginForm.cs: Fix warnings.

2008-02-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Add a Save (bool notify) method so processes that are triggering lots of
	Save's can avoid notifying the track's PrimarySource until they choose to
	- eg in the metadata refresh process.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	Add comment to PRAGMA cache_size call.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add indices to Core[Smart]PlaylistEntries, and use track.Save (false) when
	updating the metadata.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: Set
	Library.Importing = true/false around the import process.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Add
	ReloadChildren method.  Add RateSelectedTracks method.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Add
	Importing property that when set true increases the period between
	TrackUpdated calls to 5 s (from the normal 0.25 s).  Fix bug where Reload
	always reloaded all children - not something we want to do when the user
	is searching, say.  Explicitly call ReloadChildren where needed.

	* src/Core/Banshee.Services/Banshee.Base/RateLimiter.cs: Make more thread
	safe.

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Add an
	ActiveSource convenience property.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Use
	ActiveSource property.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Use new
	ActiveSource property, and call RateSelectedTracks to rate entire
	selection Ranges at a time - much much faster.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs: Make
	Execute and WaitForResult internal methods.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Put
	locks on the current command around Query/Execute calls to prevent a
	thread from calling the same command before an earlier thread gets its
	result.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Avoid
	checking the cache table more times than necessary.

2008-02-28  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs: Added a new
	base version of TrackInfoMerge that allows you to switch priority/fallback
	values to prefer either the database track or the taglib file data

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs: Move
	the migration consumer stuff out, make the migrator accessible to others

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Use a UserJob to report the migration track scanning progress

	* src/Core/Banshee.Services/Banshee.ServiceStack/IInitializeService.cs:
	A simple interface that will tell the service manager to call initialize
	on it after registering; this allows other objects to listen for the
	service before the service actually does anything

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Support IInitializeService.Initialize

	* src/Core/Banshee.Services/Banshee.ServiceStack/UserJob.cs: Added some
	more ctor overrides to make it easier to use

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeDbFormatMigratorMonitor.cs:
	A UI for reporting the migration progress in the database layer

	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs: Connect
	to the database migration layer and use the new UI to report progress

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Draw a bubble, shouldn't commit this, in a hurry

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellAlbum.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/CellContext.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Fixed up
	to use the new Hyena.Gui.Theming API

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListViewGraphics.cs: Nuked 

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/GtkColors.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/GtkTheme.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/Theme.cs:
	* src/Libraries/Hyena.Gui/Hyena.Gui.Theming/ThemeContext.cs: New simple
	theme API that will make doing the custom drawing easier than the crappy
	ListViewGraphics bloated/hard to use API

2008-02-27  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Base/ThreadAssist.cs: Do not set the
	main thread automatically and instead require an explicit call to a new
	InitializeMainThread method just for sanity to avoid possible race 

	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs: Call
	ThreadAssist.InitializeMainThread

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:
	Enable the database URI pre-check when importing, minor clean up, 
	wrap the commits in database transactions, and do an explicit save
	on the LibraryAlbumInfo (not sure if this is correct)

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.cs:
	Fixed a big threading bug - the actual user job/manager API is designed
	to be consumed from many threads, and the UI host for the jobs has to
	manage threading; this fixes some odd UI behavior after library imports

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTile.cs: Use
	generic/type-safe service manager methods

	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs: Some 
	clean up, remove an anonymous method to make more readable

2008-02-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Fix up
	last SourceView commit.

2008-02-27  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Added
	a generic Contains method so Contains checks can be type safe just like
	the generic Get service calls

	* src/Core/Banshee.Services/Banshee.ServiceStack/TestUserJob.cs:
	Added a method to spawn a few test user jobs which is useful for 
	debugging the user job API and host tile display

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.cs:
	When the magic command line argument is passed, spawn the test jobs

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Only render the focus row if the view actually has focus

	* src/Libraries/Hyena/Hyena.CommandLine/CommandLineParser.cs: Fix a 
	minor crasher bug

2008-02-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Do not
	activate a Source when its expander is clicked.

2008-02-27  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackRepeatActions.cs:
	Created UI actions for repeat mode functionality; this is where the 
	repeat mode can be accessed and is stored/loaded from configuration; 
	the UI actions are set up here

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/RepeatActionButton.cs:
	A special button that syncs its state with the PlaybackRepeatActions and
	presents the actions as a popup menu

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Make the footer actually
	a Gtk.Toolbar, pack the new RepeatActionButton, and do some allocation
	magic to ensure the status bar is always centered on the toolbar; moved
	the only two schema items that are still at the client level into here

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeIconFactory.cs: Added
	the media-repeat icons into the stock

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Load the
	PlaybackRepeatActions as a child set of actions
	
	* src/Clients/Nereid/Nereid/PlayerWindowSchema.cs: Removed

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Added a ToolbarFooter object

	* src/Libraries/Hyena/Hyena/StringUtil.cs: Added UnderCaseToCamelCase
	method that does the opposite of what CamelCaseToUnderCaseDoes; use
	a StringBuilder for the latter

	* tests/Hyena/StringUtilTests.cs: Added some tests for the above two methods

2008-02-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Remove unnecessary Show.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.cs: Add
	the inner VBox to the Alignment...hard for it to show otherwise.

2008-02-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Improve the metadata refresh process - use the existing OnSlow* calls in
	the migrator, don't die if a track can't be refreshed, etc.

2008-02-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Add and
	comment out an implementation for 'New Smart Playlist From Search'.  It
	works, but the smart playlist Editor needs to be changed to accept
	conditions with no field (eg implying search-all-default-fields).

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Comment out 'New Smart Playlist From Search' item.

2008-02-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Services.mdp:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.mdp:
	* src/Libraries/Lastfm.Gui/Lastfm.Gui.mdp:
	* src/Libraries/Lastfm/Lastfm.mdp:
	* src/Libraries/Mono.Media/Mono.Media.mdp: Fix MD build.

	* src/Extensions/Banshee.Lastfm/Makefile.am: Remove non-existant file.

2008-02-27  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs: Support lazy
	authentication. Also implement retrying if sending a 'Now Playing' track
	failed. Slightly more detailed logging is also added.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	Removed a useless boolean value. Also implemented lazy connecting before
	queuing tracks.

2008-02-27  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	Only scrobble tracks if the 'Enable song reporting' checkbox is active.

2008-02-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSourceContents.cs:
	Fix crasher - don't update GTK outside the main thread.

2008-02-26  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit brings back a thread-safe database layer.  Unfortunately, that
	currently means switching back to the deprecated Mono.Data.SqliteClient
	library.  Mono.Data.Sqlite does not allow executing a command in one
	thread and reading it in another, where M.D.SqliteClient does.

	* Makefile.am: Add BANSHEE_DEV_MONO_OPTIONS env var to enable setting
	--profile=default:stat for example to run with make run.

	* build/build.environment.mk: Depend on Mono.Data.SqliteClient again.
	Mono.Data.Sqlite requires that even reading the results of a query must be
	done in the same thread that ran the query/owns the connection.

	* src/Core/Banshee.Core/Banshee.IO/Provider.cs: Clean up.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/Migrator.cs:
	* src/Core/Banshee.Services/Banshee.Configuration/DatabaseConfigurationClient.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	New HyenaSqliteConnection API.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	Get rid of unused ctor and execute useful performance-related PRAGMAs.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Use HyenaSqliteConnection's utility methods, new API.  Add UserJob to
	rescan a user's songs when migrating over in order to get fields we now
	store in the database - like Disc, etc.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: Get
	rid of ProxyToMain call.

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Add null check.

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Reorder
	loading of Library, Library playlists.

	* src/Core/Banshee.Services/Banshee.PlayerMigration/AmarokPlayerImportSource.cs:
	Use Mono.Data.SqliteClient.

	* src/Core/Banshee.Services/Banshee.ServiceStack/UserJob.cs: Avoid
	duplication in ctors.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Increase the
	delay betwen refreshes.

	* src/Core/Banshee.ThickClient/Banshee.SmartPlaylist.Gui/Editor.cs: Get
	rid of ProxyToMain calls.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs: Do
	not login to Last.fm radio until a source is activated.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs: Convert longs
	in a different way that M.D.SqliteClient likes.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs: Combined
	with QueuedSqliteCommand code, meant to be called by threaded/queued
	HyenaSqliteConnection.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Combined
	with QueuedSqliteDatabase code (from F-Spot's copy).  Supports blocking
	other threads during transactions and has no busy-waits.

2008-02-26  Aaron Bockover  <abock@gnome.org>

	* ChangeLog: Fixed all the improper formatting that has been committed
	to this file lately. Wrote a guide that describes the proper formatting
	procedure for this file

	http://banshee-project.org/ChangeLogForDevelopers

	* HACKING: Updated with above link

2008-02-25  Alexander Hixon  <hixon.alexander@mediati.org>
	
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	Attempt to queue the currently playing track when we dispose the 
	service, in case it's scrobbable, but the user quit before hitting
	the next button to send it off to the server. It gets queued until
	next start.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Fix TrackInfoDisplay by making sure we pass the correct EventMasks so
	that we don't bombard the user with cover art on track change, if the
	user had shown the cover art popup previously in the session. Also 
	fixes hiding the cover art popup after the correct amount of time. 

	* src/Libraries/Lastfm/Lastfm/RadioConnection.cs:
	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs:
	* src/Libraries/Lastfm/Lastfm/LastfmCore.cs: Remove Account from 
	constructors for RadioConnection and AudioscrobblerConnection.
	Also get the Connections to reference LastfmCore.Account rather
	than keeping track of their own copy.

2008-02-24  Alexander Hixon  <hixon.alexander@mediati.org>
	
	* src/Libraries/Lastfm/Lastfm/RadioConnection.cs:
	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs: Remove class-
	based UserAgent properties, values and constructor arguments. Use
	LastfmCore.UserAgent instead.

	* src/Libraries/Lastfm/Lastfm/LastfmCore.cs: Simplify UserAgent's setter,
	and update instance creation to reflect changes in ctor definitions.

2008-02-23  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/TrackInfoPopup.cs:
	Decrease spacing between time and progress bar.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	* src/Libraries/Lastfm/Lastfm/LastfmCore.cs: Use LastfmCore as a singleton 
	to access Last.fm classes.

	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs: Provide support
	for user agent when sending requests to Audioscrobbler servers. Can be
	passed via ctor or by setting the UserAgent property. Also marked ctor
	as internal.

	* src/Libraries/Lastfm/Lastfm/RadioConnection.cs: Added UserAgent property.
	Marked ctor as internal.

	* src/Libraries/Lastfm/Lastfm/Account.cs: Remove the static Account 
	instance, since it's now provided by LastfmCore as a singleton.

2008-02-23  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.Library/ThreadPoolImportSource.cs,
	* src/Core/Banshee.Services/Banshee.PlayerMigration/AmarokPlayerImportSource.cs:
	Renamed DoImport to ImportCore as per Framework Design Guidelines, also
	slapped the new keyword onto the static
	AmarokPlayerImportSource.CanImport property to get rid of the warning
	about it hiding a base member of the same name (which it should).

2008-02-23  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/X11NotificationAreaBox.cs:
	Get track duration and progress information before showing the popup 
	and relying on the fact that we're playing to determine the progress
	label text. Showing the popup during a paused song now works.

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/TrackInfoPopup.cs:
	Add some padding around the TrackInfoDisplay to pretty things up
	slightly and line up the cover art.

	* src/Libraries/Lastfm.Gui/Lastfm.Gui/AccountLoginForm.cs: Don't try
	to run Account.Save if the username or password haven't changed
	since the time the dialog was opened till the time it closed.
	Prevents reconnecting if you simply open the dialog and close it again.

2008-02-23  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/X11NotificationAreaBox.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/TrackInfoPopup.cs:
	Added LinearProgress hotness.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedSeekSlider.cs: 
	Fixed a bug where the user would change tracks while a track was mid-way 
	through being buffered, and the first track's buffering result would 
	cover up the song duration/progress information.

2008-02-23  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	Rewrote the SongTimer class to use PlayerEngine.Position. Doesn't rely on
	PlayerEngineState events anymore. This also means that SongTimer works 
	well while listening to songs on Last.fm.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/Queue.cs:
	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs: 
	Implement MusicBrainzId property and using that data to generate requests 
	to Last.fm. Currently isn't attached to any real data source, so the ID 
	is always empty.

2008-02-23  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/BaseClientWindow.cs: Port fix 
	across from stable so that using Alt+F4 to close the main window 
	works again.

2008-02-23  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	Remove a few bits of commented code. Added Stock.Properties icon for 
	the Configure menu item.

	* src/Core/Banshee.ThickClient/Banshee.Gui/ViewActions.cs: Added Ctrl+E 
	keyboard shortcut for equalizer window.

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Added 
	Stock.Preferences icon for Preferences menu item.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Added E 
	keyboard shortcut for track editor dialog.

2008-02-23  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs: Use 
	the static instance of Account shared by others, rather than creating 
	a seperate instance.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs: Added support 
	for keeping track of network connection state and automatically connecting.
	Also included better debugging messages.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	Fix queuing tracks that have actually been played long enough but were 
	not submitted. Also added a few simple checks to see if the current track 
	attempting to be queued is null or has been listened to for less than 
	one second.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/Queue.cs: 
	Send tracks with the correct original play-start time (instead of 
	double-universal time).

	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs: Make sure that 
	errors when POSTing the current track being listened to aren't displayed 
	to the user via the HIG message dialog - log them silently to console 
	instead.

2008-02-22  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	Use a slightly less brain-dead method of checking the total length of 
	the track played. Skipping through a track but playing the correct 
	length for inclusion on a Last.fm profile now works correctly. Also added 
	support for sending NowPlaying information.

	* src/Libraries/Lastfm/Lastfm/Account.cs: Create an 'Instance' property 
	for use via multiple modules.

	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs: Uncommented 
	and exposed NowPlaying method, so that Last.fm lists the current track 
	as playing.

2008-02-22  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Audioscrobbler: Mark this as removed in SVN. 
	Accidentally missed in previous revision.

	* src/Extensions/Banshee.Lastfm/Resources/AudioscrobblerMenu.xml: Added 
	missing file, enables Audioscrobbler extension service to load 
	without error.

2008-02-22  Alexander Hixon  <hixon.alexander@mediati.org>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/Queue.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Audioscrobbler/AudioscrobblerService.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.addin.xml: Cleaned 
	version of the Audioscrobbler plugin from stable. Glue to hook up 
	player engine and AudioscrobblerConnection logic lives here.

	* src/Libraries/Lastfm/Lastfm/AudioscrobblerConnection.cs:
	* src/Libraries/Lastfm/Lastfm/IQueue.cs: Seperate out web bits and 
	queue interface into our Last.fm library. Uses version 1.2 of the 
	Last.fm protocol.

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Added 'Tools' menu.

2008-02-22  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.Library/ThreadPoolImportSource.cs: Minor
	fix for fetching the UserJob's Title.

2008-02-22  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs,
	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs:
	HyenaSqliteConnection.GetSchema now returns an IDictionary<string,
	string> rather than a Dictionary<string, string>.

2008-02-22  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.Library/ImportSourceManager.cs,
	* src/Core/Banshee.Services/Banshee.PlayerMigration/AmarokPlayerImportSource.cs:
	Minor change to Amarok's CanImport property name.

2008-02-21  Gabriel Burt  <gabriel.burt@gmail.com>

	* build/build.environment.mk:
	* configure.ac:
	* src/Clients/Nereid/Nereid/Client.cs:
	* src/Extensions/Banshee.Skins/Banshee.Skins.addin.xml:
	* src/Extensions/Banshee.Skins/Banshee.Skins.mdp:
	* src/Extensions/Banshee.Skins/Banshee.Skins/SkinManager.cs:
	* src/Extensions/Banshee.Skins/Makefile.am:
	* src/Extensions/Banshee.Skins/Resources/GlobalUI.xml:
	* src/Extensions/Makefile.am: New extension for switching skins (*.gtkrc
	files under ~/.config/plugins/skins/).

2008-02-21  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Query/DateQueryValue.cs: Make the regex
	static.

	* src/Libraries/Lastfm/Lastfm.Data/DataEntryCollection.cs:
	* src/Libraries/Lastfm/Lastfm.Data/DataEntry.cs: Enforce the Root as being
	a XmlElement, and if it doesn't have a child element of the requied name,
	see if it has an attribute.

2008-02-21  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Query/DateQueryValue.cs: Cleanup.

2008-02-21  Gabriel Burt  <gabriel.burt@gmail.com>

	* build/build.environment.mk: Add Mono.Unix dep to Hyena so strings can be
	translated, like they already could be in Hyena.Gui.

	* src/Core/Banshee.Services/Banshee.Base/RateLimiter.cs: Add option to not
	run wrapped method immediately, but to have a delay first.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Implement DependsOn using depth-first scan of the ConditionTree.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Set a 10ms
	delay before responding to OnTrackUpdated.

	* src/Core/Banshee.ThickClient/Banshee.Query.Gui/SmartPlaylistQueryValueEntry.cs:
	Check if Editor.CurrentlyEditing is set, and if so, do not put the current
	playlist or ones that depend on it in the dropdown.

	* src/Core/Banshee.ThickClient/Banshee.SmartPlaylist.Gui/Editor.cs: Expose
	through a public static property what Smart Playlist is currently being
	edited.

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/QueryBox.cs: Add and use a
	Gtk.Entry if the query is more complicated than our GUI can handle.

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/QueryTermBox.cs: Clean.

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/QueryTermsBox.cs: Make methods
	protected instead of public, throw exception if unable to handle the
	QueryNode given.

	* src/Libraries/Hyena/Hyena.Query/DateQueryValue.cs: Support parsing and
	generating relative-date user queries.

	* src/Libraries/Hyena/Hyena.Query/FileSizeQueryValue.cs: Put a space
	between the file size and its unit.

	* src/Libraries/Hyena/Hyena.Query/IntegerQueryValue.cs: Change the default
	alias for the Equal operator to "=" instead of "==".

	* src/Libraries/Hyena/Hyena.Query/QueryListNode.cs: Use ' or ' instead of
	', ' to separate OR'd nodes in generated user queries.

	* src/Libraries/Hyena/Hyena.Query/UserQueryParser.cs: Add a static Parse
	method for convenience.

2008-02-21  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Changed it so
	that the "Sort Children" option appears only if there are two or more
	children of a source: a list of one is always sorted :)

2008-02-21  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Add DateUpdated property and update it in Save method.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Rename DiscNumber to Disc to avoid automatic column creation.  Fix issue
	with DateUpdatedStamp not being created, and use DateAdded as its default
	value for migrated tracks.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: Use
	the Source property on DatabaseTrackInfo instead of SourceId.  Remove
	reload call to Library since it saving the tracks automatically triggers
	it now.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Increase
	minimum time between reloads.

	* src/Core/Banshee.Services/Banshee.Sources/ErrorSource.cs: Implement
	IUnmapableSource.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: Add
	TracksUpdated event.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Try to popdown
	the menu before rating.

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Add
	custom context menu for ErrorSource.

	* src/Libraries/Hyena/Hyena/Log.cs: Make log type string all the same
	length so they line up better.

2008-02-21  Scott Peterson <lunchtimemama@gmail.com> 

	This commit begins to port the player migration namespace from stable into 
	trunk. I've only done the Amarok importer as a proof-of-concept and I 
	haven't tested it. This commit is more about laying out the 
	namespace/object design for the player migration stuff for critique. 
	What is presented here in this patch is subject to change if anyone 
	wants to massage it a little more. Otherwise I'll go ahead with
	porting/testing the other player migrators. So please provide feedback!

	* src/Core/Banshee.Services/Banshee.Library/ThreadPoolImportSource.cs: 
	Added a base class for IImportSources which will perform a single-method
	import operation in a ThreadPool thread.

	* src/Core/Banshee.Services/Banshee.Library/ImportSourceManager.cs: Added
	Amarok importer to import sources.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: 
	Created a new public method AddTrackToLibrary, which contains the logic 
	for adding a track to the library and hooking up the related Artist and
	Album infos.

	* src/Core/Banshee.Services/Banshee.PlayerMigration/AmarokPlayerImportSource.cs:
	Ported the Amarok importer from stable. NOTE: I don't have Amarok - and
	it's 3am - so I haven't tested this. It needs testing! SOMEONE TEST
	THIS!!!

2008-02-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSourceContents.cs:
	If possible, set album art on the lists of tracks.  Unfortunately the
	Last.fm feed for recently loved songs doesn't include the album name, so
	no cover art there.

	* src/Libraries/Lastfm/Lastfm.Data/DataEntry.cs: Add new Entry types for
	Artist data.

	* src/Libraries/Lastfm/Makefile.am:
	* src/Libraries/Lastfm/Lastfm.Data/LastfmArtistData.cs: Expose
	artist-related data.

2008-02-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSourceContents.cs:
	Fix numbering.

2008-02-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Web/Browser.cs: Add implementation,
	gleaned from MonoDevelop.

	* src/Core/Banshee.Widgets/Makefile.am:
	* src/Core/Banshee.Widgets/Banshee.Widgets/MenuTile.cs: Subclass of Tile
	that overrides the OnButtonPress so it can be used to pop up a menu.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	Add actions and handlers for artists, albums, and tracks that go to
	various websites (Last.fm, Wikipedia) and other fun things.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSourceContents.cs:
	Add two lists: 10 most recently played songs, and 10 most recently loved.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationType.cs: Break
	types out into public static variables.

	* src/Extensions/Banshee.Lastfm/Resources/GlobalUI.xml: Add Popups for
	artists, albums, and tracks.  Currently only tracks is actually used.

	* src/Libraries/Lastfm/Makefile.am:
	* src/Libraries/Lastfm/Lastfm.Data/UserData.cs:
	* src/Libraries/Lastfm/Lastfm.Data/LastfmUserData.cs: Move to
	LastfmUserData, and change API - expose as properites data that doesn't
	take any arguments.  Cache results in a local dictionary to avoid hitting
	the network every time property is accessed.

	* src/Libraries/Lastfm/Lastfm.Data/LastfmData.cs: Add Refresh method that
	will ignore the cache.

	* src/Libraries/Lastfm/Lastfm/RadioConnection.cs: Add comment with
	unimplemented xmlrpc methods.

	* src/Libraries/Lastfm/Test.cs: Update to new API.

2008-02-20  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit adds a CorePrimarySources table and a SourceID column to the
	CoreTracks table, allowing non-Library tracks to be stored there (and
	therefore benefit from our searching, playlist, smart playlist, and view
	code).

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Banshee.Services/Banshee.Base/RateLimiter.cs: Allow specifying
	a min_interval on each rate-limited execute.

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/DatabaseTrackInfo.cs:
	Rename to DatabaseTrackInfo, add SourceId property.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add new CorePrimarySources table, add SourceID to CoreTracks, remove
	unique constraint on CorePlaylistEntries.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: When
	importing set the SourceId on the new DatabaseTrackInfos.

	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs: Refactor
	a lot of logic into PrimarySource, and inherit from it.

	* src/Core/Banshee.Services/Banshee.Library/HomeDirectoryImportSource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistFileUtil.cs: Use
	shorter way of getting a specific service from the ServiceManager.

	* src/Core/Banshee.Services/Banshee.Sources/PrimarySource.cs: New class
	to be subclassed by LibrarySource, DaapSource, DapSource, etc - a way of
	reusing CoreTracks and all associated goodness for non-Library tracks.

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Add Library
	convenience property.

	* src/Core/Banshee.Services/Banshee.Services.mdp:
	* src/Core/Banshee.Services/Makefile.am: Updated

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistCore.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Use DatabaseTrackInfo.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs: Avoid problem
	in Mono.Data.Sqlite in getting Int64 value.

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Add
	convience methods for Query, Execute, ExecuteReader that accept the same
	parameters as the HyenaSqliteCommand ctor does, allowing
	Query<int>("select x from y where ?", z) instead of Query<int>(new
	HyenaSqliteCommand ("select x from y where ?", z)).

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Add
	try/catch around Load method to avoid crashing and provide debugging if
	there are issues loading a row into an object.

2008-02-20  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.MediaEngine/NullPlayerEngine.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/MessageBar.cs: Minor fixes for
	Windows

	* win-deps/Mono.Addins.dll.config: Added the .config for Mono.Addins

2008-02-20  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: If control is being held
	down when the source view activates a row, set the source to be the
	playback source, but do not play the first song in that source - this means
	that ctrl+double-clicking a source will 'queue' that source to play next

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Make sure the
	editor button works on all database sources

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Because
	the ctrl+click behavior is strange on this use of the tree view, override
	it and emulate the row activation

	* src/Libraries/Hyena.Gui/Hyena.Gui/GtkUtilities.cs: Support reading 
	modifier states from Gdk.EventButton as well; make the array params

2008-02-20  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Library/ImportSourceManager.cs:
	Fixed loading after Scott's commit, defer the loading of these import
	objects until they are actually needed to improve theoretical startup speed

	* src/Core/Banshee.Services/Banshee.Library/IImportSource.cs: Added the
	CanImport member that Scott used in IExtensionImportSource
	
	* src/Core/Banshee.Services/Banshee.Library/IExtensionImportSource.cs:
	Removed, no sense in having this interface

	* src/Core/Banshee.Services/Banshee.Library/HomeDirectoryImportSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Library.Gui/FileImportSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Library.Gui/FolderImportSource.cs:
	Implement CanImport

2008-02-19  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.Library/IExtensionImportSource.cs: Added
	  copyright name.

2008-02-19  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.Library/IExtensionImportSource.cs: Added
	the IExtensionImportSource interface which extends the IImportSource
	interface to include bool CanImport { get; }. This means that an
	extension-provided import source will only be added to the list if the
	import source can be imported. Such a check might entail determining
	whether Beagle is installed, or a particular file (other music player's
	db) is present, &c..

	* src/Core/Banshee.Services/Banshee.Library/ImportSourceManager.cs: Made to
	use the new IExtensionImportSource when adding extension sources to the
	list of availible import sources.

2008-02-19  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Apply the window default
	background to override the toolbar background instead of just a flat
	colored rectangle; should play nicer with some themes
	
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Apply a default background and override OnUnrealized and OnUnmapped

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	Remove WidgetFlags.Realized in OnUnrealized

2008-02-19  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Added the skip song feature back

2008-02-19  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/X11NotificationAreaBox.cs:
	Ported the show/hide TrackInfoPopup/tooltip when the mouse cursor is over
	the notification area icon

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/TrackInfoPopup.cs:
	Ported the TrackInfoPopup/tooltip to use the new TrackInfoDisplay

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Implemented proper managed resource disposing and set the current track
	on size allocation

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Set the title of the window
	to the track information

	* src/Core/Banshee.ThickClient/Banshee.Gui/BaseClientWindow.cs: Added
	a TitleChanged event and an UpdateTitle abstract method

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/GtkNotificationAreaBox.cs:
	Set the tooltip to the primary window's title, track it when it changes

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/INotificationAreaBox.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Added a proxy method for player engine events

	* src/Extensions/Banshee.NotificationArea/Notifications/Notification.cs:
	Do not crash when Widget is null

2008-02-19  Aaron Bockover  <abock@gnome.org>
	
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Ported notification bubbles. Hawt. 4 u snorp lol.

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngine.cs:
	Added constant VolumeDelta and SkipDelta public fields

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellAlbum.cs:
	Don't use the redundant string parameter version of ServiceManager.Get

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/GtkNotificationAreaBox.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/INotificationAreaBox.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/X11NotificationAreaBox.cs:
	Added a Widget property for the notifications to use
	
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/X11NotificationArea.cs:
	Ignore some other crappy warnings

2008-02-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlists.Formats/M3uPlaylistFormat.cs:
	* src/Core/Banshee.Services/Banshee.Playlists.Formats/PlsPlaylistFormat.cs:
	Uncomment out Save methods, and modify to work with TrackListModel.

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Work on
	ImportPlaylistAction - still not enabled/working.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Add
	ExportPlaylistAction handler.

	* src/Core/Banshee.ThickClient/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.Playlist.Gui/PlaylistExportDialog.cs:
	Ported from stable.

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Add
	Export playlist action to source context menu and edit menu.

2008-02-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: Fix bug in getting
	sources' custom views.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.mdp:
	* src/Extensions/Banshee.Lastfm/Makefile.am:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSourceContents.cs:
	New class, shows how sources can set custom views.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs: Set
	the custom view, allow activating.

2008-02-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Resources/Banshee.Lastfm.addin.xml:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.mdp:
	* src/Extensions/Banshee.Lastfm/Makefile.am: Move the addin.xml file up
	from Resources.

2008-02-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/ISourceContents.cs: New
	interface.

	* src/Clients/Nereid/Nereid/PlayerInterface.cs: When the ActiveSource is
	changed, call ISourceContents.ResetSource on the current SourceContents.
	Check the new source for a NereidSourceContents property and use it if it
	exists (allowing Sources to define custom views).  And finally call
	ISourceContents.SetSource on the new SourceContents.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/CompositeTrackListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CompositeTrackSourceContents.cs:
	Move to Banshee.Sources.Gui and implement ISourceContents.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/ObjectListSourceContents.cs:
	New class that wraps a ObjectListView in a ScrolledWindow and implements
	ISourceContents.

	* src/Clients/Nereid/Nereid/ViewContainer.cs: Defined Contents as a
	ISourceContents not a Widget.

	* src/Core/Banshee.ThickClient/Makefile.am: Updated.

2008-02-19  Aaron Bockover  <abock@gnome.org>

	This commit adds most of the functionality of the notification area
	back, and adds a new layer of cross platform support, so it should work
	on Windows with limited functionality since Windows doesn't support 
	what the raw X11 version can

	* src/Clients/Nereid/Nereid/PlayerInterface.cs:
	* src/Clients/Nereid/Nereid/PlayerWindowSchema.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/BaseClientWindow.cs: Moved
	some windowing/state functionality into BaseClientWindow; includes stuff
	like ToggleVisibility

	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkElementsService.cs: Expose
	PrimaryWindow as BaseClientWindow and added the PrimaryCloseHandler

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Major refactor of the notification area; get most of the basic interaction
	functionality working again (clicking the icon, toggling window visibility,
	popup menu; push the actual notification area down a level into the new
	INotificationAreaBox abstraction, implementing common events in the 
	service layer

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/INotificationAreaBox.cs:
	An interface to expose common functionality of the area boxes so that
	the service can implement common functionality once

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/X11NotificationAreaBox.cs:
	An advanced INotificationAreaBox implementation that supports more events
	on the notification area; this is functionally on par with Banshee stable
	but will only work on X11; when it fails, GtkNotificationAreaBox will work

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/GtkNotificationAreaBox.cs:
	An INotificationAreaBox implementation that wraps GtkStatusIcon; this is
	a very basic one since the GtkStatusApi is extremely limited due to 
	cross platform support; only the context menu and left click are supported,
	but it will work on Windows

2008-02-18  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	Removed duplicate using declaration

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	Added a property to get the LastfmActions

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	When the lastfm error is account related, add a message action to allow
	the user to enter their account details

	* src/Libraries/Hyena.Gui/Hyena.Widgets/MessageBar.cs: Fix a few bugs

	* src/Libraries/Lastfm/Lastfm/RadioConnection.cs: Lots of tabs->spaces

2008-02-18  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Disable the
	extension manager UI for now

2008-02-18  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.Lastfm/Resources/GlobalUI.xml: Hide the love/ban
	from the menu since it doesn't make sense yet

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Hide menu items that don't apply when the source is not library-based

2008-02-18  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmActions.cs:
	Implement love/hate actions

	* src/Extensions/Banshee.Lastfm/Resources/GlobalUI.xml: Add love/hate
	buttons to the header

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeIconFactory.cs: Allow
	new theme icons to be mapped into stock publicly

2008-02-18  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Lastfm/Lastfm/RadioConnection.cs: Make the network
	connection handshake run in a thread again

2008-02-18  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedMessageBar.cs:
	Set some default spacing

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListViewGraphics.cs: Add a version
	of DrawFrame that takes a color

	* src/Libraries/Hyena.Gui/Hyena.Widgets/MessageBar.cs: Draw our nice 
	rounded frame and set a good default padding

2008-02-18  Aaron Bockover  <abock@gnome.org>

	* src/Clients/Nereid/Nereid/ViewContainer.cs: Pack a ConnectedMessageBar

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceIconResolver.cs:
	Pulled the icon resolver out of SourceRowRenderer since sources may have
	multiple icons and it's useful outside of the renderer

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedMessageBar.cs:
	Works against a number of standardized Message.* properties that can be
	set on a source's PropertyStore; this allows sources to communicate status
	messages easily to the user

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	Use the new Message.* properties to communicate status messages to the user

	* src/Libraries/Hyena/Hyena.Data/PropertyStore.cs: Added RemoveStartingWith

	* src/Libraries/Hyena.Gui/Hyena.Gui.Theatrics/Actor.cs: Added a CanExpire
	property; reset the percentage to 0 when it reaches 1 and the actor is
	not allowed to expire

	* src/Libraries/Hyena.Gui/Hyena.Widgets/AnimatedImage.cs:
	* src/Libraries/Hyena.Gui/Hyena.Widgets/MessageBar.cs: Ported/moved from
	Banshee.Widgets; AnimatedImage works better and uses Hyena.Gui.Theatrics

	* src/Libraries/Hyena.Gui/Hyena.Widgets/RoundedFrame.cs: Send the
	expose events to children
	
	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/ErrorSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/LastfmSource.cs:
	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Updated to reflect the property name change from IconName to Icon.Name

2008-02-18  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Changed LoadAll method to return IEnumerable rather than List. Since the
	method is only ever iterated over, we can do away with the List object.

2008-02-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Avoid hitting the model/database when clicking where there is no row.

2008-02-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Add Genre columsn to CoreTracks, and support it as a query field, query
	order, and ListView column.

2008-02-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Change
	LastPlayed and DateAdded order names.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/Migrator.cs: Wrap the
	migration in a transaction, print error message if it fails.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistCore.cs:
	Only initialize if the migration was successful.

	* src/Libraries/Hyena.Gui/Hyena.Query.Gui/QueryLimitBox.cs: BansheeQuery's
	Orders array has nulls in it to indicate where separators would be nice -
	actually implement those in the ComboBox.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	Improve comment.

2008-02-16  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs:
	Only keep the last five played or skipped songs.

2008-02-16  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Lastfm/Test.cs:
	* src/Libraries/Lastfm.Gui/Test.cs: Add tests.

2008-02-16  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Lastfm/Lastfm/Connection.cs:
	* src/Libraries/Lastfm/Lastfm/RadioConnection.cs: Rename to
	RadioConnection.cs

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.Radio/StationSource.cs: Use
	RadioConnection.

2008-02-16  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/*: Grr, overwrote Aaron's last fixes with
	my svn mv, since I'd initiated it locally before svn up'ing his changes.

2008-02-16  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm: Move Banshee.Lastfm to
	Banshee.Lastfm.Radio in preparation for merging the Audioscrobbler and
	Recommendations plugins.

2008-02-16  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit adds support for most of the user-particular data feeds
	Audioscrobbler offers into Lastfm.dll, our Banshee-independent Lastfm
	library.

	* src/Libraries/Lastfm/Lastfm.Data/LastfmDataCollection.cs:
	* src/Libraries/Lastfm/Lastfm.Data/UserTopTracks.cs:
	* src/Libraries/Lastfm/Lastfm.Data/UserTopArtists.cs:
	* src/Libraries/Lastfm/Lastfm.Data/UserTopData.cs:
	* src/Libraries/Lastfm/Lastfm.Data/Profile.cs:
	* src/Libraries/Lastfm/Lastfm.Data/UserTopAlbums.cs: Removed files.

	* src/Libraries/Lastfm/Test.cs:
	* src/Libraries/Lastfm.Gui/Test.cs: Moved test to Lastfm.Gui.

	* src/Libraries/Lastfm/Lastfm.Data/DataCore.cs: New static class for doing
	initialization and settings.

	* src/Libraries/Lastfm/Lastfm.Data/DataEntryCollection.cs: New class that
	wraps a XmlNodeList.

	* src/Libraries/Lastfm/Makefile.am: Updates, add make test rule.

	* src/Libraries/Lastfm/Lastfm.Data/DataEntry.cs: Move all DataEntry
	subclasses here.  There are too many to have in separate classes (and the
	header/code ratio is really high).

	* src/Libraries/Lastfm/Lastfm.Data/UserData.cs: Wrap almost all of the
	Last.fm data feeds that pertain to a particular user.

	* src/Libraries/Lastfm/Lastfm.Data/LastfmData.cs: Update for DataCore
	changes, and instantiate and wrap a DataEntryCollection.

2008-02-16  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Set RowSensitivePropertyName to 'CanPlay'

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs:
	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Added a RowSensitivePropertyName property, defaulting to 'Sensitive'; 
	objects in the model will be queried for this property to indicate whether
	the object is sensitive (enabled) or not; render the row's sensitivity

	* src/Libraries/Lastfm/Lastfm/Connection.cs: Clear the password if invalid

2008-02-16  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Lastfm/Lastfm/Account.cs: Renamed Username to UserName

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/LastfmActions.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/LastfmSource.cs:
	* src/Libraries/Lastfm.Gui/Lastfm.Gui/AccountLoginForm.cs:
	* src/Libraries/Lastfm/Lastfm/Connection.cs: Use the UserName property

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/StationSource.cs: Store
	the MD5 hashed last.fm password

	* src/Libraries/Hyena/Hyena/CryptoUtil.cs: Moved some MD5 methods from
	Last.fm to here

	* tests/Hyena/CryptoUtilTests.cs: Tests for CryptoUtil

2008-02-16  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Fixed bug with the new NullPlayerEngine fallback loading

2008-02-16  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Base/PlatformHacks.cs: Only run these
	hacks if we are on Unix, and don't crash even if we are and they fail
	
	* src/Core/Banshee.Services/Banshee.MediaEngine/NullPlayerEngine.cs:
	A fake engine that does nothing, used to allow Banshee to at least
	start up on Windows without libbanshee

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Load the NullPlayerEngine if no real engines could be loaded
	
	* src/Core/Banshee.Services/Banshee.ServiceStack/DBusServiceManager.cs:
	Disable DBus support if BusG.Init fails

	* src/Libraries/Hyena.Gui/Hyena.Data.Gui/CairoHelper.cs: Do not P/Invoke
	to get the cairo context, instead use Gdk.CairoHelper

2008-02-16  Aaron Bockover  <abock@gnome.org>

	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Added
	a necessary null check and return default (T) for the generic Query 
	method that Scott introduced - fixes the bug everyone has been complaining
	about

2008-02-16  Aaron Bockover  <abock@gnome.org>

	Moved Nereid from Core/ to Clients/; fixed up a lot of MonoDevelop stuff

2008-02-15  Aaron Bockover  <aaron@abock.org>

	* build/build.environment.mk: Link against ICSharpCode.SharpZipLib

	* configure.ac: Check for Mono.Data.Sqlite instead of Mono.Data.SqliteClient

2008-02-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Lastfm/Lastfm.Data/UserTopArtists.cs:
	* src/Libraries/Lastfm/Lastfm.Data/UserTopData.cs:
	* src/Libraries/Lastfm/Lastfm.Data/Profile.cs:
	* src/Libraries/Lastfm/Lastfm.Data/UserTopAlbums.cs:
	* src/Libraries/Lastfm/Lastfm.Data/UserData.cs:
	* src/Libraries/Lastfm/Lastfm.Data/UserTopTracks.cs: Remove unnecessary
	usings.

2008-02-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Lastfm/Lastfm/Connection.cs: Fix warnings.

	* src/Libraries/Lastfm/Makefile.am:
	* src/Libraries/Lastfm/Lastfm.Data: Add new namespace.

	* src/Libraries/Lastfm/Lastfm.Data/DataEntry.cs:
	* src/Libraries/Lastfm/Lastfm.Data/UserTopArtists.cs:
	* src/Libraries/Lastfm/Lastfm.Data/UserTopData.cs:
	* src/Libraries/Lastfm/Lastfm.Data/LastfmDataCollection.cs:
	* src/Libraries/Lastfm/Lastfm.Data/LastfmData.cs:
	* src/Libraries/Lastfm/Lastfm.Data/Profile.cs:
	* src/Libraries/Lastfm/Lastfm.Data/UserTopAlbums.cs:
	* src/Libraries/Lastfm/Lastfm.Data/UserData.cs:
	* src/Libraries/Lastfm/Lastfm.Data/UserTopTracks.cs: New files that expose
	Last.fm metadata.

2008-02-14  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/LastfmActions.cs:
	Handle SourcePropertiesAction for LastfmSource and StationSources.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/LastfmSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/StationSource.cs: Set
	HasProperties = true so Edit Properties action shows up.

2008-02-14  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteUtils.cs: Forgot to svn add.

2008-02-14  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/StationSource.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs:
	* src/Libraries/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs:
	* src/Libraries/Hyena/Hyena.mdp:
	* src/Libraries/Hyena/Makefile.am: The last commit reverted some of
	scottp's changes due to svn mv'ing files that weren't up to date.

2008-02-14  Gabriel Burt  <gabriel.burt@gmail.com>

	The Last.fm extension can actually play music now.  Still need to port the
	status bar.  Also, moved Hyena and Hyena.Gui out of Core and into Libraries.

	* build/build.environment.mk: Libraries/Lastfm depends on Libraries/Hyena
	for logging.

	* configure.ac:
	* src/Banshee.mds:
	* src/Core/Banshee.Core/Makefile.am:
	* src/Core/Core.mds: Reflect new organization.

	* src/Libraries/Hyena/Makefile.am:
	* src/Libraries/Hyena/Hyena.mdp:
	* src/Core/Banshee.Core/Banshee.Core.mdp:
	* src/Core/Banshee.Core/Banshee.Base/Log.cs:
	* src/Libraries/Hyena/Hyena/Log.cs: Move Log to Hyena, replace
	ApplicationContext dep with Debugging property.

	* src/Core/Banshee.Core/Banshee.Collection/UnknownTrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/SampleTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngine.cs:
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Add/use properties
	for all attributes - the flags are way to painful an API.

	* src/Core/Banshee.Services/Banshee.Services.mdp:

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Fix whitespace.  If
	the defining assembly for a source is not Banshee.Services, record it for
	use when retrieving resources.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs:
	* src/Extensions/Banshee.MultimediaKeys/Banshee.MultimediaKeys/MultimediaKeysService.cs:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	* src/Backends/Banshee.Unix/Banshee.IO.Unix/Directory.cs:
	* src/Core/Banshee.Core/Banshee.Configuration/ConfigurationClient.cs:
	* src/Core/Banshee.Core/Banshee.IO/Provider.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistCore.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	* src/Core/Banshee.Services/Banshee.Metadata.MusicBrainz/MusicBrainzQueryJob.cs:
	* src/Core/Banshee.Services/Banshee.Metadata.Rhapsody/RhapsodyQueryJob.cs:
	* src/Core/Banshee.Services/Banshee.Networking/NetworkDetect.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/DBusServiceManager.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	* src/Core/Banshee.Services/Banshee.Streaming/RadioTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Web/Browser.cs: Add using Hyena.

	* src/Core/Banshee.Core/Banshee.Base/ApplicationContext.cs: Add static
	ctor that sets Hyena.Log.Debugging.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkManager.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/AboutDialog.cs:

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/GladeDialog.cs: Add
	ctor from stable.

	* src/Core/Banshee.ThickClient/Banshee.Gui/IconThemeUtils.cs: Support
	loading resources from arbitrary assemblies (eg from extensions).

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Specify the Source's defining assembly as the assembly to load the icon
	resource from.

	* src/Core/Banshee.ThickClient/Banshee.ThickClient.addin.xml:

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Add
	RefreshSmartPlaylist action to the Edit menu, and add a BelowAddToPlaylist
	placeholder in the track context menu.

	* src/Core/Makefile.am:
	* src/Core/Hyena.Gui/*:
	* src/Core/Hyena/*: Move Hyena* to src/Libraries

	* src/Libraries/Makefile.am:
	* src/Libraries/Libraries.mds: Add Hyena and Hyena.Gui.

	* src/Extensions/Extensions.mds: Add Banshee.Lastfm.
	* src/Extensions/Makefile.am: Add Banshee.Lastfm to the build.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm.mdp: Reflect new/removed
	files.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/LastFMSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/LastfmSource.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/LastFMTrackInfo.cs:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/LastfmTrackInfo.cs:
	* src/Extensions/Banshee.Lastfm/Resources/Banshee.LastFM.addin.xml:
	* src/Extensions/Banshee.Lastfm/Resources/Banshee.Lastfm.addin.xml:
	Lower case fm.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/LastfmActions.cs:

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/LastfmTrackListModel.cs:
	New List<TrackInfo> based model.

	* src/Extensions/Banshee.Lastfm/Resources/Actions.xml:
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/Plugin.cs: Removed.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/StationEditor.cs: 
	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/StationSource.cs: Update
	headers, fix creation/saving, use new model.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/StationType.cs: Update
	header.

	* src/Extensions/Banshee.Lastfm/Makefile.am:
	* src/Extensions/Banshee.Lastfm/Resources/ActiveSourceUI.xml:
	* src/Extensions/Banshee.Lastfm/Resources/GlobalUI.xml: New action
	resources.

	* src/Libraries/Hyena/Hyena.Data/IFilterable.cs:
	* src/Libraries/Hyena/Hyena.Data/ISortable.cs: Whitespace.

	* src/Libraries/Hyena/Hyena.Data/PropertyStore.cs: Whitespace, reorder
	some logic.

	* src/Libraries/Lastfm.Gui/Lastfm.Gui.mdp:
	* src/Libraries/Lastfm/Lastfm.mdp:
	* src/Libraries/Mono.Media/Mono.Media.mdp: New mdp files.

	* src/Libraries/Lastfm/Lastfm/Account.cs: Remove abstract class modifier.

	* src/Libraries/Lastfm/Lastfm/Connection.cs: Use Hyena.Log for logging msgs.

	* src/Libraries/Mono.Media/Makefile.am:
	* src/Libraries/Mono.Media/Playlists.Xspf/*:
	* src/Libraries/Mono.Media/Media.Playlists.Xspf/*: Change namespace to
	Media.Playlists.Xspf.  Merge fix for not-quite-compliant Last.fm Playlist
	files from stable.

2008-02-13  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Made to use new
	generic Query method and added GetProperty, SetProperty and
	ClearProperty. These methods allow you to store/retrieve properties from
	the database that are not defined in the type T. Suppose you write an
	extension that needs to keep persistant data on a per-track basis for
	every track in the library. Rather than define it's own table and join
	it with CoreTracks, the extension could call
	LibraryTrackInfo.Provider.GetProperty and SetProperty. This will be used
	by the iTunes importer at least.

	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs: Added DbColumn class
	for lightweight column descrption, made to use new SqliteUtils class for
	simple operations, and protected some constructors.

	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteUtils.cs: Common sqlite-related
	functions.

	* src/Core/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Replaced
	QueryInt32 and QueryString with a new generic Query<T> method. Added
	ColumnExists(string table_name, string column_name) method. Also
	reworked the way GetSchema works.

	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs,
	* src/Core/Banshee.Services/Banshee.Configuration/DatabaseConfigurationClient.cs,
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/Migrator.cs: Made to use
	new generic Query method.

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	  Took advantage of the fact that DbColumn-bound members can now be
	  DateTime or TimeSpan.

2008-02-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Remove
	debugging WriteLines.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Add CanRefresh property that is true if ordered by random.

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Add
	RefreshSmartPlaylist action to the source toolbar and context menu.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Fix
	whitespace, add and handle RefreshSmartPlaylist action.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/Plugin.cs: Get rid of old
	PluginModuleEntry.

2008-02-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/Lastfm.Gui/Makefile.am: Forgot to commit this.

2008-02-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* build/build.environment.mk: Add System.Web to Lastfm deps.

	* src/Core/Banshee.Services/Banshee.Streaming/RadioTrackInfo.cs: Fix
	broken build; Xspf is now in Mono.Media.

	* src/Libraries/Lastfm/Last.FM.mdp: Rename.

	* src/Libraries/Lastfm/Lastfm/Account.cs: Add Updated event.

	* src/Extensions/Banshee.Lastfm/Banshee.Lastfm/Connection.cs:
	* src/Libraries/Lastfm/Makefile.am:
	* src/Libraries/Lastfm/Lastfm/Connection.cs: Move Connection class out of
	extension, pull out Banshee dependencies.

	* src/Libraries/Mono.Media/Playlists.Xspf/LinkEntry.cs:
	* src/Libraries/Mono.Media/Playlists.Xspf/MetaEntry.cs:
	* src/Libraries/Mono.Media/Playlists.Xspf/Playlist.cs:
	* src/Libraries/Mono.Media/Playlists.Xspf/Track.cs:
	* src/Libraries/Mono.Media/Playlists.Xspf/W3CDateTime.cs:
	* src/Libraries/Mono.Media/Playlists.Xspf/XmlUtil.cs:
	* src/Libraries/Mono.Media/Playlists.Xspf/XspfBaseObject.cs: Fix headers
	and namespaces.

2008-02-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* build/build.environment.mk:
	* configure.ac:
	* src/Libraries/Makefile.am:
	* src/Libraries/Mono.Media/Makefile.am: Create Mono.Media library.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Playlists.Formats.Xspf/*: Move to
	Mono.Media, so it can be used by Lastfm library.

2008-02-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* configure.ac:
	* src/Extensions/Banshee.LastFM/*: Rename to Banshee.Lastfm.

2008-02-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Libraries/*: Update svn:ignore

2008-02-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Makefile.am:
	* src/Libraries/Makefile.am: New directory for what was Extras in stable.

	* build/build.environment.mk:
	* configure.ac: 
	* src/Libraries/Lastfm/*:
	* src/Libraries/Lastfm.Gui/*: Bring Last.FM library over from stable, and
	rip out the Gnome.Keyring dependency.

	* src/Extensions/Banshee.LastFM/*: Bring Last.FM plugin over from stable.
	Not part of the default build yet; lots of porting still to do.

2008-02-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.LastFM/*: Copy from stable.

2008-02-11  Aaron Bockover  <abock@gnome.org>

	* src/Core/Nereid/Nereid/Client.cs: Load custom gtkrc files from either
	the user config (~/.config/banshee/gtkrc) or any custom gtkrc shipped
	with the application

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Get rid of some whitespace

2008-02-11  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Draw a bottom border on the dragging column

2008-02-11  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/CompositeTrackListView.cs:
	Major fix that reparents the artist/album/track views when switching
	browser positions instead of destroying them and rebuilding; fixes a
	slew of issues with events when switching positions, is much cleaner
	overall, and probably has some positive (minor) memory implications. 
	Sweet.

2008-02-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Hyena.Gui/Hyena.Query.Gui/QueryTermsBox.cs: Fix warning.

2008-02-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.AudioProfiles.Gui/ProfileComboBoxConfigurable.cs:
	* src/Core/Banshee.ThickClient/Banshee.AudioProfiles.Gui/ProfileConfigurationDialog.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellAlbum.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/CompositeTrackListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerWindow.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/PlaylistMenuItem.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkElementsService.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/ViewActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Library.Gui/ImportDialog.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	* src/Core/Banshee.ThickClient/Banshee.ThickClient.mdp:
	* src/Core/Banshee.ThickClient/Makefile.am: More warnings fixed

2008-02-10  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit greatly improves the smart playlist editor, both in terms of
	coming up to par with what we have in stable, and in terms of doing that in
	a clean way.  You'll need to blow away your current trunk db to have your
	smart playlists remigrated.  Limits to smart playlists now are functional.
	You can create and edit smart playlits.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Move GetSort method to BansheeQuery to provide consistent sorting for
	smart playlists too.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Make LimitCriterion a TEXT field and get rid of OrderDir.  Database change,
	no migration, so run src/nuke-core-tables.

	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: Add public
	static QueryOrder and QueryLimit arrays that define the types of sorting
	and limiting smart playlists can handle.  Break QueryFields into separate
	public static variables in addition to providing FieldSet.  Within static
	constructor, translate Hyena query operators.

	* src/Core/Banshee.Services/Banshee.Query/SmartPlaylistQueryValue.cs:
	Inherit from PlaylistQueryValue.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/Migrator.cs: Get rid of
	OrderDir, migrate old smart playlists to use new QueryLimit/Order classes.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Add QueryOrder, Limit, and LimitValue properties that, if all set, define
	how a smart playlist is limited.  Move list of Orders to BansheeQuery.

	* src/Core/Banshee.ThickClient/Banshee.Query.Gui/BansheeQueryBox.cs: Add
	SmartPlaylistQueryValueEntry mapping, and instantiate base class
	(QueryBox) with BansheeQuery's FieldSet, Orders, and Limits.

	* src/Core/Hyena.Gui/Hyena.Query.Gui/StringQueryValueEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Query.Gui/PlaylistQueryValueEntry.cs:
	Specify a fixed widths for value entries.

	* src/Core/Banshee.ThickClient/Banshee.Query.Gui/SmartPlaylistQueryValueEntry.cs:
	Exact same thing as PlaylistQueryValueEntry - should probably be merged or
	factored out.

	* src/Core/Banshee.ThickClient/Banshee.SmartPlaylist.Gui/Editor.cs: Update
	to work with QueryLimit/Order classes and save/restore the limit/order.
	Update the predefined playlists, though I think they're still broken atm.

	* src/Core/Banshee.ThickClient/Makefile.am: Add new class.

	* src/Core/Hyena.Gui/Hyena.Query.Gui/DateQueryValueEntry.cs: Make sure
	query value and gui are in sync, and set a default combo box value.

	* src/Core/Hyena.Gui/Hyena.Query.Gui/FileSizeQueryValueEntry.cs: Similar
	to date value entry, provide a dropdown with MB, GB, etc.

	* src/Core/Banshee.ThickClient/Banshee.Query.Gui/RatingQueryValueEntry.cs:
	* src/Core/Hyena.Gui/Hyena.Query.Gui/IntegerQueryValueEntry.cs: Make sure
	the query value is in sync with the gui.

	* src/Core/Hyena.Gui/Hyena.Query.Gui/QueryBox.cs: Contains a QueryTermsBox
	and a QueryLimitBox.  Provides the main GUI interface that the smart
	playlist Editor deals with.

	* src/Core/Hyena.Gui/Hyena.Query.Gui/QueryLimitBox.cs: New class, a HBox
	that contains widgetry to limit a smart playlist.

	* src/Core/Hyena.Gui/Hyena.Query.Gui/QueryTermBox.cs: Instead of defining
	this as a HBox with field, op, value across it, make QueryTermBox not
	actually a widet, and put its components into their respective VBoxes so
	that each column is always the same width.

	* src/Core/Hyena.Gui/Hyena.Query.Gui/QueryTermsBox.cs: New file, a HBox
	containing VBoxes for field, op, value, and button columns filled by the
	components of one or more QueryTermBoxes.

	* src/Core/Hyena.Gui/Hyena.Query.Gui/QueryValueEntry.cs: Set spacing,
	define default width for entries, and add FileSize entry mapping.

	* src/Core/Hyena.Gui/Makefile.am: Add new classes.

	* src/Core/Hyena/Hyena.Query/DateQueryValue.cs: Only offer GreaterThan and
	LessThan operators, for now at least.

	* src/Core/Hyena/Hyena.Query/FileSizeQueryValue.cs: Define SetValue
	method.

	* src/Core/Hyena/Hyena.Query/QueryLimit.cs: New class used to create
	named, labelized limit criteria (row based and not).  Smart playlists use
	this to LIMIT their membership if needed.  Current, non row-based Limits
	aren't implemented.

	* src/Core/Hyena/Hyena.Query/QueryOrder.cs: New class used to create a
	list of named, labelized orderings.  Used in Banshee to give a list of
	orderings ("selected by") when you limit a smart playlist.

	* src/Core/Hyena/Hyena.Query/QueryValue.cs: Add ToString override.

	* src/Core/Hyena/Makefile.am: New files.

2008-02-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/PersistentColumnController.cs:
	Preserve the hard-coded order when loading the column orders and no
	order could be loaded from configuration
	
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Make the column titles translatable

2008-02-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ColumnController.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Fixed some really bad compiler warnings and made more progress on column
	show/hide support through the columns menu; visibility now persists

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ColumnHeaderCellText.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ObjectListView.cs:
	* src/Core/Hyena.Gui/Hyena.Query.Gui/QueryTermBox.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs:
	* src/Core/Hyena/Hyena.Query/XmlQueryParser.cs:
	* src/Core/Hyena/Hyena.SExpEngine/ListFunctionSet.cs: Cleaned up
	more compiler warnings

2008-02-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistCore.cs:
	Fixed/disabled more compiler warnings.

2008-02-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Database/BansheeModelProvider.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	* src/Core/Banshee.Services/Banshee.Playlists.Formats.Xspf/Playlist.cs:
	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs:
	Fixed more compiler warnings

2008-02-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	Fix some compiler warnings.

2008-02-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.AudioProfiles/ProfileConfiguration.cs:
	* src/Core/Banshee.Services/Banshee.AudioProfiles/ProfileManager.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/ICanonicalPlaybackController.cs:
	Cleaned up a lot of compiler warnings

2008-02-10  Alan McGovern <alan.mcgovern@gmail.com> 

	* src/Dap/Banshee.DapCore/Banshee.DapCore/AsyncDevice.cs:
	Fixed build issue
	
2008-02-10  Alan McGovern <alan.mcgovern@gmail.com> 

	* src/Dap/Banshee.DapCore/Banshee.DapCore/AsyncDevice.cs:
	Cosmetic changes and fixed a typo in UploadTrack
	
2008-02-10  Alan McGovern <alan.mcgovern@gmail.com> 

	* src/Dap/Banshee.DapCore/Makefile.am
	* src/Dap/Banshee.DapCore/Banshee.DapCore/AsyncDevice.cs:
	Added wrapper to make the calls to devices asynchronous
	  
2008-02-10  Alan McGovern <alan.mcgovern@gmail.com> 

	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/Device.cs:
	Commented out my changes because i can't make em compile ;)
	 
2008-02-10  Alan McGovern <alan.mcgovern@gmail.com> 

	* src/Dap/Banshee.DapCore/Banshee.DapCore/IDevice.cs
	* src/Dap/Banshee.DapCore/Banshee.DapCore/AbstractDevice.cs
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/Device.cs:
	Updated the interface, implemented the abstract class and made
	MassStorage inherit from AbstractDevice.
	  
2008-02-10  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs: Assures
	that all rows in view are rendered.

2008-02-09  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Do not
	show the 'sort children' menu item if the source does not have children
	(thanks Scott)

2008-02-09  Aaron Bockover  <abock@gnome.org>

	This commit adds initial support to load/save the column settings in 
	the track list; it is not yet complete, also it adds a popup menu for
	the columns, but it's not done yet and doesn't work

	* src/Core/Hyena/Hyena/StringUtil.cs:
	* src/Backends/Banshee.Gnome/Banshee.Gnome/GConfConfigurationClient.cs:
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Base/StringUtil.cs: Moved StringUtil
	into Hyena

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/PersistentColumnController.cs:
	A wrapper around ColumnController that loads and saves through 
	Banshee.Configuration

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Use PersistentColumnController to load and save settings

	* src/Core/Hyena.Gui/Hyena.Data.Gui/Column.cs: Added an Id property

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ColumnController.cs: Added IndexOf
	and EnableColumnMenu

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs: Added
	a popup menu for selecting which columns are visible

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Fixed reordering logic to work with columns which aren't visible 
	and added right click on the header

2008-02-10  Ruben Vermeersch  <ruben@savanne.be>

	* src/Dap/Banshee.Dap.MassStorage: Added.
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage: Added.
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage.addin.xml: Added.
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage.mdp: Added.
	* src/Dap/Banshee.Dap.MassStorage/Banshee.Dap.MassStorage/Device.cs: Added.
	* src/Dap/Banshee.Dap.MassStorage/Makefile.am: Added.

	Added a basic Banshee.Dap.MassStorage extension which will be the first
	device class to be ported, used to test the stack.

	* src/Dap/Banshee.DapCore/Banshee.DapCore/AbstractDevice.cs: Added.

	* src/Dap/Banshee.DapCore/Banshee.DapCore/DapCore.cs: Store the extension
	nodes, not the types themselves.

2008-02-09  Ruben Vermeersch  <ruben@savanne.be>

	Moved the Banshee.DapCore extension out of src/Extensions/ and into
	src/Dap/. This folder will house all media device addins.

	* configure.ac: 
	* src/Dap: Added.
	* src/Dap/Banshee.DapCore: Copied from src/Extensions/Banshee.DapCore.
	* src/Dap/Banshee.DapCore/Banshee.DapCore/DeviceClassNode.cs: Removed.
	* src/Dap/Makefile.am: Added.
	* src/Extensions/Banshee.DapCore: Removed.
	* src/Extensions/Banshee.DapCore/Banshee.DapCore: Removed.
	* src/Extensions/Banshee.DapCore/Banshee.DapCore.mdp: Removed.
	* src/Extensions/Banshee.DapCore/Banshee.DapCore/DapCore.cs: Removed.
	* src/Extensions/Banshee.DapCore/Banshee.DapCore/HalCore.cs: Removed.
	* src/Extensions/Banshee.DapCore/Banshee.DapCore/IDevice.cs: Removed.
	* src/Extensions/Banshee.DapCore/Makefile.am: Removed.
	* src/Extensions/Banshee.DapCore/Resources: Removed.
	* src/Extensions/Banshee.DapCore/Resources/Banshee.DapCore.addin.xml: Removed.
	* src/Extensions/Banshee.DapCore/hal-sharp: Removed.
	* src/Extensions/Banshee.DapCore/hal-sharp/Device.cs: Removed.
	* src/Extensions/Banshee.DapCore/hal-sharp/Manager.cs: Removed.
	* src/Extensions/Banshee.DapCore/hal-sharp/Volume.cs: Removed.
	* src/Extensions/Makefile.am:
	* src/Makefile.am:

2008-02-09  Ruben Vermeersch  <ruben@savanne.be>

	* src/Extensions/Banshee.DapCore/Banshee.DapCore/DapCore.cs: Get the type
	from TypeExtensionNode. Use Aaron's trick to get the class name from the
	node.

	* src/Extensions/Banshee.DapCore/Banshee.DapCore/DeviceClassNode.cs: Removed.

	* src/Extensions/Banshee.DapCore/Banshee.DapCore/IDevice.cs: Fix
	namespace issue.

	* src/Extensions/Banshee.DapCore/Resources/Banshee.DapCore.addin.xml: Back
	to TypeExtensionNode.

2008-02-09  Ruben Vermeersch  <ruben@savanne.be>

	* src/Extensions/Banshee.DapCore/Banshee.DapCore/DapCore.cs: Start porting
	the device initialization code.

	* src/Extensions/Banshee.DapCore/Banshee.DapCore/DeviceClassNode.cs:
	Added. Provides an extension node wich offers types, not instances (this
	could be useful outside of this extension as well).

	* src/Extensions/Banshee.DapCore/Banshee.DapCore/HalCore.cs: Don't make
	manager static (not needed).

	* src/Extensions/Banshee.DapCore/Banshee.DapCore/IDeviceClass.cs: Will
	soon be renamed to IDevice.

	* src/Extensions/Banshee.DapCore/Makefile.am: Add DeviceClassNode.

	* src/Extensions/Banshee.DapCore/Resources/Banshee.DapCore.addin.xml: Use
	DeviceClassNode instead of TypeExtensionNode.

2008-02-09  Alan McGovern <alan.mcgovern@gmail.com> 

	* src/Extensions/Banshee.DapCore/IDeviceClass.cs:
	Updated the interface

2008-02-09  Alan McGovern <alan.mcgovern@gmail.com> 

	* Banshee.DapCore/IDeviceClass.cs: Slight refactor

2008-02-09  Alan McGovern <alan.mcgovern@gmail.com> 

	* Banshee.DapCore/IDeviceClass.cs: Initial ideas for the interface

2008-02-09  Ruben Vermeersch  <ruben@savanne.be>

	* src/Extensions/Banshee.DapCore/Resources/Banshee.DapCore.addin.xml:
	Register a new Extension point /Banshee/Dap/DeviceClass. This will be used
	to register new DAP plugins. Each plugin provides a family of devices
	(e.g. iPod or MTP).

	* src/Extensions/Banshee.DapCore/Banshee.DapCore/DapCore.cs: Handle the
	new extension point. Still need to hook up the initialization code.

	* src/Extensions/Banshee.DapCore/Banshee.DapCore/IDeviceClass.cs: Added.
	Currently empty.

2008-02-09  Ruben Vermeersch  <ruben@savanne.be>

	Add the groundwork for the DapCore plugin. Currently does... nothing.
	Contains a copy of hal-sharp until we have a properly abstracted HAL.

	* build/build.environment.mk: Add the dependencies for DapCore.

	* configure.ac: Generate build files for the new addin.

	* src/Extensions/Banshee.DapCore: Added.
	* src/Extensions/Banshee.DapCore/Banshee.DapCore: Added.
	* src/Extensions/Banshee.DapCore/Banshee.DapCore.mdp: Added.
	* src/Extensions/Banshee.DapCore/Banshee.DapCore/DapCore.cs: Added.
	* src/Extensions/Banshee.DapCore/Banshee.DapCore/HalCore.cs: Added.
	* src/Extensions/Banshee.DapCore/Makefile.am: Added.
	* src/Extensions/Banshee.DapCore/Resources: Added.
	* src/Extensions/Banshee.DapCore/Resources/Banshee.DapCore.addin.xml: Added.
	* src/Extensions/Banshee.DapCore/hal-sharp: Added.
	* src/Extensions/Banshee.DapCore/hal-sharp/Device.cs: Added.
	* src/Extensions/Banshee.DapCore/hal-sharp/Manager.cs: Added.
	* src/Extensions/Banshee.DapCore/hal-sharp/Volume.cs: Added.

	* src/Extensions/Makefile.am: Add Banshee.DapCore.

2008-02-09  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Finished actual column reordering

2008-02-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Fixed double clicking again

2008-02-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	Implemented most of what is required for column reordering, but not
	100% complete yet

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListViewGraphics.cs: DrawColumnHighlight
	now can have an override color
	
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ColumnController.cs: Added Reorder

2008-02-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Fixes to mouse/button behavior: context menu works on multiple selection
	again and a single row can be selected (clearing all other rows) inside
	of a multi-row selection

2008-02-08  Aaron Bockover  <abock@gnome.org>

	This commit adds child source sorting on the library and gets rid of any
	remaining gobject/gtk warnings and other ugly debug spew

	* build/build.rules.mk: Copy .config files to the output directory if
	they exist in the source directory

	* configure.ac: Do not generate the .config for Banshee.Widgets

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	If Volume is changed before the engine is initialized then store it
	temporarily and perform the actual set after initialization

	* src/Core/Banshee.Services/Banshee.ServiceStack/DBusServiceManager.cs:
	Use Log to print messages instead of Console.WriteLine

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Added child source
	sorting back

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Connect the UI and actions to allow child source sorting

	* src/Core/Banshee.Widgets/Banshee.Widgets.dll.config.in: Remove obsolete
	maps - the only one we need (and it's not even required) is for 
	libgobject inside of the bacon volume widget

2008-02-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena.Gui/Hyena.Widgets/RoundedFrame.cs: Make GtkScrolledWindow
	happy by overriding OnSetScrollAdjustments to avoid g_warning spewage

2008-02-08  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs: Got rid
	of extra semicolon;

2008-02-07  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	Support single row selection toggling when CTRL+Space is pressed

2008-02-07  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs: 
	Draw the focus row again, make it really sexy by merging it into the
	selection if it borders one

	* src/Core/Hyena.Gui/Hyena.Gui/CairoExtensions.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListViewGraphics.cs: Support drawing
	selections/rounded rectangles that fall through to others

2008-02-07  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Header.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Interaction.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Model.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Rendering.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView/ListView_Windowing.cs:
	Split ListView.cs into several partial class implementations so
	maintaining and reading the code is a lot easier since this is a huge
	class; lots of cosmetic cleanup

	* src/Core/Hyena.Gui/Hyena.Data.Gui/RowActivatedHandler.cs: Moved to
	its own file from ListView.cs

2008-02-07  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Implement OnDragSourceSet; the ListView will call this when it's okay
	for drag sources to be enabled

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Added a virtual
	OnDragSourceSet method that the view will call when drag and drop from
	the widget is allowed (i.e. when not playing with the header); remove
	drag sources when the header is pressed, add them back when released

2008-02-07  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Only add
	the separator to the add to playlist menu if there are actually playlists
	that can be added to; remove the playlist map and pass the source through
	the .Data property of the object

2008-02-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.ServiceStack/DBusServiceManager.cs:
	Comment out super-verbose logging.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/AlbumListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtistListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Sweet little
	patch that disconnects the [shift]ctrl-a keybindings while focused in the
	Artist and Album views.

2008-02-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Fix bugs with
	source actions being out of sync with what's highlighted/active.  Open
	Editor for smart playlists when OnSourceProperties.

	* src/Core/Banshee.ThickClient/Banshee.SmartPlaylist.Gui/Editor.cs: If
	given a smart playlist, set the Hyena.Query.Gui condition.

	* src/Core/Hyena.Gui/Hyena.Query.Gui/QueryTermBox.cs: 
	* src/Core/Hyena.Gui/Hyena.Query.Gui/QueryBox.cs: Add a QueryNode setter
	so can initialize with an existing query/smart playlist.

2008-02-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Fix bug that prevented using
	keybindings while in the search entry.

2008-02-07  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena.Gui/Hyena.Gui.Dialogs/ExceptionDialog.cs: Use 
	AppendFormat instead of allocating a bunch of separate strings; added
	a platform check to skip collecting kernel, distro, and LSB information
	if the platform is not Unix; added some exception handling when gathering
	this information just in case

2008-02-07  Aaron Bockover  <abock@gnome.org>

	This commit adds Mono.Unix IO support back, inside the new Unix/POSIX
	extension; yay cross-platform

	* src/Backends/Banshee.Unix/Banshee.IO.Unix: Added the Unix IO backend

	* src/Backends/Banshee.Unix/Banshee.Unix.addin.xml: Extension file for
	the unix backend
	
	* src/Core/Banshee.Core/Banshee.IO/UnixIOProvider.cs: Removed

	* src/Core/Banshee.Services/Banshee.Services.addin.xml: Removed extension
	points that belonged in core, not services
	
	* build/build.environment.mk:
	* build/build.rules.mk:
	* configure.ac: Build foo

2008-02-07  Aaron Bockover  <abock@gnome.org>

	This commit adds GConf support back, inside the new GNOME platform 
	extension; yay cross-platform

	* build/build.environment.mk:
	* build/m4/banshee/gtk-sharp.m4: Added build foo for gconf and the 
	gnome platform extension

	* src/Backends/Banshee.Gnome/Banshee.Gnome.addin.xml: Implement the
	configuration client extension

	* src/Backends/Banshee.Gnome/Banshee.Gnome/GConfConfigurationClient.cs:
	A little cleanup

	* src/Backends/Banshee.Gnome/Banshee.Gnome/GnomeVfs.cs: Removed since
	it's never really worked well and we'll be adding GIO support soon anyway

	* src/Core/Banshee.Core/Banshee.Configuration/ConfigurationClient.cs:
	Whitespace and header fixes, use Mono.Addins to load an configuration
	client extension, falling back to the built-in XML client
	
	* src/Core/Banshee.Core/Banshee.Configuration/IConfigurationClient.cs:
	* src/Core/Banshee.Core/Banshee.Configuration/SchemaEntry.cs:
	* src/Core/Banshee.Core/Banshee.Configuration/XmlConfigurationClient.cs:
	Whitespace and header fixes, just cosmetics

	* src/Core/Banshee.Core/Banshee.Core.addin.xml: Core now has two extension
	points (ConfigurationClient and IOProvider)

	* src/Core/Banshee.Core/Banshee.IO/Provider.cs: Use Mono.Addins to load
	the preferred IO provider extension, falling back to the internal
	System.IO provider

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Initialize the configuration layer before booting services

2008-02-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Patch from Alex Hixon adding
	the track properties button to the bottom bar.  Tweaked to be not quite as
	tall.

2008-02-06  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit fixes the last big hack in Hyena.Query - operators.
	Operaters are now defined per QueryValue subclass, so you you will never
	get a contains operator on an int field, for example.  A new Hyena.Query.Gui
	layer provides widegtry for editing queries while allowing custom types to
	be integrated seamlessly (see RatingQueryValueEntry and
	PlaylistQueryValueEntry).  You can see the progress of reimplementing
	smart playlist editing by trying to create a new one.  It is not by any
	means finished, so it doesn't actually save yet.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Collection/TrackListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Query/BansheeQuery.cs: 
	Move FieldSet, AlbumField, and ArtistField from TrackListDatabaseModel to
	BansheeQuery.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Show the
	smart playlist dialog on New Smart Playlist action.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Get
	ArtistField and AlbumField from BansheeQuery, not the
	TrackListDatabaseModel.

	* src/Core/Banshee.ThickClient/Banshee.SmartPlaylist.Gui/Editor.cs: Get
	somewhat working with new Hyena.Query.Gui code.

	* src/Core/Banshee.Services/Makefile.am: New Banshee.Query classes.

	* src/Core/Banshee.Services/Banshee.Query/NaturalIntegerQueryValue.cs:
	* src/Core/Banshee.Services/Banshee.Query/YearQueryValue.cs:
	* src/Core/Banshee.Services/Banshee.Query/RatingQueryValue.cs:
	* src/Core/Banshee.Services/Banshee.Query/PlaylistQueryValue.cs:
	* src/Core/Banshee.Services/Banshee.Query/SmartPlaylistQueryValue.cs:
	Subclasses of existing Hyena.Query QueryValue types, providing limits
	and/or default values.

	* src/Core/Hyena.Gui/Makefile.am: New Hyena.Query.Gui classes.

	* src/Core/Hyena.Gui/Hyena.Query.Gui/QueryValueEntry.cs:
	* src/Core/Hyena.Gui/Hyena.Query.Gui/StringQueryValueEntry.cs:
	* src/Core/Hyena.Gui/Hyena.Query.Gui/IntegerQueryValueEntry.cs:
	* src/Core/Hyena.Gui/Hyena.Query.Gui/DateQueryValueEntry.cs: New gui
	classes that define the gui for editing a QueryValue type.

	* src/Core/Hyena.Gui/Hyena.Query.Gui/QueryBox.cs: New VBox subclass that
	contains multiple QueryTermBoxes.

	* src/Core/Hyena.Gui/Hyena.Query.Gui/QueryTermBox.cs: New class that
	represents one QueryTermNode, and one row/condition in the smart playlist
	editor.

	* src/Core/Banshee.ThickClient/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.Query.Gui/RatingQueryValueEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Query.Gui/BansheeQueryBox.cs:
	* src/Core/Banshee.ThickClient/Banshee.Query.Gui/PlaylistQueryValueEntry.cs:
	New Banshee-specific query gui classes.

	* src/Core/Hyena/Makefile.am: 
	* src/Core/Hyena/Hyena.Query/AliasedObjectSet.cs: New generic class for
	containing a set of of aliased objects.  Used by QueryFieldSet and
	QueryValue's OperatorSet.

	* src/Core/Hyena/Hyena.Query/QueryValue.cs: Define an OperatorSet for each
	QueryValue type.

	* src/Core/Hyena/Hyena.Query/StringQueryValue.cs: Define OperatorSet.

	* src/Core/Hyena/Hyena.Query/IntegerQueryValue.cs: Add Min/Max/Default
	value properties, define OperatorSet.

	* src/Core/Hyena/Hyena.Query/DateQueryValue.cs: Actually use the
	RelativeDateFactor property.

	* src/Core/Hyena/Hyena.Query/QueryField.cs: Implement IAliasedObject.

	* src/Core/Hyena/Hyena.Query/QueryFieldSet.cs: Factor most of the set
	logic into AliasedObjectSet so it can be reused for Operators.

	* src/Core/Hyena/Hyena.Query/QueryOperator.cs: Add SqlFormat property
	instead of doing a switch in QueryTermNode to produce the right SQL for an
	operator.  Get rid of cruft.  Add ability to have multiple 'aliases'
	(user-entered query operators, eg :).

	* src/Core/Hyena/Hyena.Query/QueryTermNode.cs: Operators are scoped to
	value types, and have SqlFormat properties; use them.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/Migrator.cs:  
	* src/Core/Hyena/Hyena.Query/XmlQueryParser.cs: Operators are scoped to
	value types now.

2008-02-06  Aaron Bockover  <abock@gnome.org>

	Okay, so this is a big one. Probably nasty. This commit temporarily breaks
	settings saving/loading from GConf and the POSIX IO layer is disabled
	for now as well; these features will be reimplemented as platform 
	extensions in my next commit;

	This commit puts us very close to being able to run the managed Banshee
	core out of the box on Windows and probably OS X.

	* src/Core/Banshee.Services/Banshee.AudioProfiles/ProfileConfiguration.cs:
	Applied Scott's from SoC that makes this configuration layer just use
	the standard configuration APIs in Banshee, so profile configuration 
	is stored using whatever provider is active (GConf, XML); Scott rules.

	* src/Backends/Banshee.Gnome: Moved out GNOME specific code (GConf,
	GnomeVFS) into this new platform extension, but it's not complete

	* src/Core/Banshee.Core/Banshee.Base/RateLimiter.cs:
	* src/Core/Banshee.Services/Banshee.Base/ThreadAssist.cs: Moved to
	the service layer since these depend on Application

	* src/Core/Banshee.Core/Banshee.Base/Resource.cs:
	* src/Core/Banshee.Core/Banshee.Base/NamingUtil.cs: Moved/fixed these
	classes out of the old Utilities.cs dumping grounds
	
	* src/Core/Banshee.Core/Banshee.Configuration/ConfigurationClient.cs:
	Do not reference the GConfConfigurationClient; for now the Xml one
	is hard coded to use until I finish turning the GConf support into
	a provider - no complaining - the next commit will address it

	* src/Core/Banshee.Core/Banshee.I18n/AssemblyCatalogAttribute.cs:
	* src/Core/Banshee.Core/Banshee.I18n/Catalog.cs: Moved/cleaned up the
	internal Banshee gettext wrapper

	* src/Core/Banshee.Core/Banshee.IO: Redesigned the IO layer to be easier
	to extend (soon) through extensions and it now provides a cleaner API
	to use (no more IOProxy)
	
	* src/Core/Banshee.Core/Banshee.IO.SystemIO: Fixed up System.IO provider
	to implement the new Banshee.IO design changes

	* src/Core/Banshee.Core/Banshee.Base/FileNamePattern.cs:
	* src/Core/Banshee.Core/Banshee.Collection/FileTrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection/ImportManager.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistFileUtil.cs:
	* src/Core/Banshee.Services/Banshee.Playlists.Formats/PlaylistParser.cs:
	Updated to consume the nicer Banshee.IO APIs

	* src/Core/Banshee.Core/Banshee.IO/StreamAssist.cs: Added a class that
	makes doing some common stream operations (currently, just saving one
	stream to another) easier

	* src/Core/Banshee.Services/Banshee.Metadata.Embedded/EmbeddedQueryJob.cs:
	* src/Core/Banshee.Services/Banshee.Metadata/MetadataServiceJob.cs:
	Updated to use the new Banshee.IO APIs and also StreamAssist.Save to
	reduce so much duplication of stream code

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Added
	another Inovke method that takes an EventHandler delegate to stay 
	compatible with Gtk.Application.Invoke

	* src/Core/Banshee.Services/Banshee.Services.addin.xml: Added a few
	platform extension points

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistCore.cs:
	Removed unnecessary Gnome.Vfs call

	* src/Core/Banshee.Widgets/Banshee.Widgets/LinkLabel.cs: Removed 
	default Gnome.Open implementation; users must set a handle at all times
	so the widget is not bound to a platform
	
	* src/Core/Nereid/Nereid/Client.cs: Removed crappy Gnome.Program stuff
	since it really doesn't provide anything for us

	* src/Extensions/Template/Makefile.am: Small fix

	* src/Core/Banshee.Core/Banshee.Base/Utilities.cs:
	* src/Core/Banshee.Services/Banshee.AudioProfiles/GConfProfileConfiguration.cs:
	Nuked, finally

	* build/build.environment.mk:
	* build/m4/banshee/gtk-sharp.m4: Removed gnome-sharp and gconf-sharp
	dependencies

2008-02-06  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/InterfaceActionService.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/ActionButton.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/CustomActionProxy.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/RatingActionProxy.cs: Fix mono
	1.9 compiler error with amibuous Action references.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Fix mono
	1.9 compiler error with if (bool?) statement.

2008-02-05  Aaron Bockover  <abock@gnome.org>

	* src/create-extension: A simple script that will create some of the
	files necessary for creating new extensions; it allows you to specify
	the extension name extension points that will be implemented and it
	tries to build at least most of the necessary shell for the extension

	* src/Extensions/Template/Makefile.am:
	* src/Extensions/Template/Template.addin.xml:
	* src/Extensions/Template/Template.mdp: Files to use as the base for
	generated extensions

2008-02-05  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	Some minor reorg, finish the DnD split

2008-02-05  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Got rid of obsolete type.
	Last commit, I swear.

2008-02-05  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Merged PaintRows into
	PaintList since PaintList had become a withered shell of its former
	self, not worth the method call.

2008-02-05  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Very minor change - removed
	unnessisary assignment.

2008-02-05  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: A rework of PaintList and
	PaintRows. Previously, all rows needed to be iterated over three times:
	once to calculate the selection blocks, once to draw the rule, and once
	to draw the content. Now it is only iterated over once - rules, content
	for unselected rows, and selection blocks are drawn during iteration
	while selected rows are put into a list and their content is drawn at
	the end. This exploits the fact that the most common numbers of visible
	selected rows are 0 and 1. The actual performance gains for this patch
	are rather modest, but tangeble (a millisecond or two for the execution
	time of PaintList acording to the profiler).

2008-02-04  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	Made some private fields readonly.

2008-02-04  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	* src/Core/Banshee.Core/Banshee.Configuration.Schema/LibrarySchema.cs:
	* src/Core/Banshee.Core/Banshee.Base/SafeUri.cs: Standardized venacular
	around "Location" rather than "Path" when refering to the file URI in
	user-facing strings (BGO 436453)

2008-02-04  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena/Hyena.Data/DictionaryModelCache.cs: Initialize the cache
	dictionary to the proper capacity (since we know it).

2008-02-04  Aaron Bockover  <abock@gnome.org>

	This commit adds source merge behavior and the ability to drag and drop
	sources in the source view; i.e. drag the play queue to a new playlist
	to save it

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs:
	* src/Core/Banshee.Services/Banshee.Sources/SourceMergeType.cs:
	Added some stuff to advertise how sources can interact with eachother;
	concept of merging sources into sources

	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	Implement merge behaviors

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	Finished the drag and drop support for the source view internally

	* src/Core/Hyena.Gui/Hyena.Gui.Theatrics/SingleActorStage.cs: Override
	OnActorStep so that single actor stages work again

	* src/Core/Hyena.Gui/Hyena.Gui.Theatrics/Stage.cs: Nuke ugly writeline

2008-02-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection/TrackListModel.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/Migrator.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistCore.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: 
	* src/Core/Hyena/Hyena.mdp:
	* src/Core/Hyena/Makefile.am:
	* src/Core/Hyena/Hyena.Data.Query/*:
	* src/Core/Hyena/Hyena.Query/*: Change Hyena.Data.Query namespace to
	Hyena.Query.

2008-02-04  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Only draw the hot cairo stuff if we have a cairo context (and we don't
	when the row is being dragged)

2008-02-04  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Check
	to see if the actor TreeIter is valid in notify_stage.ActorStep - expire
	the actor if it is not

	* src/Core/Hyena.Gui/Hyena.Gui.Theatrics/Stage.cs: Allow the step handler
	to expire the actor by returning false

2008-02-03  Aaron Bockover  <abock@gnome.org>

	This commit adds Drag and Drop support from the track list to the source
	view; i.e. you can drag tracks to the play queue or playlists

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Added
	and implemented AcceptsInputFromSource and MergeSourceInput methods
	that allows source to see if they are 'compatible' with other sources; 
	for instance, copying some tracks from one source to another

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Implemented source-mode drag and drop for the track list

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	Implemented dest-mode drag and drop for track contexts (cannot DnD to/from
	source view yet)

	* src/Core/Banshee.ThickClient/Banshee.Gui.DragDrop/DragDropTarget.cs:
	Modernized the drop targets we'll start with for trunk

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Remove some obsolete properties

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Started fixing up 
	click behavior for selections to work properly with multi-row DnD; 
	currently there is still some bad behavior and it needs work - almost
	done though

2008-02-03  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Do some trimming
	in the Display* properties

2008-02-03  Ruben Vermeersch  <ruben@savanne.be>
	
	Rename extension types into more meaningful names. TypeExtensionNode is an
	implementation detail.

	* src/Core/Banshee.Services/Banshee.Services.addin.xml: Rename the four
	different TypeExtensionNodes (which all had different functionality into):
		Service, Source, ImportSource and PlayerEngine.

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer.addin.xml:
	* src/Core/Banshee.ThickClient/Banshee.ThickClient.addin.xml:
	* src/Extensions/Banshee.Audioscrobbler/Resources/Banshee.Audioscrobbler.addin.xml:
	* src/Extensions/Banshee.MultimediaKeys/Resources/Banshee.MultimediaKeys.addin.xml:
	* src/Extensions/Banshee.NotificationArea/Resources/Banshee.NotificationArea.addin.xml:
	* src/Extensions/Banshee.PlayQueue/Resources/Banshee.PlayQueue.addin.xml:
	Adjust addin.xml files accordingly.

2008-02-02  Ruben Vermeersch  <ruben@savanne.be>

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellTrackNumber.cs: Added.
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	* src/Core/Banshee.ThickClient/Makefile.am: Fix a regression from old
	Banshee, don't show the track number if it's zero. Just show empty space.

2008-02-02  Aaron Bockover  <aaron@abock.org>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Use smarter calculations for computing the row height and middle-aligning
	contents in a row; should look better across all font sizes now

	* src/Core/Hyena.Gui/Hyena.Widgets/RoundedFrame.cs: Reduce the inner border
	width to the correct size to be consistent with the ListView

2008-02-01  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.Database/BansheeModelProvider.cs: Made
	to use DatabaseConfigurationClient when checking for version.

	* src/Core/Banshee.Services/Banshee.Configuration:
	* src/Core/Banshee.Services/Banshee.Configuration/DatabaseConfigurationClient.cs:
	Added DatabaseConfigurationClient, an IConfigurationClient wrapper for
	the CoreConfiguration table.

2008-01-31  Gabriel Burt  <gabriel.burt@gmail.com>

	This commits adds j, k, Home, and End key support for scrolling list
	views.  Also fixes issue with not fading newly created playlist.

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	Add public UserNotifyUpdated method so extensions etc can use it.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Call
	UserNotifyUpdated in the action handler when creating a playlist.

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Add j and k as key
	bindings for down/up respectively.  Add Home/End key support.  Handle all
	relevant key pad keys.

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Don't have j or J focus the
	search any more, it's now used for scrolling the ListViews.

2008-01-31  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.ServiceStack/IExtensionService.cs:
	Added a simple method that extension services must implement; extension
	services should do nothing in their constructors so we can get type
	information from them at runtime at a minimum

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Require extension services to be IExtensionService; catch all exceptions
	from them, do not bail if an extension explodes and log the error

	* src/Extensions/Banshee.MultimediaKeys/Banshee.MultimediaKeys/MultimediaKeysService.cs:
	Extreme hack to support both GNOME Settings Daemon 2.20 and 2.22; I just
	love how pointless API breakage is a common theme in GNOME - the price
	of being an ISV and not 'in GNOME' is high - too high

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Use 'q' as a shortcut for adding stuff to the play queue
	
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/Service.cs:
	* src/Extensions/Banshee.Audioscrobbler/Banshee.Audioscrobbler/AudioscrobblerService.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Implement IExtensionService

2008-01-31  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Within sort by album, do not sort by artist because it messes up
	multi-artist albums.  This change will mess up albums that have the same
	name however.  Should have a sort by album-artist in here though.

2008-01-31  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellPlaybackIndicator.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Remove the little speaker icon in the header of the list view that
	represents the column which can hold the playback indicator; apparently
	this is confusing and may lead to the expectation of it being clickable
	and have it do something; fixes BNC #188717

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Do not try to render
	a null cell

2008-01-31  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Push IDisposable services into a dispose stack on startup; unwind this
	stack on shutdown, disposing services in the proper (safe) order

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Make 
	IDisposable and dispose all sources if they are in turn IDisposable

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	* src/Extensions/Banshee.PlayQueue/Resources/GlobalUI.xml:
	Added 'clear on quit' support; make IDisposable, clearing the queue
	if set on Dipose

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Finish
	porting the naming utility stuff to create proper playlist names; not
	actually in use yet

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Get
	rid of the params Add method since there are many more ActionEntry
	arrays that won't work with params

2008-01-31  Aaron Bockover  <abock@gnome.org>

	Patch that adds sorting by Disc number and editing it as well from
	Will Farrington. Awesomeness.

	* src/Core/Banshee.Core/Banshee.Collection/FileTrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs:
	* src/Core/Banshee.Core/Banshee.Streaming/CommonTags.cs:
	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	Add backend support for having Track.Disc as a column in TrackInfo

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Set default sorting, artist, and album sorting to sort with respect to the
	disc number; Add QueryField: searchable keywords are "disc" "cd" 
	and "discnum"

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs:
	* src/Core/Banshee.ThickClient/Resources/banshee-dialog-ui.xml:
	Add Disc field to the Track Editor

2008-01-31  Aaron Bockover  <abock@gnome.org>

	Patch to enable the preferences dialog by Alex Hixon

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:
	Copy track to library directory if it's not already there and the user
	has opted to copy files

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/PreferencesDialog.cs:
	Port the preferences dialog from stable

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Added preferences actions

2008-01-30  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Make the notification highlight extra sexy with some fade in and out

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	Set the stage duration to 1.5s

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListViewGraphics.cs: DrawRowSelection
	has a few new overrides including taking a color

2008-01-30  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Ported the animation/timeline code to use Hyena.Gui.Theatrics
	
	* src/Core/Hyena.Gui/Hyena.Gui.Theatrics/SingleActorStage.cs:
	A helper stage that will only have up to one actor at a time

2008-01-30  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: 
	* src/Core/Banshee.Services/Banshee.Sources/Source.cs:
	Added UserNotifyUpdated event that sources can use to trigger 
	notifications or visual cues in the source view

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	Use the new Hyena theatre stage/actors to animate update notifications on 
	source rows in the source views

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListViewGraphics.cs: Added a method
	for drawing a flat row highlight

	* src/Core/Hyena.Gui/Hyena.Gui.Theatre/Stage.cs: An object that manages
	timeouts for a set of Actors bound to targets of T; used for animating
	collections of objects bound to actors

	* src/Core/Hyena.Gui/Hyena.Gui.Theatre/Actor.cs: An object bound to
	a target of T with life span and percentage properties used for animations

	* src/Core/Hyena.Gui/Hyena.Widgets/RoundedFrame.cs: Remove redundant
	BorderWidth property

2008-01-30  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Use the list view theme engine to draw the highlight selection

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListViewGraphics.cs: Make it optional
	to draw the row selection fill

2008-01-30  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CellEditEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView_DragAndDrop.cs:
	Lots of clean up/reorg of the SourceView code to make it easier to 
	read and manage; split all of the drag and drop code into a separate
	file and SourceView is now a partial class

2008-01-30  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Stupid cast to work around possible bug in gmcs 1.2.5

2008-01-30  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListViewGraphics.cs: Added a DrawFrame
	method to simply draw the entire ListView like frame around a rect

	* src/Core/Hyena.Gui/Hyena.Widgets/RoundedFrame.cs: A widget like the
	standard Gtk.Frame, except it uses our ListViewGraphics to draw a sexy
	rounded frame that blends in with the list views

	* src/Core/Hyena.Gui/Hyena.Widgets/ScrolledWindow.cs: A custom 
	ScrolledWindow that proxies Hadjustmend and Vadjustment of the child
	of a RoundedFrame if one is added to the ScrolledWindow

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Use a Hyena ScrolledWindow
	with AddFrame to make the source view TreeView look like our ListView
	widgets - dead sexy

2008-01-30  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Use the new AddImportant method to make the play queue 'clear' text
	show up in the header

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Fixed
	Add to be 'new', added AddImportant

2008-01-30  Aaron Bockover  <abock@gnome.org>

	* build/build.rules.mk: Fixed installation. Yay.

2008-01-30  Ruben Vermeersch  <ruben@savanne.be>

	Add the basic files for the Audioscrobbler plugin. Nothing functional yet,
	just the boilerplate code for the addin.

	* build/build.environment.mk: Add refs for Audioscrobbler.

	* configure.ac: Add the Audioscrobbler Makefile.

	* src/Extensions/Banshee.Audioscrobbler: Added.
	* src/Extensions/Banshee.Audioscrobbler/Banshee.Audioscrobbler: Added.
	* src/Extensions/Banshee.Audioscrobbler/Banshee.Audioscrobbler/AudioscrobblerService.cs: Added.
	* src/Extensions/Banshee.Audioscrobbler/Makefile.am: Added.
	* src/Extensions/Banshee.Audioscrobbler/Resources: Added.
	* src/Extensions/Banshee.Audioscrobbler/Resources/Banshee.Audioscrobbler.addin.xml: Added.

	* src/Extensions/Makefile.am: Add Audioscrobbler.

2008-01-29  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: 
	Fix a few minor rendering issues

2008-01-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: New Add
	method that takes params ActionEntry [] and sets all the created Actions
	as IsImportant=true so if they are used in the toolbar their text will
	appear.

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Use new Add(params ActionEntry []) override to add actions.

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Set the toolbar style to
	BothHoriz.

	* src/Core/Banshee.ThickClient/Banshee.Gui/ViewActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Inherit
	from BansheeActionGroup.

2008-01-29  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Draw the same cairo selections that the track list view uses, overriding
	the crappy GTK selection for the tree view

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: 
	Set up a cairo context and list view graphics for the renderer

2008-01-29  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs:
	Make protected properties public - they should be since they are just
	wrappers to functionality that can be used via alternate API

	* src/Core/Banshee.ThickClient/Banshee.Gui/InterfaceActionService.cs:
	Automatically load/unload XML UI resources and actions for the active
	source if actions and UI are set in the source properties

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	Do not crash if the source context menu is null

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	Reset the highlight on left mouse click

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Split the XML UI between two definitions since one needs loading/unloading
	as the active source changes (the toolbar UI)

	* src/Extensions/Banshee.PlayQueue/Resources/ActiveSourceUI.xml: UI
	for use when the play queue is the active source

	* src/Extensions/Banshee.PlayQueue/Resources/GlobalUI.xml: UI for the
	play queue to be loaded at all times

2008-01-29  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/IHasSourceView.cs: Expose
	ResetHighlight

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Reset
	the highlight in the source view when done with the context menu

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Draw a special highlight for the highlight path

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Add
	a concept of a highlight path which is now different from the selected
	path to avoid confusion of the selection changing source when using the
	context menu

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Implement ResetHightlight

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	* src/Extensions/Banshee.PlayQueue/Resources/Actions.xml:
	Expose a source context menu

2008-01-28  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Make the status
	text much less intrusive with less specificity (display only a single
	time scale); do not display any status if there are no tracks

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Add some padding to the
	bottom of the status bar; change the text color of the status bar to
	a nice foreground/background blend to make it less intrusive

2008-01-28  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	Make the IUnmappable implementation virtual

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Override CanUnmap, return false

2008-01-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Customize name of Remove Track(s) action.

2008-01-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Fix brokenness of
	confusing Count/Unfiltered count issue; unfortunately no less confusing
	though.

2008-01-28  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	Implemented a clear queue action and set visibility and sensitivity of
	the queue actions properly

	* src/Extensions/Banshee.PlayQueue/Resources/Actions.xml: Added actions

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Added some more placeholders

2008-01-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	Implement SelectAggregates.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Add Duration and FileSize properties.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Sources/IDurationAggregator.cs:
	* src/Core/Banshee.Services/Banshee.Sources/IFileSizeAggregator.cs: New
	interfaces for determining if a source has certain properties.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Implement
	both new interfaces.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: New GetStatusText
	method that the interface with default implementation that returns count,
	duration, and file size.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.cs:
	Place VBox inside of Alignment so we can get our top padding, but only
	show it when we are shown (instead of spacing in our parent vbox that is
	always there).

	* src/Core/Hyena/Hyena.Data.Query/FileSizeQueryValue.cs: Add new ctor.

	* src/Core/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs: Rename variable
	for clarity.

	* src/Core/Hyena/Hyena.Data.Sqlite/ICacheableDatabaseModel.cs: Add
	SelectAggregates property, used by models to load aggregate values (eg
	SUM(FileSize) when the count is taken.

	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Add support for
	SelectAggregate properties.  Add AggregatesUpdated event so models can
	handle the results of the query themselves (except the count, which we
	still handle).

	* src/Core/Banshee.Services/Banshee.Database/BansheeModelProvider.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Make TableName
	public.

	* src/Core/Hyena/Hyena.Data/IFilterable.cs: Revert previous
	UnfilteredCount -> FilteredCount change.

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Add BuildFooter method, add
	the status label in the footer, keep it updated as the source track model
	changes.

2008-01-28  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.PlayQueue/Banshee.PlayQueue/PlayQueueSource.cs:
	* src/Extensions/Banshee.PlayQueue/Resources/Actions.xml:
	* src/Extensions/Banshee.PlayQueue/Resources/Banshee.PlayQueue.addin.xml:
	Moved the play queue out of core into an extension

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Remove any knowledge of PlayQueue as it's now an extension (awesome)

	* src/Core/Banshee.Services/Banshee.Services.addin.xml:
	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Created
	a new extension point for sources

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Added a more useful Get method that infers the service name from
	the generic type argument passed to it ala typeof (T).Name

2008-01-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* Makefile.am: add --debug to mono call.

2008-01-28  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Playlist/PlayQueueSource.cs: Change
	the sort order so 'add to play queue' works as expected; override 
	ConfirmRemoveTracks so a prompt does not invade your life when you 
	remove from the queue

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: 
	* src/Core/Banshee.Services/Banshee.Sources/ITrackModelSource.cs:
	Added ConfirmRemoveTracks

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Do not
	confirm if the source does not want you to when removing tracks

2008-01-28  Aaron Bockover  <abock@gnome.org>

	Okay, 5% to go with the play queue ... it's working

	* src/Core/Banshee.Services/Banshee.Playlist/PlayQueueSource.cs: Implement
	the actual play queue logic in the proper place this time; remove the
	top track when done playing/skipped

	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	Added a Transition event that the controller will raise before performing	
	any transition methods (Next, Previous)

	* src/Core/Banshee.Services/Banshee.PlaybackController/IBasicPlaybackController.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/ICanonicalPlaybackController.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/IPlaybackController.cs:
	Fix up interface dependency chain

2008-01-28  Aaron Bockover  <abock@gnome.org>
	
	* src/Core/Banshee.Services/Banshee.PlaybackController/ICanonicalPlaybackController.cs:
	Interface for implementing explicitly inside of the playback controller
	service that will allow other playback controllers to be used if 
	defined on a source, yet still allow those controllers to call back
	into the canonical controller

	* src/Core/Banshee.Services/Banshee.PlaybackController/IPlaybackController.cs:
	* src/Core/Banshee.Services/Banshee.PlaybackController/IPlaybackControllerExportable.cs:
	Separate the DBus exportable feature of the playback controller into a 
	separate interface

	* src/Core/Banshee.Services/Banshee.PlaybackController/PlaybackControllerService.cs:
	Implement ICanonicalPlaybackController explicitly, 
	IPlaybackControllerExportable, and if the source bound to the controller
	is itself an IPlaybackController, have the implicit implementation of
	IPlaybackController in the canonical controller call into the source

2008-01-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Hyena/Hyena.Data/IFilterable.cs: Keep the meaning of Count
	consistent as the unfiltered count;  remove UnfilteredCount property, add
	FilteredCount property to IFilterable.

2008-01-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Hyena/Hyena.Data/ModelCache.cs:
	* src/Core/Hyena/Hyena.Data/ArrayModelCache.cs:
	* src/Core/Hyena/Hyena.Data/DictionaryModelCache.cs:
	* src/Core/Hyena/Makefile.am: Implement different managed caching
	strategies in subclasses of ModelCache.

	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Subclass from
	DictionaryModelCache for now (no practical change for now).

2008-01-28  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.MediaEngine/IPlaybackController.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlaybackControllerDatabaseStack.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlaybackRepeatMode.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlaybackShuffleMode.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: 
	Moved playback controller APIs to their own 
	namespace - Banshee.PlaybackController

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlaybackControllerService.cs:
	Removed all the play queue stuff I did last night - it was way too late
	and was a horrible hack design

2008-01-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Implement IUnmapableSource again so Delete Playlist options show up.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Add
	NewSmartPlaylistFromSearch action.  Doesn't yet do anything.

2008-01-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs: Access each char
	of the command in place instead of assigning it to a variable, when
	scanning it for ?'s.

2008-01-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs: Change API.
	Used to have ctor(command, int) where int was the number of paramters.
	This was used primarily for stored, reused commands.  But, this ctor was
	ambiguous with the ctor(command, params object [] values), used to create
	a command and immediately apply values to it.  So, instead of passing the
	int, you can now just pass the command, and it will be scanned for '?'.

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistFileUtil.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Use new
	HyenaSqliteCommand API.

2008-01-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Add
	RemoveTrack methods (taking either an int or a LibraryTrackInfo).

2008-01-28  Aaron Bockover  <abock@gnome.org>

	Maybe 3% closer

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlaybackControllerService.cs:
	Implemented most of the required interaction between the playback 
	controller and the play queue; the play queue will activate if it is
	populated and playback is transitioning from another source

	* src/Core/Banshee.Services/Banshee.Playlist/PlayQueueSource.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs:
	Change the way the play queue singleton is assigned so the playback
	controller does not require a play queue

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Remove the
	plus/add icon on add to playlist

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs: 
	Fix something stupid

2008-01-28  Aaron Bockover  <abock@gnome.org>

	This commit adds about 90% of what's needed for a fully functioning 
	play queue. Yes, you can has queue. You can has indeed. <3

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Allow model to have a sort query forced upon it, effectively disabling
	user sorting

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	CorePlaylists has a new column called Special; Special playlists (not 0)
	are ignored by the regular static playlist loader

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	Get rid of the IconName property

	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs: Use the old
	home icon again; make the library source order 1

	* src/Core/Banshee.Services/Banshee.Playlist/PlayQueueSource.cs: Hot
	sexy new source for the play queue; it's the world's first special
	playlist in Banshee

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Do not
	load special playlists; return mediocre playlists using yield, instead of
	collecting into a temporary list; cope with the fact that IconName was
	banished from the base APS

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Load the
	hot new play queue source - zomg

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Also deal with the fact that IconName was banished from APS

	* src/Core/Banshee.Services/Banshee.Sources/ITrackModelSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Added a 
	ShowBrowser property that allows track model sources to mandate whether
	or not the user can see the browser

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/CompositeTrackListView.cs:
	Respect ShowBrowser if the active source is an ITrackModelSource, otherwise
	never show the browser since that doesn't make sense

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Added the sweet new 'Add to Play Queue' action

	* src/Core/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Added
	LastInsertRowId, because that is some useful stuff

2008-01-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Base/Log.cs: Make ms always 3 digits.

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistFileUtil.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:  Get
	rid of BansheeDbCommand.  It didn't add anything useful, and in fact had a
	bug that made creating a new playlist not work (and possibly other
	commands as well).

	* src/Core/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Add debugging
	message when executing command out of main thread.

2008-01-27  Ruben Vermeersch  <ruben@savanne.be>

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: C#'s
	lock statement is re-entrant. Therefore, there's no need to have both
	RegisterService and RegisterServiceNoLock.

2008-01-26  Aaron Bockover  <abock@gnome.org>

	* src/Core/Nereid/Nereid/PlayerInterface.cs: use Pack1, Pack2 to on the
	main hpaned widget to outlaw child shrinkage; set sane minimum width 
	requests on the source view and view container; fix whitespace issues

	* src/Core/Banshee.Services/Banshee.MediaEngine/IPlaybackController.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlaybackControllerService.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	Updated copyright dates

2008-01-26  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.MediaEngine/IPlaybackController.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlaybackControllerService.cs:
	Added First method to play the first song in the source

	* src/Core/Nereid/Nereid/PlayerInterface.cs: When a source view row
	is activated, make it the playback source and begin playing the first 
	track from it

2008-01-26  Aaron Bockover  <abockover@novell.com>

	Ladies, Gentlemen - I present to you playback against a dedicated source...
	This has been probably in the top 3 requested features for the past 2 years

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlaybackControllerService.cs:
	Perform all source operations from the public Source property; if no
	Source has been manually set on the controller, use the default one;
	raise the new SourceChanged event when Source is set

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Listen
	to PlaybackController.SourceChanged to refresh the GUI

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Set the source on the
	playback controller to the active source when the user manually 
	plays a song

2008-01-26  Aaron Bockover  <abockover@novell.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Remove the old manual ellipize calculations and just let Pango do it now
	that we can (it wasn't supported in the binding years back); make source
	text bold if it is the playback source, not the selected source

2008-01-26  Aaron Bockover  <abockover@novell.com>

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/CellEditEntry.cs:
	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceRowRenderer.cs:
	Classes pulled out of SourceView.cs, changed from public to internal
	since they are meaningless outside of SourceView

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Minor
	reorg, audit public API

	* src/Core/Hyena.Gui/Hyena.Gui/GtkUtilities.cs: Added ColorBlend method
	from the old Banshee.Base.Utilities class to blend two Gdk.Colors

2008-01-26  Aaron Bockover  <abockover@novell.com>

	* src/Core/Banshee.Core/Banshee.Base/Log.cs: Only show debug message if
	we are running in --debug mode

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Spew
	some awesome timing/debug messages

	* src/Core/Makefile.am: Fix a boo-boo

2008-01-25  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: 
	Save the artist before the track when importing

2008-01-25  Aaron Bockover  <abock@gnome.org>

	Patch adds GNOME/DBus multimedia keys support; ported by Alex Hixon

	* build/build.environment.mk: 
	* configure.ac:
	* src/Extensions/Extensions.mds:
	* src/Extensions/Makefile.am:
	* src/Core/Makefile.am: 
	* src/Extensions/Banshee.MultimediaKeys/Makefile.am: 
	* src/Extensions/Banshee.MultimediaKeys/Banshee.MultimediaKeys.mdp: Build 
	stuff for the multimedia keys extension

	* src/Extensions/Banshee.MultimediaKeys/Banshee.MultimediaKeys/MultimediaKeysService.cs:
	* src/Extensions/Banshee.MultimediaKeys/Resources/Banshee.MultimediaKeys.addin.xml: MMKeys plugin code/extension 

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: 
	Log when a service has started

2008-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	Get rid of unnecessary disctinct () call in query.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add some more indices.

2008-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	Use the CoreCache table to filter artists and albums based on the
	currently matching tracks.  Means the artist/album lists are filtered as
	you filter you tracks.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Comment out query debugging.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Call
	OnUpdated after Reloading.

	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Comment out timers.

2008-01-25  Gabriel Burt  <gabriel.burt@gmail.com>

	Smart playlists are migrated and saved now.  They should be functional.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Add playlistid and smartplaylistid fields for smart playlist migration.

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Call DbId
	setter from subclasses, not in base ctor.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/Migrator.cs: Improve to
	actually be able to migrate the vast majority of smart playlists
	including relative date queries and between queries.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistCore.cs:
	Remove debug output.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Don't allow removing tracks, and change to revolve about Hyena.Data.Query
	query tree instead of a SQL condition string.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Don't allow
	overriding of Reload method, since it's really RateLimitedReload
	subclasses want to override.

	* src/Core/Hyena/Hyena.Data.Query/DateQueryValue.cs: Actually generate
	relative date queries, and expose relevant properties. 

	* src/Core/Hyena/Hyena.Data.Query/QueryField.cs: For StringQueryValue
	fields that don't have a custom format, automatically match both literally
	and against both the column and value lowercased.

	* src/Core/Hyena/Hyena.Data.Query/QueryNode.cs: Add option to print pretty
	XML (indented).

	* src/Core/Hyena/Hyena.Data.Query/QueryOperator.cs: Add a Dual property
	that flips < and > characters.

	* src/Core/Hyena/Hyena.Data.Query/XmlQueryParser.cs: Add static
	convenience method for parsing.

2008-01-25  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Patch from Alex Hixon to fix the segfault that would sometimes occur
	when changing tracks; happened when playing a track without cover art,
	then a track with cover art, then a track without

2008-01-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Makefile.am:
	* src/Core/Banshee.Core/Banshee.Base/RateLimiter.cs: New class that makes
	it easy to rate limit a given method.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: Do
	the actual import on the main thread.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Rate limit
	the Reload method - ensuring no matter how often it's called, it won't
	actually be executed so much it degrades overall performance.

	* src/Core/Banshee.Services/Banshee.Sources/ISourceManager.cs:
	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Add setter
	for ActiveSource.

	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs: Use GetValue and
	SetValue methods of PropertyInfo objects instead of GetGetMethod etc.

	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: For the Insert
	command, set the value of the primary key to null so Sqlite will set it
	appropriately

2008-01-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* HACKING: Add link to online version of "Framework Design Guidelines"

2008-01-24  Aaron Bockover  <abockover@novell.com>

	* src/Core/Banshee.Services/Banshee.Metadata.Rhapsody/RhapsodyQueryJob.cs:
	Try to download the 500px and then fall back to the 170px; awesome hires
	from Rhapsody

	* src/Core/Banshee.Services/Banshee.Metadata/MetadataService.cs:
	Prefer the rhapsody provider over musicbrainz for fetching cover art
	now that we can get hires from rhapsody

	* src/Core/Banshee.Services/Banshee.Metadata.MusicBrainz/MusicBrainzQueryJob.cs:
	Print some debug stuff

2008-01-24  Gabriel Burt  <gabriel.burt@gmail.com>

	Patch from Alexander Hixon <hixon.alexander@mediati.org>.

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	* src/Core/Banshee.Services/Banshee.Equalizer/EqualizerManager.cs:
	* src/Core/Banshee.Services/Banshee.Equalizer/EqualizerSetting.cs:
	* src/Core/Banshee.Services/Banshee.Equalizer/EqualizerSettingEvent.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/IEqualizer.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngine.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerBandScale.cs:
	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerLevelsBox.cs:
	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerPresetComboBox.cs:
	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerWindow.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/ViewActions.cs: Conform to
	HACKING.

	* src/Core/Banshee.ThickClient/Resources/banshee-dialogs.glade: Make
	equalizer window a dialog not utility window, ensuring it comes to top.

2008-01-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Base/Utilities.cs:
	* src/Core/Hyena/Hyena/Utilities.cs:
	* src/Core/Hyena/Hyena/Timer.cs: Move Timer and DateTimeUtils to Hyena.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Disambiguate which Timer to use.

	* src/Core/Hyena/Timer.cs: Remove, replaced by Hyena/Timer.cs.

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	Remove unnecessary assignment.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	Wrap IDataReader in using.

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	Add using Hyena for DateTimeUtils.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Pass field_set to BuildTree methods, and update QueryField constructors
	with new QueryValue setup.  Remove Date and FileSize modifier functions.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/Migrator.cs: Use new
	QueryValue class.

	* src/Core/Hyena/Hyena.Data.Query/QueryValue.cs:
	* src/Core/Hyena/Hyena.Data.Query/StringQueryValue.cs:
	* src/Core/Hyena/Hyena.Data.Query/IntegerQueryValue.cs:
	* src/Core/Hyena/Hyena.Data.Query/FileSizeQueryValue.cs:
	* src/Core/Hyena/Hyena.Data.Query/DateQueryValue.cs: New files/classes
	that provider parsers and generators for XML/user-query for different data
	types.  Replace QueryField Modifiers.

	* src/Core/Hyena/Hyena.Data.Query/QueryField.cs: Fields now have a
	ValueType associated with them, one of the four QueryValue subclasses
	above.  Turn fields into properties.

	* src/Core/Hyena/Hyena.Data.Query/QueryFieldSet.cs: Add this [] accessor.

	* src/Core/Hyena/Hyena.Data.Query/QueryListNode.cs: Avoid crashing when
	trimming a QueryNode tree that has only a childless NOT node.

	* src/Core/Hyena/Hyena.Data.Query/QueryTermNode.cs: Remove Operator class.
	Replace string Field and Value fields with QueryField and QueryValue
	properties.

	* src/Core/Hyena/Hyena.Data.Query/QueryOperator.cs: Split into its own
	file.  Was previously inside QueryTermNode.

	* src/Core/Hyena/Hyena.Data.Query/QueryParser.cs:
	* src/Core/Hyena/Hyena.Data.Query/XmlQueryParser.cs:
	* src/Core/Hyena/Hyena.Data.Query/UserQueryParser.cs: Require a
	QueryFieldSet for BuildTree method so we can user the relevant ValueType
	for each QueryField as we parse it.

	* src/Core/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Add temporary
	debugging messages.

	* src/Core/Hyena/Makefile.am: Add new files, remove old Timer.cs.

2008-01-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Resources/contributors.xml: Credit for previous
	patch, accidentally not committed.

2008-01-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Resources/banshee-dialogs.glade: Part of
	previous patch, forgot to commit.

2008-01-24  Gabriel Burt  <gabriel.burt@gmail.com>

	Patch from Alexander Hixon <hixon.alexander@mediati.org>.

	* src/Core/Banshee.ThickClient/Banshee.Gui/ViewActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerPresetComboBox.cs:
	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerBandScale.cs:
	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerLevelsBox.cs:
	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/EqualizerWindow.cs:
	* src/Core/Banshee.ThickClient/Makefile.am:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	* src/Core/Banshee.Services/Banshee.Equalizer/EqualizerManager.cs:
	* src/Core/Banshee.Services/Banshee.Equalizer/EqualizerSetting.cs:
	* src/Core/Banshee.Services/Banshee.Equalizer/EqualizerSettingEvent.cs:
	* src/Core/Banshee.Services/Banshee.Services.mdp:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngine.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineState.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/IEqualizer.cs:
	* src/Core/Banshee.Services/Makefile.am:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs:
	* libbanshee/gst-playback-0.10.c: Added support for graphical equalizer.
	  Fixes BGO #426562.
	  
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineState.cs:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs: Added
	  new PlayerEngineState.Initalized state type; fired when engine has
	  initialized itself. Required for the equalizer to enable the user's last
	  preset just after the engine starts.

2008-01-22  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Base/Banshee.Equalizer.Gui/*:
	* src/Core/Banshee.ThickClient/Banshee.Equalizer.Gui/*: Move.

	* src/Core/Banshee.Base/Banshee.Equalizer/*:
	* src/Core/Banshee.Services/Banshee.Equalizer/*: Move.

2008-01-22  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Avoid NRE, thanks
	to Alex Hixon.

2008-01-20  Ruben Vermeersch  <ruben@savanne.be>

	* ext/Makefile.MonoDevelop: Do it a bit nicer by using make's $(CURDIR).

2008-01-20  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	Got rid of DbId setter (not used).

2008-01-20  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	Consolidated save logic.

2008-01-20  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseColumnAttribute.cs: Got rid of
	unnecessary private variables.

2008-01-19  Scott Peterson  <lunchtimemama@gmail.com>

	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs: Cleaned up
	CheckVersion and CheckTable, beautified

	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs: Dealt with new
	type names and cleaned up.

	* src/Core/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Reworked
	TableExitst and added new convenience methods IndexExitsts,
	GetSchema, and QueryString. Also added more overloads to QueryInt32

	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Made IndexOf to
	use QueryInt32.

	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseColumnAttribute.cs: Renamed
	DatabaseColumnBaseAttribute to AbstractDatabaseColumnAttribute and
	renamed DatabaseVirtualColumnAttribute to
	VirtualDatabaseColumnAttribute.

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs,
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	  Dealt with new type names

2008-01-19  Ruben Vermeersch  <ruben@savanne.be>

	* ext/Makefile.MonoDevelop: Fix the MonoDevelop build on Ubuntu. Ubuntu
	uses dash instead of bash for the /bin/sh symlink. Dash however doesn't
	have pushd/popd.

2008-01-19  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Oops.

2008-01-19  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Now with even more
	awesome!

2008-01-19  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Improved IndexOf
	with first_order_id caching.

2008-01-18  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Minor fix for last
	commit.

2008-01-18  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Implimented
	IndexOf() using SQL MAGIC!

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	Removed now superfluous DbIndex

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Rejiggered IndexOf

	* src/Core/Banshee.Services/Banshee.Database/BansheeModelProvider.cs: Got
	rid of now superfluous IDatabaseItem type

	* src/Core/Banshee.Services/Banshee.Database/BansheeModelCache.cs:
	Rejiggered generic constraints

2008-01-18  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlaybackControllerService.cs:
	Makes sure playback doesn't barf when there is no next track to play.

2008-01-18  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseAttributes.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseColumnAttribute.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeModelProvider.cs: Got
	rid of DatabaseTableAttribute

2008-01-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Hyena/Makefile.am:
	* src/Core/Hyena/Hyena.Data.Sqlite/SqilteModelCache.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelCache.cs: Fix typo.

2008-01-18  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena/Hyena.Data.Sqlite/ModelProvider.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/SqliteModelProvider.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeModelProvider.cs:
	Renamed ModelProvider to SqliteModelProvider

	* src/Core/Hyena/Hyena.Data.Sqlite/ModelCache.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/SqilteModelCache.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeModelCache.cs: Renamed
	ModelCache to SqliteModelCache

2008-01-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* data/banshee.desktop.in.in: Merge x-content/* support from stable.

2008-01-17  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena/Hyena.Data.Sqlite/ModelProvider.cs: Renamed from
	DatabaseModel for consistancy and rejiggered

	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseAttributes.cs: Added
	DatabaseTableAttribute

	* src/Core/Hyena/Hyena.Data.Sqlite/ModelCache.cs: Renamed from
	DatabaseModelCache for consistancy and rijiggered

	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseModel.cs: Renamed
	ModelProvider.cs

	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseColumnAttribute.cs: Renamed to
	DatabaseAttributes.cs

	* src/Core/Hyena/Hyena.Data.Sqlite/ICacheableDatabaseModel.cs: Removed
	subsumed and obsolete members

	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseModelCache.cs: Renamed
	ModelCache.cs

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	Made to use new DatabaseTable attribute

	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	Removal of subsumed and obsolete members

	* src/Core/Banshee.Services/Banshee.Database/BansheeDatabaseModel.cs:
	Renamed to BansheeModelProvider.cs

	* src/Core/Banshee.Services/Banshee.Database/BansheeDatabaseModelCache.cs:
	Renamed to BansheeModelCache.cs

	* src/Core/Banshee.Services/Banshee.Database/BansheeModelProvider.cs:
	Whitespace fixes and TableName/ModelVersion removal

	* src/Core/Banshee.Services/Banshee.Database/BansheeModelCache.cs: Generics
	changes

2008-01-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Hyena/Hyena.Data.Query/QueryFieldSet.cs: New file, forgot to commit.

2008-01-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Add English aliases to all QueryFields in addition to the translated ones,
	so English aliases will always be available.  Change the mimetype field to
	match on both MimeType and Uri columns.

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Add
	SmartPlaylistCore service.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/Migrator.cs: Move old
	smart playlist operator code here for migration purposes.  Migration now
	works for all conditions except time-based ones (LastPlayed/DateAdded),
	but the migrated result is only saved during each session until the
	migrator is finalized.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Explicitly
	pass the operator to use for 'match similar' actions.

	* src/Core/Banshee.ThickClient/Banshee.SmartPlaylist.Gui/QueryBuilder.cs:
	Move much old code that will be replaced with Hyena.Data.Query code.  Move
	code needed to migrate from old format to new format into Migrator.

	* src/Core/Hyena/Hyena.Data.Query/QueryField.cs: Add a translated label to
	Field, split FieldSet off into it's own file.

	* src/Core/Hyena/Hyena.Data.Query/QueryListNode.cs:
	* src/Core/Hyena/Hyena.Data.Query/QueryNode.cs: Change ToXml method to
	take a QueryFieldSet.  Change ToString to output the user query.

	* src/Core/Hyena/Hyena.Data.Query/QueryTermNode.cs: Fix whitespace, change
	Sql appends to use Field's FormatSql method allowing for a field to map to
	multiple database columns.

	* src/Core/Hyena/Makefile.am: Add QueryFieldSet.

2008-01-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Hyena/Hyena.Data.Sqlite/CacheableDatabaseModel.cs: Remove.

	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseModelCache.cs: Time FetchSet.

2008-01-17  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseModel.cs: Added new Load
	  overload, uncommendted some methods

	* src/Core/Hyena/Hyena.Data.Sqlite/ICacheableDatabaseModel.cs,
	  src/Core/Hyena/Hyena.Data.Sqlite/DatabaseModelCache.cs,
	  src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs,
	  src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs,
	  src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	  Changed GetItemFromReader to Load

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs,
	  src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	  Inherited from IDatabaseItem and added DbIndex { set; }

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	  Inherited from IDatabaseItem and made DbIndex { set; } public

	* src/Core/Banshee.Services/Banshee.Database/BansheeDatabaseModel.cs:
	  Implemented MakeNewObject

2008-01-17  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Eliminated
	  an unnecessary comparison.

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	  Fixed whitespace.

2008-01-17  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena/Hyena.Data/ModelCache.cs,
	  src/Core/Hyena/Hyena.Data.Sqlite/DatabaseModelCache.cs: These changes
	  are already obsolete by Gabriel's work.

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	  Fix for correctly translating Uris from the db.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDatabaseModelCache.cs:
	  Made constant strings even more constant.

2008-01-16  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeCacheableModelAdapter.cs:
	Removed.

	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeDatabaseModelCache.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDatabaseModelCache.cs:
	Move from Banshee.Collection.Database to Banshee.Database.

	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeModelProvider.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDatabaseModel.cs:
	Renamed, moved.

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	Remove unused methods.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Database/TableSchema.cs: Remove.

	* src/Core/Hyena/Makefile.am:
	* src/Core/Hyena/Hyena.Data.Sqlite/IDatabaseModel.cs: Rename to
	ICacheableDatabaseModel.

2008-01-16  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	Use new provider and cache classes.

	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeDatabaseModelCache.cs:
	Override DatabaseModelCache to set Banshee-specific table names.

	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeModelProvider.cs:
	Make not abstract, add ctor that takes table name.  Remove cache old
	properties.

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	Intantiate a static BansheeModelProvider for each class, and make it
	available via a public static property.  Use it for insert/update.  Bind
	columns for Artist/Album.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Get rid of internal Provider class, instead use new provider/cache
	classes.

	* src/Core/Banshee.Services/Makefile.am: Add BansheeDatabaseModelCache,
	remove IDatabaseModel and BansheeCacheableModelAdapter.

	* src/Core/Hyena/Hyena.Data.Sqlite/CacheableDatabaseModel.cs: Inherit from
	DatabaseModel<T> and implement ICacheableDatabaseModel<T>.  Move database
	cache methods into DatabaseModelCache class.

	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseModel.cs: Comment out Fetch*
	methods for now.

	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseModelCache.cs: New file,
	very similar to old BansheeCacheableModelAdapter with updates from
	CacheableDatabaseModel.

	* src/Core/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Add
	TableExists method.  Wrap database queries in try/catch since otherwise
	you get neither the full failed query or useful stack trace.

	* src/Core/Banshee.Services/Banshee.Collection.Database/IDatabaseModel.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/IDatabaseModel.cs: Move to Hyena,
	rename class to ICachableDatabaseModel (will mv file in next commit).

	* src/Core/Hyena/Hyena.Data/CacheableModelAdapter.cs:
	* src/Core/Hyena/Hyena.Data/ModelCache.cs: Rename ModelCache.

	* src/Core/Hyena/Makefile.am: Renames, new IDatabaseModel file.

2008-01-15  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeModelProvider.cs:
	  Temporarily disabled Persistant caches until we can fix a bug.

2008-01-15  Scott Peterson  <lunchitmemama@gmail.com>
	* HACKING: Space before parens.

2008-01-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Hyena/Hyena.Data.Sqlite/CacheableDatabaseModel.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/CacheableDatabaseModelProvider.cs:
	Rename, whitespace.

	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseModel.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseModelProvider.cs:
	Rename and split inner classes into their own files.

	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseColumn.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseColumnAttribute.cs: 
	* src/Core/Hyena/Makefile.am: New files containing classes split from
	DatabaseModelProvider.  Rename DatabaseBindingFlags to
	DatabaseColumnConstraints.

	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeModelProvider.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	Use new class names.

	* src/Core/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs: Whitespace.

2008-01-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/CacheableDatabaseModelProvider.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseModelProvider.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/HyenaDbConnection.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/HyenaSqliteCommand.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/HyenaSqliteConnection.cs:
	* src/Core/Hyena/Makefile.am: Rename HyenaDbConnection/Command to
	HyenaSqliteConnection/Command and split HyenaDbCommand into its own file.

2008-01-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Hyena/Hyena.Data.Sqlite/CacheableDatabaseModelProvider.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/DatabaseModelProvider.cs:
	* src/Core/Hyena/Hyena.Data.Sqlite/HyenaDbConnection.cs:
	* src/Core/Hyena/Makefile.am: Create new namespace Hyena.Data.Sqlite for
	database/sqlite specific classes moved from Hyena.Data.

	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeModelProvider.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs: Add
	using Hyena.Data.Sqlite;

2008-01-15  Scott Peterson <lunchtimemama@gmail.com> 

	* src/Core/Hyena/Hyena.Data/HyenaDbConnection.cs: An abstraction of
	  BansheeDbConnection/COmmand
	* src/Core/Hyena/Hyena.Data/DatabaseModelProvider.cs: Added.
	* src/Core/Hyena/Hyena.Data/CacheableDatabaseModelProvider.cs: Added. This
	  class functionally inherits from both CacheableModelAdapter and
	  DatabaseModelProvider.
	* src/Core/Hyena/Hyena.Data/CacheableModelAdapter.cs: Added Add() method.
	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeModelProvider.cs:
	  Added. This will replace BansheeCacheableModelAdapter.
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	  Modified to use new model provider system.
	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	  Added Provider inner class which inherits from BansheeModelProvider.
	  Made to use that inner class.
	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	  Abstracted into Hyena.
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Made MimeType and
	  FileSize virtual.
	* build/build.environment.mk: Added sql-related dependancies to Hyena's
	  references.

2008-01-11  Aaron Bockover  <abockover@novell.com>

	* src/Core/Banshee.Core/Banshee.Base/Paths.cs: Added 
	MakePathRelativeToLibrary to extract the relative path from a URI for
	storing into the DB

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Added FileSize
	and DiscNumber properties

	* src/Core/Banshee.Core/Banshee.IO/Interfaces.cs: 
	* src/Core/Banshee.Core/Banshee.IO/SystemIO.cs:
	* src/Core/Banshee.Core/Banshee.IO/Unix.cs:
	* src/Core/Banshee.Core/Banshee.IO/GnomeVfs.cs: Added File.GetSize

	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs: Use
	Banshee.IO.IOProxy.File.GetSize to set TrackInfo.FileSize

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	Perform two path checks (relative and absolute) in ContainsUri; support
	FileSize and DiscNumber properties

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Added FileSize and DiscNumber columns to CoreTracks

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:
	Some minor update

	* src/Core/Hyena/Hyena.Data.Query/QueryField.cs: Added term modifier 
	support for handling special strings like '50MB' or 'yesterday'

	* src/Core/Hyena/Hyena.Data.Query/QueryTermNode.cs: Fix EmitNumericMatch
	and EmitStringMatch to use the new QueryField.Modifier support; fix
	parsing in EmitNumericMatch to support 64 bit integers which are useful
	for times and file sizes

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Implemented FileSizeModifier and DateTimeModifier methods to support
	nice file size and date/time string formats like '40MB'; added three
	new fields (FileSize, DateAddedStamp, LastPlayedStamp)

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistFileUtil.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Change references from CoreTracks.RelativeUri to CoreTracks.Uri

2008-01-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeCacheableModelAdapter.cs:
	Temporarily disable persistent caching.  We should probably cache the
	unfiltered membership of a model and the filtered separately.

2008-01-10  Aaron Bockover  <abockover@novell.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Show/Hide the cover art popup only when the cursor enters the actual 
	cover art thumbnail, not the entire widget

2008-01-10  Aaron Bockover  <abockover@novell.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkManager.cs:
	Do some exception handling for crappy invalid pixbufs

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Handle TrackInfoUpdated events from the player engine and only start
	the transition when we are already not in one; cover art is now downloaded
	properly and shown in the track header when the song plays

2008-01-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Hyena/Hyena.Data.Query/QueryNode.cs: Add ToUserQuery method to
	rebuild what a user would type in the search bar from the object tree.
	Add AppendXml and AppendUserQuery abstract methods.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	For testing purposes, when a user searches, parse the query into the
	QueryNode tree, generate XML from that, and then parse the XML.

	* src/Core/Hyena/Hyena.Data.Query/QueryListNode.cs: Implement
	AppendUserQuery.

	* src/Core/Hyena/Hyena.Data.Query/QueryTermNode.cs: Add Operator class and
	implement AppendUserQuery and AppendXml.  Generate XESAM-like XML (with
	the goal of being compliant).

	* src/Core/Hyena/Hyena.Data.Query/QueryParser.cs:
	* src/Core/Hyena/Hyena.Data.Query/UserQueryParser.cs: Update copyright.

	* src/Core/Hyena/Makefile.am:
	* src/Core/Hyena/Hyena.Data.Query/XmlQueryParser.cs: New file for parsing
	XML queries into QueryNode trees.

2008-01-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Streaming/RadioTrackInfo.cs:
	Set CanPlay attribute

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Enable all the metadata service glory again now that the services are
	actually ported over. Awesome.

2008-01-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Base/CoverArtSpec.cs: A small API that
	provides a layer of query/ID generation methods for the local disk cover
	art cache

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkManager.cs:
	Updated to use the new CoverArtSpec APIs

	* src/Core/Banshee.Services/Banshee.Metadata:
	* src/Core/Banshee.Services/Banshee.Metadata.MusicBrainz:
	* src/Core/Banshee.Services/Banshee.Metadata.Embedded:
	* src/Core/Banshee.Services/Banshee.Metadata.Rhapsody: Ported the 
	Metadata Services Stack from stable; updated to run in the services layer
	so no Gdk/GUI libraries are required; use new CoverArtSpec APIs

	* src/Core/Banshee.Services/Banshee.Networking: Ported the networking
	layer from stable

2008-01-05  Aaron Bockover  <abock@gnome.org>

	Merge of Scott Peterson's XML configuration client backend to enable
	configuration saving on Windows (or any place where GConf is fugly)

	* src/Core/Banshee.Core/Banshee.Configuration/XmlConfigurationClient.cs:
	The actual XML backend

	* src/Core/Banshee.Core/Banshee.Configuration/ConfigurationClient.cs:
	Now selects the appropriate configuration backed for the system (GConf 
	for Unix, Xml for others)

2008-01-04  Gabriel Burt  <gabriel.burt@gmail.com>

	This commit makes big strides in porting smart playlists and playlist
	import/export.  Neither are yet really functional (though smart playlists
	appear in the sources list).

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistFileUtil.cs:
	* src/Core/Banshee.Base/Banshee.Playlists/PlaylistFileUtil.cs: Move, update
	whitespace, start porting (replace verification w/ sqlite on conflict
	ignore), greatly simplify. 

	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeCacheableModelAdapter.cs:
	Take uuid argument in the constructor to be able to persist the cache
	across Banshee sessions.  This will mean faster startup because all
	sources will not have to be reloaded on startup.

	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Uuid ctor changes.  On first reload, if cache is already warm (from
	previous session), use it instead of regenerating it.  Make
	TrackListDatabaseModel's GetSort method public for use by smart playlists.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs: Put
	migration code into separate method.  Remove listeners after complete.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Add on conflict ignore clause to TrackID in CorePlaylistEntries.  Add
	OrderDir column to CoreSmartPlaylists.  Create CoreCacheModels table, the
	basis for persistent cache.  Migrate smart playlists.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: 
	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs: Add uuid in
	ctor.

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	Replace static properties with abstract instance properties; static
	properties from various subclasses conflict; whoops.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Override
	AbstractPlaylist properties.

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Do not
	load smart playlists here, let the SmartPlaylistCore do that.

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Add
	SmartPlaylistCore service.  Currently commented out.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Start porting, ripping out old code that depended on having references to
	every TrackInfo in the library.  Currently does not reload when tracks
	change whatsoever.

	* src/Core/Banshee.Services/Banshee.Web/Browser.cs: Add commented out
	gnome open call.

	* src/Core/Banshee.Services/Makefile.am: Add ported files.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Add commented
	out Editor calls for OnNewSmartPlaylist handler.

	* src/Core/Banshee.Base/Banshee.SmartPlaylist/Editor.cs:
	* src/Core/Banshee.Base/Banshee.SmartPlaylist/QueryBuilder.cs:
	* src/Core/Banshee.Base/Banshee.SmartPlaylist/QueryBuilderModel.cs:
	* src/Core/Banshee.ThickClient/Banshee.SmartPlaylist.Gui/Editor.cs: Move
	files.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/Migrator.cs: New file
	for migrating from the old, very hard to change smart playlist definition
	format to the new one.  Does not yet actually migrate the condition.

	* src/Core/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistCore.cs:
	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistCore.cs:
	Move and start the many changes needed to get smart playlists working.
	For example, remove all Gtk references, call the Migrator code, and don't
	listen to every single TrackInfo in the library.

	* src/Core/Hyena/Hyena.Data.Query/QueryTermNode.cs: Set default op to ":".

	* src/Core/Hyena/Hyena.Data.Query/UserQueryParser.cs: Support commas for
	specifying OR terms, eg foo, bar is equivalent to foo OR bar.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellDateTime.cs:
	Avoid crashing when bound object is null.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Use capitalized sort parameters.

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Add
	property for easy access to the main Window.

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Add first
	pass at porting/implementing OnImportPlaylist handler.
	
2008-01-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/CompositeTrackListView.cs:
	Lower case prepositions fewer than four letters long in menu items.

2008-01-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Tweak debug output.

	* src/Core/Hyena/Hyena.Data.Query/QueryTermNode.cs: Add support for other
	operators (= == > < >= <=).  Implement = or == on a text field as 'starts
	with'.

	* src/Core/Hyena/Hyena.Data.Query/UserQueryParser.cs: Add support for |
	and || for OR, and fix a bug with sub clauses.

2008-01-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Hyena/Hyena.Data.Query/QueryKeywordNode.cs: Remove, put
	functionality in QueryListNode.

	* src/Core/Hyena/Hyena.Data.Query/QueryNode.cs: Add ToSql and ToXml
	methods, and AppendSql, AppendXml, and Trim abstract methods.

	* src/Core/Hyena/Hyena.Data.Query/QueryListNode.cs:
	* src/Core/Hyena/Hyena.Data.Query/QueryTermNode.cs: Implement AppendSql
	and AppendXml methods.  Change QueryListNode to have a keyword - an operator,
	eg and/or/not - associated with it.

	* src/Core/Hyena/Hyena.Data.Query/QueryParser.cs: Make an abstract class,
	moving user entered search logic into UserQueryParser.  The idea is to have
	an XmlQueryParser too, for use with smart playlists.

	* src/Core/Hyena/Hyena.Data.Query/SqlQueryGenerator.cs: Remove, this
	functionality is available via QueryNode.ToXml.

	* src/Core/Hyena/Hyena.Data.Query/UserQueryParser.cs: New subclass of
	QueryParser for parsing user-entered searches.  Change the parser to
	generate a tree of And/Or clauses, instead a tree of lists that contain
	them and QueryTermNodes inline.  With some post-construction trimming,
	this ensures that the generated tree is a valid boolean function (and
	means all the validation code in SqlQueryGenerator is not needed to
	produce valid SQL anymore).

	* src/Core/Hyena/Makefile.am: Add new files, remove old ones.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Use ToSql instead of the SqlQueryGenerator.

2007-12-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Actually commit it; grr svn.

2007-12-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	Add a source primary key property.

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Load
	smart playlists.

	* src/Core/Banshee.Services/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Core/Banshee.Services/Makefile.am: New file, skeleton implementation
	of the old smart playlist functionality.

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Add New Smart
	Playlist action.

2007-12-26  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Playlist/AbstractPlaylistSource.cs:
	New abstract class for playlists (static and smart).

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Subclass
	from AbstractPlaylistSource; implement Create/Update methods.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Call Save
	after creating new PlaylistSources.  Use new AddSelectedTracks method.

2007-12-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection/TrackListModel.cs: Add
	ArtistField and AlbumField properties that are used for By Matching
	Artist/Album actions.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Implement ArtistField/AlbumField properties.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Make FilterQuery
	virtual, and override it to refilter/reload the track model.

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs: Add
	UpdateActions methods for setting visibility/sensitivity of several
	actions at once.

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Add/handle Search
	for Songs menu and By Matching Artist/Album items.

	* src/Core/Hyena/Makefile.am:
	* src/Core/Hyena/Hyena.Data.Query/QueryField.cs: New file for QueryField
	and QueryFieldSet classes.

	* src/Core/Hyena/Hyena.Data.Query/SqlQueryGenerator.cs: Move
	Field/FieldSet out of this file.  Fix quote escaping.

	* src/Core/Hyena/Hyena.Data/PropertyStore.cs: Avoid raising Changed event
	if setting to the current value.

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Listen for programmatic
	searches (eg By Matching Artist) to update the SearchEntry.

2007-12-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Add rating, plays, skips, path, and type as search fields.  Add translated
	name, and translate field aliases.

	* src/Core/Hyena/Hyena.Data.Query/SqlQueryGenerator.cs: Add a name field
	to the Field class.

2007-12-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Use Hyena.Data.Query to generate SQL from the user's query.  Allows
	searches such as "by:foo year:2006".

	* src/Core/Hyena/Hyena.Data.Query/QueryListNode.cs: Fix off by one bug.

	* src/Core/Hyena/Hyena.Data.Query/QueryParser.cs: Fix parsing bugs.

	* src/Core/Hyena/Hyena.Data.Query/QueryToken.cs: Add And token type.

	* src/Core/Hyena/Hyena.Data.Query/SqlQueryGenerator.cs: Add Field and
	FieldSet classes that define whether a field is Textual or Numeric, and
	generates a mapping of aliases to Fields.  Fix the SQL generator to work
	in most cases.

2007-12-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Fall back to sorting by file path if needed.  Change sort by Title to sort
	first by title, then artist, then album instead of first by artist.

2007-12-20  Sebastian Dröge  <slomo@circular-chaos.org>

	* docs/Makefile.am: Don't prepend $(DESTDIR) to monodocdir. This is
	  already done be automake.

2007-12-19  Gabriel Burt  <gabriel.burt@gmail.com>

	* data/icon-theme-hicolor/Makefile:
	* data/icon-theme-hicolor/Makefile.in: Remove from svn.

	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs: Set TrackInfo.Uri

	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	Sort by AlbumTitle, ArtistName, not just AlbumTitle.

	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeCacheableModelAdapter.cs:
	Make count_command a static BansheeDbCommand so it's not parsed every time.

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryAlbumInfo.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryArtistInfo.cs:
	Add constructor that will return the existing album/artist of the given
	name or create a new one.  Add Save method that inserts/updates.

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	Add static method for determining if a Uri is already in the Library.
	Save the ArtistId/AlbumID when inserting/updating.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	Return this from ApplyValues to allow chaining.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: Don't
	import files that are already imported.  Set the DateAdded.
	Find/create/associate artist and album.

	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs: Add
	implementations to remove and delete tracks.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Fix bug
	where removing tracks would remove them from all playlists.  Add label
	overrides for Remove/Unmap actions.  Override remove/delete track methods.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: Add virtual
	implementations for Remove/Delete methods, and a helper/delegate for
	iterating over a track selection's ranges (used to efficiently remove
	tracks, for example). 

	* src/Core/Banshee.Services/Banshee.Sources/ITrackModelSource.cs: Add
	methods/properties for removing/deleting tracks.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Add HasProperties
	property.

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeActionGroup.cs
	* src/Core/Banshee.ThickClient/Makefile.am: New base class providing some
	helper methods.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Use
	BansheeActionGroup helpers.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Add
	RemoveTracksFromLibraryAction and DeleteTracksFromDriveAction.  If
	mutliple files are selected, don't preset the rating (so we don't have to
	scan all files).  Add ConfirmRemove method for confirmation dialogs.

2007-12-19  Sebastian Dröge  <slomo@circular-chaos.org>

	* src/Core/Banshee.Base/NetworkManager/Manager.cs: Work around
	ndesk-dbus bug that might cause type name clashes by renaming IManager
	to INetworkManager.This fixes network detection (BGO: #504012).

2007-12-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/ErrorSource.cs: Fix binding
	bug.

2007-12-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellDateTime.cs:
	* src/Core/Banshee.ThickClient/Makefile.am: New cell renderer for DateTime
	objects that returns String.Empty if the DateTime is DateTime.MIN_VALUE.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Use ColumnCellDateTime for date added/last played.

2007-12-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.AudioProfiles/ProfileManager.cs: Fix
	build.

2007-12-14  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.AudioProfiles/ProfileManager.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Make
	the ProfileManager an IService and register it with the ServiceManager.

2007-12-14  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Makefile.am: Add Banshee.AudioProfiles.Gui
	to build.

2007-12-14  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Base/Localization.cs:
	* src/Core/Banshee.Core/Banshee.Base/Localization.cs:
	* src/Core/Banshee.Core/Makefile.am: Move file/add to build.

	* src/Core/Banshee.Services/Makefile.am: Add Banshee.AudioProfile to build.

2007-12-14  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Base/Banshee.AudioProfiles.Gui/*:
	* src/Core/Banshee.ThickClient/Banshee.AudioProfiles.Gui/*: Move files.

2007-12-14  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Base/Banshee.AudioProfiles/*:
	* src/Core/Banshee.Services/Banahsee.AudioProfiles/*: Move files.

	* src/Core/Banshee.Services/Banshee.Playlists.Formats/*Format.cs: Take
	ITrackModelSource instead of Source.

2007-12-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Remove Self
	property.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs: Do
	not use Self property, just use null for the property name.  Uncomment all
	the columns.

	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeCacheableModelAdapter.cs:
	Comment out FetchSet logging.

2007-12-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Clean up some code, move
	Rectangle allocation and setting of common parts to outside of loops.

2007-12-13  Gabriel Burt  <gabriel.burt@gmail.com>

	This patch changes the way objects are bound to the ListViews, removing
	the FieldIndex attributes, instead passing a property name (or null to
	return the object itself) instead.  SelectAll/None actions are added.
	Commented out code for the rest of the TrackInfo columns also added.

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	Load PlayCount, SkipCount, LastPlayed, and DateAdded when loading the
	track from the database.

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Handle sorting on Year, Duration, Rating, PlayCount, SkipCount,
	LastPlayed, DateAdded, and RelativeUri.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Fix error in our migration - we had DateAdded and LastPlayed swapped.

	* src/Core/Hyena.Gui/Hyena.Data.Gui/Column.cs:
	* src/Core/Banshee.Services/Banshee.Sources/ErrorSource.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/AlbumListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtistListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Use property names instead of FieldIndexes.

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellAlbum.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellDuration.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellPlaybackIndicator.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ColumnHeaderCellText.cs:
	Change ctors to use property name string instead of FieldIndex.

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Fix typo.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Add
	SelectAll/SelectNone actions.

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ColumnCell.cs: In BindListItem use
	the property name to get the PropertyInfo object instead of iterating
	over all properites looking for the right one.


	* src/Core/Hyena.Gui/Hyena.Data.Gui/ObjectListView.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ColumnController.cs: Change Append to
	Add and add AddRange method.

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Move the
	SelectAll/SelectNone handler inside the OnKeyPress method.  Invalidate
	the ListWindow whenever the selection is changed.

	* src/Core/Hyena/Hyena.Collections/Selection.cs: Add SelectAll method and
	change MaxIndex to actually represent the max index, not the max size.

	* src/Core/Hyena/Hyena.Data/ColumnDescription.cs: Instead of using a
	FieldIndex specified by the ListItemSetup attribute, use a string that
	gives the name of the property to get the column's value from.

	* src/Core/Banshee.Core/Banshee.Collection/AlbumInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/ArtistInfo.cs:
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs:
	* src/Core/Hyena/Hyena.Data/ListItemSetup.cs:
	* src/Core/Hyena/Makefile.am: Remove ListItemSetup.

2007-12-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	Remove named-parameter ctor for BansheeDbCommand - was ambiguous with the
	ctor where you can pass an object [] of values if your values were all
	strings.

	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs: Update base
	ctor call, set CanRename = false, set a custom GtkActionPath for our
	LibraryContextMenu.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Implement
	IUnmapableSource.

	* src/Core/Banshee.Services/Banshee.Sources/DatabaseSource.cs: 
	* src/Core/Banshee.Services/Banshee.Sources/ErrorSource.cs: Update base
	ctor call, passing generic_name.

	* src/Core/Banshee.Services/Banshee.Sources/IImportable.cs: Bring
	interface over.

	* src/Core/Banshee.Services/Banshee.Sources/ISource.cs: Remove Unmap
	method, add GenericName property.

	* src/Core/Banshee.Services/Banshee.Sources/IUnmapableSource.cs: New
	interface for sources that can be unmapped.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Add GenericName
	and CanRename properties.

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Remove
	unused using.

	* src/Core/Banshee.Services/Makefile.am: Add IUnmapableSource and
	IImportable.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Rename Popup to ContextMenu.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs: Add
	and handle SourceContextMenu, add method for setting source actions
	sensitive/hidden based on the source, and for updating labels.  Copy
	method for confirming deletion of a source over from AbstractPlaylistSource.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Override
	OnPopup handler to trigger the SourceContextMenu action.

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Add
	LibraryContextMenu.

2007-12-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Nereid/Nereid/ViewContainer.cs: If the view content is the
	same, don't remove and readd it, avoiding flickering.

2007-12-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs:
	Bring back the exception handling.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/CompositeTrackListView.cs:
	Don't assume the new models will be null, fixing bug with viewing the Error
	Source.

2007-12-10  Aaron Bockover  <abock@gnome.org>

	* src/nuke-core-tables:
	* src/run-banshee: Some scripts to help development

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	Moved the insert/update calls from CoreTracksSchema

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs: Added
	AddNamedParameter method

	* src/Core/Banshee.Services/Banshee.Database/TableSchema.cs: Generic 
	table schema code to parse table definitions and generate basic insert
	update commands

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Fixed some comment junk

2007-12-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeCacheableModelAdapter.cs:
	Change select command to be a reusable BansheeDbCommand.

	* src/Core/Banshee.Services/Banshee.Collection.Database/CoreTracksSchema.cs:
	Get track update commands working.

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	Add ArtistId and AlbumId properties.  Change Commit method to Save.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: Call
	Save not Commit.

2007-12-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* build/Common.Makefile:
	* build/build.environment.mk:
	* build/m4/banshee/mono-addins.m4: Add Mono.Addins.Setup/Gui dependency
	check.  Change from Mono.Data.SqliteClient to Mono.Data.Sqlite.

	* src/Core/Banshee.Services/Banshee.Collection.Database/CoreTracksSchema.cs:
	Update the generation of the insert_command and update_command so they are
	reused.

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	Add setter on DbId so CoreTracksSchema can set it.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	Switch to Mono.Data.Sqlite, change DbCommand to BansheeDbCommand.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Rewrite
	add/remove tracks from playlist queries to be reusable.

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Add
	Manage Extensions action.

2007-12-06  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Collection.Database/CoreTracksSchema.cs:
	Schema information about the CoreTracks table and handles any insert
	and update commands for the table

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	Added a Commit method and oved the Columns enum to CoreTracksSchema

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: 
	Create a LibraryTrackInfo from the files being parsed, call commit
	to save to database; doesn't actually work yet

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs: Added
	the DbParameter/DbCommand stuff back from the old Banshee

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Added a null check
	in ToString

2007-12-06  Gabriel Burt  <gabriel.burt@gmail.com>

	Highlights: Now remembers scroll position for track/artist/album lists 
	per source. Selection of track/artist/albums with keyboard now possible.

	* src/Core/Banshee.Services/Banshee.Collection/BansheeListModel.cs: Clear
	the selection when the model is reloaded.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/CompositeTrackListView.cs:
	Keep track of scroll positions on a per-model basis, and restore scroll
	positions when we switch models.  Changes to selection and artist/album
	filtering.

	* src/Core/Banshee.Widgets/Banshee.Widgets/SearchEntry.cs: Don't trigger
	the OnChanged timeout if not Ready.

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: 
	Fix errors in calculating the vadjustment height etc so we can scroll to
	the last item.  Implement selecting items with they keyboard.  Fix off by
	one bug in SelectAll that led to NRE when iterating the selection with a
	ModelSelection (unless you checked for it).  Add option to scroll to a
	given point when changing the model, used by CompositeTrackListView.

	* src/Core/Hyena/Hyena.Collections/Selection.cs: Keep track of the first
	index selected, and add method for selecting from that point to another
	point (used for keyboard and mouse selection on the ListView).

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Fix bug so filter query is
	actually restored when switching sources.

2007-12-04  Gabriel Burt  <gabriel.burt@gmail.com>

	The main point of this change is to make Selections tied to a specific
	model, which in turn are already tied to a specific source.  So, if you
	have some artists and/or albums and/or tracks selected in your Library,
	switch to a playlist, then switch back, they will still be selected when
	you get back.

	* src/Core/Hyena/Hyena.Data/IListModel.cs: Add a Selection property.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Collection/BansheeListModel.cs: New
	abstract base class to avoid duplications, implement Selection property of
	IListModel.

	* src/Core/Banshee.Services/Banshee.Collection/AlbumListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection/ArtistListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection/TrackListModel.cs: Subclass
	from BansheeListModel.

	* src/Core/Banshee.Services/Banshee.Sources/ErrorSource.cs: Add Selection
	implementation.

	* src/Core/Banshee.Services/Banshee.Collection/IHasTrackSelection.cs:
	Return a SelectionProxy instead of a Selection, because the Selection will
	change for the ListView depending on what source is selected, and we only
	care about the currently displayed one.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtistListView.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/AlbumListView.cs:
	Don't set the selection to the first item automatically; that is done in
	the model now.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/CompositeTrackListView.cs:
	Add method for changing all three models at once.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Listen to the
	events on the track SelectionProxy not the Selection itself.

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Add SelectionProxy
	property, use the Selection property everywhere and remove the selection
	instance variable, since the Selection belongs to the model now, and that
	can change.

	* src/Core/Hyena/Hyena.Data/Selection.cs:
	* src/Core/Hyena/Hyena.Collections/Selection.cs: Move to the appropriate
	folder for its namespace, and remove Owner property.

	* src/Core/Hyena/Makefile.am:
	* src/Core/Hyena/Hyena.Collections/SelectionProxy.cs: New file that has
	events for when its selection is updated and for when its selection is
	changed to a different one.

	* src/Core/Hyena/Hyena.Data/ModelSelection.cs: Comment out unfinished
	method.

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Updated to new ListView API.

2007-12-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	Whitespace, and add commented out BansheeDbCommand class that will be
	useful if/when we use Mono.Data.Sqlite and prepared statements.

2007-12-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs: Don't
	subclass from QueuedSqliteDatabase.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Revert changes made when I switched to QueuedSqliteDatabase.

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: Sort
	whitelist in static constructor.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	Temporarily comment out some queries.

2007-11-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Prevent
	crashing when a TrackInfo is null.

2007-11-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Widgets/Banshee.Widgets/RatingEntry.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/RatingMenuItem.cs: Whitespace.

2007-11-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/RatingActionProxy.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/RatingEntry.cs: If all the
	selected tracks have the same rating, prepopulate it.  Actually set the
	Rating on all the tracks when Activated.

2007-11-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Core/Banshee.Base/*:
	* src/Core/Banshee.Core/Banshee.Collection/*: White space and license
	header cleanup.

2007-11-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Activate the TrackPopupAction instead of showing the popup manual
	manually.

	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Add
	and handle RateTracksAction and TrackPopupAction.

	* src/Core/Banshee.Widgets/Banshee.Widgets/ComplexMenuItem.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/RatingMenuItem.cs: Update
	license header, override OnAdded and OnRemoved to allow using with
	Gtk.UIManager.

	* src/Core/Banshee.Widgets/Banshee.Widgets/RatingEntry.cs: Update license
	header.

	* src/Core/Banshee.Widgets/Banshee.Widgets/CustomActionProxy.cs:
	* src/Core/Banshee.Widgets/Banshee.Widgets/RatingActionProxy.cs:
	* src/Core/Banshee.Widgets/Makefile.am: New files to enable setting custom
	MenuItem subclasses as proxies for Gtk.Actions.  Abstracts out repetitive
	logic for inserting menu items at a particular position.

2007-11-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Makefile.am: Use BANSHEE_DEV_OPTIONS env var so developers can
	have make run use an alternate db (with
	BANSHEE_DEV_OPTIONS="--db=/alternate/banshee/db") and so I stop committing
	my hardcoded hack.

2007-11-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui/InterfaceActionService.cs:
	Add Track and Source action groups here instead of from PlayerInterface.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Add properties
	so PlayerInterface can set itself as the provider of things these actions
	groups need.

	* src/Core/Nereid/Nereid/Client.cs: Fix typo.

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Set action group properities,
	don't instantiate them.

2007-11-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Base/QueuedSqliteDatabase.cs:
	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Database/QueuedSqliteDatabase.cs:
	Migrate QueuedSqliteDatabase class over, mostly unchanged.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	Inherit from QueuedSqliteDatabase.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeCacheableModelAdapter.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Update database queries.

	* src/Core/Banshee.Services/Banshee.Collection/IHasTrackSelection.cs: Add
	method for getting the TrackModel, used by PlaylistSource to efficiently
	add/remove tracks.

	* src/Core/Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Add
	ability to create new PlaylistSource and have it be automatically saved to
	the db or not. New AddTracks and RemoveTracks methods that use the
	Selection's Ranges to efficiently add/remove tracks.

	* src/Core/Banshee.Services/Banshee.Sources/Source.cs: Bring Sort methods
	and classes over.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Override OnPopupMenu to actually pop up the track context menu.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs: Check
	for null tracks.

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Remove
	'Action' suffix from action handler's name for consistency/brevity.

	* src/Core/Nereid/Nereid/PlayerInterface.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/IHasSourceView.cs: New
	interface that PlayerInterface implements so SourceActions can get the
	highlighted source.  Instantiate SourceActions the same as TrackActions.

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Port
	changes from stable branch: add a second column to the TreeStore for
	source order, and sort by it.

	* src/Core/Banshee.ThickClient/Banshee.Gui/SourceActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: 
	* src/Core/Banshee.ThickClient/Makefile.am: New SourceActions class,
	handle RenameSource, NewPlaylist, AddToPlaylist, AddToNewPlaylist, and
	RemoveTracks actions.

	* src/Core/Hyena/Hyena.Data/Selection.cs: Provide access to the Ranges of
	the Selection, enabling extremely fast playlist track addition/removal.

2007-11-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Improve
	handling of child sources -- add them to the SourceManager automatically.
	Child sources with children should be possible (though probably not
	advisable).

	* src/src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Don't
	manually add Playlists to the SourceManager since they are implicitly
	added by being children of the Library.

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Handle context menu mouse
	clicks by calling OnPopupMenu.

2007-11-27  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena/Hyena.Data/Selection.cs:
	* src/Core/Hyena/Hyena.Collections/RangeCollection.cs: Check for NET_2_0
	to use generics internally, otherwise implemented 1.1 supported for use
	inside Managed Windows Forms; implemented IndexOf and partial 
	implementation of indexer

	* tests/Hyena/RangeCollectionTests.cs: More tests

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellAlbum.cs:

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ArtworkPopup.cs:
	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkRenderer.cs:
	Dispose pixbuf when done

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkManager.cs:
	Do not cache pixbufs and added a LookupScale that will save the scaled
	version to disk for subsequent lookups; reduces memory usage ... a lot

	* src/Core/Banshee.Services/Banshee.Collection/IHasTrackSelection.cs:
	* src/Core/Hyena/Hyena.Data/ModelSelection.cs: 
	* src/Core/Nereid/Nereid/PlayerInterface.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs:
	Updated to reflect namespace change

	* src/Core/Hyena.Gui/Hyena.Gui/CairoExtensions.cs: Implemented Pop/Push
	Group methods that will use reflection to invoke them in the managed
	Cairo binding if they exist or fall back on P/Invoke if they do not;
	reflection results are cached for efficient subsequent calls

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Go back to using Push/Pop Group methods ala the new interop wrapping;
	gets rid of a huge memory leak

2007-11-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: When changing the
	selection avoid having the Selection raise two Changed events by passing
	raise = false to Clear.

2007-11-24  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Collection/AlbumInfo.cs: Ignore any
	part of the album/artist string that ends in a (.*) 

2007-11-22  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena/Hyena.Data/Selection.cs: Updated to use RangeCollection

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Updated to reflect
	API change in Selection

2007-11-22  Aaron Bockover  <abock@gnome.org>

	* Core/Hyena/Hyena.Collections/RangeCollection.cs: New collection for
	storing ordered ranges that supports efficient add/remove of indexes

	* Core/Hyena/Hyena.Collections/IStackProvider.cs: Moved to new 
	Hyena.Collections namespace

	* Core/Banshee.Core/Banshee.Kernel/IntervalHeap.cs: Reset count

	* tests/Hyena/RangeCollectionTests.cs: Added unit tests for RangeCollection

2007-11-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Services.mdp:
	* src/Core/Banshee.Services/Banshee.Collection/IHasTrackSelection.cs: Add
	new interface used by TrackActions to get the selected tracks.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs: Change
	the ctor to take an Enumerable<TrackInfo> instead of a List<TrackInfo> so
	we can avoid putting all the TrackInfos in memory at once.

	* src/Core/Banshee.ThickClient/Makefile.am:
	* src/Core/Banshee.ThickClient/Banshee.ThickClient.mdp:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml
	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs:
	* src/Core/Banshee.ThickClient/Banshee.Gui/TrackActions.cs: Add Edit menu
	and Track Properties menu item.

	* src/Core/Hyena/Makefile.am:
	* src/Core/Hyena/Hyena.mdp:
	* src/Core/Hyena/Hyena.Data/ModelSelection.cs: New file that takes a Model
	and Selection and is an IEnumerable<T> over the selection.  Will be an
	IList<T> soon.

	* src/Core/Makefile.am:
	* src/Core/Nereid/Nereid/Client.cs:
	* src/Core/Nereid/Nereid/PlayerInterface.cs: Implement IHasTrackSelection
	and create TrackActions.

2007-11-19  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlaybackControllerService.cs:
	Many improvements in the controller logic, but still a lot to tweak; at 
	least it is mostly usable now; implement StopWhenFinished

	* src/Core/Banshee.Services/Banshee.MediaEngine/IPlaybackController.cs:
	The DBus interface to expose for the playback controller

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Show
	some of the old actions, like the shuffle mode and stop when finished

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Implement
	shuffle and stop when finished

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Moved open
	location action to here from PlaybackActions

2007-11-19  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Collection/TrackListModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeCacheableModelAdapter.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/IDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	Support IndexOf method for getting the index in the model of a track; 
	used by the PlaybackController for determining linear next

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	Store the index of the track from the database

	* src/Core/Banshee.Services/Banshee.MediaEngine/IPlayerEngineService.cs:
	DBus interface for the player engine

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineState.cs:
	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineEvent.cs:
	Added DBus worthy signal delegates

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Implement IPlayerEngineService, the DBus interface

2007-11-18  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/CompositeTrackListView.cs:
	Reset the artist/album filter if the browser is hidden

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ArtworkPopup.cs:
	Ported the artwork popup, always wrap the label if the layout width
	of the text is larger than the image width

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs: 
	Show the ArtworkPopup when the header is touched by the mouse 

2007-11-18  Aaron Bockover  <abock@gnome.org>

	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationArea.cs:
	* src/Extensions/Banshee.NotificationArea/Banshee.NotificationArea/NotificationAreaService.cs:
	Began porting the notification area plugin; not functional yet

	* src/Extensions/Banshee.NotificationArea/Resources/Banshee.NotificationArea.addin.xml:
	Addin spec for the notification area service

	* src/Core/Banshee.Services/Banshee.Services.addin.xml:
	* src/Core/Banshee.ThickClient/Banshee.ThickClient.addin.xml:
	* src/Backends/Banshee.GStreamer/Banshee.GStreamer.addin.xml: Changed 'Core'
	addin to Banshee.Services

2007-11-18  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/CompositeTrackListView.cs:
	Allow the browser to be shown/hidden

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Implement OnUnmapped,
	set WidgetFlags.Mapped/Unmapped when appropriate

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Use Show, not ShowAll for
	showing the view container

2007-11-17  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellAlbum.cs:
	Do not draw the second line if the artist informatio is unset

2007-11-17  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/CompositeTrackListView.cs:
	Allow the browser to be shown at either the top or the left of the 
	track view; merge an action UI into the menu for toggling between the
	two modes

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Added
	a placeholder for the browser view menu options

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Add proper padding
	for the right side of the text to the pango layout

	* src/Core/Banshee.ThickClient/Banshee.Gui/InterfaceActionService.cs: 
	* src/Core/Banshee.ThickClient/Banshee.Gui/ViewActions.cs: Added view
	menu actions

2007-11-16  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Fix the vadjustment
	to account for the FooterHeight; Make FooterHeight reflect the BorderWidth

2007-11-16  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Set RulesHint to true to show alternating row background colors

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Properly draw RulesHint

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListViewGraphics.cs: Added DrawRowRule

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs:
	Fix build error

2007-11-16  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellAlbum.cs:
	Use ArtworkRenderer to render the thumbnail of the cover; do the layout
	of the text properly

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkRenderer.cs:
	Extracted the cover art rendering from TrackInfoDisplay so we can render
	the same style of cover in many places

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Change the cell rendering
	API; use CellContext, save/clip/render/restore for cell renderers to make
	writing cell renderers simpler; do not allow resizing below a miniumum

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellPlaybackIndicator.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ColumnHeaderCellText.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ColumnCell.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs:
	Updated to reflect the API changes for cell renderers

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListViewGraphics.cs: Added Text color
	support; made the BorderRadius public

	* src/Core/Hyena.Gui/Hyena.Data.Gui/IHeaderCell.cs: Interface to expose
	a MinWidth for text in the headers

	* src/Core/Hyena.Gui/Hyena.Data.Gui/CellContext.cs: A context of stuff
	to pass to cell renderers to avoid the Render() calls from growing an
	insane amount of arguments

	* src/Core/Hyena.Gui/Hyena.Gui/CairoExtensions.cs: Changed Namespace

2007-11-16  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeCacheableModelAdapter.cs:
	Comment out verbose debugging output.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbConnection.cs: Add
	--db option for specifying exactly what database file to use.  Helpful for
	being able to use stable and trunk versions simultaneously.

2007-11-16  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Use TrackInfo.AudiblyEqual instead of a reference check to determine if 
	the input track is the track that is currently playing

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Implement
	AudiblyEqual, a method used to determine if the two tracks are probably
	the same, based on artist, album, and track title information, regardless
	of managed reference differences or even source stream differences

2007-11-16  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Implement proper sorting for all columns. Muy Caliente.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs: 
	Make the Track column a SortableColumn

2007-11-16  Aaron Bockover  <abock@gnome.org>

	* Banshee.Services/Banshee.Sources/DatabaseSource.cs: Return 
	UnfilteredCount instead of Count on the model for the source count if
	the model is IFilterable

	* Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Implement UnfilteredCount so the source count doesn't change when a
	filter is applied to the model

	* Hyena/Hyena.Data/IFilterable.cs: Added an UnfilteredCount property

2007-11-16  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Use a ColumnCellDuration for the duration column

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellDuration.cs:
	A cell renderer that formats TimeSpan objects in a pretty way

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs: Added a virtual
	Text property so making new text renderers is a snap

2007-11-16  Aaron Bockover  <abock@gnome.org>

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Ported the code to add/remove
	the accelerator binding on key press event to prevent them from conflicting
	with search; adds the key bindings for focusing search

	* src/Core/Nereid/Nereid/ViewContainer.cs: Explicitly show search entry

	* src/Core/Banshee.Widgets/Banshee.Widgets/SearchEntry.cs: Set NoShowAll
	so ShowAll doesn't affect the clear button

	* src/Core/Hyena.Gui/Hyena.Gui/GtkUtilities.cs: A crappy class for
	random GTK routines that really can't go anywhere else; added 
	IsImportantModifierSet

2007-11-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeCacheableModelAdapter.cs:
	Fix small build-stopping bug.

2007-11-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Hyena/Hyena.Data/CacheableModelAdapter.cs: New abstract class
	that partially implements a Dictionary-based caching strategy for models.

	* src/Core/Hyena/Hyena.Data/ICacheableModel.cs: Interface that Models must
	implement to work with CacheableModelAdapters.

	* src/Core/Banshee.Services/Banshee.Collection.Database/IDatabaseModel.cs:
	Interface that defines basic database-related properties on Models that
	the adapter needs to generically implement limit/offset based lookups on
	the model.

	* src/Core/Banshee.Services/Banshee.Collection.Database/BansheeCacheableModelAdapter.cs:
	Implementation of CacheableModelAdapter using SQL and the Banshee.Database
	connection that combines the Dictionary cache with limit/offset queries to
	improve speed.

	* src/Core/Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	* src/Core/Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Use the BansheeCacheableModelAdapter instead of implementing the same
	caching/limit+offset strategy three times.

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Chnage CoreTracksCache to just CoreCache as it is used by any Model that
	uses the BansheeCacheableModelAdapter.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Hyena/Makefile.am: Add new files.

2007-11-15  Sebastian Dröge  <slomo@circular-chaos.org>

	* src/Core/Banshee.Base/PowerManagement.cs: Add support for
	gnome-power-manager >= 2.19 while keeping support for older
	versions (BGO: #492195)

2007-11-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Base/Gui/SeekDialog.cs:
	* src/Core/Banshee.Base/Gui/TrackEditor.cs:
	* src/Core/Banshee.Base/Hyena.Gui/EntryEraseAction.cs:
	* src/Core/Banshee.Base/Hyena.Gui/EntryInsertAction.cs:
	* src/Core/Banshee.Base/Hyena.Gui/EntryUndoAdapter.cs: Remove from
	Banshee.Base, all have been moved into new structure.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/TrackEditor.cs:
	* src/Core/Banshee.ThickClient/Makefile.am: Add TrackEditor, not yet used.

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/CompositeTrackListView.cs: 
	* src/Core/Hyena.Gui/Hyena.Data.Gui/Selection.cs:
	* src/Core/Hyena/Hyena.Data/Selection.cs:
	* src/Core/Hyena.Gui/Makefile.am:
	* src/Core/Hyena/Makefile.am: Move Selection from Hyena.Gui to Hyena.

2007-11-13  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena/Hyena.Data/ColumnDescription.cs: A non-GUI base class
	for columns, so basic column setup can be done at the model level

	* src/Core/Hyena/Hyena.Data/IListModel.cs: Added IObjectListModel

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Support IObjectListModel 
	sources

	* src/Core/Hyena.Gui/Hyena.Data.Gui/Column.cs: Extend ColumnDescription

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ObjectListView.cs: Wrapper view for
	simple IObjectListModels

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ColumnController.cs: Be eventful

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Make some model event
	handler methods virtual

	* src/Core/Banshee.Services/Banshee.Sources/SourceManager.cs: Call 
	source.Activate after raising the notification of change

	* src/Core/Banshee.Services/Banshee.Sources/ErrorSource.cs: Implement
	a simple IObjectListModel source for displaying errors

	* src/Core/Banshee.Services/Banshee.Library/LibrarySource.cs: Add a 
	child ErrorSource

	* src/Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: Add
	import errors to the Library's ErrorSource

2007-11-13  Aaron Bockover  <abock@gnome.org>

	* configure.ac: 
	* src/Core/Nereid/banshee2.in: For the sake of development, call the
	project "banshee2" - this means trunk will be installed to 
	$(libdir)/banshee2 and the executable is "banshee2" NOTE: this does not
	mean "Banshee v2.0!" This change is only temporary for the sake of allowing
	trunk to be installed without conflicting with stable. Do not read too
	much into the 2 part :)

	Do rm -rf ~/.config/banshee/addins after make install to ensure the
	installed version runs cleanly.

	* src/Core/Banshee.Services/Makefile.am:
	* src/Core/Banshee.Services/Banshee.Services.addins: Include a .addins
	file to tell Mono.Addins where to look for installed addins

	* build/build.environment.mk: Install to pkglibdir again

2007-11-12  Aaron Bockover  <abock@gnome.org>

	* Banshee.Services/Banshee.Collection/ImportManager.cs: Actually register
	the user job with the manager, allow it to be cancelled, and show
	a nice message if it is empty

	* Banshee.Services/Banshee.Library/LibraryImportManager.cs: Implemented
	the TagLib tag reading, make a nice display of the import process,
	and do extension-based whitelisting as a precondition to the tag parse

	* Banshee.Core/Banshee.Streaming/StreamTagger.cs: Fixed ProcessUri to
	not check for a mimetype

2007-11-12  Aaron Bockover  <abock@gnome.org>

	* autogen.sh: Use my new autogen script that's been used in podsleuth 
	and other projects - no dependency on gnome-autogen, which has been a
	big pain for banshee; also sets -Wno-portability -Wno-syntax on automake
	so it will STFU about our Makefile.ams, which has been a problem in 
	Mono projects and the latest automake

2007-11-12  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Fully fixed the missing_pixbuf translation glitch - was using the wrong
	rectangle for the illusion squasher fill

2007-11-12  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	First pass at fixing a missing_pixbuf->not missing transition glitch;
	center the text on the middle of the cover art on the y-axis

2007-11-11  Aaron Bockover  <abock@gnome.org>

	* Nereid/Nereid/PlayerInterface.cs: Add the AccelGroup from 
	InterfaceActionService; tseng should be happy

	* Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs: Implement GUI 
	handler for Log

	* Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Enable the help links

	* Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Implemented
	open locaiton and restart song

	* Banshee.ThickClient/Banshee.Gui.Dialogs/OpenLocationDialog.cs:
	* Banshee.Services/Banshee.Web/Browser.cs:
	* Banshee.Services/Banshee.Streaming/RadioTrackInfo.cs: 
	* Banshee.Services/Banshee.Playlists.Formats.Xspf:
	* Banshee.Services/Banshee.Playlists.Formats: Ported from old Banshee

2007-11-11  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs:
	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Added help menu

	* src/Core/Banshee.Core/Banshee.Streaming/StreamTagger.cs:
	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Removed legacy
	cover art lookup junk

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/AboutDialog.cs: Ported
	the about dialog

	* src/Core/Banshee.Core/Banshee.Base/Paths.cs: Removed a bunch of
	old path stuff

	* src/Core/Banshee.Core/Banshee.Base/ConfigureDefines.cs.in: Finally nuked

	* src/Core/Banshee.Core/Banshee.Base/ProductInformation.cs: Moved over

	* build/TranslatorExtract.cs: Moved to build

2007-11-11  Aaron Bockover  <abock@gnome.org>

	* Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: 
	* Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Added
	import music

	* Core/Banshee.ThickClient/Banshee.Library.Gui/ImportDialog.cs: Ported
	the import music dialog

	* Core/Banshee.ThickClient/Banshee.Gui.Dialogs/FileChooserDialog.cs:
	* Core/Banshee.ThickClient/Banshee.Gui.Dialogs/ImageFileChooserDialog.cs:
	Ported the file chooser dialogs

	* Core/Banshee.ThickClient/Banshee.Library.Gui/FileImportSource.cs:
	* Core/Banshee.ThickClient/Banshee.Library.Gui/FolderImportSource.cs:
	* Core/Banshee.Services/Banshee.Library/HomeDirectoryImportSource.cs:
	* Core/Banshee.Services/Banshee.Library/IImportSource.cs:
	Ported the IImportSource sources

	* Core/Banshee.Services/Banshee.Library/ImportSourceManager.cs: Implemented
	a new ImportSourceManager that loads IImportSources using Mono.Addins

	* Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Load
	LibraryImportManager and ImportSourceManager services

	* Core/Banshee.Services/Banshee.Library/LibraryImportManager.cs: Extend
	ImportManager for importing to the library

	* Core/Banshee.Services/Banshee.Collection/ImportManager.cs: Ported the
	ImportManager

	* Core/Banshee.Core/Banshee.IO/IOProxy.cs: Use Log.Debug

	* Core/Banshee.Core/Banshee.Base/Log.cs: Added timer debug methods

	* Core/Banshee.Services/Banshee.ServiceStack/UserJob.cs: Added 
	IsCancelRequested property

	* Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTile.cs: Listen
	to StyleSet to reload pixbufs

	* Core/Nereid/Nereid/Client.cs: Remove the TestUserJob stuff

2007-11-11  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/CommonServices.cs: Helper
	class to boot common GUI services

	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkBaseClient.cs: Base class
	for any GTK client to use for booting the core

	* src/Core/Nereid/Nereid/Entry.cs: Fixed up to use GtkBaseClient

	* src/Core/Banshee.Services/Banshee.ServiceStack/IUserJob.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/UserJob.cs: Added a Name
	property, which should never change and should be concise

	* src/Core/Banshee.Services/Banshee.ServiceStack/TestUserJob.cs: Updated,
	actually allow it to be canceled

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTile.cs: Support
	actually cancelling jobs, show a pretty dialog

2007-11-11  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/GladeWindow.cs: Look
	for the glade file in the calling assembly not the executing one.
	
	* src/Core/Banshee.ThickClient/Banshee.Gui.Dialogs/SeekDialog.cs: Ported
	from old dialog, using new ConnectedSeekSlider.

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedSeekSlider.cs:
	Provide getter for Label so the seek dialog can make the font larger.

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Handle the
	seek to action.

	* src/Core/Banshee.ThickClient/Makefile.am: add new SeekDialog.cs

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Uncomment the Seek To action.

2007-11-11  Aaron Bockover  <abock@gnome.org>

	* Banshee.Services/Banshee.ServiceStack/IUserJob.cs: Interface for UserJobs

	* Banshee.Services/Banshee.ServiceStack/UserJob.cs: Base UserJob class,
	suitable for most cases when a UserJob is needed

	* Banshee.Services/Banshee.ServiceStack/UserJobEventHandler.cs: Event
	handler and argument class for UserJob events

	* Banshee.Services/Banshee.ServiceStack/UserJobManager.cs: A manager
	class for keeping track of UserJobs

	* Banshee.Services/Banshee.ServiceStack/TestUserJob.cs: An exhaustive,
	interesting test case for the UserJob stack

	* Banshee.Services/Banshee.ServiceStack/Application.cs: Added Invoke
	and RunIdle methods

	* Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTile.cs: GUI tile 
	representing a single UserJob

	* Banshee.ThickClient/Banshee.Gui.Widgets/UserJobTileHost.cs: GUI container
	for managing the display of the UserJobTile widgets

	* Nereid/Nereid/PlayerInterface.cs: Pack in a UserJobTileHost

	* Nereid/Nereid/Entry.cs: Implement RunIdle and kick off some TestUserJobs

2007-11-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Base/Log.cs: Make the log output nicer

2007-11-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedSeekSlider.cs:
	Add null check

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Do not use Push/Pop since there appear to be problems with it missing
	in Mono 1.2.4, at least in Ubuntu Gutsy; ugly workaround. Only fade
	in/out the artist/album information if it changes

	* src/Core/Hyena.Gui/Hyena.Gui/CairoExtensions.cs: Remove Push/Pop wrapper
	stubs as they aren't needed; added a ContextDispose 

2007-11-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtistListView.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ColumnCellText.cs:
	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Fix a bunch of warnings

	* src/Core/Hyena.Gui/Hyena.Gui/CairoExtensions.cs: Stubbed out the
	push/pop group methods that were introduced in Cairo 1.2/Mono 1.2.5;
	they can be filled in to implement backwards compat, but simply
	wrap the Mono.Cairo provided API right now

2007-11-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs: 
	Refactored some of the animation logic, fade old track text out and
	new track text in while the cover art xfades

2007-11-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/InterfaceActionService.cs:
	Provide an expand override for adding items to toolbars

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml:
	Remove the spacing, since the track info header will expand

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Draw pango layouts for displaying the track information

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Expand the TrackInfoDisplay

	* src/Core/Hyena.Gui/Hyena.Data.Gui/CairoExtensions.cs: Added 
	ColorGetHex and ColorAdjustBrightness methods

2007-11-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs:
	Use a timeout instead of idle to limit the number of frames rendered;
	if debugging is on, print the number of fps per transition

	* src/Core/Banshee.Core/Banshee.Base/Log.cs: Added a DebugFormat method

2007-11-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedSeekSlider.cs:
	An adaptor around the seek slider and stream position label that connects
	itself to the necessary engine events

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/TrackInfoDisplay.cs: 
	A connected header view for showing cover art and track information; 
	currently only shows cover art but is 100% cairo-drawn and does cross
	fading. Sexy.

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Removed all player engine
	event handling; embed ConnectedSeekSlider and TrackInfoDisplay; at this
	point the main client UI is effectively stupid and only embeds smart
	widgets - makes writing new client UIs very, very easy

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListViewGraphics.cs: Properly align
	the selection stroke to the pixel boundary; sharp strokes

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Added missing cr dispose

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Added 
	ArtistAlbumId shortcut property and ArtistAlbumEqual method

2007-11-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* Banshee.Services/Banshee.Collection.Database/AlbumListDatabaseModel.cs:
	* Banshee.Services/Banshee.Collection.Database/ArtistListDatabaseModel.cs:
	* Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	* Banshee.Services/Banshee.Playlist/PlaylistSource.cs:
	* Banshee.Services/Banshee.Sources/DatabaseSource.cs: Filter which artists
	and albums are shown for a source based on the tracks that source has.
	Fix playlists so they actually work.

2007-11-09  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/IconThemeUtils.cs: Avoid
	possible warnings from GdkPixbuf when a resource doesn't exist by 
	checking the manifest resource names in the assembly ahead of time

	* src/Core/Banshee.ThickClient/Resources/*: Migrated some icon resources

	* src/Core/Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Use
	a stock icon for missing source icons

2007-11-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Services/Banshee.Database/BansheeDbFormatMigrator.cs:
	Migrate playlists as well.

2007-11-09  Aaron Bockover  <abock@gnome.org>

	* Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Use QueueDraw

	* Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Connect next
	and previous actions to the playback controller

	* Core/Banshee.Services/Banshee.MediaEngine/PlaybackControllerService.cs:
	Implement rough logic for doing linear/random playback

	* Core/Banshee.Services/Banshee.MediaEngine/PlaybackControllerDatabaseStack.cs:
	Wrap a stock generic stack for now for testing the controller logic

2007-11-09  Aaron Bockover  <abock@gnome.org>

	* Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs: 
	Call QueueDraw instead of protected Invalidate methods

	* Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellPlaybackIndicator.cs:
	Added a paused pixbuf that reflects the player engine playback state

	* Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Provide a public QueueDraw
	that does proper invalidation of the internal windows

	* Core/Banshee.Services/Banshee.MediaEngine/PlaybackControllerService.cs:
	* Core/Banshee.Services/Banshee.MediaEngine/PlaybackRepeatMode.cs:
	* Core/Banshee.Services/Banshee.MediaEngine/PlaybackShuffleMode.cs:
	* Core/Banshee.Services/Banshee.MediaEngine/PlaybackControllerDatabaseStack.cs:
	Stubbed out some API for the new playback controller

	* Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Add the
	playback controller as a default service

	* Core/Hyena/Hyena/UndoManager.cs:
	* Core/Hyena/Hyena/IUndoAction.cs: Moved the Undo Manager

	* Core/Hyena/Hyena/IStackProvider.cs: A generic interface that provides
	a stack data structure

2007-11-09  Sebastian Dröge  <slomo@circular-chaos.org>

	* build/Common.Makefile:
	* build/banshee.pc.in:
	* build/m4/banshee/taglib.m4:
	* configure.ac: Allow building against an external taglib-sharp and
	create a proper pkg-config file when doing so (BGO: #447769, #447768).

2007-11-09  Sebastian Dröge  <slomo@circular-chaos.org>

	* build/m4/shamrock/gstreamer.m4: Allow disabling of the GStreamer
	plugin checks with --disable-gstreamer-plugins-check (BGO: #476500).

2007-11-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellPlaybackIndicator.cs:
	Cell renderer that indicates when a song is the playing song

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/TrackListView.cs:
	Add a ColumnCellPlaybackIndicator, iterate columns and cells to notify
	theme of any theme changes

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ColumnCell.cs: Added a virtual
	NotifyThemeChange so cells can invalidate any theme cached items

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Made invalidation
	methods protected

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Added IsTrackPlaying method

	* src/Core/Banshee.Core/Banshee.Collection/TrackInfo.cs: Added a Self
	property to allow an inline data binding

2007-11-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/InterfaceActionService.cs: 
	Added PopulateToolbarPlaceholder that allows generic widgets to be
	embedded in a toolbar placeholder

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Cosmetic

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: Added
	some more placeholder nodes for other widgets, and added an expanded
	spacing item to create the proper alignments

	* src/Core/Banshee.ThickClient/Banshee.Gui.Widgets/ConnectedVolumeButton.cs:
	A class derived from Bacon.VolumeButton that integrates with 
	PlayerEngineService. Sexy.

	* src/Core/Nereid/Nereid/PlayerInterface.cs: More hotness with the 
	header toolbar, fix spacing/cosmetic issues in the display, and embed
	the ConnectedVolumeButton in the toolbar

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Always set the volume from the schema when starting a new track

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkManager.cs:
	Added a FIXME to just move the old artwork directory, but we'll wait
	until we get closer to a release to keep from messing with Banshee stable

2007-11-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* Banshee.Services/Banshee.Collection.Database/TrackListDatabaseModel.cs:
	Make track caching model work for multiple sources, not just the LibrarySource.

	* Banshee.Services/Banshee.Sources/DatabaseSource.cs:
	* Banshee.Services/Banshee.Library/LibrarySource.cs:
	* Banshee.Services/Banshee.Playlist/PlaylistSource.cs: Generalize
	and move useful functions from the LibrarySource into DatabaseSource so
	they can be used by PlaylistSources too.

	* Banshee.Services/Banshee.ServiceStack/Application.cs: Load playlists when
	the app starts.

	* Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	* Banshee.Services/Banshee.Services.mdp:
	* Banshee.Services/Banshee.Sources/ChildSource.cs:
	* Banshee.Services/Banshee.Sources/Source.cs:
	* Banshee.Services/Makefile.am: Get rid of ChildSource -- allow any Source
	to have a parent set.

2007-11-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ArtworkManager.cs:
	Turned into a service; added a migration path for old legacy cover art

	* src/Core/Banshee.ThickClient/Banshee.Collection.Gui/ColumnCellAlbum.cs:
	Updated to use the ArtworkManager service

	* src/Core/Nereid/Nereid/Entry.cs: Register the ArtworkManager service

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Spaces cleanup

2007-11-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/InterfaceActionService.cs:
	Service for interface actions via Gtk.ActionManager/Gtk.UIManager

	* src/Core/Banshee.ThickClient/Banshee.Gui/GlobalActions.cs: Common
	global actions, like 'Quit'

	* src/Core/Banshee.ThickClient/Banshee.Gui/PlaybackActions.cs: Actions
	specific to controlling playback

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeIconFactory.cs: Custom
	icon factory to load theme icons and resource icons into the stock 

	* src/Core/Banshee.ThickClient/Resources/core-ui-actions-layout.xml: UI
	layout for the menu and toolbar

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Embed the menu and toolbar
	UIs; render the stock Gtk.Toolbar as a plain, styleless widget so it
	blends in with the window background and looks like 'the old Banshee.'

	* src/Core/Nereid/Nereid/Entry.cs: Register the InterfaceActionService

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Added a TogglePlaying method that just does the right thing; raise
	a new PlayWhenIdleRequest event if playback is requested but the engine
	is idle

	* src/Core/Banshee.Widgets/Banshee.Widgets/GenericToolItem.cs: A generic
	widget container for embedding in a Gtk.Toolbar

2007-11-08  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient/Banshee.Gui/BansheeIconFactory.cs: Stubbed
	icon factory for our icons

	* src/Core/Banshee.ThickClient/Banshee.Gui/GtkElementsService.cs: 
	Instantiate a BansheeIconFactory

	* src/Core/Banshee.Widgets/Banshee.Widgets/StreamPositionLabel.cs: Accept
	milliseconds, not seconds

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs: Deliver
	timing information in milliseconds, not seconds

2007-11-07  Aaron Bockover  <abock@gnome.org>

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Added the seek slider stuff

2007-11-07  Aaron Bockover  <abock@gnome.org>

	* src/Core/Nereid/Nereid/PlayerInterface.cs: Connect the RowActivated
	event on the track view to the PlayerEngineService to get the first
	working playback in the new banshee

	* src/Core/Banshee.Services/Banshee.Collection.Database/LibraryTrackInfo.cs:
	Set CanPlay, since ... it can

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Provide
	a property for accessing the PlayerEngineService

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Fix design of RowActivted

2007-11-07  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.MediaEngine/PlayerEngineService.cs:
	Ported the old PlayerEngineCore to be a service and to load its engines
	from Mono.Addins

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Make
	PlayerEngineService a built-in service

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceStartedHandler.cs:
	Updated delegate signature since ServiceManager is now static

	* src/Core/Banshee.Core/Banshee.Base/Log.cs: Add some more overrides

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/PlayerEngine.cs: Defer
	the loading of the player engine internals until we get a notification
	from ServiceManager that the GStreamerCoreService has been loaded

2007-11-07  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Core/Banshee.Base/Log.cs: Added a new, extremely simple
	and much more efficient logging facility

	* src/Core/Banshee.Base/LogCore.cs: Removed legacy logging facility

2007-11-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Hyena.Gui/Hyena.Data.Gui/ListView.cs: Add RowActivated event.

2007-11-07  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services/Banshee.Services.addin.xml: Define an extension
	point for registering services

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Load
	addin services into the service manager; moved the Mono.Addins init stuff
	to ServiceManager directly

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer.addin.xml: Define
	a service extension for the GStreamer backend

	* src/Backends/Banshee.GStreamer/Banshee.GStreamer/Service.cs: Implement
	the skeleton for the GStreamer service backend

2007-11-05  Aaron Bockover  <aaron@abock.org>

	* Banshee.MediaEngine.GStreamer/GstPlayerEngine.cs: Ported the GStreamer
	player engine to work under the new APIs, implemented as a Mono.Addin
	extension

2007-11-05  Aaron Bockover  <aaron@abock.org>

	* Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs:
	* Nereid/Nereid/PlayerInterface.cs: Reflect API change in ServiceManager

	* Nereid/Nereid/Entry.cs: Reflect API change in ServiceManager and 
	implement a TimeoutHandler using GLib.Timeout

	* Banshee.Services/Banshee.MediaEngine/*: Ported the PlayerEngine base
	class; made it a Mono.Addin extension point

	* Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Made 
	ServiceManager completely static so using it doesn't suck

	* Banshee.Services/Banshee.ServiceStack/DBusServiceManager.cs: Allow
	the DBus support to be optional

	* Banshee.Services/Banshee.ServiceStack/AddinCoreService.cs: Service
	for controlling Mono.Addins

	* Banshee.Core/Banshee.Streaming/*: Ported StreamTagger, StreamTag and
	other generic stream types and friends

	* Banshee.Core/Banshee.Collection/TrackInfo.cs: API Fixups

	* Banshee.Core/Banshee.Base/ApplicationContext.cs: Fix API bug

	* Banshee.ThickClient/Banshee.Gui/GtkThemeService.cs: Will be used for
	more generic GTK interface stuff; make IPropertyStoreExpose and expose
	PrimaryWindow and PrimaryWindow.RawHandle properties

	* Hyena/Hyena.Data/IPropertyStoreExpose.cs: Interface to expose a
	PropertyStore

2007-11-04  Aaron Bockover  <aaron@abock.org>

	* src/Core/Banshee.Core/Banshee.Base/PlatformHacks.cs: A static class
	containing a collection of random platform-specific hacks such as 
	forcing the process name, working around a GDK/window manager bug, 
	and working around a GStreamer bug that interfered with signal handling
	in the Mono JIT

	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs:
	* src/Core/Nereid/Nereid/Entry.cs: Simplified due to PlatformHacks

	* src/Core/Banshee.Core/Banshee.Base/Utilities.cs: Moved SetProcessName
	in an effort to get rid of this file

2007-11-04  Aaron Bockover  <aaron@abock.org>

	* Hyena/Hyena.Data/PropertyStore.cs: Added StringList and GetType support

	* Banshee.ThickClient/Banshee.Gui/IconThemeUtils.cs: Removed unnecessary
	old code

	* Banshee.ThickClient/Banshee.Gui/GtkThemeService.cs: New service that
	listens for GTK theme changes, invalidates known icon caches in 
	services, and notifies listening components; effectively means that
	the source view will update its icons if the GTK theme changes

	* Banshee.ThickClient/Banshee.Sources.Gui/SourceView.cs: Support loading
	icons via the IconName source property as a string or string list and
	cache the result in the IconPixbuf property in the source; listen
	to GtkThemeService to queue redraw

	* Nereid/Nereid/PlayerInterface.cs: Set the ListenWidget in GtkThemeService
	to PlayerInterface

	* Nereid/Nereid/Entry.cs: Register a GtkThemeService

	* Banshee.Services/Banshee.Library/LibrarySource.cs: Fixed icon names

	* Banshee.Services/Banshee.ServiceStack/ServiceManager.cs: Added Contains

2007-10-31  Gabriel Burt  <gabriel.burt@gmail.com>

	* MERGE BUILD FIXES: More fixes.  Everything except src/Core/Banshee/*
	builds.

2007-10-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* MERGE BUILD FIXES: Replace many instances of track.DisplayTitle/Artist/Album
	and other build fixes.

2007-10-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* MERGE BUILD FIXES: Replace many instances of track.Title/Artist/Album
	and Globals.ArgumentQueue etc.

2007-10-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* Get things closer to building. Add SkipCount column.

2007-10-29  Aaron Bockover  <abock@gnome.org>

	* HUGE COMMIT: This commit breaks the build horribly and is a first step
	in the merge of all the cool model/view stuff; do not expect it to build
	or work at all from this point on until ... it does (hopefully within
	two weeks)

2007-10-24  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Base/ActionManager.cs: Remove ellipses from Plugins
	menu item.  Patch from Michael Monreal, fixes BGO #478465.

	* src/Plugins/Banshee.Plugins.Podcast/UI/PodcastFeedView.cs: Make strings
	more easily translatable. Fixes BGO #407094.

2007-10-14  Yannig Marchegay  <yannig@marchegay.org>

	* po/LINGUAS: Added 'oc' to ALL_LINGUAS.

2007-10-04  Sebastian Dröge  <slomo@circular-chaos.org>

	* src/Core/Banshee/PlayerInterface.cs: Don't filter by
	Artist/Album/Genre if the relevant field is empty or null. Before
	Banshee crashed whenever the field was null. (BGO #479237)
	While at that, also convert tabs to spaces.

2007-10-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Base/Banshee.SmartPlaylist/QueryBuilder.cs: Prevent
	array index out of bounds error -- not sure what's changed (Gtk#?) but
	suddenly selecting most smart playlist condition types would cause a
	crash.  Fixes BGO #464362.

	* src/Core/Banshee.Base/Banshee.SmartPlaylist/QueryBuilderModel.cs:
	Whitespace.

2007-09-19  Sebastian Dröge  <slomo@circular-chaos.org>

	* src/Core/Banshee.Base/Banshee.Library/Import.cs:
	* src/Core/Banshee.Base/StreamTagger.cs: Use TagLib to filter files
	that don't contain audio only instead of filtering by the mimetype
	which breaks for some mp4 files (BGO #472747)

2007-09-04  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.ThickClient: Migrated Banshee.ThickClient 

2007-09-04  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Services: Migrated Banshee.Services

	* src/Core/Banshee.Services/Banshee.ServiceStack/ServiceManager.cs:
	* src/Core/Banshee.Services/Banshee.ServiceStack/Application.cs: Disabled
	some things to be added back later

	* src/Core/Banshee.Base/Globals.cs: Add Banshee.Services startup to the
	existing startup sequence for now

	* configure.ac:
	* src/Core/Makefile.am:
	* src/Core/Core.mds:
	* src/Core/Banshee.Base/Makefile.am:
	* build/Common.Makefile: Configure Banshee.Services in the build

2007-08-29  Aaron Bockover  <abock@gnome.org>

	* src/Core/Hyena:
	* src/Core/Hyena.Gui: Added Hyena back from NG

	* build/Common.Makefile:
	* configure.ac:
	* build/banshee.pc.in: Build rules for Hyena

	* src/Plugins/Banshee.Plugins.Radio/StationManager.cs: Fixed build bug

2007-08-29  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.Radio/StationManager.cs:
	* src/Plugins/Banshee.Plugins.Radio/banshee-plugin-radio.schemas.in:
	Patch from Mário Meyer to allow setting the radio station base URI from
	which Banshee will load online radio stations

2007-08-19  Aaron Bockover  <abock@gnome.org>

	0.13.1 Released

	* configure.ac: Bump to 0.13.1

	* NEWS: Updated release notes

2007-08-19  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Gui/TrackEditor.cs: Reset the undo managers
	bound to each field when changing tracks

	* src/Core/Banshee.Base/Hyena/UndoManager.cs: Added a clear method

	* src/Core/Banshee.Base/Hyena.Gui/EntryUndoAdapter.cs: Proxy the UndoManager

2007-08-19  Aaron Bockover  <abock@gnome.org>

	Fix for BGO #453420

	* src/Core/Banshee.Base/Banshee.Cdrom.Nautilus/NautilusDrive.cs: Use HAL
	to get capacity information if it is available

	* src/Core/Banshee.Base/Banshee.Cdrom.Nautilus/NautilusRecorder.cs: 
	Duplicate the burn drive reference as a crappy workaround to some stupid
	issue with libnautilus-burn in GNOME 2.19.x+

	* src/Core/Banshee.Base/Banshee.Cdrom.Nautilus.Interop/BurnDrive.cs: 
	P/Invoke more functions into the glue

	* libbanshee/nautilus-burn.c: Add free glue to free/unref depending on
	the API version

	* libbanshee/gst-transcode-0.10.c: Remove the meta cdwavenc element since
	now the CD quality caps are in the WAV profile

	* data/audio-profiles/wav.xml.in: Added caps for proper encoding of
	CD quality PCM

2007-08-19  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Paths.cs: Expand ~ to home directory

2007-08-19  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Banshee.Playlists.Formats/AsxPlaylistFormat.cs:
	Added first pass of ASX parsing support

	* src/Core/Banshee.Base/Banshee.Playlists.Formats/PlaylistParser.cs:
	Add ASX to the list of playlist formats to try

	* tests/*: Added ASX tests 

2007-08-19  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.Radio/RadioTrackInfo.cs:
	* src/Core/Banshee.Base/RadioTrackInfo.cs: Moved RadioTrackInfo from
	the radio plugin into core

	* src/Plugins/Banshee.Plugins.Radio/CellRendererStation.cs: Added null check

	* src/Core/Banshee/PlayerInterface.cs: Use RadioTrackInfo with the open
	location dialog so now internet playlists can be opened and played
	from this dialog

2007-08-19  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.Radio/RadioTrackInfo.cs: Updated to use
	the new PlaylistParser in Banshee; handle errors more sanely so the
	UI becomes more responsive and informative

	* src/Plugins/Banshee.Plugins.Radio/totem-plparser/: Nuked! Internet
	Radio playlists are now handled in fully managed code - no more Totem
	PlParser dependency

	* src/Core/Banshee.Base/Banshee.Playlists.Formats/PlaylistParser.cs:
	New PlaylistParser to replace Totem PlParser; this is completely managed
	code and uses the new PlaylistFormat work from the previous commit; the
	parser currently handles local and HTTP streams

	* src/Core/Banshee.Base/Banshee.Playlists.Formats/PlaylistFormatDescription.cs: 
	Added a magic delegate to allow the format to see if it may be able to 
	parse the playlist

	* src/Core/Banshee.Base/Banshee.Playlists.Formats/PlaylistFormatBase.cs:
	* src/Core/Banshee.Base/Banshee.Playlists.Formats/IPlaylistFormat.cs:
	Add StreamReader API

	* src/Core/Banshee.Base/Banshee.Playlists.Formats/M3uPlaylistFormat.cs:
	* src/Core/Banshee.Base/Banshee.Playlists.Formats/PlsPlaylistFormat.cs: 
	Fixes; refactored slightly to use the tweaked base API

	* src/Core/Banshee.Base/Banshee.Playlists/PlaylistFileUtil.cs: Updated
	to reflect some minor API changes

	* tests/PlaylistFormats.cs: Add some more tests

	* src/Plugins/Banshee.Plugins.NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Catch some stupid exception

2007-08-19  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Banshee.Playlists/PlaylistFileUtil.cs:
	* src/Core/Banshee/PlayerInterface.cs: Updated to use new playlist 
	formats API

	* src/Core/Banshee.Base/Banshee.Playlists.Formats/PlaylistFile.cs:
	* src/Core/Banshee.Base/Banshee.Playlists.Formats/M3u.cs:
	* src/Core/Banshee.Base/Banshee.Playlists.Formats/Pls.cs: Removed old
	PLS and M3U implementations and the old base class

	* src/Core/Banshee.Base/Banshee.Playlists.Formats/PlaylistFormatDescription.cs:
	New class to describe a playlist format for GUI/factory reasons

	* src/Core/Banshee.Base/Banshee.Playlists.Formats/IPlaylistFormat.cs: 
	* src/Core/Banshee.Base/Banshee.Playlists.Formats/PlaylistFormatBase.cs: 
	* src/Core/Banshee.Base/Banshee.Playlists.Formats/M3uPlaylistFormat.cs:
	* src/Core/Banshee.Base/Banshee.Playlists.Formats/PlsPlaylistFormat.cs: 
	API for implementing new playlist formats; new implementation of 
	M3U and PLS formats

	* src/Core/Banshee.Base/Banshee.Playlists.Formats/InvalidPlaylistException.cs:
	Exception for invalid playlists

	* src/Core/Banshee.Base/IO/SystemIO.cs:
	* src/Core/Banshee.Base/IO/Unix.cs:
	* src/Core/Banshee.Base/IO/GnomeVfs.cs:
	* src/Core/Banshee.Base/IO/Interfaces.cs: Added OpenRead and OpenWrite
	stream methods on File

	* build/Common.Makefile: Link against TagLib for BUILD_LIB_BANSHEE

	* tests/PlaylistFormats.cs: Added tests for playlist parsing

	* tests/playlist-data: Test data for playlist parsing

2007-08-19  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.Recommendation/RecommendationUtilities.cs:
	If response stream is GZip compressed, decompress it on the fly using
	ICSharpCode.SharpZipLib.GZip (Christian Krause, BGO #468216)

	* src/Plugins/Banshee.Plugins.Recommendation/Makefile.am: Link against
	ICSharpCode.SharpZipLib

	* configure.ac: Check for ICSharpCode.SharpZipLib in GAC

2007-08-15  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.Recommendation/RecommendationPane.cs: 
	Finally fixed the 'rating exceeds 100%' issue with the recommendation
	plugin - it was a localization/parsing issue (BGO #451457)

	* src/Core/Banshee.Base/Globals.cs: Expose a static en-US culture as
	InternalCultureInfo for use when parsing non-culture-dependent data

	* ChangeLog: Fixed a bunch of dates that were 2006

2007-08-15  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Hyena.Gui/EntryUndoAdapter.cs: An adapter to
	use UndoManager against any Gtk.Entry

	* src/Core/Banshee.Base/Hyena.Gui/EntryInsertAction.cs:
	* src/Core/Banshee.Base/Hyena.Gui/EntryEraseAction.cs: IUndoAction 
	implementations for inserting and removing text from a Gtk.Entry

	* src/Core/Banshee.Base/Hyena/IUndoAction.cs: Interface for supporting
	undoable actions

	* src/Core/Banshee.Base/Hyena/UndoManager.cs: Logic for supporting 
	unlimited undo/redo actions

	* src/Core/Banshee.Base/Gui/TrackEditor.cs: Apply an EntryUndoAdapter
	to Gtk.Entry fields in the metadata track editor (BGO #465736)

2007-08-06  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Paths.cs: Support the changes to the 
	xdg-user-dirs spec that allow $HOME to start the path; also allows
	for quotes surrounding the path (BGO #461596)

2007-08-05  Aaron Bockover  <abock@gnome.org>

	* data/banshee.desktop.in.in: Removed X-SuSE-translate

2007-08-05  Aaron Bockover  <abock@gnome.org>

	0.13.0 Released

	* NEWS: Updated with 0.13.0 release notes

	* configure.ac: Do not check for cdparanoiasrc; cdda sources will be
	resolved at runtime via URI

2007-08-04  Aaron Bockover  <abock@gnome.org>

	* src/Engines/Banshee.MediaEngine.GStreamer/GstPlayerEngine.cs: Pass
	the top level GdkWindow to the engine

	* libbanshee/gst-misc-0.10.c: Initialize pbutils

	* libbanshee/gst-playback-0.10.c: Very basic support for the gstreamer
	install plugins framework; still could use a lot of love

	* build/m4/banshee/gstreamer.m4: Check to see if pbutils is supported 

	* data/audio-profiles/Makefile.am: Do not install the aac/faac profile
	as the plugins it requires are very broken in GStreamer; this profile
	only confuses users

2007-08-03  Aaron Bockover  <abock@gnome.org>

	* libbanshee/gst-cd-rip-0.10.c: Do not hard core cdparanoia. Create the
	cdda source from URI to avoid a hard dependency.

2007-07-10  Aaron Bockover  <abock@gnome.org>

	* libbanshee/gst-playback-0.10.c: Nasty, hopefully temporary, hack to
	ignore errors coming from qtdemux as it seems to have an issue with
	demuxing AAC files that come from iTunes Plus store (the DRM-free files)

2007-07-10  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap.MassStorage/MassStorageDap.cs: Only call Eject on
	the storage volume if storage.requires_eject is not set or is true; calling
	Eject on a volume that doesn't require it causes problems (BGO #443048,
	Ilya Konstantinov)

	* src/Core/Banshee.Base/Gui/PreferencesDialog.cs: Use SetCurrentFolder
	instead of SetFilename on FileChooserButton to avoid a race condition
	in GTK+ (BGO #443027, Ilya Konstantinov)

2007-07-03  Patrick van Staveren  <trick@vanstaveren.us>

	* ext/taglib-sharp: change svn:externals pointer to use http:// rather
	than svn://

2007-06-12  Aaron Bockover  <abock@gnome.org>

	* data/audio-profiles/wavpack.xml.in: Updated by Sebastian Dröge 

2007-06-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/MassStorageDap.cs: Set remover to null
	when finished deleting and set correct icon (Pepijn van de Geer, BGO
	#446037).

2007-06-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Base/Banshee.SmartPlaylist/QueryBuilderModel.cs: Add
	support for querying TrackNumber in smart playlists (Michael Monreal, BGO #445773).

2007-06-09  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/MassStorageDap.cs: Increment the counter
	to make the (gui) counter and progressbar work (Pepijn van de Geer,
	BGO #445770).

2007-06-03  Gabriel Burt  <gabriel.burt@gmail.com>

	Patch from Brian Nickel fixing the build.

	* src/Core/Banshee.Base/FileTrackInfo.cs:
	* src/Core/Banshee.Base/IO/IOProxy.cs:
	* src/Core/Banshee.Base/StreamTagger.cs:
	* src/Dap/Banshee.Dap.Ipod/DatabaseRebuilder.cs: Work with latest TagLib#.

2007-05-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Base/Banshee.PlayerMigration/PlayerImportDialog.cs:
	* src/Core/Banshee.Base/Banshee.PlayerMigration/AmarokPlayerImport.cs:
	* src/Core/Banshee.Base/Banshee.PlayerMigration/RhythmboxPlayerImport.cs:
	Make some strings translatable.

2007-05-28  Aaron Bockover  <abock@gnome.org>

	Patch to provide 16x16 versions of the playlist icons (BGO #398484, 
	Michael Monreal

	* src/Core/Banshee/PlayerInterface.cs:
	* src/Core/Banshee.Base/Sources/AbstractPlaylistSource.cs:
	* src/Core/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	Reference source-smart-playlist-{16,22} and source-playlist-{16,22}

	* data/images/source-smart-playlist-16.png:
	* data/images/source-playlist-16.png: 16x16 versions of the playlist icons

2007-05-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Plugins/Banshee.Plugins.NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Show the rating item for Smart Playlists too.

2007-05-24  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Allow rating the current playing track from the notif. menu (BGO #337157,
	Pepijn van de Geer)

2007-05-24  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Paths.cs: Added ReadXdgUserDir to detect 
	XDG user directories; use XDG_MUSIC_DIR or ~/Music for the default
	library location

2007-05-23  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/IO/SystemIO.cs:
	* src/Core/Banshee.Base/IO/Unix.cs:
	* src/Core/Banshee.Base/IO/GnomeVfs.cs: Implemented Close(System.IO.Stream)
	to reflect changes made in TagLib#

2007-05-22  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee/PlayerInterface.cs: Do not start search until at 
	least three characters are available

2007-05-22  Aaron Bockover  <abock@gnome.org>

	NOTE TO ALL: ~/.gnome2/banshee is now ~/.config/banshee

	* src/Core/Banshee.Base/Paths.cs: Changed ApplicationData to 
	~/.config/banshee; added new property, LegacyApplicationData which remains
	~/.gnome2/banshee

	* src/Core/Banshee.Base/Globals.cs: If Paths.ApplicationData does not
	exist, check for Paths.LegacyApplicationData and move the directory
	to Paths.ApplicationData if it does; if not, create Paths.ApplicationData
	or use it if it already exists

	* src/Core/Banshee.Base/Library.cs: Removed unnecessary directory check
	and creation of Paths.ApplicationData as this is always handled at
	startup

2007-05-22  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Banshee.PlayerMigration/PlayerImportSource.cs:
	Use the 'applications-other' icon if it exists... we need a better 
	icon for this source; syntax cleanup

	* src/Core/Banshee.Base/Gui/ImportDialog.cs: Select PlayerImportSource
	if there are no tracks in the library and an audio CD is not available;
	make the dialog transient and centered on parent

2007-05-22  Aaron Bockover  <abock@gnome.org>

	Patch by Sebastian Dröge <slomo@circular-chaos.org>

	* src/Core/Banshee.Base/Banshee.PlayerMigration/*:
	* src/Core/Banshee.Base/Makefile.am:
	* src/Core/Banshee.Base/Banshee.Base.mdp:
	* src/Core/Banshee.Base/Gui/ImportDialog.cs:
	Add import source and small framework for importing from libraries by
	other players and an importer for Amarok and Rhythmbox (BGO #378430)

2007-05-22  Aaron Bockover  <abock@gnome.org>

	* src/Extras/Boo/: Updated bundled Boo assemblies to 0.7.7.2475

	* build/Common.Makefile: Link against Boo.Lang.dll

	* src/Extras/BooBuddy/BooBuddyInterpreter.cs: Print the Boo compiler
	version in the shell welcome message

2007-05-22  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.Recommendation/Makefile.am: Fixed up so
	we distcheck ok again

	* build/m4/banshee/gmcs-79698.m4:
	* build/mcs-test-79698.cs:
	* build/Makefile.am:
	* build/gmcs.exe:
	* configure.ac: Do not run the gmcs check for BXC #79698 anymore (a
	bug that plagues gmcs 1.1.18) since it means we have to bundle a fixed
	C# compiler; there are several Mono releases since 1.1.18 now with 
	fixed packages available for and/or pushed into distros; reduces the
	tarball size quite a bit now; however, anyone using 1.1.18 to build
	now will get a broken build - be warned

2007-05-22  Aaron Bockover  <abock@gnome.org>

	* configure.ac:
	* Makefile.am: Updated to reflect tools and extras directory changes

	* tools/*: Moved to extras/tools

	* extras/scripts/*.boo: Added a safe place for some boo scriptlets which
	may be of use to some users

2007-05-09  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Widgets/SearchEntry.cs: Some drawing fixes

2007-05-09  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Banshee.SmartPlaylist/Editor.cs: Properly fixed
	up to use the new search filter stuff

2007-05-09  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Widgets/SearchEntry.cs: Completely rewritten SearchEntry
	with a better filter API and proper GTK themeing

	* src/Core/Banshee.Widgets/HoverImageButton.cs: A cute button that may
	end up somewhere standalone, but for now makes up the filter and clear
	buttons in the new SearchEntry

	* src/Core/Banshee.Base/TrackFilterType.cs: Define what kind of filters
	can be made on the track view; means that logic can happen against this
	enum instead of lots of stupid Catalog.GetString()+string comparisons,
	so searching should actually be a bit faster

	* src/Core/Banshee.Base/Source.cs: Save a TrackFilterType instead of the
	old string filter name

	* src/Core/Banshee/PlayerInterface.cs: Use the new SearchEntry API which
	should actually bring search/filter speed improvements

	* src/Core/Banshee.Base/Banshee.SmartPlaylist/Editor.cs: Hackishly use
	the new SearchEntry API (needs finishing)

2007-05-07  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	A nice piece of crack I'm not sure about yet - reverse the menu contents
	if the notification area is on the bottom of the screen so the most used
	items are closest to the panel - more usable in theory, but maybe it's
	just creepy?

	* src/Dap/Banshee.Dap.Ipod/DatabaseRebuilder.cs:
	* src/Core/Banshee.Base/Gui/TrackEditor.cs:
	* src/Core/Banshee.Base/FileTrackInfo.cs:
	* src/Core/Banshee.Base/StreamTagger.cs: Updated to use the TagLib# 2.0 
	API (BGO #436743, Sebastian Dröge)

	* ext/taglib-sharp/TagLib: Updated TagLib external reference back to
	TagLib# trunk for development work, may cause breakage at times during
	this development cycle

	* ext/taglib-sharp/Makefile.am:
	* ext/taglib-sharp/Makefile.MonoDevelop:
	* ext/taglib-sharp/TagLib.sources: Explicitly define sources in 
	TagLib.sources and use them for building as wildcard matching no longer
	produces a clean build on TagLibg# trunk

	* libbanshee/gst-playback-0.10.c: Check to see if playbin is still 
	alive before pausing (BGO #436741, Sebastian Dröge)

2007-05-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* data/UIManagerLayout.xml:
	* src/Core/Banshee.Base/ActionManager.cs: Remove menu items (Columns,
	Select All/None) from track context menu.  Properly capitalize others.

	* src/Plugins/Banshee.Plugins.NotificationAreaIcon/NotificationAreaIconConfigPage.cs:
	* src/Plugins/Banshee.Plugins.NotificationAreaIcon/NotificationAreaIconMenu.xml:
	* src/Plugins/Banshee.Plugins.NotificationAreaIcon/NotificationAreaIconPlugin.cs: Add
	a menu item for disabling/enabling notifications to the notification icon menu.

2007-05-07  Aaron Bockover  <abock@gnome.org>

	* Banshee.mds: Added a new top-level solution that will build in ext/
	and in libbanshee/ first

	* src/Core/Banshee.Base/Banshee.Base.mdp: Run 
	build/monodevelop/fixup-configuredefines before the build

	* ext/Makefile.MonoDevelop:
	* ext/dbus-sharp/Makefile.MonoDevelop:
	* ext/hal-sharp/Makefile.MonoDevelop:
	* ext/taglib-sharp/Makefile.MonoDevelop: Simple makefiles that can be
	run from inside MonoDevelop without any need to run autogen/configure

	* build/monodevelop/fixup-configuredefines: A script to generate 
	src/Core/Banshee.Base/ConfigureDefines.cs without having to run 
	configure; used from within MonoDevelop

2007-05-07  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.Sample: Added the sample plugin to the build
	from the Wiki so we can verify it is always building and working; of 
	course it does not get installed/packaged

	* configure.ac:
	* src/Plugins/Plugins.mds:
	* src/Plugins/Makefile.am: Added src/Plugins/Banshee.Plugins.Sample

2007-04-26  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.MMKeys/MMKeysPlugin.cs:
	* src/Core/Banshee.Base/GnomeMMKeys.cs:
	Added handling for Stop multimedia key (BGO #425247, Bojan Rajkovic)

2007-04-26  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Banshee.Metadata.Embedded/EmbeddedQueryJob.cs:
	Fix crash if embedded picture data is null (BGO #433668, Dan Wilson)

2007-04-24  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Widgets/ComplexMenuItem.cs: Do not try to connect
	the key press proxy if the new Parent is null; Never proxy Gdk.Key.Escape
	to the menu item; implement a default key press override that has the
	current Gtk.MenuItem behavior

2007-04-24  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee/PlayerInterface.cs: Use RatingMenuItem instead of
	the submenus which are clunky and ugly

	* src/Core/Banshee.Widgets/ComplexMenuItem.cs: A special MenuItem that
	allows widgets to be embedded and connected to a proper theme expose
	handler, also enables keyboard events to be passed to the menu item

	* src/Core/Banshee.Widgets/RatingMenuItem.cs: A ComplexMenuItem that
	embeds the RatingEntry in it to allow inline track rating from menus;
	with the item selected, it accepts input via the mouse with clicking
	or dragging, the scroll wheel, or the keyboard

	* src/Core/Banshee.Widgets/RatingEntry.cs: Drawing related changes to
	allow the widget to be embedded in other widgets and fit in, but also
	work properly as a standalone 'entry'; fix drag-rating in the standalone
	event handlers

	* src/Core/Banshee.Base/ActionManager.cs:
	* data/UIManagerLayout.xml: Remove RatingAction as it was never a real
	action and acted only as a visible placeholder

2007-04-23  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.Recommendation/RecommendationPane.cs: 
	Load generic-artist.png in place of the artist photo if there's a problem
	loading the artist photo from last.fm (BGO #432200); cosmetic string
	changes; round the similarity value to the nearest whole percentage;
	introduce a cache wipe/versioning system to allow the cache to be wiped
	if the code to parse it changes later on (see NOTE in code) - everyone
	will start out with a clean cache after this update at version 2

	* src/Plugins/Banshee.Plugins.Recommendation/RecommendationPlugin.cs:
	Added schema for cache_version
	
	* src/Plugins/Banshee.Plugins.Recommendation/generic-artist.png: Added
	a musician to display if an artist photo cannot be loaded from last.fm

2007-04-18  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.Daap/DaapCore.cs: Share local playlists
	over DAAP (BGO #407672, Daniel Munckton)

	* src/Core/Banshee/Banshee.TrackView.Columns/DateAddedColumn.cs: 
	* src/Core/Banshee/Banshee.TrackView.Columns/TrackViewColumn.cs:
	* src/Core/Banshee/PlaylistView.cs: Added a Date Added column for the
	track view (BGO #392232, Pepijn van de Geer)

	* src/Core/Banshee.Base/ActionManager.cs: Fix capitalization errors; first 
	break of string freeze from 0.12.x (BGO #410183, Igor Guerrero Fonseca)

	* src/Extras/BooBuddy/BooBuddy.Debugger/DebugAliasBuilder.cs: Fix p_help()
	output to correctly show description (BGO #424951, Ruben Vermeersch)

	* src/Extras/BooBuddy/BooBuddy.Debugger/DebugAliasAttribute.cs:
	* src/Extras/BooBuddy/BooBuddy.Debugger/DebugAliasBuilder.cs: Ensure
	functions are not aliased twice to allow Boo Buddy to be closed and
	re-opened (BGO #416991, Scott Peterson)

	* src/Core/Banshee/PlayerInterface.cs: Sort the playlists in 'Add to
	playlist' in the same order as sources (BGO #398489, Pepijn van de Geer)

2007-04-18  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee/PlayerInterface.cs: Make the track view popup menu
	accessible from the keyboard (BGO #334132, Bill Dawson)

2007-04-18  Aaron Bockover  <abock@gnome.org>

	This patch adds org.gnome.SettingsDaemon MM Keys support, originally
	done by Jan Arne Petersen as a patch to the MM Keys plugin. Redesigned 
	by myself to leave support for older GNOME in tact while removing the
	overhead of a plugin on new GNOME. Fixes BGO #395433.

	* src/Core/Banshee.Base/Plugins/PluginFactory.cs (AddExcludeMask): Allow
	filtering plugins for exclusion based on their file name

	* src/Core/Banshee.Base/Plugins/PluginCore.cs: Do not load the legacy
	MM Keys plugin if the new GnomeMMKeys is loaded successfully

	* src/Core/Banshee.Base/GnomeMMKeys.cs: A standalone MM Keys component
	that uses the new org.gnome.SettingsDaemon DBus interface available in
	GNOME 2.18+. If this component loads, the legacy plugin will be disabled

	* src/Core/Banshee.Base/Globals.cs: Try to load GnomeMMKeys at startup;
	load DBus background components before plugins in case the plugins need
	to access them

2007-04-17  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.Daap/DaapSource.cs: Crash fix (BGO #406923, 
	Eric Butler)

	* src/Dap/Banshee.Dap.MassStorage/MassStorageDap.cs: Resolve PSP Audio 
	Device Properties crash (BGO #419163, Jason Conti)

	* src/Plugins/Banshee.Plugins.Recommendation/RecommendationUtilities.cs:
	Prevent reco cache from getting corrupt (BGO #381229, Pepijn van de Geer)

	* src/Core/Banshee.Base/Dap/Dap.cs: Fixed NJB syncing (BGO #405289, 
	Mitch Reierson)

	* src/Core/Banshee.Base/Banshee.AudioProfiles.Gui/ProfileComboBox.cs:
	Do not forget profile setting (BGO #410498, Lauri Kotilainen)

	* src/Core/Banshee.Base/Gui/SourceView.cs: Ensure sources that are not
	CanActivate really can't be activated (BGO #415138, Scott Peterson)

2007-04-17  Aaron Bockover  <abock@gnome.org>

	* build/gconf-schema-rules: Revert previous commit as it breaks the 
	install if builddir is undefined; also shouldn't be necessary at all as
	builddir is effectively supposed to be '.' if set and the script is run
	from the directory with the .schema file in it anyway

2007-04-16  Gary Ekker  <gekker@novell.com>

	* build/gconf-schema-rules: Fix installation path of schema_DATA

2007-04-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Plugins/Banshee.Plugins.Bookmarks/BookmarksPlugin.cs: Use UIManager
	for the Add Bookmark item and have Ctrl-D activate it.  Add hidden logger
	warnings for several errors.

	* src/Plugins/Banshee.Plugins.Bookmarks/BookmarksMenu.xml:
	* src/Plugins/Banshee.Plugins.Bookmarks/Makefile.am: New menu XML.

2007-04-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Plugins/Banshee.Plugins.Bookmarks/BookmarksPlugin.cs: Clean the
	design of the plugin with clear distinctions between the plugin, the UI,
	and the model.  Handle bookmarked tracks being removed, and escape
	underscores in track names when putting them in menus, and make the plugin
	name translatable.

2007-04-12  Aaron Bockover  <abock@gnome.org>

	Added playlist import/export functionality (BGO #363018)
	Trey Ethridge <tale@juno.com>

	* src/Core/Banshee/PlayerInterface.cs: Implemented OnImportPlaylistAction
	and OnExportPlaylistAction
	
	* src/Core/Banshee.Base/Gui/FileChooserDialog.cs: Overloaded constructor.
	
	* src/Core/Banshee.Base/Banshee.Playlists.Formats/Pls.cs: Uncommented 
	exception that is thrown when import determines file is not a Pls file.

	* src/Core/Banshee.Base/Banshee.Playlists.Formats/PlaylistFile.cs: Added
	null ref check

	* src/Core/Banshee.Base/Banshee.Playlists.Formats/Pls.cs:
	* src/Core/Banshee.Base/Banshee.Playlists.Formats/M3u.cs: Uncommented 
	exception that is thrown when import determines file is not a playlist file

	* src/Core/Banshee.Base/SourceManager.cs: Show the export option on 
	playlist source context menus

	* src/Core/Banshee.Base/Banshee.Library/Import.cs: Exposed import status

	* src/Core/Banshee.Base/ImportManager.cs: Exposed import status

	* src/Core/Banshee.Base/Banshee.Playlists/PlaylistFileUtil.cs: Utilities
	for playlist files
	
	* src/Core/Banshee.Base/Banshee.Playlists/IPlaylist.cs: Added interface 
	for playlists to implement. Allows the export menu option to be added 
	to context menu in a generic manner.
	
	* src/Core/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Core/Banshee.Base/Sources/PlaylistSource.cs: Implemented IPlaylist

	* src/Core/Banshee.Base/ActionManager.cs: Added actions for import/export

2007-04-03  Gabriel Burt  <gabriel.burt@gmail.com>

	Add new plugin, disabled by default, for bookmarking positions in tracks.

	* configure.ac:
	* src/Plugins/Makefile.am:
	* src/Plugins/Plugins.mds:
	* src/Plugins/Banshee.Plugins.Bookmarks/BookmarksPlugin.cs:
	* src/Plugins/Banshee.Plugins.Bookmarks/Makefile.am:
	* src/Plugins/Banshee.Plugins.Bookmarks/banshee-plugin-bookmarks.schemas.in:
	* src/Plugins/Banshee.Plugins.Bookmarks/Banshee.Plugins.Bookmarks.mdp: New.

2007-04-01  Aaron Bockover  <abock@gnome.org>

	* build/m4/banshee/dap-ipod.m4: Required ipod-sharp 0.6.3

2007-04-01  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Bump version to 0.13.0 to mark the start of the new 
	development series

2007-03-31  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Utilities.cs (SetProcessName): Added a fallback
	to setproctitle if prctl fails; this should work for BSD

2007-03-31  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap.Ipod/IpodDap.cs: Fixed major bug where no tracks
	would be read on an HFS+ iPod; handle new iPod shuffles a little better;
	map to more suitable device icons for new Nanos and Shuffles

	* src/Dap/Banshee.Dap.Ipod/UnsupportedDatabaseView.cs: Dot not offer to
	rebuild the database if iPod is read only/HFS+

	* src/Core/Banshee.Base/Banshee.AudioProfiles.Gui/ProfileComboBoxConfigurable.cs:
	* src/Core/Banshee.Base/Dap/DapPropertiesDialog.cs: Do not crash when
	reading profile properties

	* src/Core/Banshee.Base/Banshee.Kernel/Scheduler.cs: Added Suspend/Resume
	methods to stop the processing of scheduled jobs

	* src/Core/Banshee.Base/QueuedOperationManager.cs: Internals rewritten
	to use the scheduler instead of creating its own threads; there was a huge
	bug here that ended up potentially spawning hundreds of threads. Evil.
	The scheduler rocks.

	* src/Core/Banshee.Base/Sources/DapSource.cs: Added some null checks and
	updated to reflect changes in QOM

	* src/Plugins/Banshee.Plugins.Podcast/PodcastDBManager.cs: Do not bail
	reading the DB if the date/time is invalid

2007-03-25  Ruben Vermeersch  <ruben@savanne.be>

	* src/Core/Banshee.Base/Paths.cs: Fix a typo in DefaultLibraryPath 
	(BGO #422442)

2007-03-19  Alp Toker  <alp@atoker.com>

	* ext/dbus-sharp/README: Add dbus-sharp README so hackers/packagers
	can find out more

2007-03-19  Alp Toker  <alp@atoker.com>

	* ext/dbus-sharp/*: Update dbus-sharp to 0.4.2 stable release

2007-03-05  Aaron Bockover  <abock@gnome.org>

	0.12.0 Released

	* NEWS: Updated with 0.12.0 release notes

2007-03-05  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Bumped to 0.12.0

	* src/Core/Banshee/banshee.in: Prepend GST_PLUGINS_PATH instead of
	overwriting it

2007-03-05  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.Radio/RadioSource.cs: Implement StartPlayback
	method which will play either the selected station, the first station
	in the selected group, or the first station in the first group when
	there is no selection (happens when the main play button is clicked);
	disabled the previous/next actions as they do not apply to radio

	* src/Plugins/Banshee.Plugins.MiniMode/SourceModel.cs: Updated FindSource
	to be recursive like the SourceView (Scott Peterson, BGO #414505)

	* src/Core/Banshee.Base/Gui/SourceView.cs: Fixed ellipsis code to not
	use excessive substrings in a try/catch form; efficient and no longer
	ugly (Scott Peterson, BGO #414485)

	* src/Plugins/Banshee.Plugins.MiniMode/minimode.glade: Full screen button
	should not have relief now that others do not

	* src/Plugins/Banshee.Plugins.Recommendation/RecommendationPane.cs:
	Update background of recommendations pane on StyleSet (Brian Kerrick
	Nickel BGO #413593)

	* src/Core/Banshee.Base/PlayerEngineCore.cs: Added null check for
	CurrentTrack (BGO #410364)

	* src/Core/Banshee.Base/SafeUri.cs: Added Equals method

	* src/Core/Banshee.Base/Source.cs: Added StartPlayback virtual method
	that sources can override to handle when the play button is pressed
	while the engine is in idle

	* src/Core/Banshee.Widgets/FadingAlignment.cs: Updated to be a bit more
	subtle and use better color choices (background+mid); Added a subtle 
	left border to blend better with the view widget (BGO #412584)

	* src/Core/Banshee/PlaylistModel.cs: Reset the PlayingIter to zero when
	a new stream is started

	* src/Core/Banshee/PlaylistView.cs: Set as 'now playing' when the playing
	iter is set, do not update the iter is non-zero; set the PlayingIter
	when the URIs of two tracks are equal, caches to reduce comparisons; fixes
	both (BGO #408128, #348079, BNC #228720)

	* src/Core/Banshee/PlayerInterface.cs: In PlayPause, call StartPlayback
	on the active source if it implements the method and the engine is in
	the idle state

	* src/Core/Banshee/Main.cs: Manually call gdk_set_program_class as there
	appears to be an issue with window grouping in SLED FCS and SP1; also
	use Gnome.Program.Run instead of Gtk.Application.Run (BNC #249494)

2007-02-26  Mike Kestner  <mkestner@novell.com>

	* autogen.sh: don't clobber existing ACLOCAL_FLAGS.

2007-02-26  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.Radio/StationManager.cs: Ensure that local
	stations can be loaded even if the remote ones can't (BNC #248831)

	* src/Core/Banshee.Base/Banshee.Playlists.Formats.Xspf/Playlist.cs: Throw
	an exception if the XSPF document does not have a valid root node to 
	ensure that a NullReferenceException doesn't get thrown (can be bad due
	to how Mono handles them - often they lead to an unhandled SIGSEGV)

2007-02-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee/PlayerInterface.cs: Make the Remove content menu option
	insensitive for SmartPlaylistSources.  Make the Add to Playlist/Ratings
	menus show up for SmartPlaylistSources.  Fixes BGO #411221.

2007-02-24  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee/PlayerInterface.cs: Use the Fading Alignment under the
	playlist header

	* src/Core/Banshee.Widgets/FadingAlignment.cs: Make the gradient look nicer

	* data/banshee.glade: Reordered some widgets to allow for proper spacing

2007-02-23  Aaron Bockover  <abock@gnome.org>

	* libbanshee/gst-playback-0.10.c: Set the pipeline to playing or paused
	when at the right time when buffering a stream so the clock can't get
	ahead of itself, which may cause some streams to rebuffer depending on
	the stream and network speed (BGO #410278)

2007-02-22  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/FileNamePattern.cs: Forgot to mark 
	ExpandTokenHandler as public too

2007-02-22  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/FileNamePattern.cs: Make AddConversion and
	the Conversion struct public, inlined access to the conversion table
	values (Alptacular)

2007-02-21  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.Recommendation/RecommendationUtilities.cs
	(HostInjectionHack): Work around a last.fm web services bug where they 
	return URIs without a host name on some content. It appears the host
	name is always static3.last.fm, but that may not be the case for all 
	data or it may change in the future - last.fm should fix their 
	stuff (BGO #408068)

2007-02-21  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee/banshee.in: Do not use @MONO@, which hard codes the
	mono runtime location; just use mono and let the right one be chosen
	from PATH - useful when working with parallel mono environments

	* src/Core/Banshee.Base/Banshee.Cdrom.Nautilus/NautilusDriveFactory.cs: 
	Add an explicit null check for HalCore.Manager to get around any potential
	SEGV signal issues when throwing NullReferenceException; ensures that
	even if HAL isn't available, the app should continue to load, regardless
	of signal settings (which determine if SEGV can chain up to 
	NullReferenceException by being handled by the runtime))

	* ext/hal-sharp/Manager.cs: Do the same as the above, plus throw a 
	more descriptive exception with cute DBus details

2007-02-21  Aaron Bockover  <abock@gnome.org>

	* src/Dap/Banshee.Dap.Ipod/IpodQueryJob.cs
	* src/Dap/Banshee.Dap.Ipod/IpodMetadataProvider.cs: Updated to reflect
	API updates in the metadata services

2007-02-21  Aaron Bockover  <abock@gnome.org>

	* build/m4/banshee/dbus.m4:
	* build/Common.Makefile:
	* ext/dbus-sharp/Makefile.am:
	* configure.ac: Patch from Sebastian Dröge to allow linking against an
	external installation of NDesk DBus (BGO #409964)

2007-02-20  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Widgets/VolumeButton.cs: Do not show the slider dock
	when scrolling on the volume button; stop the scroll signal emission 
	in event-after to keep the tooltip showing (and reflecting the updated
	volume level) as the scroll happens, like the panel applet volume button

2007-02-20  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Banshee.AudioProfiles.Gui/TextViewLabel.cs: A 
	GtkTextView that acts and looks more like a GtkLabel - but it has nice
	word wrapping

	* src/Core/Banshee.Base/Banshee.AudioProfiles.Gui/ProfileConfigurationDialog.cs:
	Make the dialog resizable in the X direction; Use the new TextViewLabel 
	to show the description so when resizing, it can wrap properly; set a 
	good default minimum width

	* src/Core/Banshee.Base/Banshee.AudioProfiles.Gui/ProfileComboBoxConfigurable.cs:
	Use the TextViewLabel to show the description (widget is based on code
	that was written directly into ProfileComboBoxConfigurable.)

2007-02-20  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Banshee.Metadata/MetadataServiceJob.cs:
	* src/Core/Banshee.Base/Banshee.Metadata/IMetadataLookupJob.cs:
	* src/Core/Banshee.Base/Banshee.Metadata/MetadataService.cs:
	* src/Core/Banshee.Base/Banshee.Metadata/IMetadataProvider.cs:
	* src/Core/Banshee.Base/Banshee.Metadata/BaseMetadataProvider.cs:
	* src/Core/Banshee.Base/Banshee.Base.mdp:
	* src/Core/Banshee.Base/Banshee.Metadata.Rhapsody/RhapsodyMetadataProvider.cs:
	* src/Core/Banshee.Base/Banshee.Metadata.Rhapsody/RhapsodyQueryJob.cs:
	* src/Core/Banshee.Base/Banshee.Metadata.Embedded/EmbeddedMetadataProvider.cs:
	* src/Core/Banshee.Base/Banshee.Metadata.Embedded/EmbeddedQueryJob.cs:
	* src/Core/Banshee.Base/Globals.cs:
	* src/Core/Banshee.Base/AudioCd/AudioCdDisk.cs:
	* src/Core/Banshee.Base/Makefile.am:
	* src/Core/Banshee.Base/Banshee.Metadata.MusicBrainz/MusicBrainzMetadataProvider.cs:
	* src/Core/Banshee.Base/Banshee.Metadata.MusicBrainz/MusicBrainzQueryJob.cs:
	Use the new MetadataSettings so there's no dependency on core/app features
	that previously made the metadata services only usable inside the Banshee
	application context; provide a GlobalMetadataSettings implementation that
	implements settings for the application core

2007-02-20  Aaron Bockover  <abock@gnome.org>

	0.11.7 Released

	* NEWS: Updated with 0.11.7 notes

	* configure.ac: Bump to 0.11.7

2007-02-19  Aaron Bockover  <abock@gnome.org>

	* src/Engines/Banshee.MediaEngine.GStreamer/GstPlayerEngine.cs: Do not
	update the CurrentTrack if it is null

	* src/Core/Banshee/PlaylistView.cs: call column.SetMaxFixedWidth(this)

	* src/Core/Banshee/PlayerInterface.cs: Show dialogs for LogCore LogEntrys
	that have been logged before connecting to the event; prompt for importing
	when the StartupInitializer is done, not through some library loaded hack

	* src/Core/Banshee/Banshee.TrackView.Columns/TrackViewColumn.cs: Added 
	SetMaxFixedWidth to size fixed width columns properly

	* src/Core/Banshee/Banshee.TrackView.Columns/TrackNumberColumn.cs: Set
	the fixed width strings

	* src/Core/Banshee/Main.cs: Handle any exceptions that happen when trying
	to initialize DBus; log a warning if there's a problem

	* src/Core/Banshee.Base/Gui/SplashScreen.cs: Turn off KeepAbove so the
	splash screen doesn't force itself above other windows

	* src/Core/Banshee.Base/DBusPlayer.cs: If only one CD is available and
	no argument is passed to --audio-cd, select the single CD

2007-02-07  Aaron Bockover  <abock@gnome.org>

	* ext/dbus-sharp/*: Updated dbus-sharp and dbus-sharp-glib to 0.4.0 and
	0.3.0 respectively; number of fixes and performance improvements including
	a fix for surviving a session bus restart

2007-02-05  Aaron Bockover  <abock@gnome.org>

	* libbanshee/gst-cd-rip-0.10.c: Fix major crasher that sometimes happens
	when canceling a CD rip; caused by memory corruption due to not setting
	an unreffed object pointer to null; _free calls _cancel to avoid code
	dupication

	* src/Plugins/Banshee.Plugins.Radio/RadioSource.cs: Allow the view to
	scroll horizontally
	
	* src/Plugins/Banshee.Plugins.Recommendation/RecommendationPlugin.cs:
	Hide the pane when the player state goes idle

	* src/Core/Banshee/PlayerInterface.cs: Set the cover art for the cover
	art view to null when idle

	* src/Core/Banshee.Widgets/CoverArtView.cs: Hide on null

	* src/Core/Banshee.Base/FileNamePattern.cs: Added more characters to
	escape, and cache the regular expression

2007-02-05  Aaron Bockover  <abock@gnome.org>

	0.11.6 Released

	* NEWS: Updated 

	* NOTES: Reset

	* src/Plugins/Banshee.Plugins.Radio/Makefile.am: Added files to EXTRA_DIST

2007-02-05  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Gui/SourceView.cs: Prevent a possible 
	nullref when dropping on the view and not on a row (BNC 236798)

	* src/Core/Banshee.Widgets/ActionButton.cs: Decreased spacing between
	icon and label; looked strange now that the buttons don't have relief

	* configure.ac: Bumped to 0.11.6

2007-02-05  Aaron Bockover  <abock@gnome.org>

	* Plugins/Banshee.Plugins.Radio/StationManager.cs: Added Create, Update,
	and Remove station methods; support showing/hiding remote stations

	* Plugins/Banshee.Plugins.Radio/RadioPlugin.cs: Support showing/hiding
	remote stations

	* Plugins/Banshee.Plugins.Radio/RadioSource.cs: Added UI for editing,
	adding, and removing stations
	
	* Plugins/Banshee.Plugins.Radio/StationGroup.cs: Added Save method

	* Plugins/Banshee.Plugins.Radio/StationModel.cs: Support adding, updating,
	and removing stations

	* Plugins/Banshee.Plugins.Radio/StationEditor.cs: Editor dialog for local
	stations

	* Plugins/Banshee.Plugins.Radio/RadioActions.xml: Updated UI

	* Core/Banshee.Base/Banshee.Playlists.Formats.Xspf/Playlist.cs:
	* Core/Banshee.Base/Banshee.Playlists.Formats.Xspf/XspfBaseObject.cs:
	* Core/Banshee.Base/Banshee.Playlists.Formats.Xspf/Track.cs: Added
	basic XML write support for XSPF playlists

2007-02-04  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Widgets/VolumeButton.cs: Port of the C version of
	BaconVolumeWidget - a much more natural and easy to use volume button

2007-02-03  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Gui/TrackEditor.cs:
	* data/banshee-dialogs.glade: Changed wording on the copy all fields button
	to make it easier to understand and translate (BGO 399650)

2007-02-03  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee/PlaylistView.cs: Remove Dispose override, 
	added SaveColumns

	* src/Core/Banshee/PlayerInterface.cs: Call playlistView.SaveColumns

2007-02-02  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Widgets/CoverArtThumbnail.cs: Call SetSizeRequest on
	the image, not on the window, ensure Resize on the window is always smaller
	than the image so the image.SetSizeRequest ends up making the window 
	fit perfectly to the scaled cover art (Fixes BGO 334698); split 
	CoverArtView into a separate file
	
	* src/Core/Banshee.Widgets/CoverArtView.cs: Split class out of old file

2007-02-01  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee/PlaylistView.cs: Add a 1px fixed column that can't be 
	moved or resized and is always in the last position; do not allow columns
	to be dragged to the right of this special column; this ensures that if
	the user drags a resizable column into the 'last' position, it will not
	fill to eat the remaining width of the view, thus creating a false width;
	this should _finally_ get rid of unwanted horizontal scrolling. This
	fix is hereby dedicated to Whiprush.

	* src/Core/Banshee/Banshee.TrackView.Columns/TrackViewColumn.cs: Turn
	on ellipsizing on columns CellRendererText renderers, fixed packing of
	the renderer - a bug exposed by setting ellipsizing

	* src/Core/Banshee.Base/Sources/AudioCdSource.cs: Show a 'Copy CD' action
	button in the header when the source is active

2007-02-01  Aaron Bockover  <abock@gnome.org>

	* data/banshee.glade: Made spacing look better now that buttons do not
	have a relief style

	* data/UIManagerLayout.xml: Added placeholder for actions that are 'new'

	* data/audio-profiles/Makefile.am: CLEANFILES->DISTCLEANFILES, fixes a 
	potential build issue regarding generating the audio profiles .xml files

	* src/Plugins/Banshee.Plugins.Podcast/*: Added a subscribe button to the
	toolbar, change the verbage of 'feed' to 'podcast' as it's more user 
	friendly (BNC 237045, 237038)

	* src/Plugins/Banshee.Plugins.Radio/RadioSource.cs: Do not show the
	playlist header and disable Write to CD action

	* src/Plugins/Banshee.Plugins.NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Fixed a potential crasher regarding showing cover art (BNC 236428)

	* src/Core/Banshee/PlayerInterface.cs: Fixed visibility logic of the
	playlist header; fixed a tiny focus bug

	* src/Core/Banshee.Widgets/ActionButton.cs: Set relief to none

	* src/Core/Banshee.Widgets/FadingAlignment.cs: Added a nice fading
	widget, but it's not in use anywhere right now; my idea didn't work
	out like I wanted it to, but the widget may still be useful

	* src/Core/Banshee.Widgets/DiscUsageDisplay.cs:
	* src/Core/Banshee.Widgets/DrawingUtilities.cs: Moved GdkColorToCairoColor
	from private widgets to avoid duplication

	* src/Core/Banshee.Base/Gui/ExceptionDialog.cs: Do not load the icon
	name for the window from branding because the dialog might be handling
	a crash from before branding initialization, in which case a nullref
	will occur

	* src/Core/Banshee.Base/IconThemeUtils.cs: Finally updated to use the
	binding API for Gtk.IconTheme love; this code was written in the Gtk# 2.4
	era, when there was no binding for Gtk.IconTheme; gets rid of a lot of
	native interop at the Banshee level

	* src/Core/Banshee.Base/Sources/AudioCdSource.cs: Disable the Write to CD
	action

	* src/Core/Banshee.Base/TrackInfoHeader.cs: Ensure the cover art thumbnail
	is hidden on idle, not just empty

	* src/Core/Banshee.Base/SourceManager.cs: Respect source.CanWriteToCD

	* src/Core/Banshee.Base/Source.cs: Added CanWriteToCD virtual property

2007-01-31  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Base/FileNamePattern.cs: Escape &'s too.

	* src/Dap/Banshee.Dap.MassStorage/MassStorageDap.cs: Log exceptions caught
	while transferring songs.

2007-01-31  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/MassStorageDap.cs: If the DAP is not
	restricted to a particular folder depth, use the normal Banshee
	FileNamePattern when copying music over. Fixes BGO #398491.

2007-01-30  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/MassStorageDap.cs:
	* src/Dap/Banshee.Dap.MassStorage/MassStorageTrackInfo.cs: Cleanup
	whitespace (follow HACKING).

2007-01-29  James Willcox  <snorp@snorp.net>

	* src/Plugins/Banshee.Plugins.Daap/daap-sharp/Database.cs: updated from
	upstream, fixes a problem where track numbers weren't showing up.

2007-01-24  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Widgets/PropertyTable.cs: Do not add a key label
	if the key string is null

	* src/Core/Banshee.Base/Banshee.AudioProfiles.Gui/ProfileConfigureButton.cs:
	Protected against a potential nullref

	* src/Core/Banshee.Base/Banshee.AudioProfiles.Gui/ProfileConfigurationDialog.cs:
	Added ':' to the end of the control labels

	* src/Core/Banshee.Base/Sources/DapSource.cs: Override the default source
	property label to 'iPod Properties', where iPod is the generic device 
	name - nicer than 'Source Properties'

	* src/Core/Banshee.Base/Dap/DapPropertiesDialog.cs: Use a description box
	container so the profile selector doesn't look goofy

2007-01-24  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Banshee.AudioProfiles/PipelineVariable.cs:
	* src/Core/Banshee.Base/Banshee.AudioProfiles/Profile.cs: Use the XML
	utilities in Banshee.Base.Localization to select the right string node
	based on xml:lang

	* src/Core/Banshee.Base/Localization.cs: Utilities to read the instance
	language setting (based on g_get_language_names()); XML utilities to to
	select nodes matching a query that also match against an xml:lang for
	the language in the current instance

	* src/Core/Banshee.Base/Makefile.am:
	* src/Core/Banshee.Base/Banshee.Base.mdp: Added Localization.cs

	* data/audio-profiles/vorbis.xml.in: Missed two strings to be translated

2007-01-23  Aaron Bockover  <abock@gnome.org>

	* data/audio-profiles/*.xml.in: Moved from *.xml, edit to allow intltool
	to extract and merge translations

	* data/audio-profiles/Makefile.am: Added, use INTLTOOL_XML_RULE to 
	support translating the audio profiles

	* data/Makefile.am: Include audio-profiles in SUBDIRS, do not install
	the audio profiles as the audio-profiles/Makefile will do that now

	* configure.ac: Generate data/audio-profiles/Makefile

2007-01-22  Patrick van Staveren  <trick@vanstaveren.us>

	* build/m4/banshee/dap-mtp.m4: properly quote error string and
	give more useful output.

2007-01-22  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Bumped to 0.11.5

	* NEWS: Updated with 0.11.5 release notes

	* src/Core/Banshee.Base/BatchTranscoder.cs: Added the ability to register
	alternative Transcoder types for handing WAV encoding 

	* src/Core/Banshee.Base/Banshee.Metadata/MetadataService.cs: Removed
	the obsolete API

	* src/Plugins/Banshee.Plugins.MetadataSearch/banshee-plugin-metadatasearcher.schemas.in: 
	Updated

2007-01-21  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Banshee.Metadata.MusicBrainz/MusicBrainzQueryJob.cs:
	Added a Lookup method that returns bool; support instances with a 
	pre-determined ASIN

	* src/Core/Banshee.Base/AudioCd/AudioCdDisk.cs: Perform a sync lookup
	through MusicBrainzQueryJob to fetch cover art for audio CDs

	* src/Core/Banshee.Base/AmazonCoverFetcher.cs: Removed legacy cover art
	downloader

2007-01-21  James Willcox  <snorp@snorp.net>

	* src/Core/Banshee.Base/Banshee.Metadata/MetadataService.cs: add a
	'AddProvider' method

	* src/Core/Banshee.Base/Banshee.Metadata/MetadataProviderFactory.cs:
	removed

	* src/Dap/Banshee.Dap.Ipod/IpodMetadataProvider.cs: add a new metadata
	provider which gets the cover art off the iPod when available.

	* src/Dap/Banshee.Dap.Ipod/IpodQueryJob.cs: added

2007-01-21  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Banshee.Metadata/MetadataServiceJob.cs:
	Added SaveHttpStreamPixbuf that normalizes image data over HTTP to 
	JPEG form and saves it to the cover art location, if the dimensions are
	greater than 50x50

	* src/Core/Banshee.Base/Banshee.Metadata.Rhapsody/RhapsodyQueryJob.cs:
	* src/Core/Banshee.Base/Banshee.Metadata.MusicBrainz/MusicBrainzQueryJob.cs:
	Use SaveHttpStreamPixbuf from the base class

2007-01-20  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.MetadataSearch/MetadataSearchConfigDialog.cs:
	Removed

	* src/Plugins/Banshee.Plugins.MetadataSearch/MetadataSearchPlugin.cs: R
	Rewritten to use the new Banshee.Metadata services APIs; shows progress
	of the operation in an ActiveUserEvent

	* src/Core/Banshee.Base/Banshee.Metadata/MetadataServiceJob.cs: Ensure 
	jobs are removed from the private queries table when they are unscheduled
	as well as finished

	* src/Core/Banshee.Base/Banshee.Kernel/Scheduler.cs: In Unschedule(), 
	match jobs that implement the interface of a type or is that are a 
	subclass of a type; added ScheduledJobsCount; use Globals.Debugging

	* src/Core/Banshee.Base/ActionManager.cs:
	* data/UIManagerLayout.xml: Added a top level 'Tools' menu

	* src/Plugins/Banshee.Plugins.Podcast/data/PodcastMenu.xml:
	* src/Plugins/Banshee.Plugins.Audioscrobbler/AudioscrobblerMenu.xml:
	Moved main menu actions to the new 'Tools' top level menu

2007-01-19  Aaron Bockover  <abock@gnome.org>

	Merged patch by Trey Ethridge <tale@juno.com> that loads embedded cover
	art in streams; implemented as the first-priority metadata provider in
	the new metadata services framework. BGO #388162.

	* src/Core/Banshee.Base/Banshee.Metadata/MetadataProviderFactory.cs: Added
	EmbeddedMetadataProvider.

	* src/Core/Banshee.Base/Paths.cs: Added overloaded method to get
	cover art path that takes the file extension
	
	* src/Core/Banshee.Base/TrackInfo.cs: Updated CoverArtFileName to try all
	possible file extensions that we support when using the new artist_album_id 

	* src/Core/Banshee.Base/Banshee.Metadata.Embedded/EmbeddedMetadataProvider.cs:
	Implements the metadata provider interface.    
	
	* src/Core/Banshee.Base/Banshee.Metadata.Embedded/EmbeddedQueryJob.cs:
	Does the work of retrieving the cover art from the file and caching it.
	
	* src/Core/Banshee.Base/StreamTagger.cs: Updated TrackInfoMerge method
	to use any file extension.  It was hard coded to only use ".jpg".
	
2007-01-19  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Banshee.Metadata/MetadataServiceJob.cs: New 
	metadata service job that runs all provider jobs in chain+sync

	* src/Core/Banshee.Base/Banshee.Metadata/MetadataService.cs: Primary 
	singleton for scheduling metadata lookups; runs a MetadataServiceJob
	in the Banshee scheduler

	* src/Core/Banshee.Base/Banshee.Metadata/IMetadataProvider.cs: Updated

	* src/Core/Banshee.Base/Banshee.Metadata/BaseMetadataProvider.cs: New
	base class for service jobs

	* src/Core/Banshee.Base/Banshee.Metadata.Rhapsody/RhapsodyQueryJob.cs:
	* src/Core/Banshee.Base/Banshee.Metadata.Rhapsody/RhapsodyMetadataProvider.cs:
	* src/Core/Banshee.Base/Banshee.Metadata.MusicBrainz/MusicBrainzQueryJob.cs:
	* src/Core/Banshee.Base/Banshee.Metadata.MusicBrainz/MusicBrainzMetadataProvider.cs:
	Updated to work with the changes in the metadata service APIs

2007-01-17  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/BansheeBranding.cs: Fixed branding initialization
	bug wherein the default cover art would never be loaded if a custom 
	branding were available

	* src/Core/Banshee/Banshee.TrackView.Columns/RatingColumn.cs:
	* src/Core/Banshee/banshee-interface.schemas.in: Rating is on by default

	* src/Plugins/Banshee.Plugins.Podcast/PodcastCore.cs: Removed debug line

2007-01-17  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee/Banshee.TrackView.Columns/TrackNumberColumn.cs: Make
	this column a fixed width
	
	* src/Core/Banshee/Banshee.TrackView.Columns/AlbumColumn.cs:
	* src/Core/Banshee/Banshee.TrackView.Columns/TitleColumn.cs:
	* src/Core/Banshee/Banshee.TrackView.Columns/DurationColumn.cs:
	* src/Core/Banshee/Banshee.TrackView.Columns/ArtistColumn.cs: Set better
	default widths for these columns

	* src/Core/Banshee/banshee-interface.schemas.in: Updated from above

	* src/Core/Banshee.Base/Library.cs: Fixed library path bug found in SP1

2007-01-17  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Gui/PreferencesDialog.cs:
	* src/Core/Banshee.Base/Banshee.AudioProfiles.Gui/ProfileComboBoxConfigurable.cs:
	Show the description in a GtkTextView

	* data/banshee-dialogs.glade: Fixed more alignment issues

	* data/audio-profiles/*: Updated profile names and descriptions to 
	provide more detail and be more user-friendly

2007-01-17  Aaron Bockover  <abock@gnome.org>

	* data/audio-profiles/wavpack.xml: Fixed

2007-01-17  Ruben Vermeersch  <ruben@savanne.be>

	* data/audio-profiles/mp3-lame.xml: Change the vbr-mode parameter, which
	doesn't exist, to vbr. Fixes BGO #397753.

2007-01-17  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Banshee.AudioProfiles.Gui/ProfileConfigureButton.cs:
	Only enable when the profile can be configured

	* src/Core/Banshee.Base/Banshee.AudioProfiles.Gui/ProfileConfigurationDialog.cs:
	Do not show the advanced expander if there are no advanced variables

	* src/Core/Banshee.Base/Banshee.AudioProfiles.Gui/ProfileComboBoxConfigurable.cs:
	Show the description of the profile in a label below the combo box

	* src/Core/Banshee.Base/Globals.cs:
	* src/Core/Banshee.Base/GstMisc.cs: Added SExp functions for building
	GStreamer pipelines

	* src/Core/Banshee.Base/Banshee.AudioProfiles/Pipeline.cs: Flatten the
	SExp result tree

	* build/m4/shamrock/mono.m4: Hopefull this will work on evil distros
	that put the GAC in lib64 and on good distros that put it in lib

	* data/banshee-dialogs.glade: Fix alignment on label

	* data/audio-profiles/*: Updated to the latest SExp syntax and use
	new gst-construct-* functions to help build pretty pipelines

2007-01-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/MassStorageDap.cs: Make sure not to
	modify a list while iterating over it.  Push removal of songs into a
	separate thread so it doesn't block.

2007-01-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Dap/Banshee.Dap.MassStorage/MassStorageDap.cs: Instead of copying
	instantly when adding a file to a DAP, wait until the Synchronize button
	is pressed like how other DAPs operate.  Fixes BGO #370229.  Doing so
	gives us transcoding nearly for free, fixing BGO #354727.  Based on patch
	by Juri Pakaste.

	* src/Core/Banshee.Base/Dap/DapMisc.cs: Add GetCodec method.

	* src/Core/Banshee.Base/Dap/Dap.cs: Allow subclasses to set the
	SupportedExtensions and SupportedPlaybackMimeTypes properties.

2007-01-16  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Core/Banshee.Base/Gui/SourceView.cs: Let tracks from smart playlists
	be dragged around.  Patch by Chris Turchin, fixes BGO #377885.

	* src/Core/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs: Set
	IsDragSource for future DAP playlist use.

2007-01-16  James Willcox  <snorp@snorp.net>

	* src/Core/Banshee.Base/Banshee.Metadata.Rhapsody/RhapsodyQueryJob.cs:
	Move the HTTP stuff up to the parent class

	* src/Core/Banshee.Base/Banshee.Metadata.MusicBrainz/*.cs: new metadata
	provider which uses MusicBrainz to find cover art.  It is the default
	provider now, since it gets much higher quality images compared to the
	Rhapsody backend.  If it fails, the Rhapsody backend is used as a
	fallback.

2007-01-15  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Banshee.Configuration/GConfConfigurationClient.cs:
	Support disabling actual GConf support via BANSHEE_DISABLE_GCONF

	* build/gconf-schema-rules: Set BANSHEE_DISABLE_GCONF so a GConf client
	is not actually created during the schema generation; necessary for 
	building in build services, etc.

2007-01-15  Alp Toker  <alp@atoker.com>

	* ext/hal-sharp/Device.cs: Add internal DType enum copied from
	dbus-sharp since it will no longer be available in future versions.

2007-01-15  Aaron Bockover  <abock@gnome.org>
	
	0.11.4 Released

	* NEWS: Updated with 0.11.4 release notes

2007-01-14  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/IO/IOProxy.cs: Enable the GNOME VFS IO backend

2007-01-14  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.Radio/*: Added initial code for local
	station management, not complete

	* src/Core/Banshee.Base/Banshee.Playlists.Formats.Xspf/XspfBaseObject.cs:
	Add a null check

2007-01-14  Aaron Bockover <abock@gnome.org>

	* src/Plugins/Banshee.Plugins.Podcast/PodcastPlugin.cs: Added a better
	description of what podcasting is

	* src/Plugins/Banshee.Plugins.Radio/RadioSource.cs:	
	* src/Plugins/Banshee.Plugins.Radio/source-radio.png: Use Jakub's new
	radio icon (sweeeet)

	* src/Core/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistCore.cs:
	* src/Core/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Core/Banshee.Base/Globals.cs: Rework the SmartPlaylistCore so
	that it is not a plugin, instead initialize/dispose it directly as we
	always want smart playlists to be available

2007-01-14  Aaron Bockover  <abock@gnome.org>

	* src/Plugins/: Moved Radio, Podcast, MiniMode, Recommendation plugins
	from banshee-official-plugins

	* build/m4/shamrock/mono.m4: Use Mono's libdir (BGO #394033)

2007-01-12  Patrick van Staveren  <trick@vanstaveren.us>

	* src/Dap/Banshee.Dap.Karma/KarmaDap.cs: add PluginModuleEntry,
	on behalf of Bob Copeland.  BGO 392013.

2007-01-10  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Banshee.AudioProfiles/SExpEngine/Literals.cs: Use
	the en-US culture to format doubles

	* src/Core/Banshee.Base/Banshee.AudioProfiles/PipelineVariable.cs: Add
	enables/disables support on the variable node, used by the check type

	* src/Core/Banshee.Base/Banshee.AudioProfiles.Gui/ProfileConfigurationDialog.cs: 
	Fixed minor bug with check control, add enables/disables support for
	the check control

	* src/Core/Banshee.Base/Globals.cs: Load profiles even if they're not
	being tested
	
	* data/audio-profiles/wma.xml: Use the check control for vbr 

	* data/audio-profiles/wavpack.xml: Added a wavpack profile by 
	Sebastian Dröge

2007-01-06  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Banshee.AudioProfiles.Gui/ProfileConfigurationDialog.cs: 
	Support the check type; added a text view to dump the S-Expression eval
	in when running in debug mode

	* src/Core/Banshee.Base/Banshee.AudioProfiles/PipelineVariable.cs: Added
	check type

	* src/Core/Banshee.Base/Banshee.AudioProfiles/SExpEngine/CastFunctionSet.cs:
	Added cast-bool

	* src/Core/Banshee.Base/Banshee.AudioProfiles/SExpEngine/Literals.cs: 
	Override ToString on BooleanLiteral to return lower-case true/false

	* data/audio-profiles/mp3-xing.xml:
	* data/audio-profiles/wma.xml:
	* data/audio-profiles/vorbis.xml: 
	* data/audio-profiles/flac.xml: Updated

2007-01-06  Aaron Bockover  <abock@gnome.org>

	This commit adds some incredible power to the audio profiles support.
	Profile process (i.e. GStreamer pipelines) are now defined using an
	S-Expression like language. This is a big change, but very, very well
	worth it. I will be flying and unavailable today/Jan 6, so if this commit
	breaks the build or functionality somehow, revert to the previous svn
	revision. 

	* src/Core/Banshee.Base/Banshee.AudioProfiles/Pipeline.cs: Added 
	SExpEngine integration to compile the pipeline process; removed 
	transformation/Abakos support as it can now be done inline in S-Exp

	* src/Core/Banshee.Base/Globals.cs: Add the gst-element-is-available
	S-Exp function

	* src/Core/Banshee.Base/GstMisc.cs: Added a S-Exp function, 
	gst-element-is-available, which is a S-Exp wrapper around TestPipeline;
	this S-Exp function can be used to conditionally include an element
	or pipeline piece inside of the master pipeline:

	  (+ "lame" (if (gst-element-is-available "xingmux") "! xingmux" ""))

	* data/audio-profiles/*.xml: Ported all the pipelines to S-Exp expressions

	* src/Core/Banshee.Base/Banshee.AudioProfiles/SExpEngine/*: The new
	SExpEngine - written in 10 hours! Probably lots of holes to fill, but 
	it has a lot of built in functionality and is working for what we need
	for audio profiles; the parser could probably use some love

2007-01-05  Peter Teichman  <peter@novell.com>

	* src/Core/Banshee.Base/LibraryTrackInfo.cs: Fix an integer
	overflow when importing tracks with numbers that don't
	fit into 32 bits. (BNC #219700)

	Also, only use numbers in filenames as track numbers when they're
	at the beginning of the filename.

2007-01-05  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Gui/SourceView.cs: Expand node if source.Expanded
	is true or source.AutoExpand is not null and is true; override the 
	OnRowExpanded/OnRowCollapsed methods to store the expansion state in
	the source

	* src/Core/Banshee.Base/Source.cs: Added Expanded virtual bool property
	and made AutoExpand a nullable bool

	* src/Core/Banshee.Base/Sources/LibrarySource.cs: Override Expanded and
	read/store the value in configuration; Override AutoExpand and return
	it as null, so the Expanded property is used exclusively in the view

	* src/Core/Banshee.Base/Banshee.Configuration.Schema/LibrarySchema.cs: 
	Added SourceExpanded property

	* src/Core/Banshee.Base/Globals.cs: 
	* src/Core/Banshee.Base/StreamTagger.cs: 
	* src/Core/Banshee.Base/Gui/RatingRenderer.cs: Fixed some minor warnings

	* src/Core/Banshee.Base/Makefile.am: Added ScriptCore.cs

2007-01-05  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee/PlaylistView.cs: Removed old unused column variables

	* src/Core/Banshee/PlayerInterface.cs: Show the rip check button again

	* src/Core/Banshee.Base/Plugins/ScriptCore.cs: Split script support out
	from PluginCore into new ScriptCore; added StartupInvocationEntry and
	ScriptCore.InstallInvocation to allow scripts to install menu/UI hooks
	in the Music menu - provides simple user-initiated invocation for scripts

	* src/Core/Banshee.Base/Plugins/PluginCore.cs: Split script support out
	into new ScriptCore

	* src/Core/Banshee.Base/Globals.cs: Initialize ScriptCore

	* data/UIManagerLayout.xml:
	* src/Core/Banshee.Base/ActionManager.cs: Created action for the 
	Scripts menu

2007-01-04  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/FileNamePattern.cs: Filter the display pattern too

	* src/Core/Banshee.Base/Banshee.AudioProfiles.Gui/ProfileConfigurationDialog.cs: 
	Support enables/disables on preset variables; support min/max labels

	* src/Core/Banshee.Base/Banshee.AudioProfiles/PipelineVariable.cs: Added
	enables/disables support and min-label, max-label

	* src/Core/Banshee.Base/Banshee.AudioProfiles/Abakos.Compiler/Expression.cs:
	Work around parser bug

	* src/Core/Banshee.Base/Globals.cs: Do not test audio profiles if
	BANSHEE_PROFILES_NO_TEST is set

	* src/MonoDevelopBootstrap.cs: Use Mono.Unix.Native.Syscall.system to 
	exec make run so the environment can be set

	* data/audio-profiles/vorbis.xml: Set min-label, max-label

	* data/audio-profiles/mp3-lame.xml: Support VBR

2007-01-04  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Plugins/PluginFactory.cs: Handle reflecting
	against dynamic modules

	* src/Core/Banshee.Base/Plugins/PluginCore.cs: After compiling a boo
	script, always call factory.LoadPluginsFromAssembly, and always invoke
	the assembly.EntryPoint and with the proper number of arguments; this
	allows you to not have to specify a Main() method at all in the boo
	script

	* src/Core/Banshee.Base/FileNamePattern.cs: Added FilterHandler to
	allow plugins and scripts to perform further formatting on the 
	FileNamePattern

2007-01-03  Ruben Vermeersch  <ruben@savanne.be>

	* src/Core/Banshee.Base/ArgumentQueue.cs: Allow duplicate arguments to be
	passed. This avoids a crash when you pass --play --play (or similar) and
	avoids dirty hacks in the launcher script. The first passed argument will
	be used. Any subsequent arguments with the same name (and their
	parameters) will be ignored.

	* src/Core/Banshee/banshee.in: Add support for profiling banshee. By
	passing --profile=name (where name is the name of the profiler you wish to
	use), the chosen profiler will be started. Also added support for starting
	profilers, traces and enabling debug by using environment variables. You
	can now start banshee with BANSHEE_DEBUG=1, BANSHEE_PROFILE=heap-shot and
	BANSHEE_TRACE=something.

2007-01-03  Peter Teichman  <peter@novell.com>

	* src/Core/Banshee/PlayerInterface.cs:
	Disable "Delete Song From Drive" in playlist listings (BNC #218997)
	Start playing the next song if the current one is deleted (BNC #218993)

2007-01-03  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee/Banshee.TrackView.Columns/RatingColumn.cs: Make the
	column a fixed width and not resizable (BGO #385547)

	* src/Core/Banshee.Base/Gui/RatingRenderer.cs: Added static Width propery

2007-01-03  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee/PlaylistView.cs: Call CreatePopupableHeader on the
	columns after adding to the view (must be done after AppendColumn)

	* src/Core/Banshee/Banshee.TrackView.Columns/TrackViewColumn.cs: Added
	clever hack from Peter Johanson to allow button press events on tree
	view column headers, thus display a context menu on each column header
	on right click, allowing to hide the column or show the columns dialog

2007-01-03  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee/Banshee.TrackView.Columns/*.cs: Make the SchemaEntry
	properties all public so they can be picked up by gconf schema extractor

	* src/Core/Banshee/banshee-interface.schemas.in:
	* src/Core/Banshee.Base/banshee-core.schemas.in: Updated, schema entries
	are sorted by key now

	* build/GConfSchemaExtractor.cs: Sort the schema entries by key to ensure
	that the schema content doesn't change just because the reflection 
	iterating order in the assembly may have changed, which will cause 
	false modifications (this is apparent when compiling between gmcs/make and
	gmcs/MonoDevelop)

2007-01-03  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee/Banshee.TrackView.Columns/*.cs: Use an enum to ID
	columns and their sort orders, will make adding new columns easier; always
	sort track number in ascending order if not explicitly sorting on the
	track number column; sort by the parent folder uri of a track before
	sorting by album, which allows the same album to be in the library 
	multiple times in different file system locations, but grouped and sorted
	properly in the view when sorting by track, album, or artist

	* src/Core/Banshee/Banshee.TrackView.Columns/UriColumn.cs: Added Uri Column;
	shows the local path if the file is local; if local, show the relative 
	path from the base library path if path is a child of the base library

	* src/Core/Banshee/PlaylistView.cs: Instantiate Uri column

	* src/Core/Banshee.Base/Gui/PreferencesDialog.cs: QueueDraw on the playlist
	view when the library location changes; if the Uri column is visible,
	the displayed path may change when changing base library location

	* src/Core/Banshee.Base/Library.cs: Added set accessor on the Location 
	property, added CachedLocation to avoid GConf calls on the get accessor
	to improve rendering in the Uri column renderer

2007-01-02  Ruben Vermeersch  <ruben@savanne.be>

	* src/Plugins/Banshee.Plugins.NotificationAreaIcon/NotificationAreaIconPlugin.cs: 
	Prevent the notification bubble from showing up twice.

2007-01-02  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/Globals.cs: FreeHGlobal(mono_jig_segv_handler)

2007-01-02  Aaron Bockover  <abock@gnome.org>

	* src/Core/Banshee.Base/GstMisc.cs:
	* libbanshee/gst-misc-0.10.c: Removed TestEncoder

	* src/Core/Banshee.Base/Globals.cs: Use sigaction before and after
	startup to grab and restore the JIT's SEGV handler due to a bad bug
	in GStreamer's SEGV signal handling (Gst BGO #391777); this should stop
	the random segfaults that have been happening lately

2007-01-01  Ruben Vermeersch  <ruben@savanne.be>

	* src/Makefile.am: Quick'n dirty fix to make HEAD build again. Happy
	newyear all!

2006-12-31  Aaron Bockover  <abock@gnome.org>

	* src/PlayerInterface.cs:
	* src/Banshee.Base/Gui/SeekDialog.cs: Synced functionality, minor fixes

2006-12-31  Aaron Bockover  <abock@gnome.org>

	* src/Makefile.am:
	* src/Banshee.Base/Makefile.am:
	* src/PlayerWindowSchema.cs:
	* src/Banshee.Base/Banshee.Configuration.Schema/PlayerWindowSchema.cs: 
	Moved PlayerWindowSchema to Banshee.Base

	* build/Makefile.am: Install gconf-schema-extractor.exe

	* configure.ac: Bump to 0.11.4

2006-12-31  Aaron Bockover  <abock@gnome.org>

	* src/PlayerInterface.cs: Use Album instead of DisplayAlbum, set the
	MoreInfoUri on the TrackInfoHeader; Use a stop icon instead of a pause
	icon if the stream cannot pause; support the Contacting engine state

	* src/StockIcons.cs: Added stop icon

	* src/PlaylistView.cs: Added protected IntPtr constructor

	* src/Banshee.Base/Banshee.Metadata/SchedulerMetadataProvider.cs: Added
	some more null checks
	
	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Use Album instead of DisplayAlbum

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayerEngine.cs: Support parsing
	Real Radio clip metadata and sending results as StreamTags; support 
	cover art lookup inside live streams when track changes occur; support
	virtual sub-tracks on live streams when duration events come in; this
	allows the UI to show proper position/duration on subsets of a live stream
	
	* src/Banshee.Base/PlayerEngineCore.cs: Added CanPause property, if
	Pause() is called and the track cannot pause, stop it instead
	
	* src/Banshee.Base/MediaEngine/PlayerEngine.cs: Added a Contacting state
	and use current_track.IsLive instead of current_track is UnknownTrackInfo
	to ensure tag updates only occur on live/radio streams
	
	* src/Banshee.Base/StreamTagger.cs: Added CommonTags.MoreInfoUri and
	support merging a duration that is already a TimeSpan

	* src/Banshee.Base/UnknownTrackInfo.cs: Set is_live

	* src/Banshee.Base/TrackInfoHeader.cs: Set MoreInfoUri, use a LinkLabel
	for the title; do not show the album if it is null
	
	* src/Banshee.Base/TrackInfo.cs: Removed Equals/GetHashCode overrides,
	added AreEqual(a,b) static method; Added IsLive and MoreInfoUri properties
	
	* src/Banshee.Widgets/StreamPositionLabel.cs: Added IsContacting
	
	* src/Banshee.Widgets/LinkLabel.cs: Added ActAsLink - link functionality
	can be disabled by setting this to false, it will act as a normal label;
	use the selection background color for the link foreground color; Added
	Ellipsize and Selectable properties; Selectable is always disabled if
	in link mode

	* src/Banshee.Widgets/Banshee.Widgets.mdp: Updated

2006-12-31  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Banshee.Metadata/*.cs: New generic metadata query APIs

	* src/Banshee.Base/Banshee.Metadata.Rhapsody/*.cs: Rhapsody cover art 
	fetching implementation of Banshee.Metadata APIs

	* src/Banshee.Base/PlayerEngineCore.cs: Query the metadata query APIs
	on track change; send results as a track info update event

	* src/Banshee.Base/TrackInfo.cs: Cover art fixes

	* src/Banshee.Base/StreamTagger.cs: Added album-cover-id

	* src/Banshee.Base/Makefile.am: 
	* src/Banshee.Base/Banshee.Base.mdp: Updated

2006-12-30  Aaron Bockover  <abock@gnome.org>

	* GNOME Subversion: About f*cking time.

2006-12-29  Alp Toker  <alp@atoker.com>

	* dbus-sharp/*: Updated to 0.3.1. Fixes 64-bit Linux regression.

2006-12-29  Alp Toker  <alp@atoker.com>

	* src/Banshee.Base/Banshee.Burner/BurnerSessionPreparer.cs:
	Compile fix for 2.0; see Mono bug #80384

2006-12-29  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/NetworkDetect.cs: Added NetworkUnavailableException

2006-12-29  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Banshee.Web/Browser.cs: Added UserAgent field

2006-12-28  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Banshee.Playlists.Formats.Xspf/*: Implemented read
	support for most of the XSPF specification

	* tests/Xspf/*: 
	* tests/Makefile.am: Added Xspf test suite

	* src/Banshee.Base/Banshee.Base.mdp:
	* src/Banshee.Base/Makefile.am:

2006-12-26  Aaron Bockover  <abock@gnome.org>

	* src/banshee.in: source scripts into the wrapper that are installed
	into $(libdir)/banshee/shell-init/ and are +x; Useful if plugins need
	to ensure certain environment variables are initialized

2006-12-24  Ruben Vermeersch  <ruben@savanne.be>

	* src/Banshee.Base/Gui/ExceptionDialog.cs: Set UseUnderline to false on
	the label of the exception, this caused exception messages to be garbled
	if they contained an underscore.

2006-12-23  Ruben Vermeersch  <ruben@savanne.be>

	* src/Banshee.Widgets/CoverArtThumbnail.cs: Fix funny aspect ratio
	weirdness (BGO #388903).

2006-12-23  Aaron Bockover  <abock@gnome.org>

	NOTE: A new configuration system has been added. With this change also
	comes a reorganization of the GConf keys. Keys are organized into 
	namespaces and also are now correctly formatted (under_cased and not
	CamelCased). As such, all old settings will be lost. A migration path
	will be introduced before the next release, but be warned if using CVS
	from here until 0.11.4 - your settings will not be migrated until otherwise
	noted!

	* src/Banshee.Base/Banshee.Configuration/ConfigurationClient.cs: new static 
	top-level configuration API that is platform agnostic

	* src/Banshee.Base/Banshee.Configuration/GConfConfigurationClient.cs: GConf 
	backend to new configuration API

	* src/Banshee.Base/Banshee.Configuration/IConfigurationClient.cs: Interface
	for configuration backends

	* src/Banshee.Base/Banshee.Configuration/SchemaEntry.cs: Generic structure
	representing a configuration setting. Should be defined as public static
	readonly instances in classes so GConf schema XML files can be generated
	automatically

	* src/Banshee.Base/Banshee.Configuration.Schema/ImportSchema.cs:
	* src/Banshee.Base/Banshee.Configuration.Schema/LibrarySchema.cs: Define
	lots of namespaced configuration settings (SchemaEntry<T>)

	* src/TrackViewColumnWindow.cs: Column window using new TrackViewColumn API

	* src/Basnhee.TrackView.Columns/*: Added TrackViewColumn base column
	implementation that extends Gtk.TreeViewColumn and specific column
	implementations extending TrackViewColumn. Each column implementation
	handles its own configuration, sorting, and rendering.

	* src/Banshee.Base/DBusRemote.cs: NameReply changed to RequestNameReply
	in managed DBus 0.3.0

	* src/Banshee.Base/BatchTranscoder.cs: Return if the batch_queue is empty,
	avoids a possible nullref

	* src/Banshee.Base/Gui/FileChooserDialog.cs: FileChooserDialog that
	automatically restores/sets the last folder URI

	* src/Banshee.Base/Gui/ImageFileChooserDialog.cs:
	* src/Banshee.Base/FolderImportSource.cs:
	* src/Banshee.Base/FileImportSource.cs: Use the new Banshee 
	FileChooserDialog

	* src/Banshee.Base/GConfKeys.cs: Removed

	* src/Banshee.Base/Globals.cs: Removed old GConf client
	
	* src/Banshee.Base/StringUtil.cs: Added CamelCaseToUnderCase
	
	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs:
	* src/Banshee.Plugins/Daap/DaapCore.cs:
	* src/Banshee.Plugins/Daap/DaapPlugin.cs:
	* src/Banshee.Plugins/MMKeys/MMKeysPlugin.cs:
	* src/Banshee.Plugins/MetadataSearch/MetadataSearchPlugin.cs:
	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconConfigPage.cs:
	* src/Banshee.Base/Gui/OpenLocationDialog.cs:
	* src/Banshee.Base/Gui/PreferencesDialog.cs:
	* src/Banshee.Base/Gui/TrackEditor.cs:
	* src/Banshee.Base/IO/IOProxy.cs:
	* src/Banshee.Base/Plugins/Plugin.cs:
	* src/Banshee.Base/Plugins/PluginCore.cs:
	* src/Banshee.Base/Plugins/PluginDialog.cs:
	* src/Banshee.Base/Sources/AbstractPlaylistSource.cs:
	* src/Banshee.Base/Sources/LibrarySource.cs:
	* src/Banshee.Base/StreamTagger.cs:
	* src/Banshee.Base/PlayerEngineCore.cs:
	* src/Banshee.Base/LibraryTrackInfo.cs:
	* src/Banshee.Base/Library.cs:
	* src/Banshee.Base/FileNamePattern.cs:
	* src/Banshee.Base/AudioCdRipper.cs: 
	* src/PlayerInterface.cs: Use the new Banshee.Configuration APIs, getting
	and setting configuration from SchemaEntry<T> objects

	* src/Banshee.Base/Banshee.AudioProfiles/ProfileConfiguration.cs: 
	Use the new configuration APIs to get the base key

	* src/Banshee.Base/Banshee.AudioProfiles/ProfileManager.cs: Place
	document.Load inside try/catch, dump exception if it occurs (useful if
	profile XML is invalid)

	* src/Banshee.Base/Banshee.AudioProfiles/Pipeline.cs: 
	Added GetPendingProcessesById, CompileProcess(Process), AddProcess(Process)
	methods and allow defining multiple pipeline processes with the same id
	using an order attribute. This allows for defining various pipelines for
	a single process, the first pipeline that compiles will be used.

	* src/PlaylistView.cs: Use new columns, cleaned up lots of code

	* src/Makefile.am: Added new files, include new auto-schema rule

	* banshee.mds: Updated

	* build/Common.Makefile: Added MONO_BASE_PATH and LINK_BANSHEE_BASE

	* build/Makefile.am: Build GConfSchemaExtractor.cs

	* build/GConfSchemaExtractor.cs: Creates a GConf schema XML file from
	assemblies containing SchemaEntry<T> objects

	* build/gconf-schema-rules: Makefile.am include file with rule for 
	automatically generating and installing schemas from assemblies

	* data/audio-profiles/*.xml: Updated

	* dbus-sharp/*: Updated to 0.3.0

	* data/Makefile.am:
	* data/banshee.schemas.in: Removed old manual schemas

	* Makefile.am:
	* autogen.sh: Manually copy mkinstalldirs if it wasn't copied by automake

2006-12-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Gui/SourceView.cs: Don't enter source renaming mode
	unless the user presses F2 or right clicks and selects 'Rename'.  Prevents
	entering rename mode when a source is selected and you try to drag it or
	double click it to start it playing.

2006-12-17  Gabriel Burt  <gabriel.burt@gmail.com>

	Add initial support for DAPs to have playlists.  Code contributed by Trey
	Ethridge, Patrick van Staveren, Kevin Kubasik, and Gabriel Burt.

	* src/Banshee.Base/Banshee.Base.mdp:
	* src/Banshee.Base/Makefile.am: new files

	* src/Banshee.Base/Banshee.Playlists.Formats/M3u.cs
	* src/Banshee.Base/Banshee.Playlists.Formats/PlaylistFile.cs
	* src/Banshee.Base/Banshee.Playlists.Formats/Pls.cs: New files for
	importing and exporting playlist files, written by Trey Ethridge.

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs: The
	Playlist ConfirmUnmap dialog was moved, updating reference here.

	* src/Banshee.Base/Sources/AbstractPlaylistSource.cs: New abstract class
	that PlaylistSource (should be renamed to LibraryPlaylistSource..) and
	DapPlaylistSource derive from.

	* src/Banshee.Base/Sources/DapPlaylistSource.cs: New source for DAP
	playlists.

	* src/Banshee.Base/Sources/DapSource.cs: Handle SourceDrop.  If a
	PlaylistSource is dropped on a DAP and it is IPlaylistCapable, create
	a new DAP playlist from the dropped source.

	* src/Banshee.Base/Sources/IPlaylistCapable.cs: New interface for DAPs
	and Sources that can have child playlists.

	* src/Banshee.Base/Sources/PlaylistSource.cs: Refactored into
	AbstractPlaylistSource.

2006-12-17  Patrick van Staveren  <trick@vanstaveren.us>

	* src/Banshee.Dap/Mtp/GPhotoDevice.cs: fix sync'ing not creating
	path properly.

2006-12-17  Patrick van Staveren  <trick@vanstaveren.us>

	* src/Banshee.Dap/Mtp/GPhotoDeviceFile.cs:
	* src/Banshee.Dap/Mtp/MtpDap.cs: add / clean up debug info

2006-12-17  Ruben Vermeersch  <ruben@savanne.be>

	* src/Banshee.Base/FileNamePattern.cs: Also escape |, < and >. Again
	related to BGO #333813.

2006-12-17  Ruben Vermeersch  <ruben@savanne.be>

	* src/Banshee.Base/FileNamePattern.cs: Also escape single and double
	quotes. (Should fix BGO #333813).

2006-12-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Banshee.SmartPlaylist/Editor.cs: Add a predefined smart
	playlist for 'Unheard Podcasts'.

2006-12-15  Gabriel Burt  <gabriel.burt@gmail.com>

	Rename PlaylistID to SmartPlaylistID in the two relevant tables. Add
	ability to have smart playlists derived from other smart playlists.

	* src/Banshee.Base/Banshee.SmartPlaylist/Editor.cs: If editing an existing
	playlist, pass it on to the QueryModel so it can use it to figure out what
	smart playlists to show as condition options.

	* src/Banshee.Base/Banshee.SmartPlaylist/QueryBuilder.cs: Add operators
	for being/not being in a smart playlist. In terms of eventual code reuse
	somewhere like F-Spot, this is hacky and gross.  But it's quick.

	* src/Banshee.Base/Banshee.SmartPlaylist/QueryBuilderModel.cs: Support
	using other smart playlists in the condition for this one.

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistCore.cs: Do the
	column rename, support smart playlists being dependent on one another.

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs: Support
	identifying and listening to smart playlists we depend on.  Show a special
	dialog confirmation if we have dependent smart playlists and we are
	removed.

2006-12-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/PlayerInterface.cs: Handle DapPropertiesChanged more gracefully.

	* src/Banshee.Base/Banshee.SmartPlaylist/Editor.cs: When saving a smart
	playlist, queue a refresh instead of calling it from the thread.

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs: Don't
	order the tracks by id when refreshing; recent regression, fixes BGO
	#384816.  Also, assume Add/RemoveTrack calls are in main thread, and add
	QueueRefresh method used by the editor.

	* src/Banshee.Base/Dap/Dap.cs: Add a public property to get at a Dap's
	Source object. Raise PropertiesChanged in the standard way.

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: When adding tracks to the
	source (either when first loading or transferring), queue updates to the
	track count in the source view.  Display more helpful error messages when
	unable to eject the DAP.

2006-12-14  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: Load iPods that have an
	.is_audio_player file as regular USB mass storage devices.

2006-12-13  Peter Teichman  <peter@novell.com>

	* src/Banshee.Base/Banshee.Burner/BurnerCore.cs:
	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs:
	Add a menu accelerator for Music->Close, and change Music->New
	Audio CD

2006-12-13  Peter Teichman  <peter@novell.com>

	* src/Banshee.Base/ActionManager.cs:
	* src/Banshee.Base/Banshee.Burner/BurnerCore.cs:
	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistCore.cs:
	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs:
	Add menu accelerators for actions that haven't had them.
	(Fixes BNC #202861)

2006-12-13  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Make 'Quit' italics

2006-12-13  Aaron Bockover  <abock@gnome.org>

	* build/Common.Makefile: Run NJB uninstalled properly

	* src/Main.cs: Do not use UcFirst - just pass the program name

	* src/PlayerInterface.cs: Call InterfaceElements.PrimaryWindowClose if it 
	is set; if set, the close action from the title bar will close the 
	window instead of quitting the application (Fixes BGO #358192)

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Set InterfaceElements.PrimaryWindowClose handler to override the quit
	behavior for the window's [X] button. Notify user of the action if
	it's never been performed before; only set the close handler if
	/apps/Banshee/NotificationAreaIcon/quit_on_close in GConf is not set 

	* src/Banshee.Plugins/NotificationAreaIcon/banshee-notificationareaicon.schemas.in: Added schema keys for quit_on_close and notify_on_close

	* src/Banshee.Base/Globals.cs: Added InterfaceElements.PrimaryWindowClose

	* src/Banshee.Base/StringUtils.cs: Implemented culture aware sorting
	that also ignore 'the' prefixes on strings; speeds sort operation up
	by about 15%. (Fixes BGO #384235)

	* src/PlaylistView.cs: Use new culture aware sorting for strings

	* src/Banshee.Base/Banshee.Base.mdp:
	* src/Banshee.Base/Makefile.am: Added StringUtils.cs

	* src/Banshee.Base/Utilities.cs: Removed old StringUtils class

2006-12-13  Aaron Bockover  <abock@gnome.org>

	* build/m4/banshee/boo.m4: Require 0.7.6 for booc precompilation

	* build/m4/banshee/dap-njb.m4: Cosmetic AC_MSG_RESULT fix

2006-12-12  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Widgets/ActiveUserEvent.cs:
	* src/Banshee.Widgets/ActiveUserEventsManager.cs: Queue ActiveUserEvent
	objects if the ActiveUserEventsManager is not yet available

	* src/Banshee.Base/Dap/Dap.cs: Do not remove source if it is null

	* src/Banshee.Base/Banshee.AudioProfiles/PipelineVariable.cs: Check for
	null to prevent NullReferenceExceptions, even though they're handled;
	this allows startup to work inside gdb without having to set pass on
	SIGSEGV

	* libbanshee/gst-cd-rip-0.10.c: Use gst_element_link instead of 
	gst_element_link_many to provide higher resolution error reporting;
	removed old muxer injection hacks now that we have awesome audio
	profile support with proper pipeline definitions

	* build/m4/shamrock/gstreamer.m4: Print the full gst-inspect path that
	is found instead of just 'yes'

	* build/m4/banshee/dap-njb.m4: Fixed lib64 detection for njb-sharp
	Libraries variable

	* build/Common.Makefile: Support running MTP uninstalled

2006-12-12  Patrick van Staveren  <trick@vanstaveren.us>

	* build/m4/banshee/dap-mtp.m4:
	* src/Banshee.Dap/Mtp/MtpDap.cs: fix verification based on newer
	hal fdi information.  Initialization should work now with
	libgphoto2 2.3.0 or later, but not younger.

2006-12-09  Patrick van Staveren  <trick@vanstaveren.us>

	First update in quite some time...

	* src/Banshee.Dap/Mtp/GPhotoDevice.cs:
	* src/Banshee.Dap/Mtp/GPhotoDeviceFile.cs: lots of syntax cleanups
	Who the heck wrote this to begin with?  Oh...it was me...

	* src/Banshee.Dap/Mtp/MtpDeviceId.cs:
	* src/Banshee.Dap/Mtp/Makefile.am: removed MtpDeviceId in favour of
	detecting libgphoto2 compatible devices from HAL properties.

	* src/Banshee.Dap/Mtp/MtpDap.cs: lots of syntax cleanups, use HAL
	properties to determine if this is a MTP device, lots more debug.
	Handle multiple instance devices without a popup.  Play nicely if 
	there is a libgphoto2 camera plugged in as well.

2006-12-09  Aaron Bockover  <abock@gnome.org>

	Banshee 0.11.3 Released!

	* NEWS: Fixed small bug

	* README:
	* AUTHORS: Updated

	* MAINTAINERS: Removed, not sure why we had both	

2006-12-09  Aaron Bockover  <abock@gnome.org>

	* src/Main.cs: setup the GNOME Program outside the Interface initialization
	handler, it needs to be done before startup of any components

2006-12-09  Aaron Bockover  <abock@gnome.org>

	* NEWS: Updated with release notes

	* data/contributors.xml: Updated

	* src/PlayerInterface.cs: Get rid of the old source view loading pane

	* src/Banshee.Base/ActionManager.cs:
	* src/Banshee.Base/Globals.cs:
	* src/Main.cs: Load the interface itself as a startup component; this
	allows the splash screen to stay up the entire startup time, showing
	progress of the interface load

	* src/Banshee.Base/Plugins/PluginCore.cs: Added support for disabling
	plugins altogether by setting BANSHEE_PLUGINS_DISABLE

	* src/Banshee.Base/Banshee.SmartPlaylist/Editor.cs: Focus the playlist
	name entry on UI load

2006-12-08  Aaron Bockover  <abock@gnome.org>

	* build/icon-theme-installer: New script that meant to be used from
	within make/automake to install icons into the theme in an easy and
	proper way. It also updates the icon cache

	* data/images/Makefile.am: Use new icon-theme-installer

	* build/Makefile.am: EXTRA_DIST icon-theme-installer

	* data/images/splash.png: Updated splash from Jakub

	* src/Banshee.Base/Plugins/PluginCore.cs: Create the user plugins
	directory as some plugins expect it to be there

2006-12-08  Aaron Bockover  <aaron@abock.org>

	* configure.ac:
	* build/m4/banshee/libbanshee.m4:
	* build/m4/shamrock/i18n.m4: Moved some macro calls back to configure.ac
	as gnome-autogen greps configure.ac (booo) for these call to see what
	programs it will need to run (libtoolize, intltoolize, autoheader); 
	would be nice if gnome-autogen could parse ACLOCAL_FLAGS and grep
	through the -I files as well. Hiss. Fixes BGO #383844.

2006-12-08  Ruben Vermeersch  <ruben@savanne.be>

	* src/Banshee.Base/IO/GnomeVfs.cs:
	* src/Banshee.Base/IO/Interfaces.cs:
	* src/Banshee.Base/IO/SystemIO.cs:
	* src/Banshee.Base/IO/Unix.cs: Added a Move(from, to) method.

2006-12-08  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Sources/PlaylistSource.cs: Added a confirmation
	method that shows a dialog asking to unmap; has do not show me again 
	check box, fixes BGO #360466

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs: Use
	PlaylistUtil.ConfirmUnmap

	* data/UIManagerLayout.xml: Added a close item placeholder

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconMenu.xml:
	Fill in the close item placeholder

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Added close action that hides to the tray

	* src/Banshee.Base/Gui/SourceView.cs: Do not allow dragging tracks from
	a source onto itself (BGO #345620)

	* src/Banshee.Base/ImportManager.cs: Added ImportFinished event 
	Scott Peterson, BGO #362994

2006-12-08  Aaron Bockover  <abock@gnome.org>

	* src/Main.cs: Added a --no-source-change argument that can be supplied
	with --dap or --audio-cd to disable selecting the source in the source
	view and instead simply present the already running instance. This will
	allow Banshee to start with the source selected if no instance was running
	but not change to the source if an instance was already started. Fixes
	BGO #345476

2006-12-08  Aaron Bockover  <abock@gnome.org>

	* data/UIManagerLayout.xml: Added Copy to the context menu

	* src/Banshee.Base/ActionManager.cs: Removed 'Song(s)' from the menu
	items - that's implied

	* src/PlayerInterface.cs: Use a UTF8 encoding for the nautilus file copy;
	make the target static; show/hide the jump to playing item based on
	our current playback state

2006-12-08  Aaron Bockover  <abock@gnome.org>

	* src/PlayerInterface.cs: Implement nautilus copy files action, 
	fixes BGO #344542

	* data/UIManagerLayout.xml:
	* src/Banshee.Base/ActionManager.cs: Added Copy item to Edit menu

2006-12-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs: Clean up
	some methods, and add a remove queue to hopefully speed things up when
	songs are removed from the library.

2006-12-08  Aaron Bockover  <aaron@abock.org>

	* src/PlayerInterface.cs: Fixed default accelerator for remove track
	confirmation dialog

	* src/Banshee.Widgets/SeekSlider.cs: Set the slider insensitive if no
	playback is happening (idle)

2006-12-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs: Prevent a
	crasher by wrapping an access into the Library's dictionary of tracks in a
	try/catch.

2006-12-07  Aaron Bockover  <abock@gnome.org>

	* data/UIManagerLayout.xml: 
	* src/Banshee.Base/ActionManager.cs: Move the source properties action
	to the edit menu

	* src/Banshee.Base/SourceManager.cs: Set the source properties action's
	visibility and not sensitivity

	* src/Banshee.Base/Database.cs: Added new columns to the Playlists table

	* src/Banshee.Base/Source.cs: Make SortColumn and SortType virtual

	* src/Banshee.Base/Sources/PlaylistSource.cs: Override SortColumn and
	SortType properties to read/write the Playlists table for the playlist

	* src/Banshee.Base/Sources/LibrarySource.cs: Override SortColumn and
	SortType properties to read/write from/to GConf

	* src/Banshee.Base/Gui/SourceView.cs: Fixed right click source activation
	bug. Source should never change on a right click - only the highlight

	* data/banshee.schemas.in:
	* src/Banshee.Base/GConfKeys.cs: Added LibrarySortColumn, LibrarySortType

2006-12-07  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Banshee.AudioProfiles/Pipeline.cs:
	* src/Banshee.Base/Banshee.AudioProfiles/PipelineVariable.cs:
	* src/Banshee.Base/Banshee.AudioProfiles/ProfileManager.cs: Fixed locale
	issues with loading of some profiles (vorbis) due to culture format
	rules that are not compatible with GStreamer (all pipeline input should
	be en_US); all conversions use an en-US CultureInfo now

2006-12-07  Aaron Bockover  <abock@gnome.org>

	* data/audio-profiles/aac.xml: Fixed faac bitrate range problem

2006-12-07  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Widgets/SearchEntry.cs: Set the base style on the action
	icons in the search entry when the style has been fully set on the
	entry (BGO #321773)

2006-12-07  Aaron Bockover  <abock@gnome.org>

	* src/PlaylistModel.cs: Save/restore the sort ID from the active source
	Fixes BGO #353125.

	* src/Banshee.Base/Source.cs: Added SortColumn and SortType properties
	to allow for saving the sort ID along with the source and not globally

2006-12-07  Aaron Bockover  <abock@gnome.org>

	* data/images/: Excellent new playlist icons from Jimmac

2006-12-07  Aaron Bockover  <abock@gnome.org>

	* src/PlaylistView.cs: Fix the sort order for the track number column
	to properly sort by artist, album, then track number; sorting by track
	number is now the most logical sort/group operation (BGO #314149)

2006-12-07  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/ActionManager.cs: Don't set the default string 
	for the source properties label here

	* src/Banshee.Base/Source.cs: Added SourcePropertiesLabel and 
	SourcePropertiesIcon virtual properties; set the default string here now

	* src/Banshee.Base/SourceManager.cs: Assign the source properties action
	its label and icon based on the active source's SourcePropertiesLabel
	and SourcePropertiesIcon properties

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs: Override
	the SourcePropertiesLabel to 'Edit Smart Playlist...' as it makes a lot 
	more sense than 'Source Properties...'

2006-12-07  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs: Handle the 
	MissingPlugins error code

	* Gabriel Burt: The next time you see this man, buy him some beer.

2006-12-07  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/PlayerInterface.cs: Handle multiple tracks being added or removed at
	once in OnSourceTrackAdded/Removed.

	* src/PlaylistModel.cs: Add helpers for turning off and then restoring the
	sort order of the model, useful b/c otherwise when doing many additions or
	removals from the model it sorts after each one.  Fixes BGO #325968.

	Also, actually do something in RemoveTrack, fixes BGO #344833.

	* src/Banshee.Base/Source.cs: Make TrackEventArgs an ICollection instead
	of IEnumerable so we can get a Count easily.  Support sending multiple
	tracks with the OnTrackAdded and OnTrackRemoved helpers.

	* src/Banshee.Base/Banshee.SmartPlaylist/Editor.cs: whitespace.

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs: Make some
	translated strings static.  Simplify and improve the way smart playlists
	are refreshed, removing unnecessary track removals (used to just clear
	everything out and start over).  Make sure to raise events inside the main
	loop to prevent crashing.

2006-12-05  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Organized, moved major pieces to shamrock/banshee m4
	macros so this is easier to manage

	* libbanshee/Makefile.am: Cleaned up

	* build/m4/banshee/*.m4: New Banshee specific m4 macros

	* build/m4/shamrock/*.m4: New reusable Shamrock m4 macros

2006-12-05  Aaron Bockover  <abock@gnome.org>

	* libbanshee/gst-playback-0.10.c: Set gconfaudiosink.profile=1 if
	supported ('music and movies' profile)

2006-12-05  Aaron Bockover  <abock@gnome.org>

	* libbanshee/gst-playback-0.10.c: Added gst_playback_get_error_quarks
	to return the GST_*_ERROR quarks/domains

	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs: Added enums
	for all the error codes in the GST_*_ERROR domains; work off those
	domains/codes

2006-12-05  Aaron Bockover  <abock@gnome.org>

	* src/PlaylistView.cs: Show a message for TrackPlaybackError.CodecNotFound

	* libbanshee/gst-playback-0.10.c: Extended the error callback to 
	propagate the error code 

	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs: Update managed
	delegate and handler to handle the new error code parameter; 
	Set PlaybackError on the track based on the GStreamer error code, 
	not the string message

	* src/PlayerInterface.cs:
	* src/PlaylistModel.cs: Cleaned up unused variables

2006-12-05  Aaron Bockover  <abock@gnome.org>

	Patch to fix BGO #340222: Do not stop playing after a playback error

	* src/PlayerInterface.cs: On playback error, advance to the next song
	linearly and without repeating (eliminates the possibility of an endless
	loop if all tracks in the source cannot be played)

	* src/PlaylistModel.cs: Stop playing in some states when the repeat
	mode is ErrorHalt

	* src/PlaylistView.cs: Set row pixbuf based on new TrackPlaybackError
	enum of the track, show status on errored tracks ('Missing')

	* src/Banshee.Base/PlayerEngineCore.cs: Set default TrackPlaybackError
	on a track for which the underlying engine raises an error but does
	not set it on the track itself

	* src/Banshee.Base/TrackInfo.cs: Small syntax cleanup, added 
	TrackPlaybackError enum and PlaybackError property to TrackInfo

	* src/Banshee.Dap/Ipod/IpodDapTrackInfo.cs: Set PlaybackError to 
	TrackPlaybackError.Drm if the song is protected

	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs: Support the
	resource not found error and set PlaybackError accordingly

2006-12-05  Ruben Vermeersch  <ruben@savanne.be>

	* src/Banshee.Base/Gui/PreferencesDialog.cs: Allow users to specify
	custom LibraryFilePattern and LibraryFolderPattern preferences to gconf,
	yet don't crash in the preferences screen.

2006-12-05  Ruben Vermeersch  <ruben@savanne.be>

	* data/banshee.schemas.in: Stupid detail of the day: add missing closing )
	to make them all line up in /apps/Banshee/LibraryFolderPattern. Ony char
	fix.

2006-12-05  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/IO/Interfaces.cs: 
	* src/Banshee.Base/IO/Unix.cs:
	* src/Banshee.Base/IO/SystemIO.cs:
	* src/Banshee.Base/IO/GnomeVfs.cs: Use SafeUri for IFile methods

	* src/Banshee.Base/IO/Utilities.cs: Delete a file and trim its parent
	directories

	* src/Banshee.Base/Banshee.Base.mdp:
	* src/Banshee.Base/Makefile.am: Added Utilities.cs

	* src/Banshee.Base/ImportManager.cs: Use SafeUri when checking file

2006-12-05  Aaron Bockover  <abock@gnome.org>

	* src/PlayerInterface.cs: Save/restore the active filter on 
	sources (BGO #345218)

	* src/Banshee.Base/Source.cs: Added FilterQuery and FilterField

2006-12-04  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/IO/Unix.cs: Specify directory perms in base 10; C# 
	doesn't support octal literals - nor does the compiler warn if an octal
	literal is found (stating that it will be interpreted in base 10); fixes
	the bad perms on UNIX backend created directories

2006-12-04  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/IO/Unix.cs: Use g_mkdir_with_parents to recursively
	create directories or fall back on System.IO.Directory.CreateDirectory

2006-12-04  Aaron Bockover  <abock@gnome.org>

	* build/m4/shamrock/expansions.m4: Fixed datadir expansion macro

2006-12-04  Aaron Bockover  <abock@gnome.org>

	* data/banshee-dialogs.glade: 
	* src/Banshee.Base/Gui/PreferencesDialog.cs: Added file/folder pattern
	boxes and fixed up mnemonics
	
	* data/banshee.schemas.in: 
	* src/Banshee.Base/GConfKeys.cs: Added LibraryFilePattern and 
	LibraryFolderPattern; deprecated FileNamePattern

	* src/Banshee.Base/Makefile.am: Added SampleTrackInfo.cs

	* src/Banshee.Base/SampleTrackInfo.cs: A sample track info object used
	for demonstrating file/folder patterns

	* src/Banshee.Base/FileNamePattern.cs: More flexible patterns; broken
	into file and folder components; tokens have full descriptions and 
	expansion delegate handlers (the conversion token handles its own
	expansion)

	* tests/FileNamePattern.cs: Added unit tests for FileNamePattern

	* tests/GenericCollectionController.cs: Fixed broken test

	* tests/Makefile.am: Added FileNamePattern.cs

2006-11-29  Aaron Bockover  <abock@gnome.org>

	* data/banshee.schemas.in: Added WriteMetadata schema

2006-11-29  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Dap/DapCore.cs: Use volume.fsusage=filesystem instead
	of volume.policy.should_mount

2006-11-29  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Use Shamrock expansion macros

	* build/Makefile.am:
	* build/m4/Makefile.am: Added Makefile to EXTRA_DIST the m4 macros

	* data/images/Makefile.am: 
	* src/BooBuddy/Makefile.am: Add missing files to EXTRA_DIST

2006-11-27  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Dap/DapCore.cs: Added some debug logging calls; respect
	volume.ignore

2006-11-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: Trim white space from
	directory names to prevent bug.  Fixes BGO #375146.

2006-11-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/ImportManager.cs: Expose label strings as public
	properties.

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: Set the strings for the
	ImportManager to make it clear that the songs are being loaded, not
	imported from the DAP. Fixes BGO #355880.

2006-11-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: Lazy load several HAL
	properties that won't change instead of going over the dbus to get them
	every time, fixing the managed-dbus related crashes. Allow overriding the
	HAL properties (or setting them in case they are missing) in key=value
	form within the .is_audio_player file.  Display folder depth, audio
	folders, and playback formats in the DAP properties. Use LogCore instead
	of Console.WriteLine's in several places.

2006-11-27  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: Silently ignore iPods so
	as not to confuse the user if iPod support isn't installed or their iPod
	isn't recognized by it. Fixes BGO #355890.

2006-11-27  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Dap/DapCore.cs: Work with the new PropertyModified
	event args, use a registration wait list to make sure the same device
	doesn't get multiple event handler registrations; this _should_ finally
	fix all the iPod detection problems - the root of which was outdated
	and incorrect HAL documentation

	* hal-sharp/Device.cs: Wrap the proper delegate signature of 
	Hal.Device.PropertyModified which is ia(sbb), not sbb like the outdated
	HAL specification implies. Thanks to Sebastian Dröge and Alp Toker for
	looking into the issue.

2006-11-26  Aaron Bockover  <abock@gnome.org>

	* build/Common.Makefile: Reference installed njb-sharp libraries in the
	run path (Bertrand Lorentz, BGO #379119)

2006-11-26  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Globals.cs: Initialize gstreamer before gconf. (Tim 
	Yamin, BGO #379529)

2006-11-25  Ruben Vermeersch  <ruben@savanne.be>

	* data/banshee.glade: Lower the border size of vbox3 to zero. 
	Fixes BGO #369786.

2006-11-22  Aaron Bockover  <abock@gnome.org>

	* autogen.sh: Set ACLOCAL_FLAGS to include new m4 macros

	* configure.ac: Use the new SHAMROCK mono macros

	* build/m4/shamrock/*.m4: Helper macros, new mono-specific macros for 
	properly detecting mono components

	* build/m4/banshee/*.m4: Banshee-specific m4 macros

2006-11-22  Aaron Bockover  <abock@gnome.org>

	Initial Rio Karma support by Bob Copeland <me@bobcopeland.com> (BGO #348730)

	* configure.ac:
	* src/Banshee.Dap/Makefile.am: Added build settings for Karma

	* src/Banshee.Dap/Karma/*: Initial support for the Rio Karma DAPs

2006-11-22  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Dap/DapCore.cs: Use Device.PropertyModified instead
	of a poll/wait table to check for volume.is_mounted

2006-11-22  Aaron Bockover  <abock@gnome.org>

	* build/Common.Makefile: Globally ignore compiler warning 0278 as gmcs
	incorrectly reports it: http://bugzilla.novell.com/show_bug.cgi?id=322696
	
2006-11-22  Aaron Bockover  <abock@gnome.org>

	* taglib-sharp/update-checkout.sh: Updated

	* tests/Makefile.am:
	* tests/GenericCollectionController.cs: Added some tests for the yet
	to be completed GenericCollectionController

	* src/BooBuddy/BooBuddy.mdp:
	* src/BooBuddy/BooBuddyInterpreter.cs:
	* src/BooBuddy/BooBuddyShell.cs:
	* src/BooBuddy/BooBuddyWindow.cs:
	* src/BooBuddy/Makefile.am: Updated; support new reflection debugging
	
	* src/BooBuddy/BooBuddy.Debugger/DebugAliasAttribute.cs: Attribute
	to alias methods for easier invocation in the shell
	
	* src/BooBuddy/BooBuddy.Debugger/DebugAliasBuilder.cs: Builds alias
	methods using reflection
	
	* src/BooBuddy/BooBuddy.Debugger/Reflection.cs: Some reflection utilities
	useful in debugging
	
	* src/Banshee.Base/IO/IOProxy.cs:
	* src/Banshee.Base/IO/SystemIO.cs:
	* src/Banshee.Base/IO/Unix.cs: 
	* src/Banshee.Base/IO/GnomeVfs.cs: Initial pass at GNOME VFS backend
	support - not complete. Other backends use the MimeType support from
	the GNOME VFS backend however

	* src/Banshee.Widgets/Banshee.Widgets.mdp:
	* src/Banshee.Widgets/Makefile.am:
	* src/Banshee.Widgets/DictionaryComboBox.cs: Added a custom combo box
	for displaying a string-valued dictionary

	* src/Banshee.Base/GenericCollectionController.cs: Initial work for 
	a new playback controller

	* src/Banshee.Base/Makefile.am: Added GenericCollectionController.cs

	* src/banshee.mdp:
	* src/Banshee.Base/Banshee.Base.mdp:
	* hal-sharp/hal-sharp.mdp: Updated

	* banshee.mds: Added 
	* src/Banshee.Dap/Ipod/Ipod.mdp: Added Ipod MD project

	* configure.ac: Added booc check; booc will be used to 'pre-compile' Boo
	macros during build to ensure they at least compile; optional 

	* libbanshee/gst-misc-0.10.c:
	* libbanshee/gst-misc.h:
	* src/Banshee.Base/GstMisc.cs: Removed GStreamer-based mime type detection

2006-11-21  Aaron Bockover  <abock@gnome.org>

	* build/Common.Makefile: Rules for running uninstalled with DAP support

	* src/Banshee.Base/Dap/DapCore.cs: Fixed tiny regression introduced after
	0.11.2 (CVS only) regarding the loading of DAP assemblies

2006-11-16  Ruben Vermeersch  <ruben@savanne.be>

	* src/Banshee.Plugins/MMKeys/MMKeysConfigPage.cs: Mark string "Configure
	Keyboard Shortcuts" for translation, fixes BGO #376070.

2006-11-16  Ruben Vermeersch  <ruben@savanne.be>

	* po/POTFILES.in: Add 3 missing files (src/Banshee.Base/SourceManager.cs,
			src/Banshee.Plugins/Daap/DaapContainerSource.cs,
			src/Banshee.Plugins/Daap/DaapErrorView.cs).
	* po/POTFILES.skip: Remove non exisiting libbanshee/gst-cd-trm.c.

	Fixes BGO #375890.

2006-11-15  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Fix regression caused by minimize (minimize effect showed the window being
	put in the taskbar, which was confusing).

2006-11-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Globals.cs: Make InterfaceElements.MainWindow mutable
	so minimode can set itself as such and the notify plugin can behave
	correctly (eg hide and show the correct main window when the icon is
	clicked).

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Minimize instead of hiding the main window when clicking the notify icon
	and set the task bar hint to false to avoid having to reset the
	size/position of the main window.  Remove ResizeMoveWindow function.
	Only show notification popups if Banshee is not currently focused - fixes
	BGO #361534.

2006-11-09  Ruben Vermeersch  <ruben@savanne.be>

	* src/PlayerInterface.cs: Fix typo as reported in BGO #372720.

2006-11-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistCore.cs: Add rate
	limiting that prevents Banshee from going nuts when many tracks are
	changed at once (when importing, say).  Fixes BGO #363066.

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs: Use the
	rate limiting.  Also, don't delete the smart playlist when it's emptied.

2006-11-02  Jakub Steiner <jimmac@ximian.com>

	* music-player-banshee-32.png: add another common size for the app
		icon, 32x32px

2006-11-01  Ruben Vermeersch  <ruben@savanne.be>

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs: Change some
	WriteLine's to debug messages through the logger.

2006-11-01  Aaron Bockover  <abock@gnome.org>

	Patch by Christopher James Halse Rogers <chalserogers@gmail.com> 
	(BGO #365200)

	* src/Banshee.Base/AudioCdRipper.cs: Add optional error-correction when 
	importing CDs, enabling the paranoia mode of the cdparanoiasrc.

	* data/banshee-dialogs.glade:
	* src/Banshee.Base/GConfKeys.cs:
	* src/Banshee.Base/Gui/PreferencesDialog.cs: Add a checkbox to the
	Preferences dialog to enable/disable CD error-correction.

2006-11-01  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/AmazonCoverFecther.cs: Do not download cover art
	if the file already exists (Alexandros Frantzis, BGO #367047)

	* src/Banshee.Base/TrackInfo.cs: Make DateAdded mutable (Sebastian Dröge, 
	BGO #367889)

2006-10-31  Aaron Bockover  <abock@gnome.org>

	* src/PlayerInterface.cs: Fixed modifier bug (BGO #368436)

	* src/banshee.mdp: Updated

	* src/Banshee.Plugins/Daap/DaapCore.cs: Removed the Jono block from GUADEC;
	we love Jono - rock on

	* src/BooBuddy/BooBuddyShell.cs: Started on code completion
	
	* src/BooBuddy/BooBuddyWindow.cs: Embed reference to shell as 'shell'

2006-10-31  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Sources/LibrarySource.cs: Queue added tracks in a
	pending queue and flush it ever 1.5 seconds, this speeds up importing
	by around 1.5 minutes on a 5100 track set

	* src/PlaylistModel.cs: Removed old unused and confusing code

	* src/PlayerInterface.cs: Updated the status bar text, do not run it in
	an idle handler

	* src/Banshee.Base/ImportManager.cs: Use a timer for the import

	* src/Banshee.Base/Makefile.am:
	* src/Banshee.Plugins/Daap/Daap.mdp: Updated

	* src/Banshee.Base/Dap/DapCore.cs: Use PluginFactory.IncludeMask

2006-10-31  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/IO/IOProxy.cs: Use a static table of types instead of
	reflection

	* src/Banshee.Base/BansheeTodo.cs: Removed

	* src/Main.cs: Removed BansheeTodo support
	
	* src/Banshee.Base/TrackInfo.cs: Removed old BansheeTodo attributes

	* src/Banshee.Base/Utilities.cs: Added InvokeMethod and ModuleGetTypes
	reflection utilities

	* src/Banshee.Base/Banshee.AudioProfiles/Abakos.Compiler/Functions.cs:
	Disabled reflection-loaded functions

	* src/Banshee.Base/Branding.cs:
	* src/Banshee.Base/Plugins/PluginFactory.cs: Check for 
	PluginModuleEntry.GetTypes() in plugin assemblies and use that instead
	of Assembly.GetTypes() if it exists; fall back otherwise

	* src/Banshee.Dap/Ipod/IpodDap.cs:
	* src/Banshee.Dap/MassStorage/MassStorageDap.cs:
	* src/Banshee.Dap/Mtp/MtpDap.cs:
	* src/Banshee.Dap/Njb/NjbDap.cs:
	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs:
	* src/Banshee.MediaEngine/Helix/HelixRemotePlayerEngine.cs:
	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs:
	* src/Banshee.Plugins/Daap/DaapPlugin.cs:
	* src/Banshee.Plugins/MMKeys/MMKeysPlugin.cs:
	* src/Banshee.Plugins/MetadataSearch/MetadataSearchPlugin.cs:
	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Provide a PluginModuleEntry.GetTypes() 

2006-10-29  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Banshee.SmartPlaylist/QueryBuilderModel.cs: Don't show
	static playlists unless there is at least one. Fixes BGO #354389.

2006-10-26  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/TrackInfo.cs: Make PlayCount and LastPlayed properties
	mutable (Scott Peterson, BGO #357127)

2006-10-25  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Plugins/Daap/Daap.mdp: Updated

	* src/Banshee.Plugins/Daap/DaapSource.cs: Show an icon for locked

	* src/Banshee.Plugins/Daap/DaapErrorView.cs: Updated disconnected message

2006-10-25  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Plugins/PluginCore.cs: Do not crash 
	if ~/.gnome2/banshee/scripts does not exist. Nice.

2006-10-25  Aaron Bockover  <abock@gnome.org>

	* banshee.mds:
	* src/Banshee.Plugins/Daap/Daap.mdp: Added Daap project

	* src/Banshee.Dap/Ipod/IpodDap.cs: 
	* src/Banshee.Dap/Ipod/UnsupportedDatabaseView.cs: Offer to rebuild
	the database if iTunesDB is missing altogether; use ShadowContainer

	* src/Banshee.Plugins/Daap/DaapLoginDialog.cs: Added proper dialog
	activate accel key

	* src/Banshee.Plugins/Daap/DaapSource.cs: Use DaapErrorView to display
	errors inside the source

	* src/Banshee.Plugins/Daap/DaapErrorView.cs: A ShadowContainer+MessagePane
	view that shows friendly error messages; warns about the iTunes 7 problem

	* src/Banshee.Plugins/Daap/Makefile.am: Added DaapErrorView.cs

	* src/Banshee.Widgets/Makefile.am:
	* src/Banshee.Widgets/Banshee.Widgets.mdp: Added ShadowContainer.cs

	* src/Banshee.Widgets/ShadowContainer.cs: A shadowed/painted Alignment

	* src/Banshee.Widgets/MessagePane.cs: Support overriding the arrow
	pixbuf

2006-10-24  Aaron Bockover  <abock@gnome.org>

	* src/PlayerInterface.cs: Moved SourceView ButtonPressEvent handler and
	SensitizeActions to SourceView and SourceManager classes

	* src/BooBuddy/BooBuddy.mdp:
	* src/Banshee.Base/Banshee.Base.mdp: 
	* src/BooBuddy/Makefile.am: Updated

	* src/BooBuddy/BooBuddyWindow.cs: 
	* src/BooBuddy/BooBuddyInterpreter.cs: Split out the interpreter from the
	window

	* src/BooBuddy/BooBuddyShell.cs: Cosmetic work

	* src/Banshee.Base/Source.cs: Added CanActivate property

	* src/Banshee.Plugins/Daap/DaapContainerSource.cs: Override CanActivate to
	be false

	* src/Banshee.Base/SourceManager.cs: Added SensitizeActions

	* src/Banshee.Base/Gui/SourceView.cs: Do not allow activation or 
	button press events to happen on sources that have CanActivate=false

	* src/Banshee.Base/Plugins/PluginCore.cs: Support loading Boo scripts;
	scripts are compiled and run at startup - scripts can either provide
	a static Main method or can implement the standard Banshee plugin API
	for full plugin integration

2006-10-23  Aaron Bockover  <abock@gnome.org>

	Banshee 0.11.2 Released

	* NEWS: Updated

	* configure.ac: 
	* build/Common.Makefile:
	* src/Boo/Makefile.am: Use external boo if --enable-external-boo is passed
	(Sebastian Dröge)

2006-10-23  Aaron Bockover  <abock@gnome.org>

	Patch by Scott Peterson, BGO #363548

	* src/Banshee.Base/Source.cs: Fix for ClearChildSources

	* src/Banshee.Plugins/Daap/DaapCore.cs:
	* src/Banshee.Plugins/Daap/DaapContainerSource.cs:
	* src/Banshee.Plugins/Daap/DaapSource.cs: DAAP sources show up under
	a master DAAP container source
	
	* src/Banshee.Plugins/Daap/Makefile.am: Added DaapContainerSource.cs

2006-10-23  Aaron Bockover  <abock@gnome.org>

	* build/Common.Makefile: Fixed make run

	* data/Makefile.am:	
	* src/Makefile.am:
	* src/Boo/Makefile.am:
	* src/BooBuddy/Makefile.am: Fixes for make distcheck

2006-10-21  Aaron Bockover  <abock@gnome.org>

	* banshee.mds: 
	* src/BooBuddy/BooBuddy.mdp: Added BooBuddy MonoDevelop project

	* configure.ac:
	* src/Makefile.am: Added BooBuddy

	* build/Common.Makefile: Added BooBuddy/Boo rules

	* src/Banshee.Base/Makefile.am:
	* src/Banshee.Base/Banshee.Base.mdp: Updated
	
	* src/Banshee.Base/ActionManager.cs: Run the Boo Buddy interpreter

	* src/Banshee.Base/Banshee.Debugger/Shell.cs: Removed

	* src/Boo/Boo.Lang.Interpreter.dll: Added

	* src/BooBuddy: Boo Buddy is simple Boo interpreter shell that lets
	applications easly add Boo interpreting against loaded assemblies

	* src/BooBuddy/BooBuddyShell.cs: Interactive shell for Boo interpreting

	* src/BooBuddy/BooBuddyWindow.cs: Main Boo Buddy window that interfaces
	with the Boo interpreter and the interactive Boo Buddy shell

2006-10-21  Aaron Bockover  <abock@gnome.org>

	* src/PlayerInterface.cs: Only unload the accel group when the search
	entry is focused if the key event does not have a modifier

2006-10-21  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/ActionManager.cs: Only show Shell in --debug, added
	CTRL-SHIFT-S binding

2006-10-21  Aaron Bockover  <abock@gnome.org>

	* src/Main.cs: 
	* src/Banshee.Base/Makefile.am:
	* src/Banshee.Base/Globals.cs:
	* src/Banshee.Base/Sources/TestSource.cs:
	* src/Banshee.Base/Banshee.Debugger/Client.cs:
	* src/Banshee.Base/Banshee.Debugger/RemoteMethodAttribute.cs:
	* src/Banshee.Base/Banshee.Debugger/Server.cs: Removed yesterday's DBus
	plus reflection-based stuff

	* configure.ac: Output src/Boo/Makefile

	* src/Banshee.Base/ActionManager.cs:
	* data/UIManagerLayout.xml: Added view menu item for Shell

	* src/Makefile.am: Added Boo to SUBDIRS

	* build/Common.Makefile: Rules for Boo

	* src/Boo/*.dll: Added Boo libraries

	* src/Banshee.Base/Banshee.Debugger/Shell.cs: Added new Boo support and UI

2006-10-21  Patrick van Staveren  <trick@vanstaveren.us>

	* src/Banshee.Dap/Mtp/MtpDeviceId.cs: added Toshiba Gigabeat S

2006-10-21  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Gui/SourceView.cs: AutoExpand now works for child
	sources (Scott Peterson, BGO #363548)

2006-10-21  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Sources/TestSource.cs: Test source for testing the
	functionality of the source base class, source manager, and source view;
	tests can be invoked using the new interactive remote debugger

	* src/Banshee.Base/Makefile.am:
	* src/Banshee.Base/Banshee.Base.mdp: Added TestSource.cs

	* src/Banshee.Base/ChildSource.cs: Child sources can now be parents

	* src/Banshee.Base/Source.cs:
	* src/Banshee.Base/SourceManager.cs:
	* src/Banshee.Base/Gui/SourceView.cs: Patched by Scott Peterson to allow
	recursive sources (BGO #363548)
	
	* src/Banshee.Base/SourceManager.cs: Added RemoveSource(Type), use
	generics for the source list

2006-10-21  Aaron Bockover  <abock@gnome.org>

	* src/Main.cs: Run the debugger client if --debug-client is passed

	* src/Banshee.Base/Globals.cs: Start the debugger server, expose the
	Shutdown method to the remote debugger

	* src/Banshee.Base/Makefile.am:
	* src/Banshee.Base/Banshee.Base.mdp: Added Banshee.Debugger files

	* src/Banshee.Base/Banshee.Debugger/Server.cs: Remote debugger server; 
	allows public static methods flagged with RemoteMethodAttribute in 
	Banshee to be run remotely over DBus
	
	* src/Banshee.Base/Banshee.Debugger/Client.cs: Simple command line client
	to the remote DBus debugger server
	
	* src/Banshee.Base/Banshee.Debugger/RemoteMethodAttribute.cs: Attribute
	to expose a public static method to the remote debugger
	
2006-10-21  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Added a missing AC_MSG_RESULT

2006-10-20  Aaron Bockover  <abock@gnome.org>

	* build/Common.Makefile: Added BANSHEE_PROFILES_PATH for running uninstalled

	* data/Makefile.am: XML profile definitions split into multiple files to
	make it easy for distros to add/remove/customize specific profiles

	* data/audio-profiles.xml: Removed, split into multiple files

	* data/audio-profiles/*.xml: Added multiple files from old single file

	* src/Banshee.Base/Globals.cs: Always load profiles from path set in
	BANSHEE_PROFILES_PATH env variable

	* src/Banshee.Base/Banshee.AudioProfiles/PipelineVariable.cs: Added
	PossibleValuesKeys which can be used to look up variable values in 
	the XML-defined order (vs distributed hash)

	* src/Banshee.Base/Banshee.AudioProfiles/ProfileManager.cs: Support loading
	multiple XML files from a directory

	* src/Banshee.Base/Banshee.AudioProfiles.Gui/ProfileConfigurationDialog.cs:
	use PossibleValuesKeys to populate the combo box in XML-defined order

2006-10-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Banshee.SmartPlaylist/QueryBuilder.cs: Add escape
	method since Aaron removed it from the Sql namespace.

	* src/Banshee.Base/Banshee.SmartPlaylist/QueryBuilderModel.cs: Add back in
	escaping that Aaron took out.  Its ugly, but bigger changes will need to
	be made to improve how Smart Playlists interacts with the db.

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs: Fix up
	the commit's update query to use the new DbCommand class.

2006-10-20  Aaron Bockover  <abock@gnome.org>

	* src/PlaylistModel.cs:
	* src/Banshee.Base/Library.cs: More use of DbCommand

	* src/Banshee.Base/Banshee.Kernel/Scheduler.cs: Added Unschedule(Type)

	* src/Banshee.Plugins/MetadataSearch/MetadataSearchPlugin.cs: Use
	DbCommand for the query and use Scheduler.Unschedule(Type) before
	rescanning the library 

2006-10-20  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Banshee.SmartPlaylist/Editor.cs:
	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistCore.cs:
	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs: Start
	moving to DbCommand (BNC #212477)

2006-10-20  Aaron Bockover  <abock@gnome.org>

	Most of the work done for BNC #212477, provides nicer safer way to do
	SQL queries against the local library, better APIs, and some optimizations

	* src/PlayerInterface.cs:
	* src/PlaylistModel.cs:
	* src/Banshee.Base/Library.cs:
	* src/Banshee.Base/Banshee.SmartPlaylist/Editor.cs:
	* src/Banshee.Base/Banshee.SmartPlaylist/QueryBuilder.cs:
	* src/Banshee.Base/Banshee.SmartPlaylist/QueryBuilderModel.cs:
	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs:
	* src/Banshee.Plugins/MetadataSearch/MetadataSearchPlugin.cs:
	* tools/BansheeImport.cs: Removed legacy Sql namespace from use; still
	needs porting to DbCommand (still using String.Format)
	
	* src/Banshee.Base/LibraryTrackInfo.cs: 
	* src/Banshee.Base/Sources/PlaylistSource.cs: Use new DbCommand/DbParameter
	
	* src/Banshee.Base/QueuedSqliteDatabase.cs: Added new DbCommand/DbParameter
	classes; made API easy to use for generating proper SQL that guards 
	against SQL injection attacks (while this could only be possible by
	local input previously, it's still a good thing)
	
	* src/Banshee.Base/Sources/ImportErrorsSource.cs: Guard against null ref

	* src/Banshee.Base/Banshee.Base.mdp:
	* src/Banshee.Base/Makefile.am:
	* src/Banshee.Base/SqlGenerator.cs: Removed

2006-10-19  Patrick van Staveren  <trick@vanstaveren.us>

	* configure.ac: require libgphoto2-sharp 2.2.1.4.trunk or better

2006-10-19  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Bump to 0.11.2, output build/Makefile, use top_srcdir
	and not top_builddir for the internal gmcs

2006-10-19  Aaron Bockover  <abock@gnome.org>

	* Makefile.am: Add build to SUBDIRS

	* build/Makefile.am: EXTRA_DIST

	* build/Common.Makefile: moved from Makefile.include at the root

	* All applicable Makefile.am: Include build/Common.Makefile

2006-10-19  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Run gmcs on build/mcs-test-79698.cs to test for 
	BXC #79698; use build/gmcs.exe as the MCS compiler if building 
	build/mcs-test-79698.cs fails (indicating the installed compiler
	has the bug)

	* build/gmcs.exe: The gmcs compiler from Mono 1.1.18 with the patch
	for http://bugzilla.novell.com/show_bug.cgi?id=322401 applied

	* build/mcs-test-79698.cs: Test case for the above bug

2006-10-19  Alp Toker  <alp@atoker.com>

	* src/Banshee.Base/Sources/AudioCdSource.cs:
	Avoid gmcs compiler error by referring to disk instance as a field.
	* src/Banshee.Dap/Ipod/UnsupportedDatabaseView.cs:
	* src/PlayerInterface.cs: Replace invalid anonymous method syntax that
	causes gmcs to fail with correct C# 2.0.

2006-10-18  Patrick van Staveren <trick@cvs.gnome.org>

	* src/Banshee.Dap/Mtp/MtpDap.cs: should fix build problems

	See comments on BGO 361878 before compiling MTP support

2006-10-17  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Revert to pre-intltool 0.35 method of using po/LINGUAS,
	but in a more forward-compatible way (po/LINGUAS format does not need
	reverting to pre-0.35 format); intltool 0.35 is not available in
	enough distributions for it to be worth using right now - no complaining!

	ALL_LINGUAS=`grep -v '^#' $srcdir/po/LINGUAS | sed -r ':a;N;$!ba;s/\n/ /g; s/[ ]+/ /g'`

2006-10-17  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Banshee.Burner/BurnerFormatList.cs: Fixed local
	variable resolution problem with the anonymous delegate

2006-10-17  Alp Toker  <alp@atoker.com>

	* dbus-sharp/dbus-sharp/IntrospectionSchema.cs:
	* dbus-sharp/dbus-sharp/UnixMonoTransport.cs:
	Removed. This dead code was being inadvertently compiled due to the
	wildcard in the makefile, causing the build to fail on old Mono
	releases.

2006-10-16  James Willcox  <snorp@snorp.net>

	* src/Banshee.Plugins/Daap/daap-sharp/*: updated from mono svn

2006-10-16  Aaron Bockover  <abock@gnome.org>

	Banshee 0.11.1 Released

2006-10-16  Aaron Bockover  <abock@gnome.org>
	
	* NEWS: Updated with 0.11.1 release notes

	* src/Banshee.Base/AudioCdRipper.cs: Fall back on ogg, mp3, and wav 
	profiles if no profile was configured before; friendly error if no 
	profile could be found at all
	
	* src/Banshee.Base/Globals.cs: Removed debugging writelines

	* src/Banshee.Base/Banshee.AudioProfiles/ProfileManager.cs: Added override
	for GetConfiguredActiveProfile to fall back on mimetypes for default
	configurations

	* src/Banshee.Base/Banshee.AudioProfiles.Gui/ProfileComboBox.cs:
	Added mime type filtering

	* src/Banshee.Base/Banshee.AudioProfiles.Gui/ProfileComboBoxConfigurable.cs:
	Load/save profiles

	* src/Banshee.Base/Banshee.Burner/BurnerSessionPreparer.cs:
	* src/Banshee.Base/BatchTranscoder.cs:
	* src/Banshee.Base/GstTranscoder.cs:
	* src/Banshee.Base/Transcoder.cs: Use new audio profile stuff
	
	* src/Banshee.Base/Dap/Dap.cs: Use new audio profiles; added ID 
	property for saving profile configuration (DAP)

	* src/Banshee.Base/Dap/DapPropertiesDialog.cs: Added 
	ProfileComboBoxConfigurable widget to dialog

	* src/Banshee.Base/Dap/DapMisc.cs: Added mimetype support

	* src/Banshee.Base/Gui/PreferencesDialog.cs: Loading/saving now done by
	ProfileComboBoxConfigurable

	* data/audio-profiles.xml: Added WMA encoding profile

	* src/Banshee.Base/Makefile.am: Removed old profile support

2006-10-13  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Run a second expansion on expanded_datadir;
	it seems that autoconf 2.60 likes to break 'API' (BGO #361943)

2006-10-13  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Bump to 0.11.1

	* dbus-sharp/dbus-sharp/*.cs:
	* dbus-sharp/dbus-sharp-glib/*.cs:
	* dbus-sharp/Makefile.am: Build bundled dbus-sharp (managed dbus)

	* dbus-sharp/*.dll: Removed binary-bundled assemblies

2006-10-13  Aaron Bockover  <abock@gnome.org>

	Merged from 0.10.12

	* src/Banshee.Widgets/CoverArtThumbnail.cs: Scale cover art to a max of
	75% of the screen size if too large (BNC #200953)

	* src/Banshee.Base/Sources/AudioCdSource.cs: Cancel the ripper if the
	source goes away (hardware eject) (BNC #199902)

	* src/Banshee.Base/AudioCdRipper.cs: Attempt to lock CD-ROM drive when
	ripping, unlock when done/canceled/failed using Linux CD-ROM ioctls;
	should use HAL here, but on SLED it seems libhal_device_lock/unlock does
	nothing - will punt HAL locking to HEAD (BNC #199902)

	* src/Banshee.Base/Sources/LocalQueueSource.cs: Implement
	Banshee.Source.Source.RemoveTrack(TrackInfo) (BNC #188437)

2006-10-12  Aaron Bockover  <abock@gnome.org>

	* data/banshee-dialogs.glade: Remove DAP pipeline box

	* data/audio-profiles.xml: Added audio profiles definition

	* data/Makefile.am: Install audio-profiles.xml

	* src/Banshee.Base/ConfigureDefines.cs.in: Added SystemDataDir

	* src/Banshee.Base/Paths.cs: Added SystemApplicationData

	* libbanshee/gst-misc-0.10.c:
	* src/Banshee.Base/GstMisc.cs: Added better pipeline tester

	* src/Banshee.Base/Banshee.Base.mdp:
	* src/Banshee.Base/Makefile.am: Added new pipeline files

	* src/Banshee.Base/GConfKeys.cs: Cleaned up

	* src/Banshee.Base/Globals.cs: Added a global AudioProfileManager with
	pipeline tester support

	* src/Banshee.Base/AudioCdRipper.cs
	* src/Banshee.Base/Gui/PreferencesDialog.cs: Use the new pipeline profile
	support for cd-importing profile

	* src/PlayerInterface.cs: Hide main window first when closing

	* src/Banshee.Base/Banshee.AudioProfiles/*
	* src/Banshee.Base/Banshee.AudioProfiles.Gui/*: New audio profile support;
	this entry does not do the commit here much justice - this is a big new
	feature that makes choosing and configuring audio transformation profiles
	a simple thing

2006-10-10  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Gui/SplashScreen.cs: Use cairo for drawing the progress
	overlay, make more configurable and reusable for branding

	* Makefile.am:
	* configure.ac:
	* branding/*: Added empty branding build stub/hook to allow for 
	easy building and integration of custom branding options

2006-10-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistCore.cs: Remove
	unnecessary logging.

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs: If a
	smart playlist is ordered by a time-based column (eg, most recently
	played), treat it like other smart playlists with time-dependent
	Conditions.

2006-10-01  Alp Toker  <alp@atoker.com>

	* dbus-sharp/*: Update bundled NDesk.DBus, NDesk.DBus.GLib.
	Fixes an infinite recursion encountered in the Helix engine.

2006-09-29  Alp Toker  <alp@atoker.com>

	* dbus-sharp/*: Update bundled NDesk.DBus.
	* hal-sharp/Device.cs:
	* hal-sharp/Manager.cs:
	Remove GLib Idle Add hacks/workarounds for situations now handled by
	managed dbus.
	Remove GLib dependency from hal-sharp.

2006-09-29  Alp Toker  <alp@atoker.com>

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayer.cs:
	Was missed out during the recent API update.

2006-09-28  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Plugins/MetadataSearch/MetadataSearchPlugin.cs: Wrap 
	plugin name in catalog call (BNC #184491)

	* src/Banshee.Widgets/RatingEntry.cs: Remove explicit focus rect drawing
	as this should be handled by the theme painting the entry shadow

2006-09-29  Alp Toker  <alp@atoker.com>

	* dbus-sharp/*: Update bundled NDesk.DBus, NDesk.DBus.GLib.
	* Makefile.include:
	* hal-sharp/Device.cs:
	* hal-sharp/Makefile.am:
	* hal-sharp/Manager.cs:
	* src/Banshee.Base/DBusPlayer.cs:
	* src/Banshee.Base/DBusRemote.cs:
	* src/Banshee.Base/HalCore.cs:
	* src/Banshee.Base/NetworkManager/Manager.cs:
	* src/Banshee.Base/Notifications/Notification.cs:
	* src/Banshee.Base/PowerManagement.cs:
	* src/Main.cs:
	* tools/BansheeDBusClient.cs:
	Introduce a much cleaner API for well known buses.
	* hal-sharp/Communication.cs:
	Obsoleted by new API, so removed.
	
2006-09-28  Aaron Bockover  <abock@gnome.org>

	Notification support now uses managed DBus instead of binding libnotify
	DBus implementation and patch by Sebastian Dröge <slomo@circular-chaos.org>
	Banshee BGO #357983

	* src/Banshee.Base/Notifications/*.cs: New notification support that uses
	managed DBus instead of binding libnotify

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Work with the updated Notification/DBus API

	* src/Banshee.Base/Notifications.cs: Removed libnotify binding

	* src/Banshee.Base/Makefile.am: Added new Notifications sources

	* src/Banshee.Widgets/RatingEntry.cs: Use 'entry' not 'text' as the 
	draw hint

2006-09-28  Alp Toker  <alp@atoker.com>

	* dbus-sharp/*: Update bundled NDesk.DBus.
	Only hook up events that are from dbus-public interfaces, making
	--show, --hide etc. remote control features work.
	Return error messages when a reply is expected instead of failing
	silently.
	Significant event/match rule fixes.

2006-09-27  Aaron Bockover  <abock@gnome.org>

	* libbanshee/misc-glue.c: Added banshee_dbus_compat_thread_init as a 
	proxy to call dbus_g_thread_init in case it is necessary for native
	libraries that will be pulled in during runtime that use libdbus; it's
	not necessary for banshee's DBus use at all, but may be necessary for
	things pulled in process, like libipoddevice; adding in glue to avoid
	awful configure/map hacks to map to the correct .so version

	* libbanshee/gtksharp-glue.c: Renamed to misc-glue.c; gross

	* src/Main.cs: Call banshee_dbus_compat_thread_init as the first 
	call on program entry (sigh); this is allegedly no longer necessary
	with DBus >= 0.92, but it's here for compat and safety for now :'(

	* configure.ac: Check for dbus-1/dbus-glib-1 again, but no nasty
	library versioning hacks to make maps happy

2006-09-27  Aaron Bockover  <abock@gnome.org>

	* src/banshee.in: Set {LD,DYLD}_LIBRARY_PATH to $(libdir)/banshee to
	ensure libbanshee.so can be loaded when needed; removes the need for
	a map since versioning is a non-issue and allows these environment
	variables to be overridden to allow for full uninstalled execution

	* Makefile.include: Set {LD,DYLD}_LIBRARY_PATH to libbanshee/.libs

	* configure.ac: Do not output Helix/GStreamer .config files

	* src/banshee.exe.config.in:
	* src/Banshee.Base/Banshee.Base.dll.config.in:
	* src/Banshee.Plugins/Daap/Daap.dll.config.in:
	* src/Banshee.Plugins/MMKeys/MMKeys.dll.config.in:
	* src/Banshee.Plugins/MetadataSearch/MetadataSearch.dll.config.in: Removed
	libbanshee dll maps as they are not necessary
	
	* src/Banshee.MediaEngine/Helix/HelixRemotePlayerEngine.dll.config.in:
	* src/Banshee.MediaEngine/Gstreamer/GStreamerPlayerEngine.dll.config.in:
	* src/Banshee.MediaEngine/Helix/Makefile.am:
	* src/Banshee.MediaEngine/Gstreamer/Makefile.am: Removed .config file
	maps as they only went to libbanshee, no longer needed

	* Main.cs: Remove left over libdbus call

2006-09-27  James Willcox  <snorp@snorp.net>

	* src/PlayerInterface.cs: show an error deleting a song fails.

	Fixes #187643 (Novell)

2006-09-27  James Willcox  <snorp@snorp.net>

	* data/banshee.glade: ellipsize the view name
	* src/PlayerInterface.cs: limit source names to 256 chars
	* src/Banshee.Base/Sources/PlaylistSource.cs: ditto

	Fixes #199345 (Novell)

2006-09-27  Alp Toker  <alp@atoker.com>

	* src/Main.cs: Remove old "Suppress finalizing the dbusCore D-Bus
	proxy object" hack; no longer needed with managed dbus

2006-09-27  Alp Toker  <alp@atoker.com>

	* dbus-sharp/*: Update bundled NDesk.DBus, NDesk.DBus.GLib.
	New API and variant fixes to support upcoming managed Notifications.
	* hal-sharp/Communication.cs:
	* src/Banshee.Base/DBusRemote.cs: Work towards a cleaner dbus-sharp
	public API.

2006-09-26  Aaron Bockover  <abock@gnome.org>

	* hal-sharp/Communication.cs: Allow setting the Bus

	* hal-sharp/Device.cs: Work around big problem in the HAL spec, 
	added explicit StringList support

	* src/Banshee.Base/HalCore.cs: Set the Hal.Communication.Bus

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: Minor fixes

	* dbus-sharp/NDesk.DBus.dll: Updated

2006-09-26  James Willcox  <snorp@snorp.net>

	* src/Banshee.Plugins/Daap/daap-sharp/*: update to 0.3.5

2006-09-26  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Dap/DapCore.cs: More fixes; should fix last remaining
	known issues from the new managed HAL migration

2006-09-26  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Dap/DapCore.cs: Ignore volumes that will not be 
	mounted and ignore disc volumes to keep them from ever being exposed
	as DAPs or going into the volume mount wait queue; remove items from
	the volume mount wait queue if they are physically removed

2006-09-26  Aaron Bockover  <abock@gnome.org>

	* hal-sharp/Manager.cs: Added DeviceAddedArgs and DeviceRemovedArgs as
	in a remove event, the UDI as a device object won't exist

	* src/Banshee.Base/Banshee.Cdrom.Nautilus/NautilusDrive.cs:
	* src/Banshee.Base/Banshee.Cdrom.Nautilus/NautilusDriveFactory.cs:
	* src/Banshee.Base/Dap/DapCore.cs: Updated to use DeviceAdded/RemovedArgs

2006-09-26  Aaron Bockover  <abock@gnome.org>

	hal-sharp has been rewritten on top of the new managed DBus; with this
	commit there is no more native DBus or HAL code in Banshee at all!

	* Makefile.include: Update build settings for new hal-sharp

	* configure.ac: Removed all native DBus/HAL checks and hacks

	* hal-sharp/*.cs: Removed all old hal-sharp binding code; the previous
	hal-sharp was a binding of libhal, and had to use nasty context hacks
	to properly integrate with other contexts and DBus connections inside
	the application/main loop

	* hal-sharp/Connection.cs:
	* hal-sharp/Manager.cs:
	* hal-sharp/Device.cs: New hal-sharp is very simple and implements
	the HAL DBus specification; it integrates cleanly with everything

	* banshee.mds: 
	* hal-sharp/hal-sharp.mdp: Added hal-sharp MonoDevelop project
	
	* hal-sharp/Makefile.am: Updated to build the new hal-sharp

	* src/banshee.exe.config.in:
	* src/Banshee.Dap/Ipod/ipod-sharp.dll.config.in: Removed HAL/DBus maps

	* taglib-sharp/Makefile.am: Build assembly as TagLib.dll instead of
	taglib-sharp.dll

	* libbanshee/Makefile.am: 
	* libbanshee/hal-context.c:
	* libbanshee/hal-context.h: Removed old native HAL/DBus context/mainloop 
	integration hacks

	* src/Banshee.Base/Globals.cs: Explicitly initialize HalCore

	* src/Banshee.Base/HalCore.cs: Ported to new managed HAL API; removed
	all the bindings to the crappy native HAL/DBus hacks; now exposes only
	a global Hal.Manager object

	* src/Banshee.Base/AudioCd/AudioCdCore.cs:
	* src/Banshee.Base/AudioCd/AudioCdDisk.cs:
	* src/Banshee.Base/Banshee.Cdrom.Nautilus/NautilusDrive.cs:
	* src/Banshee.Base/Banshee.Cdrom.Nautilus/NautilusDriveFactory.cs:
	* src/Banshee.Dap/Njb/NjbDap.cs:
	* src/Banshee.Dap/MassStorage/MassStorageDap.cs:
	* src/Banshee.Base/Dap/DapCore.cs:
	* src/Banshee.Dap/Ipod/IpodDap.cs: Ported to new managed HAL API; 
	added cleanups and use more generics in place of legacy code

	* src/Banshee.Base/Dap/DapMisc.cs: Removed WaitForPropertyChange;
	Added WaitForVolumeMount

	* src/Banshee.Base/Dap/Dap.cs: Added WaitForVolumeMount method to
	queue a volume mount check on the device in DapCore

	* src/Banshee.Base/Dap/DapCore.cs: Much better API and implementation
	for dealing with DAP devices that need to be mounted. WaitForVolumeMount
	replaces WaitForPropertyChange and a new timeout method is used to
	check for device mounts. This avoids having to keep remote objects 
	around to listen for a property change event

2006-09-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/PlayerInterface.cs: Set the SearchEntry as Ready only when
	appropriate to avoid being told to search when we are just cancelling the
	search b/c the source is being changed, thus preventing two extra playlist
	model reloads.

	* src/Banshee.Widgets/SearchEntry.cs: Add Ready property, and only raise
	the Changed event when we are Ready.  Refactor OnChanged raising code.

2006-09-25  Aaron Bockover  <abock@gnome.org>

	258% hot sweet action: All of Banshee's dbus-sharp code has been ported
	to and is working against the new managed DBus - all previous dbus-sharp
	problems are herby eliminated - someone please buy Alp a few beers!

	* src/Banshee.Base/NetworkManager/Manager.cs: Use StateChangeHandler
	for propagating the remote event

	* src/Banshee.Base/NetworkDetect.cs: Use the state from the signal
	and do not invoke a remote method while in the signal handler 

2006-09-25  Aaron Bockover  <abock@gnome.org>

	Fix for BGO #357548 and to add better application integration for 
	launching web URLs into a browser

	* src/Banshee.Base/Gui/AboutDialog.cs:
	* src/Banshee.Base/ActionManager.cs:
	* src/Banshee.Dap/Ipod/IpodDap.cs:
	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs: Use 
	Banshee.Web.Browser.Open instead of Gnome.Url.Show

	* src/Banshee.Base/Banshee.Web/Browser.cs: New Browser class with an
	Open method that currently uses Gnome.Url.Show, but provides 
	application-integrated URL launching and common error reporting

	* src/Banshee.Base/Globals.cs: Set Open hooks on Last.FM.Browser and
	Banshee.Widgets.LinkLabel to Banshee.Web.Browser.Open

	* src/Banshee.Base/Makefile.am:
	* src/Banshee.Base/Banshee.Base.mdp: Added Banshee.Web/Browser.cs

	* src/Banshee.Widgets/LinkLabel.cs: Use an Open hook for launching URLs

	* src/Last.FM/Browser.cs: Added a Browser class that allows setting
	an override Open hook; defaults to Gnome.Url.Show

	* src/Last.FM/Last.FM/Account.cs: Use Last.FM.Browser.Open instead of
	Gnome.Url.Show

	* src/Last.FM/Last.FM.mdp:
	* src/Last.FM/Makefile.am: Added Browser.cs

2006-09-25  Aaron Bockover  <abock@gnome.org>

	* dbus-sharp/NDesk.DBus.GLib.dll:
	* dbus-sharp/NDesk.DBus.dll: Updated

	* src/PlaylistView.cs: Fixed a GTK+ critical/realized warning

	* src/Banshee.Base/NetworkManager/Manager.cs: Simplified, only care about
	a connection state, not anything fancy like device enumeration

	* src/Banshee.Base/NetworkDetect.cs: Use only Manager.State and its
	change event

	* src/Banshee.Base/Makefile.am:
	* src/Banshee.Base/Banshee.Base.mdp: Removed Device/Network; not needed
	in the Banshee scope as we only care about the connection status

	* src/Banshee.Base/NetworkManager/Device.cs:
	* src/Banshee.Base/NetworkManager/Network.cs: Removed

2006-09-25  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/NetworkDetect.cs: 
	* src/Banshee.Base/NetworkManager/Manager.cs: Added signal support

2006-09-25  James Willcox  <snorp@snorp.net>

	* src/Banshee.Plugins/Daap/DaapCore.cs: oops, be more careful
	when determining the track format.

2006-09-25  Alp Toker  <alp@atoker.com>

	* tools/BansheeDBusClient.cs: Use DApplication.SessionConnection singleton

2006-09-25  James Willcox  <snorp@snorp.net>

	* src/Banshee.Plugins/Daap/DaapSource.cs:
	* src/Banshee.Plugins/Daap/DaapCore.cs:

	Call DAAP.Client.Logout in all cases except when we know the server
	has just gone away.

2006-09-25  Alp Toker  <alp@atoker.com>

	* dbus-sharp/*: Update bundled NDesk.DBus, NDesk.DBus.GLib.
	Silence warning messages, fix big-endian (again), fix UTF-8, better
	exception handling.

2006-09-25  James Willcox  <snorp@snorp.net>

	* src/Banshee.Plugins/Daap/daap-sharp/*: update to latest
	* src/Banshee.Plugins/Daap/DaapSource.cs: don't call DAAP.Client.Logout
	for now since it sometimes causes hangs for a long time when the
	server is unavailable (sigh)

2006-09-24  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayer.cs:
	* src/Banshee.MediaEngine/Helix/HelixRemotePlayerEngine.cs: Use properties
	in the DBus interface instead of Get/Set methods now that it is possible
	with the lovely managed DBus

	* configure.ac: Require helix-dbus-server 0.3.0 if Helix support is 
	desired

	* src/Banshee.Base/NetworkDetect.cs:
	* src/Banshee.Base/NetworkManager/Device.cs:
	* src/Banshee.Base/NetworkManager/Manager.cs:
	* src/Banshee.Base/NetworkManager/Network.cs: Updated copyright

2006-09-24  Alp Toker  <alp@atoker.com>

	* src/Main.cs: Remove last vestiges of the old dbus-sharp
	* configure.ac:
	* src/Makefile.am:
	* src/Banshee.Base/Makefile.am:
	Do not depend on the old dbus binding. It is obsoleted by managed dbus.

2006-09-24  Alp Toker  <alp@atoker.com>

	* src/Banshee.Base/Globals.cs:
	* src/Banshee.Base/NetworkDetect.cs:
	* src/Banshee.Base/NetworkManager/Device.cs:
	* src/Banshee.Base/NetworkManager/Manager.cs:
	* src/Banshee.Base/NetworkManager/Network.cs:
	Use managed dbus for NetworkManager client
	Note that the signals still need to be ported to ordinary events.

2006-09-24  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayer.cs: RemotePlayer does
	not need to handle a singleton case in managed land anymore - the 
	remote object holds 100% of the required functionality

	* src/Banshee.Base/DBusPlayer.cs:
	* src/Banshee.Base/DBusRemote.cs:
	* src/Banshee.Base/PowerManagement.cs: Clean up

2006-09-24  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayer.cs: Use new managed
	DBus, simplified message handling as the signal signature is now ia{sv}
	which maps directly to delegate(MessageType, IDictionary<string,object>)

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayerEngine.cs: Adjust for
	minor changes in HelixRemotePlayer

	* src/Banshee.MediaEngine/Helix/Makefile.am: Link against new managed
	DBus, drop old dbus-sharp link; we are now 80% managed DBus

2006-09-23  James Willcox  <snorp@snorp.net>

	* src/Bansee.Plugins/Daap/daap-sharp/*: updated to latest

2006-09-23  Alp Toker  <alp@atoker.com>

	* dbus-sharp/*: Update bundled NDesk.DBus, NDesk.DBus.GLib.
	Support for Mono <= 1.1.13, optimizations, improved API.

2006-09-22  Alp Toker  <alp@atoker.com>

	* src/Banshee.Base/DBusPlayer.cs:
	* src/Banshee.Base/DBusRemote.cs:
	* src/Banshee.Base/PowerManagement.cs:
	* tools/BansheeDBusClient.cs: Use DApplication.SessionBus singleton

2006-09-21  Alp Toker  <alp@atoker.com>

	* dbus-sharp/*: Update bundled NDesk.DBus, NDesk.DBus.GLib and map.
	Now works on AMD64, PPC, plus bugfixes and new API.

2006-09-21  James Willcox  <snorp@snorp.net>

	* src/Banshee.Plugins/Daap/DaapSource.cs: implement IImportable
	and IImportSource, so you can now import and dnd from DAAP shares.
	Also, add support for remote playlists.

	* src/Banshee.Plugins/Daap/DaapPlaylistSource.cs: added

2006-09-21  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/TrackInfoHeader.cs:
	* src/Banshee.Base/TrackInfoPopup.cs: Patch from Sebastian Dröge to
	not make TrackInfoPopup labels selectable (BGO #356990)

	* src/Banshee.Base/Notifications.cs: Patch from Michael Monreal to 
	set urgency on libnotify notifications (BGO #356985)

	* tools/Makefile.am: Use new build variables

2006-09-21  Alp Toker  <alp@atoker.com>

	* tools/Makefile.am:
	* tools/BansheeDBusClient.cs: Use managed dbus for example client

2006-09-21  Aaron Bockover  <abock@gnome.org>

	* Makefile.am: Added run target

2006-09-21  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/PlayerEngineCore.cs:
	* src/Banshee.Base/Plugins/PluginCore.cs: Do not try to load plugins
	from their system installation path if their respective override 
	environment variable is set

2006-09-21  Aaron Bockover  <abock@gnome.org>

	* Makefile.include: Broken down even more, added a variable for 
	making running uninstalled easy

	* src/Makefile.am: Use new RUN_PATH variable to run banshee --uninstalled

	* banshee.in: Do not set MONO_PATH; is done in Makefile with RUN_PATH

	* src/Banshee.Base/Plugins/PluginFactory.cs: AddScanDirectory supports
	recursion now, overloads to turn it off, and added new method for
	loading plugins: AddScanDirectoryFromEnvironmentVariable

	* src/Banshee.Base/PlayerEngineCore.cs: BANSHEE_ENGINES_PATH env
	can be set for loading engines from an alternative path

	* src/Banshee.Base/Plugins/PluginCore.cs: BANSHEE_PLUGINS PATH does
	the same, for plugins

2006-09-21  Alp Toker  <alp@atoker.com>

	* src/Banshee.Base/PowerManagement.cs: Use managed dbus for gpm client

2006-09-21  Aaron Bockover  <abock@gnome.org>

	* Makefile.include: The new global build magic

	* All Makefile.am: use new Makefile.include, build system is now much
	simpler and more flexible

	* src/PlayerInterface.cs: Remove unused namespace

2006-09-21  Alp Toker  <alp@atoker.com>

	* src/Banshee.Base/PowerManagement.cs: IPowerManager for managed dbus

2006-09-21  Alp Toker  <alp@atoker.com>

	* src/Main.cs:
	* src/Banshee.Base/DBusRemote.cs:
	* src/Banshee.Base/DBusPlayer.cs: Use managed dbus for client as well

2006-09-21  Alp Toker  <alp@atoker.com>

	* src/Banshee.Base/DBusRemote.cs:
	* src/Banshee.Base/DBusPlayer.cs: Start to make use of managed dbus

2006-09-20  Aaron Bockover  <abock@gnome.org>

	* Makefile.am:
	* configure.ac:
	* dbus-sharp: Added new managed version of dbus-sharp; much to change here

	* src/Banshee.Base/Makefile.am: Link against NDesk.DBus

2006-09-20  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/DBusPlayer.cs: DBusPlayer now implements IDBusPlayer

2006-09-19  Aaron Bockover  <abock@gnome.org>

	* configure.ac: explicitly check for dbus-glib-1 versions to map to
	proper .so versions, added check on dbus-1 for 0.90, which now maps
	to .so version 3; added lots of missing AC_MSG_RESULTs, so configure
	output looks a little cleaner

	* hal-sharp/hal-sharp.dll.config.in:
	* src/banshee.exe.config.in: Added DBUS_GLIB_SOVERSION

	* tools/Makefile.am: Do not install banshee-import

2006-09-19  Aaron Bockover  <abock@gnome.org>

	* src/PlayerInterface.cs: Manually call Activate on cell renderers
	if clicked when row is selected (Michael Quinn, BGO #348373)

2006-09-19  Aaron Bockover  <abock@gnome.org>

	0.11.0 Released

	* NEWS: Updated

2006-09-19  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Dap/Ipod/IpodDap.cs: Use new unknown iPod foo in ipod-sharp,
	show a dialog if the iPod is unknown

	* data/images/source-smart-playlist.png: Updated

	* src/Banshee.Widgets/HigMessageDialog.cs: Exposed LabelVBox

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs: 
	Use slightly nicer notification string formatting

	* src/Banshee.Plugins/NotificationAreaIcon/banshee-notificationareaicon.schemas.in:
	Enabled by default

2006-09-18  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Bump to 0.11.0

	* autogen.sh: Check for subversion, run taglib-sharp/update-checkout.sh

	* taglib-sharp/Makefile.am: Build taglib-sharp

	* taglib-sharp/update-checkout.sh: Shell script to update the taglib-sharp
	checkout

	* taglib-sharp/COPYING: Added taglib-sharp license 

	* taglib-sharp/taglib-sharp.dll:
	* taglib-sharp/taglib-sharp.dll.mdb: Precompiled binaries removed

	* src/Banshee.Base/Makefile.am: 
	* src/Banshee.Dap/Ipod/Makefile.am: 
	* src/Banshee.Dap/MassStorage/Makefile.am: Link taglib-sharp.dll from
	top_builddir instead of top_srcdir now that we're actually building it

	* src/Last.FM/Makefile.am: Added missing EXTRA_DIST files

2006-09-18  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Dap/Ipod/IpodDap.cs: If the iPod model is unknown, run
	the new submit data tool in ipod-sharp; installed new properties into
	the interface

	* src/Banshee.Base/Dap/Dap.cs: Show an error list dialog if songs 
	could not be transcoded

	* src/Banshee.Base/BatchTranscoder.cs: Support an optional 'desired
	profile' name; allows errors to be thrown is a profile doesn't exist
	and should be required

2006-09-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/SourceManager.cs: Don't add a source twice.

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistCore.cs: Add debug
	message when smart playlist is added.

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs: Don't
	manually add the loaded playlist to the SourceManager unless the
	LibrarySource is already loaded.  This is a silly workaround the fact that
	the LibrarySource adds all of its children to the SourceManager when it is
	added, so children that aren't attached to it when it is added are left
	out.

2006-09-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs: Don't add
	the source to the SourceManager if it's already there.

2006-09-18  James Willcox  <snorp@snorp.net>

	* configure.ac: require ipod-sharp 0.6.2
	* src/Banshee.Dap/Ipod/IpodDap.cs: adjust to artwork API changes

2006-09-17  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Banshee.SmartPlaylist/Editor.cs: Add newly created
	playlists to the SourceManager so they are registered and updated
	immediately after creation.  Fixes BGO #354534.

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistCore.cs: Handle the
	case of the library already being loaded before we are initialized.

	* src/Banshee.Base/Banshee.SmartPlaylist/SmartPlaylistSource.cs: Add old
	playlists to the SourceManager.

2006-09-17  Aaron Bockover  <abock@gnome.org>

	* data/images/Makefile.am:
	* src/Banshee.Hyena/Makefile.am:
	* tools/Makefile.am: Make distcheck pass

	* src/Banshee.Base/Banshee.Burner/BurnerFormatList.cs: Disabled in the UI
	support for MP3 and data CDs - not finished in new burner code

2006-09-17  Patrick van Staveren  <trick@vanstaveren.us>

	* src/Banshee.Dap/Mtp/GPhotoDevice.cs: dispose CameraFile objects when
	sending a track to (hopefully) free up memory, dispose all objects
	regardless (now that Dispose is safe in libgphoto2-sharp), and catch
	doubly-disposing of the GPhotoDevice object.

	* src/Banshee.Dap/Mtp/GPhotoDeviceFile.cs: add method DisposeCameraFile,
	and only access the private camera_file as this was causing it to retrieve
	all camera files when we tried to dispose the GPhotoDevice.

	* src/Banshee.Dap/Mtp/MtpDap.cs: update save progress to zero before
	sending or deleting any tracks.

2006-09-17  Patrick van Staveren  <trick@vanstaveren.us>

	* src/Banshee.Dap/Mtp/GPhotoDeviceFile.cs: added metadata exception
	handling - now handles unparseable metadata.

	* src/Banshee.Dap/Mtp/MtpDap.cs: Better debug messages,
	WaitForPropertyChange when device seems inaccessable

	* src/Banshee.Dap/Mtp/MtpDeviceId.cs: added 14 new device IDs

	* src/Banshee.Dap/Mtp/Banshee.Dap.Mtp.mdp: MonoDevelop project created

2006-09-17  Aaron Bockover  <abock@gnome.org>

	* src/Makefile.am:
	* src/Banshee.Hyena/Makefile.am: Do not build SourceView.cs

	* src/Banshee.Base/Makefile.am: Added Gui/SourceView.cs

	* src/SourceView.cs: Removed; had GNOME sysadmin copy with history to
	src/Banshee.Base/Gui/SourceView.cs

	* src/Banshee.Base/Gui/SourceView.cs: Changed namespace to Banshee.Gui

2006-09-17  Aaron Bockover  <abock@gnome.org>

	* libbanshee/nautilus-burn.c (nautilus_glue_burn_drive_get_for_device): 
	Use return nautilus_burn_drive_new_from_path for <2.16; CD burning
	now works properly for 2.12 again

	* libbanshee/nautilus-burn.c:
	* src/Banshee.Base/Banshee.Burner/BurnerCore.cs:
	* src/Banshee.Base/Banshee.Cdrom.Nautilus.Interop/BurnDrive.cs:
	* src/Banshee.Base/Banshee.Cdrom.Nautilus.Interop/BurnRecorder.cs:
	* src/Banshee.Base/Banshee.Cdrom.Nautilus.Interop/BurnRecorderHandlers.cs:
	* src/Banshee.Base/Banshee.Cdrom.Nautilus.Interop/BurnRecorderTrack.cs:
	* src/Banshee.Base/Banshee.Cdrom.Nautilus.Interop/NautilusEnums.cs:
	Tabs to spaces, sigh

2006-09-17  Aaron Bockover  <abock@gnome.org>

	* Makefile.am: Remove burn-sharp

	* configure.ac: Remove burn-sharp, set LNB_CSFLAGS for 2.16

	* libbanshee/libbanshee.mdp:
	* libbanshee/Makefile.am: Added nautilus-burn.c

	* libbanshee/nautilus-burn.c: Trimmed glue for libnautilus-burn; added
	2.16 compatibility

	* src/Banshee.Base/Makefile.am:
	* src/Banshee.Base/Banshee.Base.mdp: Added Banshee.Cdrom.Nautilus.Interop

	* src/Banshee.Base/Banshee.Base.dll.config.in: Added map for
	libnautilus-burn 

	* src/Banshee.Base/Banshee.Cdrom/IDrive.cs:
	* src/Banshee.Base/Banshee.Burner/BurnerConfigurationPane.cs:
	* src/Banshee.Base/Banshee.Burner/BurnerSessionPreparer.cs:
	* src/Banshee.Base/Banshee.Burner/BurnerSessionRecorder.cs: 
	* src/Banshee.Base/Banshee.Cdrom.Nautilus/NautilusDrive.cs: MediaSize 
	renamed to MediaCapacity

	* src/Banshee.Base/Banshee.Cdrom.Nautilus/NautilusDriveFactory.cs: Use
	new BurnDrive constructor instead of iterating a drive list looking for
	a match - we already know the device node - much better for 2.16

	* src/Banshee.Base/Banshee.Cdrom.Nautilus/NautilusRecorder.cs: Use new
	API in Banshee.Cdrom.Nautilus.Interop.BurnRecorder

	* src/Banshee.Base/Banshee.Burner/BurnerCore.cs: Added some null checks,
	fixed InstallActions, iterate factory expecting IDrive, not IRecorder
	and explicitly cast IDrive to IRecorder (fixes potential crashes)

	* src/Banshee.Base/Banshee.Cdrom.Nautilus.Interop/*: New libnautilus-burn
	wrapper based on old burn-sharp; only wrap pieces we need, lots of 
	clean up and organization to make managing this wrapper by hand
	easy; added compatibilty with 2.12, 2.14, 2.16; calls glue in libbanshee

	* src/Banshee.Base/ComponentInitializer.cs: Dump component intialization
	exceptions if asked to trap and handle

	* src/Banshee.Base/Banshee.Equalizer.Gui/EqualizerWindow.cs: 
	* src/Banshee.Base/Banshee.SmartPlaylist/QueryBuilder.cs:
	* src/Banshee.Base/Gui/TrackEditor.cs: Fixed unused compiler warnings

	* src/Banshee.Hyena/Makefile.am: Remove link requirement for burn-sharp.dll

	* burn-sharp/*: Removed

2006-09-17  Ruben Vermeersch  <ruben@savanne.be>

	Very trivial compiler warning fixes.

	* src/Banshee.Base/Banshee.SmartPlaylist/QueryBuilder.cs: Comment unused
	variable.

	* src/Banshee.Base/Gui/TrackEditor.cs:
	* src/Banshee.Base/NetworkDetect.cs: Change two occurrences of catch
	(Exception e) to catch (Exception) as e wasn't even used.

2006-09-16  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationArea.cs: Support
	transparency (pulled from stable branch, BGO #356350)

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	CTRL+Left click goes to previous, CTRL+Right next, middle play/pause

2006-09-16  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/ActionManager.cs: Disabled equalizer for now - it's
	not finished

2006-09-16  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Globals.cs: Make startup strings translatable

2006-09-16  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Banshee.Cdrom.Nautilus/NautilusDrive.cs (CheckMedia): 
	Added null checks on discDevice and discDevice.Parent

2006-09-16  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Gui/RatingRenderer.cs: Minor fix, do not rely on
	widget if null; cache the GC

	* src/Banshee.Base/Gui/CleanRoomStartup.cs: Dump the exception to stdout

2006-09-16  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Banshee.Base.dll.config.in: Added libnotify map

2006-09-16  Aaron Bockover  <abock@gnome.org>

	* data/banshee-dialogs.glade: Added rating; fixed mnemonics

	* src/Banshee.Base/Gui/TrackEditor.cs: Disable the cover art page for now
	as it's not going to be complete before the 0.11.0 release; implement
	rating support; added basic cover art reading, but it is disabled

	* src/Banshee.Widgets/RatingEntry.cs: Better x-pos to rating 'formula'
	that does not depend on Allocation.Width

	* src/Banshee.Base/Gui/RatingRenderer.cs: Reverted back to showing
	the dots on prelight; prelight is only set when the cursor enters the
	entire row - not on the cell or row+column, so it's buggy

	* src/Banshee.Base/DBusPlayer.cs: Added SetPlayingRating, GetMaxRating

	* src/Main.cs: Added set-rating command line option

	* src/banshee.mdp:
	* src/Banshee.Base/Banshee.Base.mdp: Updated

2006-09-16  Ruben Vermeersch  <ruben@savanne.be>

	* src/Banshee.Base/FileNamePattern.cs: Fix the Regex for file name
	escaping. For real this time. (BGO #333813)

2006-09-16  Ruben Vermeersch  <ruben@savanne.be>

	* src/Banshee.Plugins/Audioscrobbler/Engine.cs: Remove a debug line that's
	no longer needed. This shouldn't have been committed :-).

2006-09-15  Ruben Vermeersch  <ruben@savanne.be>

	Notification bubbles in the tray.

	* src/Banshee.Base/Makefile.am: Add Notifications.cs.

	* src/Banshee.Base/Notifications.cs: Simple wrapper around libnotify.

	* src/Banshee.Plugins/NotificationAreaIcon/Makefile.am: Added
	NotificationAreaIconConfigPage.cs.

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIcon.dll
	.config.in: Add the dllmap for libgobject.

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconConf
	igPage.cs: Configuration dialog for the notification messages.

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlug
	in.cs: Show notifications when song changes.

	* src/Banshee.Plugins/NotificationAreaIcon/banshee-notificationarea
	icon.schemas.in: Add the key to store the "show bubbles" preference.

2006-09-13  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/BansheeBranding.cs: Implement DefaultCoverArt

	* src/Banshee.Base/Branding.cs: Added DefaultCoverArt property

	* src/Banshee.Base/TrackInfoHeader.cs: Use Branding.DefaultCoverArt

2006-09-13  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/BansheeBranding.cs: Implement ApplicationLogo

	* src/Banshee.Base/Branding.cs: Added ApplicationLogo property

2006-09-11  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/MediaEngine/PlayerEngine.cs: Ignore stream tags
	unless the track is an UnknownTrackInfo (stream)

2006-09-11  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Gui/RatingRenderer.cs: Only show the circles in the
	renderer when prelit and the cursor is inside the cell area

2006-09-11  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/TrackInfoHeader.cs: banshee-logo.png is now
	in Banshee.Base.dll

2006-09-11  Aaron Bockover  <abock@gnome.org>

	* src/Makefile.am: ASSEMBLY_NAME was renamed to BANSHEE; bin wrapper
	script installation should work again

2006-09-11  Aaron Bockover  <abock@gnome.org>

	* src/PlayerInterface.cs: Adapted to changes in DBusPlayer, Library, and
	CellRendererRating

2006-09-11  Aaron Bockover  <abock@gnome.org>

	* src/PlaylistView.cs: Use new CellRendererRating

	* src/Banshee.Base/Gui/RatingRenderer.cs: New version, supports being
	activatable so rating can be set just by clicking

	* src/Banshee.Base/DBusPlayer.cs: Fixes

	* libbanshee/Makefile.am: Remove inotify glue, added gtksharp-glue.c

	* libbanshee/gtksharp-glue.c: Small amount of glue for overriding
	GtkCellRenderer.activate virtual method; allows managed CellRenderers
	to be (somewhat hackishly) activatable

	* libbanshee/inotify-glue.c:
	* libbanshee/inotify.h: Removed

2006-09-11  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Globals.cs: Make PlaylistView a Gtk.Widget;
	add null check out PlaylistContainer

	* src/Banshee.Base/BansheeBranding.cs: Load the application logo
	from Banshee.Base

	* src/Banshee.Base/Library.cs: Load the LibrarySource here instead of
	in PlayerInterface

	* src/Banshee.Base/Makefile.am: Added banshee-logo.png

	* src/Banshee.Base/Gui/ExceptionDialog.cs: Fixed accelerator key

	* src/Makefile.am: Removed banshee-logo.png, added Banshee.Hyena
	to SUBDIRS

	* configure.ac: Generate src/Banshee.Hyena/Makefile

	* data/banshee-dialogs.glade: ImportButton has_default

	* banshee.mds: Added Banshee.Hyena

	* src/Banshee.Hyena/: Banshee.Hyena is an experimental new
	application front-end being developed very in a rather leisurely
	manner; primary goal right now is to see just how flexible the
	core and to work out component and design bugs

2006-09-11  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Only act on ButtonPress (Arif Lukito, BGO #352940)

2006-09-11  Aaron Bockover  <abock@gnome.org>

	* taglib-sharp/*: Updated

2006-09-11  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Plugins/PluginDialog.cs: don't CenterAlways (BGO #353797)

2006-09-11  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Widgets/SearchEntry.cs: Reset filter to default/first
	item on clear/cancel of search (BGO #353958)

2006-09-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/PlayerInterface.cs: Make ctrl-f and / focus the search entry.

2006-09-09  Ruben Vermeersch  <ruben@savanne.be>

	* src/Banshee.Widgets/ActionButton.cs: Added 'new' keyword on Action
	property to allow for proper functionality under Gtk# 2.12, which provides
	Gtk.Widget.Action (BGO #355100, patch by Michael Monreal) (basically
	avoids two warnings when compiling Banshee.Widgets)

2006-09-07  Ruben Vermeersch  <ruben@savanne.be>

	* src/PlayerInterface.cs: Unbreak the build (related to abock's latest
	commit on the DBusPlayer stuff)

2006-09-06  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/DBusPlayer.cs: New version does not rely on knowing
	anything about the PlayerInterface in banshee.exe; has new event
	for UICommands so PlayerInterface can act accordingly; do not allow
	operations to run until all components have booted; added Shutdown

	* src/Banshee.Base/Globals.cs: All DBus registration and setup is
	done as a component now, not in the PlayerInterface; DBusPlayer is
	booted as the first component, but will not perform actions until
	all components have booted - this allows for the best instance detection

	* src/Banshee.Base/ComponentInitializer.cs: Added IsRunFinished

	* src/RemotePlayer.cs: Moved to src/Banshee.Base/DBusPlayer.cs

	* src/Main.cs: Adjust to DBusPlayer changes; implement command line
	argument for new Shutdown DBus method

	* src/banshee.mdp: 
	* src/Makefile.am: 
	* src/Banshee.Base/Makefile.am: Updated

2006-09-06  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Gui/ImportDialog.cs: If an audio CD is an available
	source, make the first one the active default selection (instead of
	the first source); added 'enter' key accelerator (BNC #202865)
	
	* src/Banshee.Base/ActionManager.cs: CTRL+I to activate 'import music'

	* src/Banshee.Base/Gui/ErrorListDialog.cs: Make return the default
	accelerator, not escape

2006-09-06  Aaron Bockover  <abock@gnome.org>

	* src/Makefile.am: Updated with some much needed cleaning

	* src/banshee.mdp: Updated

	* src/PlayerInterface.cs: Handle potential exception from DBusRemote

2006-09-06  Ruben Vermeersch  <ruben@savanne.be>

	* src/Makefile.am: Unbreak the build (Patch by Michael Monreal, BGO
	#354589)

2006-09-05  Aaron Bockover  <abock@gnome.org>

	* src/IPlaybackModel.cs: Removed, has never been used for anything

	* src/PlaylistModel.cs: Do not implement pointless IPlaybackModel

2006-09-05  Aaron Bockover  <abock@gnome.org>

	* configure.ac:
	* Makefile.am: Added new tools/ build

	* tools: New tools build, cleaning up /src as this stuff doesn't belong
	there (yay for cleaning)

	* src/banshee-import.in: 
	* src/BansheeImport.cs:
	* src/BansheeDbusClient.cs: Moved to /tools

	* src/BansheeDbusClient.Makefile: Removed

2006-09-05  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Banshee.SmartPlaylist/Editor.cs: Remove unused
	variables and capitalize minutes in the title of a default playlist.

	* data/banshee-dialogs.glade: Make expander not expanded by default.

2006-09-05  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Plugins/PluginCore.cs: Do not load the deprecated
	smart playlist plugin

	* src/Banshee.Base/Plugins/PluginFactory.cs: Allow removing plugins
	from the factory

	* data/banshee-dialogs.glade: Added smart playlist editor 

2006-09-05  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Gui/ImageFileChooserDialog.cs: Added a FileChooserDialog
	for browsing images; shows a preview too

2006-09-05  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Banshee.SmartPlaylist/*: Smart playlist plugin moved
	from banshee-official-plugins; now is always available and built into
	core (currently still loaded as a plugin internally however)

	* src/Banshee.Base/Makefile.am: Updated

	* src/Banshee.Base/Plugins/PluginCore.cs: Load new internal 
	Smart Playlists plugin

	* src/Banshee.Base/Plugins/PluginFactory.cs: Allow loading plugins
	publicly directly from types (useful for internal 'static' plugins)

	* src/Banshee.Widgets/RatingEntry.cs: New star rating input entry based
	on Gabriel Burt's version from the smart playlists plugin in 
	banshee-official-plugins 

	* src/Banshee.Widgets/Makefile.am:
	* src/Banshee.Widgets/Banshee.Widgets.mdp: Updated

	* src/Banshee.Base/Gui/RatingRenderer.cs: Updated to use new graphics

	* data/images/rating-rated.png:
	* data/images/rating-unrated.png: Added new rating graphics

	* data/images/star.png:
	* data/images/circle.png: Removed

	* data/images/Makefile.am: Updated

2006-09-04  Aaron Bockover  <abock@gnome.org>

	* src/PlayerInterface.cs (OnWriteCDAction): return if there are no 
	burners available (BGO #346044)

2006-09-04  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Widgets/DiscUsageDisplay.cs: Use a red gradient if the
	disk is full (BGO #345515)

2006-09-04  Aaron Bockover  <abock@gnome.org>

	* src/SourceView.cs: Show source text in italics if Source.HasEmphasis

	* src/Banshee.Base/Source.cs: Added virtual HasEmphasis source, can be
	overridden and true to let the source view know it needs to emphasize
	the source in some way

	* src/Banshee.Base/Banshee.Burner/BurnerSource.cs: Implement HasEmphasis
	and set true when the source is auto-created (BGO #345490)

2006-09-04  Ruben Vermeersch  <ruben@savanne.be>

	* src/Banshee.Plugins/Audioscrobbler/Engine.cs:
	* src/Banshee.Plugins/Audioscrobbler/Queue.cs: Only run the state machine
	when a track is ready for submit. Removes a useless idle loop and thus
	reduces cpu usage.

2006-09-04  Ruben Vermeersch  <ruben@savanne.be>

	* src/PlaylistModel.cs: Only call QueueSync when it's needed (rather than
	every 300ms).

2006-09-03  Aaron Bockover  <abock@gnome.org>

	* src/PlayerInterface.cs: 
	* src/Banshee.Base/ActionManager.cs:
	* data/UIManagerLayout.xml: Added 'stop when finished' 

2006-09-02  Aaron Bockover  <abock@gnome.org>

	* banshee.pc.in: Replaced entagged-sharp with taglib-sharp (plugins
	will build again)

	* src/Banshee.Base/Gui/TrackEditor.cs: Minor fixes

2006-09-02  Patrick van Staveren  <trick@cvs.gnome.org>

	* src/Banshee.Dap/Mtp/MtpDap.cs: Removed Wav as a valid filetype, as
	for some reason some songs would not get transcoded on sync and send as
	Wavs rather than mp3.

2006-09-01  Aaron Bockover  <abock@gnome.org>

	* data/banshee-dialogs.glade: Renamed a widget

	* src/Banshee.Base/Gui/TrackEditor.cs: Implemented EnterNextTitle

2006-09-01  Aaron Bockover  <abock@gnome.org>

	* taglib-sharp: Updated with latest fixes

2006-08-28  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Gui/ConfirmShutdownDialog.cs: New dialog that is shown
	on shutdown if there are IInstanceCriticalJobs in the scheduler

	* src/Banshee.Base/Banshee.Kernel/IInstanceCriticalJob.cs: New

	* src/Banshee.Base/Gui/ErrorListDialog.cs: Added expander

	* src/Banshee.Base/Banshee.Kernel/Scheduler.cs: Scheduler is now 
	eventful and queryable 

	* src/Banshee.Base/Banshee.Kernel/IntervalHeap.cs: Minor API fix

	* data/banshee-dialogs.glade: Added expander to ErrorListDialog

	* src/PlayerInterface.cs: Connect to Globals.ShutdownRequested, perform
	user interface shutdown sequence when event is raised

	* src/Banshee.Base/Globals.cs: Added ShutdownRequested event support
	and new Shutdown method that checks to see if the scheduler has any
	instance critical jobs scheduled

	* src/Banshee.Base/Makefile.am: Added new files

	* src/Banshee.Base/StreamTagger.cs: Make the SaveTrackMetadataJob 
	an IInstanceCriticalJob

2006-08-27  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Gui/TrackEditor.cs (SaveTrack): catch 
	GConf.NoSuchKeyException

2006-08-27  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Banshee.Kernel/IntervalHeap.cs: implemented
	IList<T> (Add, Remove, Contains), optimized heap growing, added
	Synchronzied(IntervalHeap<T>) to get a synchronizable IntervalHeap<T>

	* tests/Banshee.Kernel.cs: Added more tests for IntervalHeap<T>

2006-08-27  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Export DISTCHECK_CONFIGURE_FLAGS

	* data/Makefile.am:
	* src/Makefile.am:
	* src/Banshee.Base/Makefile.am:
	* src/Banshee.Dap/Ipod/Makefile.am:
	* src/Banshee.Dap/MassStorage/Makefile.am:
	* taglib-sharp/Makefile.am:
	* tests/Makefile.am: Updated to make distcheck work; it's been a while

	* tests/ConsoleUi.cs: Updated

2006-08-26  Aaron Bockover  <abock@gnome.org>

	* tests/*: Added NUnit test framework, started testing Banshee.Kernel

	* configure.ac: Added tests/nunit checks

	* src/Banshee.Plugins/Audioscrobbler/Makefile.am: Updated
	
	* src/Banshee.Plugins/Audioscrobbler/Banshee.Plugins.Audioscrobbler.dll.config.in: 
	Renamed from Audioscrobbler.dll.config.in

2006-08-26  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Sources/AudioCdSource.cs: Reordered context menu

2006-08-26  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Banshee.Cdrom/IDiscDuplicator.cs: interface for
	duplicating a CD

	* src/Banshee.Base/Banshee.Cdrom.Nautilus/NautilusDiscDuplicator.cs:
	Nautilus implementation of IDiscDuplicator; runs nautilus-cd-burner

	* src/Banshee.Base/Makefile.am:
	* src/Banshee.Base/Banshee.Base.mdp: Updated

	* src/Banshee.Base/Banshee.Burner/BurnerCore.cs: Provide an IDiscDuplicator

	* src/Banshee.Base/Sources/AudioCdSource.cs: Added custom context menu
	with 'Copy CD' action

	* src/Banshee.Base/Gui/TrackEditor.cs: Schedule metadata save with
	highest priority

2006-08-26  Aaron Bockover  <abock@gnome.org>

	* data/banshee-dialogs.glade: Updated UI

	* src/Banshee.Base/GConfKeys.cs: Added WriteMetadata key, removed
	obsolete keys

	* src/Banshee.Base/PlayerEngineCore.cs:
	* src/Banshee.Base/MediaEngine/PlayerEngine.cs: Added TrackInfoUpdated
	method

	* src/Banshee.Base/StreamTagger.cs: Added SaveTrackMetadataJob for writing
	metadata back to files inside scheduler

	* src/Banshee.Base/Gui/PreferencesDialog.cs: Added Write Metadata checkbox

	* src/Banshee.Base/Gui/TrackEditor.cs: Schedule SaveTrackMetadataJobs
	for saving metadata back to files if user has enabled this

	* src/Banshee.Base/IO/SystemIO.cs:
	* src/Banshee.Base/IO/Unix.cs: Fixed WriteStream Open() call to allow
	Read/Write

2006-08-26  James Willcox  <snorp@snorp.net>

	* src/Banshee.Plugins/Daap/daap-sharp: updated to latest
	* src/Banshee.Plugins/Daap/*.cs: adjusted to daap-sharp API changes

2006-08-25  Aaron Bockover  <abock@gnome.org>

	* data/banshee-dialogs.glade: Updated interface

	* src/Banshee.Base/Gui/TrackEditor.cs: Allow syncing all common fields;
	removed sync button on track number and title as it doesn't make sense

2006-08-24  Aaron Bockover  <abock@gnome.org>

	* data/banshee-dialogs.glade: Moved WindowTrackInfo from banshee.glade

	* data/banshee.glade: Moved WindowTrackInfo to banshee-dialogs.glade

	* banshee.mdp:
	* src/Banshee.Base/Banshee.Base.mdp:
	* src/TrackProperties.cs:
	* src/Makefile.am: Removed TrackProperties.cs, moved to Banshee.Base

	* src/PlayerInterface.cs: Updated to call Banshee.Gui.TrackEditor

	* src/Banshee.Base/Gui/TrackEditor.cs: Updated to reflect new GUI,
	use TagLib for getting audio stream properties

2006-08-24  Aaron Bockover  <abock@gnome.org>

	* banshee.mds: 
	* src/Banshee.Base/Banshee.Base.mdp: Updated

	* src/Banshee.Base/GstMisc.cs: Do not return a fake mime type, let
	taglib-sharp handle that (taglib/asf, etc.)

	* src/Makefile.am:
	* src/Banshee.Dap/MassStorage/Makefile.am: Link against taglib-sharp

	* src/BansheeImport.cs: Disabled parts until can port to taglib-sharp

2006-08-24  Aaron Bockover  <abock@gnome.org>

	* entagged-sharp: removed in favor of taglib-sharp

	* taglib-sharp: added in favor of entagged-sharp (better mainstream
	format support, supports writing)

	* src/Banshee.Base/Banshee.Library/DatabaseWriteException.cs: Exception
	for database-specific write problems

	* src/Banshee.Base/Banshee.Library/Import.cs: Import layer to handle
	saving imported tracks found through ImportManager to library

	* src/Banshee.Base/Sources/ImportErrorsSource.cs: New source to show
	errors when importing

	* src/Banshee.Base/FileImportSource.cs:
	* src/Banshee.Base/FolderImportSource.cs:
	* src/Banshee.Base/HomeDirectoryImportSource.cs: Use new 
	Banshee.Library.Import class for queueing imports

	* src/Banshee.Base/LibraryTrackInfo.cs: Use StreamTagger with ProcessUri

	* src/Banshee.Base/Makefile.am: Adde new sources

	* src/Banshee.Base/Source.cs (RemoveChildSource): If source is active
	source, set active source to default source

	* src/Banshee.Base/StreamTagger.cs: Add a TagLib-based MergeTrackInfo

	* src/Banshee.Base/IO/SystemIO.cs:
	* src/Banshee.Base/IO/Unix.cs:
	* src/Banshee.Base/IO/Interfaces.cs:
	* src/Banshee.Base/IO/IOProxy.cs: Add support for TagLib VFS and mimetype
	finding implementations

	* src/Banshee.Base/FileTrackInfo.cs:
	* src/TrackProperties.cs:
	* src/Banshee.Dap/MassStorage/MassStorageDap.cs:
	* src/Banshee.Dap/Ipod/DatabaseRebuilder.cs: Use TagLib
	
	* src/PlayerInterface.cs: Removed import handling code

	* src/Banshee.Dap/Ipod/Makefile.am:
	* src/Banshee.Base/Makefile.am: Link against taglib-sharp, 
	not entagged-sharp
	
	* configure.ac: 
	* Makefile.am: Added taglib-sharp
	
2006-08-10  Ruben Vermeersch  <ruben@Lambda1.be>

	* data/banshee.glade:
	* src/TrackProperties.cs: Long overdue patch for BGO #327371 (window for
	edit song metadata should be resizable).

2006-08-09  Aaron Bockover  <abock@gnome.org>

	* banshee.mds:
	* libbanshee/libbanshee.mdp: Added MD project for libbanshee

	* libbanshee/gst-playback-0.10.c: Set video-sink on playbin to a fakesink
	to keep video windows from popping up (and often crashing the app with
	XLib errors)

2006-08-09  Aaron Bockover  <abock@gnome.org>

	* banshee.mds: Added Last.FM.mdp

	* src/Gnome.Keyring/*: synced sources

	* src/Last.FM/Makefile.am: Added new Last.FM files

	* src/Last.FM/Test.cs: Added test
	
	* src/Last.FM/Last.FM/Account.cs: Completed, moved to propery build layout

	* src/Last.FM/Last.FM.Gui/AccountLoginForm.cs: Login form that is 
	Last.FM.Account aware
	
	* src/Last.FM/Last.FM.Gui/AccountLoginDialog.cs: Dialog box embedding
	Last.FM.AccountLoginForm
	
	* src/Last.FM/Last.FM.Gui/Badge.cs: A linked image showing the last.fm
	logo/badge
	
	* src/Last.FM/Last.FM.Gui/LinkLabel.cs: A hyperlink button

	* src/Last.FM/*.png: Added last.fm badge images

2006-08-05  Aaron Bockover  <abock@gnome.org>

	* src/Gnome.Keyring/*: synced sources of gonzalo's Gnome.Keyring library
	from Mono SVN (gnome-keyring-sharp)

	* src/Last.FM/*: Beginning of general Last.FM/Audioscrobbler library

	* src/Last.FM/Account.cs: Class to get/set username/password for
	Last.FM using Gnome.Keyring

	* configure.ac:
	* src/Makefile.am: Added Gnome.Keyring, Last.FM

2006-08-05  Aaron Bockover  <abock@gnome.org>

	* banshee.mds:
	* src/banshee.mdp:
	* src/Banshee.Base/Banshee.Base.mdp: Updated MonoDevelop projects

	* src/Makefile.am: Do not build AmazonSearchService; has never been
	used 

	* src/AmazonSearchService.wsdl: Removed :-)

2006-08-05  Aaron Bockover  <abock@gnome.org>

	* src/*/Makefile.am:
	* src/*/*/Makefile.am: Added $(top_srcdir)/src/AssemblyInfo.cs to build

	* src/Banshee.Plugins/Daap/daap-sharp/AssemblyInfo.cs: Removed

	* src/Banshee.Plugins/Daap/daap-sharp/sync-tree.sh: Remove AssemblyInfo.cs
	when syncing

2006-08-05  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/PlayerEngineCore.cs: Use a PluginFactory; media
	engines are now flatly installed in Banshee.MediaEngine (no more
	sub directories therein)

	* src/Banshee.Base/MediaEngine/PlayerEngine.cs: Implement IPlugin

	* src/Banshee.Base/Plugins/PluginFactory.cs: Added PluginLoaded event

	* src/ExceptionDialog.cs: 
	* src/LogCoreViewer.cs:
	* src/RatingRenderer.cs:
	* src/ToggleStates.cs:
	* src/VersionInformationDialog.cs: Moved to Banshee.Base/Gui

	* src/Banshee.Base/Gui/ExceptionDialog.cs: Details are now collapsed
	in an expander; minor clean up

	* src/Banshee.Base/Gui/CleanRoomStartup.cs: Startup(string []) invocation
	that can optionally, by default, trap exceptions and present them in
	the Banshee.Gui.Dialogs.ExceptionDialog

	* configure.ac: Output GStreamerPlayerEngine.dll.config.in

	* src/Banshee.MediaEngine/Gstreamer/gst-player.dll.config.in: Renamed to
	GStreamerPlayerEngine.dll.config.in

	* src/Banshee.MediaEngine/Gstreamer/Makefile.am: Renamed assembly to
	GStreamerPlayerEngine.dll, install to Banshee.MediaEngine

	* src/Banshee.MediaEngine/Helix/Makefile.am: Install to Banshee.MediaEngine

	* src/Main.cs: Use CleanRoomStartup

	* src/Makefile.am: Removed files and resources moved to Banshee.Base

	* src/Banshee.Base/Makefile.am: Added resource generator, added new files
	and resources moved from banshee.exe

	* src/StockIcons.cs: Removed some icons

	* src/banshee.mdp:
	* src/Banshee.Base/Banshee.Base.mdp: Updated MonoDevelop projects

	* src/PlaylistView.cs:
	* src/PlayerInterface.cs: Updated to reflect namespace changes

2006-08-04  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Gui/GladeWindow.cs: Fixed bug, was missing assembly
	argument

2006-08-04  Aaron Bockover  <abock@gnome.org>

	* banshee.mdp: Removed old MonoDevelop project

	* banshee.mds: New MonoDevelop solution that includes proper projects

	* src/banshee.mdp:
	* src/Banshee.Base/Banshee.Base.mdp:
	* src/Banshee.Widgets/Banshee.Widgets.mdp:
	* src/MusicBrainz/MusicBrainz.mdp: New MonoDevelop projects; core Banshee
	can now be built and run from MonoDevelop

	* data/banshee.glade: Removed Banshee.Base dialogs

	* data/banshee-dialogs.glade: Moved Banshee.Base dialogs here; resource
	in Banshee.Base.dll; now more reusable

	* src/banshee.in: Allow running uninstalled

	* src/Banshee.Base/Makefile.am: Embed banshee-dialogs.glade

	* src/Banshee.Base/Gui/GladeWindow.cs: New constructor

	* src/PlayerInterface.cs: Connect to DeleteEvent manually

2006-08-01  Aaron Bockover  <abock@gnome.org>

	* banshee.mdp: Updated MonoDevelop project

	* data/Makefile.am: Build .po info extractor and generate translators.xml

	* data/contributors.xml: XML file containing contributor information

	* data/TranslatorExtract.cs: Program to extract translator information
	from .po files, generates XML to embed as resource

	* src/AboutBox.cs: Removed

	* src/Makefile.am: Do not embed COPYING or build AboutBox.cs

	* src/PlayerInterface.cs: Use new Banshee.Gui.Dialogs.AboutDialog

	* src/Banshee.Base/Makefile.am: Added ProductInformation.cs and 
	AboutDialog.cs; embed translators.xml, contributors.xml, and COPYING

	* src/Banshee.Base/ProductInformation.cs: Static class that reads
	translators.xml and contributor.xml resources to provide data for
	display in about dialog

	* src/Banshee.Base/Gui/AboutDialog.cs: New about dialog that uses
	Banshee.Base.ProductInformation as a data source

2006-07-29  Aaron Bockover  <abock@gnome.org>

	* banshee.mdp: Updated MonoDevelop project

	* src/Banshee.Base/Banshee.Kernel/Scheduler.cs: Schedules jobs to
	be executed based on priority on a single thread of execution

	* src/Banshee.Base/Banshee.Kernel/IntervalHeap.cs: A heap-based priority
	queue collection for the scheduler

	* src/Banshee.Base/Banshee.Kernel/IJob.cs: Job interface used for 
	scheduling

	* src/Banshee.Base/Banshee.Kernel/Job.cs: Job abstract class with
	a Finished event

	* src/Banshee.Base/Banshee.Kernel/JobPriority.cs: Job priority levels

	* src/Banshee.Base/Makefile.am: Added new Banshee.Kernel sources

	* src/Banshee.Plugins/MetadataSearch/MetadataSearchPlugin.cs: Use
	new Banshee.Kernel.Scheduler to handle fetching of track data on
	the scheduler thread

2006-07-29  Patrick van Staveren  <trick@vanstaveren.us>

	* src/Banshee.Dap/Mtp/MtpDap.cs: fix other import method to use
	IList.  Also update error handling code to work with IEnumerable.

2006-07-29  Patrick van Staveren  <trick@vanstaveren.us>

	* src/Banshee.Dap/Mtp/MtpDap.cs: quick fix with changing API from
	abock's earlier commit (IList->IEnumerable)

2006-07-28  Patrick van Staveren  <trick@vanstaveren.us>

	* src/Banshee.Dap/Mtp/GPhotoDevice.cs: added GetFile method

	* src/Banshee.Dap/Mtp/GPhotoDeviceFile.cs: split out public & private
	CameraFile, add Extension variable, removed old comments, CameraFile
	get method now auto-retrieves the file if not gotten yet.

	* src/Banshee.Dap/Mtp/MtpDap.cs: added fully-functional import method

	* src/Banshee.Dap/Mtp/MtpDapTrackInfo.cs: renamed device file to proper
	name, added MakeFileUri method that retrieves a camera file to a temp file
	with a proper extension

	Warning: the Import method blocks the UI. Move to a background thread.

2006-07-28  Aaron Bockover  <abock@gnome.org>

	* src/PlayerInterface.cs: Minor fix

	* src/SourceView.cs: Allow dropping IImportSource source on LibrarySource

	* src/Banshee.Base/Sources/DapSource.cs: Added CancelMessage and
	an action name to make the HIG stop dialog not suck

2006-07-28  Aaron Bockover  <abock@gnome.org>

	* src/PlayerInterface.cs: Make the remove and delete songs dialog
	conform to the HIG

2006-07-28  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Widgets/ActiveUserEvent.cs: New fully-HIG-compliant 
	cancel/stop dialog; support having custom stop messages

	* src/Banshee.Base/AudioCdRipper.cs: 
	* src/Banshee.Base/BatchTranscoder.cs:
	* src/Banshee.Base/ImportManager.cs:
	* src/Banshee.Base/Banshee.Burner/BurnerSessionRecorder.cs:
	* src/Banshee.Base/Dap/Dap.cs: Added better operation names and custom
	stop-operation messages so the stop dialog is more HIG compliant and
	easier to understand

	* src/Banshee.Base/ActionManager.cs: Set Gtk.Window.DefaultIconName

	* src/Banshee.Widgets/HigMessageDialog.cs: Set SkipTaskbarHint as 
	suggested by the HIG, make the message label support markup

2006-07-28  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Sources/PlaylistSource.cs: Fire TrackAdded/Removed
	events when appropriate.  Fixes BGO #347014.

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: Conform to the HAL spec
	when exporting files.

2006-07-28  Aaron Bockover  <abock@gnome.org>

	This commit breaks major API regarding Banshee.Sources.Source; expect
	related plugins and other code to break

	* src/Banshee.Base/Library.cs:
	* src/Banshee.Base/Source.cs: 
	* src/Banshee.Base/AudioCd/AudioCdDisk.cs:
	* src/Banshee.Base/Banshee.Burner/BurnerSource.cs:
	* src/Banshee.Base/Dap/Dap.cs:
	* src/Banshee.Base/Sources/AudioCdSource.cs:
	* src/Banshee.Base/Sources/LibrarySource.cs:
	* src/Banshee.Base/Sources/LocalQueueSource.cs:
	* src/Banshee.Base/Sources/PlaylistSource.cs:
	* src/Banshee.Plugins/Daap/DaapSource.cs:
	* src/Banshee.Plugins/Daap/DatabaseProxy.cs: Use generics on public API;
	goal was to have Banshee.Source.Source.Tracks be IEnumerable<TrackInfo>,
	thus everything else below had to become generic; clean up along the way

	* src/Banshee.Base/Sources/IImportable.cs: Import takes 
	IEnumerable<TrackInfo> instead of IList<TrackInfo> to make implementing
	both IImportable and IImportSource as easy and efficient as possible

	* src/Banshee.Base/Sources/DapSource.cs: Implement aforementioned
	generics changes and implement IImportSource

	* src/SourceView.cs: Handle exceptions when invoking an import

	* src/Banshee.Dap/Njb/NjbDap.cs:
	* src/Banshee.Dap/Mtp/MtpDap.cs: Throw an exception in IImportable.Import
	as these DAPs do not yet support importing

2006-07-28  Patrick van Staveren  <trick@vanstaveren.us>

	* src/Banshee.Base/Dap/DapMisc.cs: added wav and flac types

	* src/Banshee.Dap/Mtp/GPhotoDevice.cs: also allow wma/asx/wav extensions

	* src/Banshee.Dap/Mtp/MtpDap.cs: allow wav files (voice recordings),
	implement IImportable & dummy Import functions w/ error message. Also
	remove an old comment.

	* src/Banshee.Dap/Njb/NjbDap.cs: add IImportable & dummy Import
	functions w/ error message.

2006-07-27  Aaron Bockover  <abock@gnome.org>

	* banshee.mdp: Updated MonoDevelop project

	* src/SourceView.cs: support dropping on IImportable sources

	* src/Banshee.Base/FileNamePattern.cs: Fix minor bug regarding extensions

	* src/Banshee.Base/LibraryTrackInfo.cs: Allow constructor previously
	reserved for AudioCdTrackInfo to import any TrackInfo 

	* src/Banshee.Base/QueuedOperationManager.cs: Fixes, added necessary
	support for more advanced operations management

	* src/Banshee.Base/Sources/IImportable.cs: Added two Import methods

	* src/Banshee.Base/Sources/DapSource.cs: Implemented IImportable 
	methods; effectively allows super-awesome importing of songs from
	an iPod (or mass storage DAP) to the Banshee library

2006-07-27  Aaron Bockover  <abock@gnome.org>

	* banshee.mdp: Updated MonoDevelop project

	* src/Makefile.am:
	* src/DragDrop.cs: Removed legacy DnD code

	* src/Banshee.Base/Makefile.am: Added new Banshee.Gui.DragDrop files
	and Sources/IImportable.cs

	* src/Banshee.Base/Banshee.Equalizer.Gui/EqualizerView.cs: Minor fix

	* src/Banshee.Base/Banshee.Gui.DragDrop/DragDropList.cs: New DnD 
	transportation collection object to allow sending managed objects
	efficiently over Gtk.SelectionData and with very minimal code overhead

	* src/Banshee.Base/Banshee.Gui.DragDrop/DragDropTarget.cs: Global
	DnD target definitions and types

	* src/Banshee.Base/Banshee.Gui.DragDrop/DragDropUtilities.cs: Utility
	methods for raw DnD (byte[]/string/Gtk.SelectionData transforms)

	* src/PlayerInterface.cs:
	* src/SourceView.cs: Updated to use new Banshee.Gui.DragDrop types,
	utilities, and most importantly, DragDropList for efficient DnD

	* src/Banshee.Base/Sources/IImportable.cs: Empty interface for now; 
	can be implemented on sources when the source has import to library
	support

	* src/Banshee.Base/Sources/DapSource.cs: Implement IImportable

2006-07-27  Aaron Bockover  <abock@gnome.org>

	* banshee.mdp: Updated MonoDevelop project

	* src/Banshee.Base/ActionManager.cs:
	* data/UIManagerLayout.xml: Added equalizer and help/wiki actions

	* src/PlayerInterface.cs: Minor full screen action clean up and
	added action for showing eq editor

	* src/Banshee.Base/Gui/GladeWindow.cs: Base wrapper for Glade windows

	* src/Banshee.Base/Gui/GladeDialog.cs: Now derives from GladeWindow

	* src/Banshee.Plugins/Audioscrobbler/Queue.cs: Fix minor warning

	* src/Banshee.Base/Makefile.am: Added new equalizer files

	Equalizer support based in part on Ivan N. Zlatev's patch:

	* data/banshee.glade: Added equalizer editor shell window

	* src/Banshee.Base/Banshee.Equalizer/EqualizerManager.cs: Manager 
	with a default instance that supports loading/saving EqualizerSettings
	into XML

	* src/Banshee.Base/Banshee.Equalizer/EqualizerSetting.cs: Type representing
	and equalizer preset/configuration

	* src/Banshee.Base/Banshee.Equalizer.Gui/EqualizerBandScale.cs: A scale
	widget supporting band/frequency and clipped EQ values, shows a 
	frequency label as well

	* src/Banshee.Base/Banshee.Equalizer.Gui/EqualizerLevelsBox.cs: VBox
	that shows dB levels

	* src/Banshee.Base/Banshee.Equalizer.Gui/EqualizerPresetComboBox.cs: 
	A GtkComboBoxEntry that is EqualizerManager-aware

	* src/Banshee.Base/Banshee.Equalizer.Gui/EqualizerView.cs: A full EQ
	view widget that combines the BandScale and LevelsBox widgets and 
	supports loading/setting presets from an EqualizerSetting

	* src/Banshee.Base/Banshee.Equalizer.Gui/EqualizerWindow.cs: Default
	editor window combining glade shell window, EqualizerView and preset
	support

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayerEngine.cs: Added supported
	EQ bands/frequencies by the Helix engine; call into new EQ D-Bus methods

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayer.cs: Added D-Bus
	methods for new EQ support

2006-07-26  Aaron Bockover  <abock@gnome.org>

	* configure.ac: Use new intltool 0.3.5 locale handling (BGO #339140, 
	Przemysław Grzegorczyk)

	* src/PlayerInterface.cs: Suspend search until query is entered to
	speed up performance (BGO #348274, Dominik Meister)

	* src/Banshee.Base/ImportManager.cs:  Catch more exceptions that can be
	thrown during import.  Based on patch from Julien Sobrier (BGO #348732,
	Gabriel Burt)

	* src/Banshee.Dap/Ipod/IpodDap.cs: Added more informative debug output

	* src/Banshee.Widgets/ActiveUserEvent.cs: Only update on a delay to
	help unclog the main loop (BGO #347064, James Willcox)

	* entagged-sharp/Ogg/Util/OggInfoReader.cs: Nominal bitrate in kbps (BGO
	#342933, Koike Kazuhiko)

2006-07-25  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Source.cs: Fix small bug where we set the parent of a
	child to itself (BGO #348726, thanks Julien Sobrier).

2006-07-25  Ruben Vermeersch  <ruben@Lambda1.be>

	* src/Banshee.Base/Gui/PreferencesDialog.cs: Fix music folder preference
	(BGO #348600)

2006-07-19  Aaron Bockover  <abock@gnome.org>

	Patch from Ed Catmur (BGO #346501)

	* configure.ac: Check for libnautilus-burn 2.15.x and set compat 
	defines for 2.12.x, 2.14.x, and 2.15.x

	* burn-sharp/glue.c: Stay compatible with older (<=2.14.x) API and
	work with new 2.15.x API

2006-07-18  Aaron Bockover  <abock@gnome.org>

	* banshee.mdp: Updated MonoDevelop project

	* src/Banshee.Widgets/Makefile.am: Add Tile.cs and TileView.cs

	* src/Banshee.Widgets/TileView.cs: Scrollable widget that nicely 
	arranges child widgets into a table that should rarely horizontally
	scroll, much like the application browser in SLED 10

	* src/Banshee.Widgets/Tile.cs: Added a base Tile widget class; the
	tile concept can be seen in Beagle, and in SLED 10's main menu, 
	application browser, and control panel

2006-07-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Sources/PlaylistSource.cs: If the Library is not
	loaded, delay loading a playlist's tracks. (BGO #346702)

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: Fixed wrong indexes
	used in WriteLine, caught and patched by Przemysław Grzegorczyk (BGO #347440)

2006-07-18  Aaron Bockover  <abock@gnome.org>

	* hal-sharp/HalDevice.cs: Added null checks for Hal.Context to prevent
	crashes in places; happened in new NautilusDriveFactory when dbus was
	down

2006-07-18  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Makefile.am: Removed a file that I haven't committed
	yet

2006-07-18  Patrick van Staveren  <trick@vanstaveren.us>

	* src/Banshee.Dap/Mtp/MtpDeviceId.cs: sync'd device list with libgphoto

2006-07-17  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/Makefile.am: Added MediaEngine/IEqualizer.cs (left
	out from IEqualizer.cs commit)

2006-07-17  Aaron Bockover  <abock@gnome.org>

	* HACKING: Updated

2006-07-17  Aaron Bockover  <abock@gnome.org>

	* src/Banshee.Base/MediaEngine/IEqualizer.cs: Added an equalizer interface
	that media engines can implement

2006-07-12  Patrick van Staveren  <trick@vanstaveren.us>

	* src/Banshee.Dap/Mtp/GPhotoDevice.cs:
	* src/Banshee.Dap/Mtp/MtpDap.cs: removed a bunch of unnecessary debug
	statements, cleaned up device detection so that it only happens when
	necessary.  Also removed SetOwner method so that Banshee doesn't allow
	in UI.

2006-07-12  Ruben Vermeersch  <ruben@Lambda1.be>

	Patch by Bertrand Lorentz <bertrand.lorentz@gmail.com> (BGO #336761)

	* data/banshee.schemas.in: 
	* src/PlayerInterface.cs:
	* src/PlaylistView.cs: Add support for showing a year column and searching
	track by year. The year column visibility defaults to false.

2006-07-11  Ruben Vermeersch  <ruben@Lambda1.be>

	* src/Banshee.Base/Plugins/PluginFactory.cs: Create user plugin dir if it
	doesn't exist. (BGO #346612) Makes life of plugin writers a bit easier as
	they can safely assume the user plugin dir exists.

	* src/Banshee.Plugins/Audioscrobbler/Queue.cs: Remove the unnecessairy
	test to check if the user plugin dir exists.

2006-07-10  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

	* src/Banshee.Base/Banshee.Cdrom.Gui/RecorderSpeedComboBox.cs:
	Fixed typo 

2006-07-08  Aaron Bockover  <aaron@abock.org>

	* libbanshee/gst-transcode-0.10.c: Expand virtual element 'cdwavenc'
	into a better pipeline to produce proper WAV PCM (proper endianness,
	width, depth, signed, rate, and channel attributes)

	* src/Banshee.Base/PipelineProfile.cs: Added support for virtual 'cdwavenc'

	* src/Banshee.Base/Banshee.Burner/BurnerSessionPreparer.cs: Use new virtual
	'cdwavenc' profile for writing audio CDs

2006-07-06  Aaron Bockover  <aaron@abock.org>

	Patch by Christopher Orr <chris@orr.me.uk> (BGO #346815)

	* src/Banshee.Base/PowerManagement.cs: Make Inhibit method generic;
	allow multiple reasons for inhibiting GNOME Power Manager.
	
	* src/Banshee.Base/Banshee.Burner/BurnerSessionRecorder.cs: Use Inhibit
	to stop computer suspending/hibernating while burning a CD.

2006-07-07  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Ensure track info popup is not clipped on left side of 
	screen (BGO #346876, Edward Duffy)

2006-07-06  Aaron Bockover  <aaron@abock.org>

	Patch from James Willcox

	* configure.ac: Require ipod-sharp 0.6.0

	* src/Banshee.Base/TrackInfo.cs: Make cover_art_file protected

	* src/Banshee.Dap/Ipod/DatabaseRebuilder.cs:
	* src/Banshee.Dap/Ipod/IpodDap.cs:
	* src/Banshee.Dap/Ipod/IpodDapTrackInfo.cs: Updated to work with
	new ipod-sharp 0.6.0/SVN Track API and added cover art syncing support

2006-07-06  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated MonoDevelop project

	* src/Banshee.Base/Globals.cs: Initialize/destroy power management support

	* src/Banshee.Base/Makefile.am: Added PowerManagement.cs

	* src/Banshee.Base/PowerManagement.cs: Basic power management support
	that currently uses the DBus interface to GNOME Power Manager (2.15.x
	is currently required); If playing, Inhibit will be called, when not 
	playing, UnInhibit will be called (BGO #344946)

	* src/Banshee.Base/TrackInfoPopup.cs: Increased cover art size

2006-07-02  Aaron Bockover  <aaron@abock.org>

	* src/data/UIManagerLayout.xml: Added DebugMenu menu; moved the 
	version information and logged events items into it (BGO #346425)

	* src/Banshee.Base/ActionManager.cs: Added DebugMenuAction implementation;
	do not show unless --debug is passed

2006-07-02  Aaron Bockover  <aaron@abock.org>

	* src/Main.cs: Enable the exception dialog

	* src/PlayerInterface.cs: Do not show main interface if --hide was passed

	* src/Banshee.Base/BansheeBranding.cs: Do not show the splash screen
	if --hide was passed (BGO #346424)

2006-07-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/ChildSource.cs: Fix whitespace.

	* src/Banshee.Base/Source.cs: Add NameComparer and SizeComparer IComparers
	and add virtual SortChildren function to sort with them, allowing ordering
	of non-PlaylistSource children of the Library. (BGO #344829)

	* src/Banshee.Base/Sources/LibrarySource.cs: Use SortChildren method from
	Source.  Remove option to sort by creation order.

	* src/Banshee.Base/Sources/PlaylistSource.cs: Remove sorting functionality
	from LoadSources function, as sorting is done with SortChildren now.

2006-07-02  Aaron Bockover  <aaron@abock.org>

	* src/PlaylistView.cs (SelectPlaying): Check PlayingPath for null before
	calling SelectPath on it

	* src/PlayerInterface.cs (SearchBySelectedTrack): Focus the playlist view 

	* src/Banshee.Base/QueuedSqliteDatabase.cs: Updated by rubenv in a 
	previous commit to add a WakeUp method and not hang on Dispose 

2006-07-02  Aaron Bockover  <aaron@abock.org>

	Revised patch from Dominik Meister (BGO #333904)

	* data/UIManagerLayout.xml: 
	* src/Banshee.Base/ActionManager.cs: Added search by criteria entries
	
	* src/PlayerInterface.cs: Implement search by criteria from selection

	* src/Banshee.Widgets/SearchEntry.cs: Allow setting the search filter
	restrition

2006-07-02  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/ImportManager.cs: Catch any exception on the 
	'starts with' test for path file names when importing in case
	there is poor encoding (BGO #68088, Marin Krkač)

	* src/PlaylistView.cs: More natural sorting of playlists 
	by artist (BGO #342835, Denis Washington)

	* src/PlayerInterface.cs (OnSimpleSearch): Pump the main event loop 
	before updating the view to allow for the scroll to playing 
	request to work properly for now (BGO #328886, Marin Krkač)

	* src/Banshee.Base/QueuedSqliteDatabase.cs: Use a generic 
	Queue for the queue; eliminate busy waiting to reduce 
	CPU usage (BGO #346381, Ruben Vermeersch)

2006-07-02  Aaron Bockover  <aaron@abock.org>

	Patch from Dominik Meister to add Jump To Playing support (BGO #339847)

	* data/UIManagerLayout.xml: Added JumpToPlayingAction to show in the
	track view context menu

	* src/PlayerInterface.cs: Implemented JumpToPlayingAction

	* src/Banshee.Base/ActionManager.cs: Added JumpToPlayingAction definition

	* src/PlaylistView.cs: Implemented SelectPlaying method

2006-07-02  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/Makefile.am: Added PluginFactory.cs and IPlugin.cs

2006-07-02  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/ComponentInitializer.cs: Use an Initializing 
	concept vs an Initialized concept, so when tasks block, the UI doesn't
	look like it's 'off by one'

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs: Install
	ActionManager actions in overloaded InterfaceInitialize method, not
	in PluginInitialize; this is now required since the 
	Banshee.Base.ActionManager's interface definition is loaded 
	after PluginInitialize

	* src/Banshee.Base/Banshee.Burner/BurnerCore.cs: assign recorder with
	newly added media to all burner sources if source does not already
	have a set recorder (BGO #345475)

	* src/Banshee.Base/Plugins/PluginFactory.cs: Generic class to allow
	loading of types (and instantiations) from directories/assemblies;
	reduces all the plugin loading redundancy for the three types of
	plugins used in Banshee

	* src/Banshee.Base/Plugins/IPlugin.cs: Base IPlugin interface to allow
	classes to work with PluginFactory

	* src/Banshee.Base/Plugins/Plugin.cs: Implement new IPlugin interface

	* src/Banshee.Base/Plugins/PluginCore.cs: Use new PluginFactory for
	the update 'generic' Plugin type

	* src/Banshee.Base/Plugins/PluginDialog.cs: Fix to work with new 
	generics/PluginFactory support

	* src/Banshee.Base/Dap/Dap.cs: DapDevice now implements IPlugin

	* src/Banshee.Base/Dap/DapCore.cs: DapCore now uses a PluginFactory
	and all collections were updated to use generics

	* data/UIManagerLayout.xml: Added a separator in the Music menu

	* banshee.mds: Updated MonoDevelop solution

2006-06-22  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Plugins/Daap/DaapCore.cs: Ignore services with 'Jono'
	in them (Jono has bad taste, apparently)

2006-06-26  Ruben Vermeersch  <ruben@Lambda1.be>

	* banshee.mdp: Updated MonoDevelop project

2006-06-21  Aaron Bockover  <aaron@abock.org>

	New preferences dialog (BGO #345516)

	* banshee.mdp: Updated MonoDevelop project

	* data/banshee.glade: Removed legacy preferences window and added
	a simplified new preferences dialog

	* src/Preferences.cs: Removed legacy preferences window

	* src/PlayerInterface.cs: Invoke the new preferences dialog

	* src/Banshee.Base/Makefile.am: Added Gui/PreferencesDialog.cs

	* src/Banshee.Base/PipelineProfile.cs: Added a Changed event needed
	for instant-apply in the new preferences dialog

	* src/Banshee.Base/Gui/PreferencesDialog.cs: New instant-apply and
	much simplified preferences dialog implementation

2006-06-21  Aaron Bockover  <aaron@abock.org>

	* src/PlaylistView.cs: Use theme icons for playback indication

2006-06-21  Aaron Bockover  <aaron@abock.org>

	* docs/MonodocNodeConfig.cs: return proper error codes to allow make
	to report failures (Ruben Vermeersch, BGO #338491)

	* src/Banshee.Base/PipelineProfile.cs: Set outputformat=1 for faac
	profile (John Eckhart, BGO #341547)

	* libbanshee/gst-playback-0.10.c: Properly parse track_str from 
	CDDA URI (substring length off-by-one, Koike Kazuhiko, BGO #341704)

	* src/Banshee.Base/FileNamePattern.cs: Escape file names containing
	a colon (:) (James Stembridge, BGO #333813)

	* src/PlayerInterface.cs (DoesTrackMatchSearch): Allow for fuzzy
	searching (OR/NOT support) and relaxed culture-based string 
	comparison ('pele' will match 'Pelé'); patch by Marin Krkac, based
	on original fuzzy search patch by Travis Bradshaw (BGO #333893, #327671)

	* src/Banshee.Base/Utilities.cs (StringUtil): Added RelaxedIndexOf
	method for relaxed culture-based string matching (Marin Krkac)

2006-06-21  Aaron Bockover  <aaron@abock.org>

	Rating patch by P. van de Geer (BGO #336042)

	* src/Main.cs: Added --query-rating argument

	* src/RemotePlayer.cs: Added GetPlayingRating remote method

2006-06-20  Aaron Bockover  <aaron@abock.org>

	Committed Patrick van Staveren's MTP support

	* configure.ac: Added checks for libgphoto2-sharp and require --enable-mtp
	to be explicitly passed to build experimental/unstable MTP support

	* src/Banshee.Dap/Makefile.am: Added Mtp to SUBDIRS

	* src/Banshee.Dap/Mtp/*: Experimental/unstable MTP DAP support

2006-06-20  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/BansheeBranding.cs: Removed rogue Console.WriteLine

2006-06-20  Aaron Bockover  <aaron@abock.org>

	* src/Main.cs: Added call to NotifyStartupComplete call for when
	commands are sent to remote instance; enqueue files over DBus

	* src/PlayerInterface.cs: Do not add LocalQueueSource to SourceManager

	* src/RemotePlayer.cs: Added EnqueueFiles remote method

	* src/Banshee.Base/SourceManager.cs: Added ContainsSource method

	* src/Banshee.Base/Sources/LocalQueueSource.cs: Support enqueuing 
	files after instantiation; play first file on enqueue

2006-06-20  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated MonoDevelop project

	* src/Core.cs: Removed

	* src/Main.cs: Initialize stock icons before instantiating UI

	* src/Makefile.am: Removed Core.cs

	* src/PlayerInterface.cs:
	* src/TrackProperties.cs: Do not reference PlayerCore

	* src/Banshee.Base/ActionManager.cs: Delay loading UI until after
	globals startup initialization

	* src/Banshee.Base/Branding.cs: Moved BansheeBranding to new file; only
	initialize the default branding once

	* src/Banshee.Base/Globals.cs: Run all initialization processes through
	the new ComponentInitializer

	* src/Banshee.Base/ComponentInitializer.cs: Object to keep track of
	component initialization; used for reporting progress of startup

	* src/Banshee.Base/BansheeBranding.cs: Added splash screen support

	* src/Banshee.Base/Gui/SplashScreen.cs: Default splash screen that shows
	load progress, and can be re-used for custom brandings

	* data/images/splash.{png,svg}: New upstream/default branded splash 
	screen graphic

	* data/images/Makefile.am: Added splash.png

2006-06-20  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/Banshee.Burner/BurnerSource.cs: Make default
	source name 'New Audio CD' not 'New CD' (BGO #345489)

2006-06-20  Aaron bockover  <aaron@abock.org>

	* src/Banshee.Base/Banshee.Burner/BurnerSource.cs: In default 
	constructor, bind the source session to the first available 
	recorder with blank media if possible (BGO #345475)

2006-06-20  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/Banshee.Burner/BurnerCore.cs: Add null check
	on return from FindSourceForDrive; call source.Unmap on match (BGO #345474)

	* src/Banshee.Base/Banshee.Burner/BurnerSource.cs: Implement OnDispose
	in place of Uninitialize

2006-06-20  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/Banshee.Burner/BurnerSource.cs:
	* src/Banshee.Plugins/Daap/DaapSource.cs: Implement new virtual method
	and properties for unmapping

2006-06-20  Gabriel Burt  <gabriel.burt@gmail.com>

	* data/UIManagerLayout.xml: Rename the DeletePlaylist action to 
	UnmapSource.

	* src/PlayerInterface.cs: Use CanUnmap property of Sources to set
	visiblity of Unmap option in context menu.  Set the label of the rename
	and delete items with on the source's SourceType property.  Make the
	OnRename and OnUnmap handlers source-independent.

	* src/Banshee.Base/ActionManager.cs: Add the UnmapSourceAction to the
	list of global actions instead of to the PlaylistActions group.

	* src/Banshee.Base/Source.cs: Add virtual Unmap method and SourceType,
	and CanUnmap, UnmapLabel, and UnmapIcon properties.

	* src/Banshee.Base/Sources/DapSource.cs: 
	* src/Banshee.Base/Sources/PlaylistSource.cs: Implement new virtual
	method/properties.

2006-06-20  Aaron Bockover  <aaron@abock.org>

	* src/DragDrop.cs: Added ObjectToSelectionData and SelectionDataToObjects

	* src/PlayerInterface.cs: Let SourceView handle its own drag source/dests

	* src/SourceView.cs: Added internal DnD support; sources can be dropped
	on to other sources

	* src/Banshee.Base/Source.cs: Added SourceDrop virtual method and
	IsDragSource property to control source DnD

	* src/Banshee.Base/Banshee.Burner/BurnerSource.cs: Implement SourceDrop;
	playlists can be dropped on to the CD burning source

	* src/Banshee.Base/Sources/PlaylistSource.cs: Implement IsDragSource and
	SourceDrop; playlists can be dragged to other sources (including other
	playlists)

2006-06-19  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/Banshee.Burner/BurnerSource.cs: call default 
	constructor from IRecorder constructor

2006-06-19  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/Branding.cs: added Branding support that was 
	implemented on the stable branch

	* src/AboutBox.cs:
	* src/PlayerInterface.cs:
	* src/Banshee.Base/IconThemeUtils.cs: use Banshee.Base.Branding

	* src/Banshee.Base/Globals.cs: Initialize Branding class

	* src/Banshee.Base/Makefile.am: added Branding.cs

2006-06-19  Aaron Bockover  <aaron@abock.org>

	* src/PlayerInterface.cs: Use NamingUtil to create a nice name for
	burner source when creating from track selection

	* src/Banshee.Base/Utilities.cs: Added new NamingUtil static class 
	with GenerateTrackCollectionName and PostfixDuplicate methods; 
	GenerateTrackCollectionName is an updated/simplified/fixed version of
	PlaylistUtil.GoodUniqueName (BGO #325181)

	* src/Banshee.Base/Banshee.Burner/BurnerSource.cs: Do not name source
	after the drive name (which is often a bunch of gibberish)

	* src/Banshee.Base/Sources/PlaylistSource.cs: Use new NamingUtil 
	methods in place of old PlaylistUtil.{GoodUniqueName,PostfixDuplicate}

2006-06-16  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/Banshee.Burner/BurnerConfigurationPane.cs: Updated
	some strings

	* src/Banshee.Widgets/DiscUsageDisplay.cs: Overlay 'Insert Disc' text
	when Capacity <= 0 and reduce disc opacity; removed orange slice

2006-06-16  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated MonoDevelop project

	* data/banshee.glade: Removed cd burning prefs page

	* src/BurnCore.cs:
	* src/BurnTransaction.cs:
	* src/NautilusBurnUtil.cs: Removed legacy cd burning layer

	* src/Makefile.am: Removed above files from build

	* src/Preferences.cs: Removed cd burning prefs

	* src/Banshee.Base/ActionManager.cs: Moved WriteCDAction out of 
	selection group
	
	* src/PlayerInterface.cs: Make WriteCDAction always sensitive if
	active source is BurnerSource; if BurnerSource is active, start the
	burn for the source, otherwise create a new BurnerSource or use an
	empty one and append selection to new source and start it burning; 
	this allows for 'select and burn' behavior of legacy burning layer 
	and also gives the opportunity for editing layout before burn as well

	* src/Banshee.Base/Banshee.Burner/BurnerConfigurationPane.cs: Removed
	Write CD button; using WriteCDAction instead for consistency

	* src/Banshee.Base/Banshee.Burner/BurnerCore.cs: Added public
	CreateSource and CreateSourceOrFindEmpty methods

	* src/Banshee.Base/Banshee.Burner/BurnerSessionRecorder.cs: Fixed
	many strings

	* src/Banshee.Base/Banshee.Burner/BurnerSource.cs: Burn method public

2006-06-16  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Widgets/DiscUsageDisplay.cs: New cairo widget to show
	disc usage (radial progress bar for the new CD Burning UI)

	* src/Banshee.Widgets/Makefile.am: Added DiscUsageDisplay to build

	* data/UIManagerLayout.xml: Added 'New CD' action

	* data/banshee.glade: Added BurnerOptionsDialog

	* src/SourceView.cs: When in edit/rename mode on a source row, cancel
	the edit when focus is lost

	* src/Banshee.Base/Globals.cs: Initialize new BurnerCore

	* src/Banshee.Base/Makefile.am: Added build rules for all the hot
	new Banshee.Burner/Banshee.Cdrom* love

	* src/Banshee.Base/Banshee.Burner/*: New CD burning UI (source based)
	to allow for creation of CDs from multiple sources; will deprecate the
	old CD burning method (single-source, selection based)

	* src/Banshee.Base/Banshee.Cdrom/*: Interfaces and simple types for 
	CD-ROM drive and recorder hardware and events

	* src/Banshee.Base/Banshee.Cdrom.Gui/*: Widgets for Banshee.Cdrom; 
	includes DriveComboBox and RecorderSpeedComboBox

	* src/Banshee.Base/Banshee.Cdrom.Iso/*: Interfaces for creating 
	ISO-9660 CD images

	* src/Banshee.Base/Banshee.Cdrom.Iso.Mkisofs/*: mkisofs process/exec
	implementation of Banshee.Cdrom.Iso

	* src/Banshee.Base/Banshee.Cdrom.Nautilus/*: libnautilus-burn
	implementation of Banshee.Cdrom

2006-06-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: Remove unneeded checks
	that broke .is_audio_player functionality (James Stembridge, BGO #344795)

2006-06-13  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: If usb.vendor doesn't
	exist fall back to info.vendor, and translate "Vendor" (James Stembridge,
	BGO #344803).  Use different HAL property to get a better device name.

2006-06-13  Aaron Bockover  <aaron@abock.org>

	* src/RemotePlayer.cs: Ensure a null string is not returned (BGO #344774)

2006-06-12  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/SourceManager.cs: Proxy Updated events of child
	sources through SourceManager.Updated (Denis Washington, BGO #343120)

2006-06-12  Aaron Bockover  <aaron@abock.org>

	* src/SourceView.cs: Added BeginRenameSource to make a source's row
	become editable and focused; made UpdateRow internal as it's only used
	by the row renderer

	* src/PlayerInterface.cs: Use SourceView.BeginRenameSource for renaming
	instead of a dialog when the source rename action is invoked

2006-06-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Dap/Ipod/IpodDap.cs:
	* src/Banshee.Dap/Njb/NjbDap.cs: Updated to work with changes to Dap.cs,
	specifically overriding AddTrack and calling OnTrackAdded.

2006-06-12  James Stembridge  <jstembridge@gmail.com>

	* src/Banshee.Base/Dap/DapCore.cs: Include all volumes when performing
	initial scan for DAP devices, not just those that are children of
	devices tagged by hal with portable_audio_player

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: Check for duplicates
	when adding a song to the device; if the volume for a new device isn't 
	yet available from VFS, wait for it; don't initialize Gnome VFS if it's 
	already been initialized; accept devices with a file .is_audio_player
	in the root

2006-06-12  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Makefile.am: add QueuedOperationManager.cs.

	* src/Banshee.Base/QueuedOperationManager.cs: New file, allows for generic
	asynchronous events like copying files to a USB DAP, etc.

	* src/Banshee.Base/Dap/Dap.cs: Make the tracks ArrayList protected and
	allow sub-classes to override AddTrack.

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: Fix the bug where the DAP
	couldn't be plugged in when Banshee started, handle copying files to the
	device asynchronously using a QueuedOperationManager that pops up a
	ActiveUserEvent if the transfer is slow.  Escape artist/album/title when
	creating the destination filename.  Catch exceptions in the copy.

	* src/Banshee.Widets/ActiveUserEvent.cs: Add an option for having the user
	event not register itself (and therefore not show itself) until at least a
	second has passed, at which time if the operation is less than 33% done,
	it is registered and shown (and otherwise it is not).

2006-06-05  Aaron Bockover  <aaron@abock.org>

	* configure.ac: Fixed Helix detection; no longer require --disable-helix
	to be passed; will be enabled/disabled automatically

2006-06-05  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/Makefile.am: Removed ENABLE_GST_10 define 

	* src/Banshee.Base/AudioCdRipper.cs: Removed GStreamer 0.8 code and
	dependency on GSTREAMER_0_10; overlooked from previous commit 

2006-06-03  Aaron Bockover  <aaron@abock.org>

	* src/PlayerInterface.cs: start playing a source when it is double
	clicked in the source view (Przemysław Grzegorczyk, BGO #326634); 
	delay updating status bar to only once every 1/5 second (Ruben
	Vermeersch, BGO #336001)

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: escape file names 
	of added tracks properly; do not use volume label from storage 
	device if it is empty (James Stembridge, BGO #337807, #337808)

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Use Present() instead of Visible when showing/hiding the main window 
	by clicking the tray icon (Przemysław Grzegorczyk, BGO #328949)

	* src/Banshee.Base/LogCore.cs: LogCore.PushInformation actually
	called LogCore.PushWarning (Bertrand Lorentz, BGO #335706)

	* src/PlaylistModel.cs: Delay raising the updated event to increase
	speed a little (Ruben Vermeersch, BGO #336010)

	* src/Banshee.Base/ImportManager.cs: Use a static mutex to do handle 
	user event locking to prevent a potential race condition (based on 
	patch by Ed Catmur, BGO #331974)
	
2006-06-03  Aaron Bockover  <aaron@abock.org>

	* src/SourceView.cs: Allow drag drops if source AcceptsInput

	* src/Banshee.Base/Source.cs: Added AcceptsInput property

2006-06-03  Aaron Bockover  <aaron@abock.org>

	* libbanshee/: Removed all GStreamer 0.8 backend library code

	* configure.ac: Removed GStreamer 0.8 checks and VLC checks; only 
	GStreamer 0.10 and Helix (helix-dbus-server) are supported engines now

	* src/Banshee.Base/GstTranscoder.cs:
	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs: Removed 
	GStreamer 0.8 support

	* src/Banshee.MediaEngine/Gstreamer/Makefile.am: Removed conditional 
	define for GStreamer 0.10

	* src/Banshee.MediaEngine/Vlc/: Removed VLC support

2006-05-29  Aaron Bockover  <aaron@abock.org>

	* src/BurnCore.cs: Calculate the total duration of the selection and 
	ensure the media is large enough to hold it; all strings were reused
	and it will prompt to insert media before transcoding in order to
	check its size (BNC #151332)

2006-05-29  Aaron Bockover  <aaron@abock.org>

	* libbanshee/gst-cd-rip-0.10.c: Added id3v2mux to list of tag muxers to
	search for when encoding to MP3 and no muxer was specified

	* src/banshee.in: Set GST_PLUGIN_PATH to $(libdir)/banshee/gstreamer-0.10
	to support loading private plugins (gstxing, gstdtdriver on SUSE/SLED)

	* banshee.mds:
	* banshee.mdp: Updated MonoDevelop project

2006-05-25  Aaron Bockover  <aaron@abock.org>

	* configure.ac: 
	* src/Banshee.Plugins/Makefile.am: 
	* src/Banshee.Plugins/FileSystemMonitor/*: Removed FSM plugin; it is
	unmaintained and very buggy; it will be imported as a standalone plugin
	module to Banshee Subversion where someone may choose to continue 
	working on it

2006-05-24  Aaron Bockover  <aaron@abock.org>

	* src/PlayerInterface.cs (OnRestartSongAction): If pipeline is paused, 
	play the song from the beginning

2006-05-23  Aaron Bockover  <aaron@abock.org>

	* src/PlayerInterface.cs: When right clicking on a source, use the
	custom source menu if it provides one, otherwise use the default

	* src/Banshee.Base/Source.cs: new property, ActionPath that allows
	sources to provide a path to a UI merged into Globals.ActionManager

	* src/Banshee.Base/Sources/LibrarySource.cs: Implement ActionPath and
	provide a UI for setting the sort order on playlists in the view

	* src/Banshee.Base/Sources/PlaylistSource.cs: Allow specifying a 
	PlaylistSortCriteria and a PlaylistSortOrder when loading the playlists

2006-05-22  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Added new files to MonoDevelop project

	* src/Banshee.Base/Catalog.cs: Added new Catalog class under Mono.Gettext
	namespace (for now) to hopefully (in time) replace Mono.Unix.Catalog; 
	this new version supports gettext domains (necessary for plugins) and
	binds gettext domains to assemblies; current draw-back is that calling
	System.Reflection.Assembly.GetCallingAssembly does a stack walk and is
	therefore slow (Mono.Gettext.Catalog.GetString is about twice as slow
	as Mono.Unix.Catalog.GetString right now)

	* src/Banshee.Base/Makefile.am: Added Catalog.cs

2006-05-22  Aaron Bockover  <aaron@abock.org>

	Child Source patch from Lukas Lipka <lukas@pmad.net>

	* src/Makefile.am: Fixed small build bug regarding CLEANFILES (Aaron)

	* src/Banshee.Base/Makefile.am: Add ChildSource.cs to build.
	
	* src/Banshee.Base/ChildSource.cs: Child source implementation added.

	* src/Banshee.Base/Library.cs: Removed unneeded Hashtable.

	* src/Banshee.Base/Source.cs: Add code and events for child source support.

	* src/Banshee.Base/SourceManager.cs: Remove ActiveSourceIndex since it wont
	work with child sources.

	* src/Banshee.Base/Sources/LibrarySource.cs: Moved the loading of playlists
	here instead of PlayerInterface.

	* src/Banshee.Base/Sources/PlaylistSource.cs: Change this to work as a
	ChildSource instead of a Source.
	
	* src/PlayerInterface.cs: Add playlists as child sources. Move the loading
	of playlists into LibrarySource.

	* src/SourceView.cs: Implement child source support. Rewrite the DND code
	to support dragging from child source to child source.	
	
2006-05-22  Aaron Bockover  <aaron@abock.org>

	Fixes ported up from BANSHEE_0_10_9_SL:

	* src/Banshee.Base/PlayerEngineCore.cs (set_Volume): pass on value
	to every loaded engine, not just active engine (BNC #176255)

	* src/Main.cs: Call dbus_g_thread_init after Gtk.Application.Init();
	fixes the CD burning crash seen on SMP machines (BNC #175378)

	* src/PlaylistView.cs: Use a custom IComparer to sort columns by desired
	order before attaching to view; use AppendColumn on sorted columns instead
	of InsertColumn (BNC #120666)

	* src/Banshee.Base/Database.cs: Added ViewOrder column to PlaylistEntries
	table schema; check to see if ViewOrder exists on an existing 
	PlaylistEntries table and if not, alter the table accordingly (BNC #168653)

	* src/Banshee.Base/Sources/PlaylistSource.cs: No longer sync local 
	playlist back to database after every minor change; operations are now
	directly translated into SQL queries (append, delete, reorder) to bring
	great speed improvements when handling large playlists (BNC #168653)

	* src/PlayerInterface.cs: Reset vertical scroll adjustment of the 
	playlist view to the upper bound minus the page size if the value is
	greater than that when changing sources (BNC #174406)

2006-05-18  Aaron Bockover  <aaron@abock.org>

	* src/BansheeImport.cs: a new standalone program that can import music
	from the command line and create an initial database

	* src/banshee-import.in: wrapper script for banshee-import.exe

	* src/Makefile.am: build banshee-import.exe and install

	* configure.ac: generate src/banshee-import

2006-05-13  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated MonoDevelop project

	* libbanshee/gst-tagger.c: 
	* libbanshee/gst-tagger.h: Merged full GStreamer tag parser 

	* src/Banshee.Base/GstTagger.cs: Added bindings to the new GstTagger API

	* src/Banshee.Base/LibraryTrackInfo.cs: Use GstTagger instead of Entagged
	to parse metadata from files

	* src/Banshee.Base/StreamTagger.cs: Updated TrackInfoMerge to merge
	all applicable tags from a StreamTag into a TrackInfo; added StreamType
	to CommonTags

	* src/Banshee.Base/TrackInfo.cs (set_MimeType): made public

2006-05-10  Aaron Bockover  <aaron@abock.org>

	* libbanshee/gst-mbtrm.c:
	* libbanshee/gst-mbtrm.h: New GStreamer plugin to calculate the TRM ID
	of a PCM audio stream; currently a static plugin in libbanshee

	* libbanshee/gst-misc-0.10.c: Load the static mbtrm plugin

	* libbanshee/gst-cd-rip-0.10.c: Use mbtrm in the pipeline; currently
	the have-trm-id signal is used only to print the TRM ID; will be used
	in the future to actually fetch metadata if necessary

	* libbanshee/Makefile.am: Added gst-mbtrm.[ch]

2006-05-09  Aaron Bockover  <aaron@abock.org>

	* configure.ac: Switch to gmcs

	* src/BurnCore.cs:
	* src/PlaylistColumns.cs:
	* src/PlayerInferface.cs: Removed unused private variables; clean up

	* src/QueryBuilder.cs:
	* src/QueryBuilderModel.cs: Removed; never has been used in core and is
	now in use in the Smart Playlist plugins

	* src/Makefile.am: Removed QueryBuilder.cs and QueryBuilderModel.cs

2006-05-08  Aaron Bockover  <aaron@abock.org>

	* docs/Makefile.am: Prefix doc_DATA with $(DESTDIR) so distcheck works

2006-05-07  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs: Added explicit
	support for ogg/vorbis to keep the vorbis leak in Helix from happening

	* src/Banshee.Widgets/HigMessageDialog.cs: Make 'Return' the default
	dialog action key (BNC #172450, Robert Vojta)

	* src/Banshee.Base/LibraryTrackInfo.cs: Add Path.DirectorySeparatorChar
	to 'StartsWith' check to determine if files should be copied, otherwise
	'Music to import' will be treated as 'Music' (BNC #171101 Robert Vojta)

	* src/Banshee.Base/FileTrackInfo.cs: properly load files in shallow 
	directories from command line (BNC #163911, Simon Brys)

2006-05-06  Aaron Bockover  <aaron@abock.org>

	Patches from Mike Urbanski

	* src/PlayerInterface.cs: Added an additional action button box for
	toolbar source items; do not steal CTRL+A from search entry (revised)

	* src/Banshee.Base/Globals.cs: expose ActionButtonBox

2006-05-05  Aaron Bockover  <aaron@abock.org>

	* docs/en/*: Updated docs (including contributions from rubenv)

2006-05-04  Aaron Bockover  <aaron@abock.org>

	* configure.ac: Set version to 0.11.0-cvs to set apart from the
	0.10.x series

	* banshee.pc.in: Added pluginapi variable to define the second 
	API revision for the 0.11.x series (new API has been introduced since
	0.10.x and some plugins may not be backwards compatible)

2006-05-04  Aaron Bockover  <aaron@abock.org>

	* src/AboutBox.cs: Added missing comma / fix broken build

2006-05-04  Jakub Friedl  <jfriedl@suse.cz>

	* src/AboutBox.cs: Added Jakub Friedl to Translator Credits (Czech)

2006-05-03  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.MediaEngine/Vlc/VlcPlayerEngine.cs: 
	fix build error for VLC engine (BGO #340496) 

2006-05-02  Aaron Bockover  <aaron@abock.org>

	* entagged-sharp/Ogg/OggFileReader.cs: Added application/x-vorbis+ogg
	and application/x-vorbis+ogg as a SupportedMimeType (BNC #169616)

2006-05-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/LibraryTrackInfo.cs: Call TrackInfo's OnChanged when
	saving changes to a Track.

	* src/Banshee.Base/TrackInfo.cs: Add event and protected virtual method
	OnChanged for when a track is changed.

	* src/Banshee.Base/Sources/PlaylistSource.cs: Add Id property, and
	public ClearTracks and ContainsTrack methods.

2006-05-01  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/Dap/DapCore.cs: Fix small bugs that caused iPods to
	sometimes show up as mass storage devices (BGO #340313).

2006-05-01  Aaron Bockover  <aaron@abock.org>

	Fix a locking bug that caused crashes (BGO #340306)

	* src/Banshee.Base/Source.cs: Added virtual TracksMutex object that
	can be used to properly lock the Tracks collection

	* src/PlayerInterface.cs:
	* src/PlaylistModel.cs: lock SourceManager.ActiveSource.TracksMutex
	when performing operations on SourceManager.ActiveSource.Tracks
	
	* src/Banshee.Base/Sources/LibrarySource.cs:
	* src/Banshee.Base/Sources/PlaylistSource.cs: implement TracksMutext
	by inlining the internal collection SyncRoot mutex and locking when
	necessary

2006-04-20  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayer.cs: Added GetIsLive

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayerEngine.cs: Added 
	http support to SourceCapabilities, added more RealPlayer-specific 
	file formats to ExplicitDecoderCapabilities; implemented CanSeek by
	calling GetIsLive on the remote player; properly handle buffering 
	and title messages

2006-04-17  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated MonoDevelop project

	* configure.ac: Check for gmcs, will probably start using it soon

	* data/banshee.schemas.in: Added schema for IOBackend

	* src/Banshee.Base/GConfKeys.cs: Added IOBackend

	* src/Banshee.Base/ImportManager.cs: Use Banshee.IO.IOProxy for reading
	files/directories

	* src/Banshee.Base/Makefile.am: Added Banshee.IO files

	* src/Banshee.Base/IO/IOProxy.cs: Loads IO types and instantiates proper
	backend based on IOBackend gconf key; provides File and Directory
	properties

	* src/Banshee.Base/IO/Interfaces.cs: Provides IIOConfig, IFile, and 
	IDirectory interfaces for writing new IO backends

	* src/Banshee.Base/IO/SystemIO.cs: IO backend implementations based
	on the .NET System.IO namespace (exists for Win32 porting... one day, 
	but of course works fine on Linux too)

	* src/Banshee.Base/IO/Unix.cs: IO backend implementations based on
	Mono.Unix (preferred backend for Unix/Linux as it's faster and 
	potentially more accurate than System.IO)

2006-04-17  Aaron Bockover  <aaron@abock.org>

	* configure.ac: Require njb-sharp 0.3.0+

	* src/Banshee.Base/Dap/Dap.cs: Added virtual Activate method (see below);
	handle failure case if a track queued for a sync is null for some reason;
	if the transcoder handles its own threading and the finished event is
	raised from the main thread, spawn a new thread for the synchronize (the
	gst 0.10 transcoder does threading internally so we cannot guarantee a 
	dedicated thread from the transcoder to do syncing in)

	* src/Banshee.Base/Sources/DapSource.cs: Added Activate method that
	calls Activate on the device; needed for NJB devices which cannot remain
	open for the entire session and must be accessed on demand

	* src/Banshee.Dap/Njb/Makefile.am: Link against Mono.Posix for 
	Catalog.GetString support

	* src/Banshee.Dap/Njb/NjbDap.cs: Delay device activation (open+capture)
	until direct access to device is necessary; close the device when 
	access is no longer necessary; ping every 5 minutes to keep device from
	shutting down, but to allow the handle to be closed most of the time;
	show an error dialog and do not crash if there is a problem grabbing a
	a handle to the device; wrap all access calls in GrabDevice/ReleaseDevice
	to properly reference and perform operations on the device; update the
	icon name to the proper icon spec name

2006-04-17  Aaron Bockover  <aaron@abock.org>

	* entagged-sharp/Mp4/Mp4FileReader.cs: Added audio/mp4, audio/m4a mime
	types to SupportedMimeTypes (BGO #338777)

2006-04-14  Aaron Bockover  <aaron@abock.org>

	* configure.ac: Make description of --enable-gstreamer more informative

2006-04-17  Aaron Bockover  <aaron@abock.org>

	* src/DragDrop.cs: Check data length before trying to convert to string
	and catch any exceptions in the conversion (BGO #333946)

	* src/Banshee.Dap/Njb/NjbDapTrackInfo.cs: Use SafeUri 

2006-04-14  Aaron Bockover  <aaron@abock.org>

	* docs/en/index.html: Added title/remarks and copyright information

2006-04-14  Aaron Bockover  <aaron@abock.org>

	* docs/Makefile.am: Added update-html and upload-html rules

2006-04-14  Aaron Bockover  <aaron@abock.org>

	* docs/Makefile.am: added update-cvs section with a script to manage 
	XML removes/adds from/to CVS
	
	* docs/*: Updated monodoc documentation (finally)

2006-04-14  Sebastian Dröge  <slomo@ubuntu.com>

	* src/MusicBrainz/Client.cs (GetID): Check for null/handle any exception

2006-04-14  Aaron Bockover  <aaron@abock.org>

	* rc/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Hide to the tray on CTRL+W (Ruben Vermeersch, BGO #338259)

2006-04-14  Aaron Bockover  <aaron@abock.org>

	* src/PlayerInterface.cs: Correctly update the statusbar when searching by
	calling ClearModel on playlist view (Ruben Vermeersch, BGO #336006)

	* src/PlaylistView.cs: Show zeros as empty strings instead of ugly 
	zeros (Thijs Vermeir, BGO #337962)

	* docs/en/Banshee.Base/ActionManager.xml: Updated

2006-04-10  Aaron Bockover  <aaron@abock.org>

	* src/PlayerInterface.cs: Call model.RemoveTrack instead of model.Remove 
	
	* src/PlaylistModel.cs (RemoveTrack): If the removed iter is the playing
	iter, set the playing iter to zero (BGO #324768)

2006-04-09  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Dap/MassStorage/Makefile.am: Enable installation of the
	USB Generic Mass Storage DAP support; do not expect it to work without
	the proper HAL FDI updates

2006-04-09  Aaron Bockover  <aaron@abock.org>

	* configure.ac: Removed --with-gstreamer-0-10 in favor of 
	--enable-gstreamer=[0.10|0.8], the default check is now for 0.10

2006-04-09  Sebastian Dröge  <slomo@ubuntu.com>

	* configure.ac:
	* po/LINGUAS: Use a LINGUAS file instead of putting all languages 
	into configure.ac.  http://live.gnome.org/GnomeGoals/PoLinguas

2006-04-09  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated MonoDevelop project

	* src/Banshee.Base/SafeUri.cs: Replacement URI class for System.Uri that
	uses GLib's g_filename_to_uri and g_filename_from_uri functions; should
	fixes lots of various URI issues

	* src/*: Anything that referenced a System.Uri has been uprooted to
	use a Banshee.Base.SafeUri

2006-04-09  Aaron Bockover  <aaron@abock.org>

	* entagged-sharp/Mpc/Util/MpcInfoReader.cs:
	* src/TrackProperties.cs: Fix 0 KB/Sec bitrate bug (#324353)

2006-04-07  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationArea.cs: Do not
	crash when the panel crashes

2006-04-06  Aaron Bockover  <aaron@abock.org>

	* src/:
	* libbanshee/:
	* data/banshee.glade: merged fixes from BANSHEE_0_10_9_SL branch

2006-04-05  Aaron Bockover  <aaron@abock.org>

	* data/banshee.glade: Fixed packing in ErrorListDialog

2006-04-05  Aaron Bockover  <aaron@abock.org>

	* libbanshee/gst-playback-0.10.c: do not try to unref playbin if it was
	never reffed

	* src/PlaylistView.cs: do not show the same file as playing multiple times

	* src/Banshee.Base/Utilities.cs: Updated (C) header

2006-04-05  Aaron Bockover  <aaron@abock.org>

	* libbanshee/gst-misc-0.10.c: disable gstreamer typefinding (again) (sigh)

2006-04-05  Aaron Bockover  <aaron@abock.org>

	* data/banshee.glade: make horizontal scrolling automatic

	* src/BurnCore.cs: do not try to burn files that don't exist and 
	do not allow burning if not enough disk space

	* src/Banshee.Base/BatchTranscoder.cs: Move the instantiation of 
	ActiveUserEvent to Start()

	* src/Banshee.Base/Utilities.cs: Added GetDirectoryAvailableSpace to
	PathUtil

2006-04-04  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated MonoDevelop project

	* data/banshee.glade: Added ErrorListDialog

	* libbanshee/gst-transcode-0.10.c: strdup the output URI and and free
	when necessary

	* src/BurnCore.cs: show an ErrorListDialog for files that cannot be
	transcoded, giving an option to cancel or continue; various fixes for
	MP3 and data disk burning

	* src/PlayerInterface.cs: fix to respect the disk type for burning

	* src/Preferences.cs: use only a single gconf key for disk type

	* src/Banshee.Base/BatchTranscoder.cs: do not try to transcode a file
	if the file type is the requested transcode type

	* src/Banshee.Base/GstTranscoder.cs: Free the input/output URIs

	* src/Banshee.Base/Makefile.am: Added ErrorListDialog.cs

	* src/Banshee.Base/Gui/ErrorListDialog.cs: ErrorListDialog glade 
	implementation; shows a HIG error dialog with a list view

2006-04-04  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Plugins/Daap/Daap.dll.config.in: map to libnss_mdns-0.2.so

	* src/Banshee.Plugins/Daap/daap-sharp/Server.cs: handle exception when
	trying to shutdown the service locator

2006-04-03  Aaron Bockover  <aaron@abock.org>

	* src/PlayerInterface.cs: Remove tooltip from slider (BNC #158403)

	* src/Banshee.Base/GstMisc.cs: check for NULL from the string marshaller

2006-04-01  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs: Claim explicit
	support for ASF and FLAC

2006-03-31  Aaron Bockover  <aaron@abock.org>

	* configure.ac: Added expanded_bindir

	* data/org.gnome.Banshee.service.in: Prefix Exec path with 
	@expanded_bindir@ to make DBus activation work

2006-03-31  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayer.c: Properly activate
	the org.gnome.HelixDbusPlayer service using DBus activation through
	org.freedesktop.DBus.StartServiceByName() (Thanks Timo, fixes #161682)

2006-03-31  Aaron Bockover  <aaron@abock.org>

	* libbanshee/gst-cd-rip-0.10.c: Add a proper ID3 muxer in to the pipeline
	if it didn't already exist and one can be found, similar to the 
	oggmux injection

2006-03-30  Aaron Bockover  <aaron@abock.org>

	* libbanshee/gst-misc-0.10.c: Fix from Sebastian Dröge for gstreamer
	typefinding; re-enabled

	* libbanshee/gst-playback-0.10.c: Reset pipeline on an error so we can
	try again later

	* src/Banshee.Base/PlayerEngineCore.cs: 
	* src/Banshee.Base/MediaEngine/PlayerEngine.cs: Support explicit switching
	based on supported decoders

	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs: Explicitly 
	declare WMA support, as it's impossible for Helix to ever do this

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayer.cs: if DBus activation
	fails, manually run helix-dbus-server and try up to 15 times at 
	half-second intervals to connect to it before giving up (Option B fix 
	for BNC #161682)

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayerEngine.cs: Ping the
	server every five seconds; if Banshee does not shut down properly, 
	the server will shutdown if not pinged within 10 seconds; Added
	explicit decoder support for AAC and MP3

2006-03-30  Hendrik Richter  <hendrikr@gnome.org>

	* configure.ac: Added German translation.

2006-03-28  Fredrik Hedberg  <fredrik@avafan.com>

	* data/UIManagerLayout.xml: Added a placeholder for ViewMenu additions.

2006-03-27  Fredrik Hedberg  <fredrik@avafan.com>

	* src/Banshee.Base/Globals.cs: 
	* src/PlayerInterface.cs: Expose MainContainer via InterfaceElements.

2006-03-24  Christian Schaller  <christian@fluendo.com>

	* src/Banshee.MediaEngine/Helix/Makefile.am: small fix to enable
	  'make dist' even when --disable-helix is passed

2006-03-21  James Willcox  <snorp@snorp.net>

	* src/Banshee.Base/Sources/DapSource.cs: when creating the 'syncing'
	widget, do a ShowAll() on it.

2006-03-21  Aaron Bockover  <aaron@abock.org>

	* src/PlayerInterface.cs: Prefer the stream length over the metadata
	length in all situations, provided the stream length is non-zero

	* src/Banshee.Base/PlayerEngineCore.cs: Fixed automatic engine switching
	based on source type, handle any exceptions thrown by active engine
	and reset the engine

	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs:
	* src/Banshee.MediaEngine/Helix/HelixRemotePlayerEngine.cs:
	* src/Banshee.Base/MediaEngine/PlayerEngine.cs: make SourceCapabilities
	IEnumerable

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayerEngine.cs: Removed
	http as a supported source capability as HTTP under Helix is broken

2006-03-20  Aaron Bockover  <aaron@abock.org>

	* libbanshee/gst-cd-rip-0.10.c: If vorbisenc is chosen as the encoder
	for ripping and an oggmux is not in the pipeline profile, attempt to
	insert an oggmux element (BGO #335211)

2006-03-20  Aaron Bockover  <aaron@abock.org>

	* NEWS: Updated with 0.10.9 release notes

	* configure.ac: Bumped to 0.10.9

	* libbanshee/gst-misc-0.10.c: disabled typefinding with gstreamer 0.10
	as it's a little buggy; will fall back on gnome vfs for now

	* src/PlayerInterface.cs: Do not switch sources if a source eject fails

	* src/Banshee.Base/AudioCd/AudioCdDisk.cs: Do not allow ejecting if
	we are ripping the CD
	
	* src/Banshee.Base/Sources/AudioCdSource.cs: Propagate the return of
	the disk eject

2006-03-20  Sebastian Dröge  <slomo@ubuntu.com>

	* src/MusicBrainz/Client.cs: Reverted a small part of Michael
	Hutchinson's proxy patch in GetIDFromUrl() to fix a bug in parsing
	of Urls which resulted in returning of a invalid result type.

2006-03-20  Aaron Bockover  <aaron@abock.org>

	* src/PlaylistView.cs: Sensitize/desensitize audio cd rows based on
	their rip state

	* src/Banshee.Base/AudioCdRipper.cs: Update newly ripped track with
	its ripped URI so it can be played while the rest of the disk is
	ripping

	* src/Banshee.Base/Library.cs: Removed unused function

	* src/Banshee.Base/PlayerEngineCore.cs: Do not attempt to play track
	if it is explicitly marked as being unable to play; reversed order of
	Reset/Close in Close wrapper

	* src/Banshee.Base/TrackInfo.cs: Mark CanPlay as virtual

	* src/Banshee.Base/TrackInfoHeader.cs (SetIdle): Hide the box

	* src/Banshee.Base/AudioCd/AudioCdDisk.cs: Added an IsRipping property

	* src/Banshee.Base/AudioCd/AudioCdTrackInfo.cs: Added Disk, IsRipped, and
	CanPlay properties

	* src/Banshee.Base/Sources/AudioCdSource.cs: If current playing track
	in the engine is from the CD, shut down the engine; set disk.IsRipping
	accordingly 

	* src/Banshee.Base/Sources/LibrarySource.cs: Removed old cruft 

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayerEngine.cs: Updated
	to reflect minor changes in the Buffering API in PlayerEngine

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Guard against a potential nullref 

2006-03-19  Aaron Bockover  <aaron@abock.org>

	* entagged-sharp/EncodingInfo.cs: Handle invalid integer durations

	* src/PlayerInterface.cs: Moved the audio-CD specific view and ripping
	stuff into AudioCdSource; do not treat the LibrarySource as anything
	special; it now handles track additions like any good source should

	* src/Banshee.Base/Sources/AudioCdSource.cs: Handle ripping directly in
	the source; create a custom view to handle the audio CD status bar
	and embed the playlist view

	* src/Banshee.Base/Sources/LibrarySource.cs: Raise the proper
	OnTrackAdded/OnTrackRemoved events

	* src/Banshee.Base/AudioCd/AudioCdDisk.cs: Make Tracks property 
	IEnumerable

2006-03-19  Aaron Bockover  <aaron@abock.org>

	* data/UIManagerLayout.xml: Added RefreshSong 

	* src/PlayerInterface.cs: When an entry in the main window is focused,
	disable the accel group from the main window, when not focused, re-enable
	it; handle skipping and song restarting in the ActionManager; playback
	seek group is now sensitive based on the engine state

	* src/Banshee.Base/ActionManager.cs: Added key bindings to more playback
	actions, added RestartSongAction

2006-03-19  Aaron Bockover  <aaron@abock.org>

	* src/PlayerInterface.cs (ShowPlaylistView): Detach the playlist container
	before re-embedding it in the main view, in case the previous source
	has embedded it

	* src/Banshee.Base/Globals.cs: Added PlaylistContainer and 
	DetatchPlaylistContainer utilities for sources to use to help 
	embedding the PlaylistView in a custom view

2006-03-19  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/Gui/SeekDialog.cs: Implement the glade SeekDialog; 
	forgot to commit last time

2006-03-19  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated MonoDevelop project

	* src/PlayerInterface.cs: Handle SeekToAction and show the new seek dialog

	* src/Banshee.Base/ActionManager.cs: Implement an action for SeekToAction

	* src/Banshee.Base/Makefile.am: Added Gui/SeekDialog.cs

	* src/Banshee.Base/Gui/OpenLocationDialog.cs: Fixed typo in header

	* src/Banshee.Widgets/StreamPositionLabel.cs: Added FormatString parameter

	* data/UIManagerLayout.xml: Added SeekToAction to playback menu

	* data/banshee.glade: Added SeekDialog

2006-03-18  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs:
	Use DisplayArtist, DisplayAlbum, and DisplayTitle for setting the 
	display data in TrackInfoHeader

2006-03-17  Aaron Bockover  <aaron@abock.org>

	* libbanshee/gst-playback-0.10.c: Create a custom audio sink that contains
	a tee element; plugins can request and connect to new source pads from
	the tee to stream audio to elements in their control without breaking
	the normal flow of data to the sound card

	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs: Implement 
	PlayerEngine.GetBaseElements and return an IntPtr array containing the
	playbin, audiotee, and audiobin elements plugins can use to extend the
	pipeline

	* src/Banshee.Base/MediaEngine/PlayerEngine.cs: Removed SetProperty; 
	added GetBaseElements that returns an IntPtr array

2006-03-17  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/AudioCd/AudioCdDisk.cs (Eject): Stop playback if 
	the playing stream is a track on the disk that is about to be ejected

	* libbanshee/gst-playback-0.10.c (gst_playback_open): Reset the pipeline
	to READY state if not already there

2006-03-17  Aaron Bockover  <aaron@abock.org>

	* libbanshee/gst-playback-0.10.c: Perform a manual seek on an audio CD
	if the current playing stream is from the same CD; this eliminates the
	need to set uri on playbin, so the pipeline does not need to re-link
	and the CDDA device does not need to be closed and opened again

2006-03-16  Aaron Bockover  <aaron@abock.org>

	* configure.ac: Do an explicit -x test for gst-inspect before running
	an element check

2006-03-16  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated MonoDevelop project

	* libbanshee/Makefile.am: Added gst-tagger.[ch]

	* libbanshee/gst-playback-0.10.c: Support parsing tags from incoming
	audio stream and send off to consuming API

	* libbanshee/gst-tagger.c:
	* libbanshee/gst-tagger.h: Common API for handling tag reading/writing
	from GStreamer audio streams

	* src/PlayerInterface.cs: Update the metadata header when the
	PlayerEngineEvent.TrackInfoUpdated event is raised

	* src/TrackProperties.cs:
	* src/Banshee.Base/Globals.cs:
	* src/Banshee.Base/GstMisc.cs:
	* src/Banshee.Base/LibraryTrackInfo.cs:
	* src/Banshee.Base/PipelineProfile.cs: Updated to reflect namespace
	change for some GStreamer Utility methods

	* src/Banshee.Base/GstTagger.cs: Parse GStreamer tags into StreamTag 
	instances

	* src/Banshee.Base/StreamTagger.cs: Common data structure for representing
	a single metadata tag; method for merging these into TrackInfo objects;
	added class with constant tag names (1:1 GStreamer correlation)

	* src/Banshee.Base/MediaEngine/PlayerEngine.cs: Update playing TrackInfo
	with tags that are read from the audio stream

	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs: Added bindings
	for the stream tag reading support

2006-03-16  Aaron Bockover  <aaron@abock.org>

	* libbanshee/gst-playback-0.10.c: Parse device node from cdda:// URI
	and set it on the cdda source element in notify::source, non-default
	CD-ROM drives should work for playback under the 0.10 backend now; 
	Manually seek on the cdda source element if changing tracks and the
	device does not change

	* src/PlayerInterface.cs: Display error messages sent from PlayerEngine

	* data/banshee.schemas.in: Set default engine to helix-remote

2006-03-16  Aaron Bockover  <aaron@abock.org>

	* data/banshee.glade: Set the open button to default; make the
	dialog not visible by default

2006-03-16  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/Gui/OpenLocationDialog.cs: Focus the text box when
	showing the dialog, open the URI when entry is activated (enter pressed)

2006-03-16  Aaron Bockover  <aaron@abock.org>

	* data/banshee.glade: Removed combo box from Open Location dialog

	* src/Banshee.Base/GConfKeys.cs: Added OpenLocationHistory key

	* src/Banshee.Base/Gui/OpenLocationDialog.cs: Implemented history support
	and added a browse button that launches a FileChooserDialog (that supports
	remote locations); 

2006-03-16  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated MonoDevelop project

	* configure.ac: Remove AM_GST_ELEMENT_CHECK calls and check for
	elements against the proper gst-inspect manually; AM_GST_ELEMENT_CHECK
	is not versioned and as a result, 0.10 checks were actually made against
	the 0.8 version of gst-inspect

	* data/banshee.glade: Removed the positon label and seek slider

	* libbanshee/gst-playback-0.10.c: Added buffering support and stream
	seekability detection

	* src/PlayerInterface.cs: Use new SeekSlider and StreamPositionLabel
	widgets; updated old stuff to use new stuff; handle the Buffering event
	and display the buffering progress in StreamPositionLabel

	* src/Banshee.Base/PlayerEngineCore.cs: Added CanSeek proxy property

	* src/Banshee.Base/MediaEngine/PlayerEngine.cs: Buffering should be
	an event, not a state; reworked signatures to account for this

	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs: Wrap the new
	buffering and stream seek detection in the engine implementation

	* src/Banshee.Widgets/LinearProgress.cs: Use the shared ColorBlend in
	DrawingUtilities

	* src/Banshee.Widgets/Makefile.am: Added SeekSlider.cs, 
	StreamPositionLabel.cs, and DrawingUtilities.cs:

	* src/Banshee.Widgets/SeekSlider.cs: Custom Gtk.Scale that is well
	adapted to seeking in streams

	* src/Banshee.Widgets/StreamPositionLabel.cs: Custom Label that draws
	a buffering progress bar under the position label when buffering, and
	updates automatically based off SeekSlider events

	* src/Banshee.Widgets/DrawingUtilities.cs: Added static class that 
	contains the ColorBlend method; shared between a few widgets

2006-03-15  Aaron Bockover  <aaron@abock.org>

	* src/PlayerInterface.cs:
	* src/PlaylistView.cs:
	* src/Banshee.Base/TrackInfoPopup.cs:
	* src/Banshee.Base/Utilities.cs: Show track durations longer than one
	hour properly (BGO #333472, Ruben Vermeersch)

2006-03-15  Aaron Bockover  <aaron@abock.org>

	* src/MusicBrainz/Client.cs: Added proxy server support (Michael Hutchinson)

2006-03-15  Aaron Bockover  <aaron@abock.org>

	Patches by Sebastian Dröge:

	* *Makefile.am: Don't remove Makefile.in and other files generated 
	by autogen.sh on distclean. Move these files to MAINTAINERCLEANFILES. 
	This makes banshee buildable after a distclean.
	
	* src/Banshee.Plugins/NotificationAreaIcon/NotificationAreaIconPlugin.cs: 
	Show the TrackInfoPopup only after 500ms when the mouse cursor is still 
	over the Notification Area Icon and let it disappear on EndOfStream when 
	we don't play anything else after 250 ms.

	* src/Banshee.Plugins/NotificationAreaIcon/Makefile.am:
	* src/Banshee.Plugins/NotificationAreaIcon/banshee-notificationareaicon.schemas.in: 
	Rename the missed instances of tray icon to notification area icon.

	* src/Banshee.Widgets/CoverArtThumbnail.cs: Delay showing the popup 
	for 500ms

2006-03-14  Aaron Bockover  <aaron@abock.org>

	* libbanshee/xing: Nuked, gone, good-bye, sorry

	* libbanshee/Makefile.am: Killed xing

	* configure.ac: Removed xing

2006-03-13  Aaron Bockover  <aaron@abock.org>

	Version 0.10.8 Released

	* NEWS: Updated with 0.10.8 Release Notes

	* configure.ac: Bumped to 0.10.8

	* src/PlayerInterface.cs: Sensitize the Sync button based on
	DapDevice.CanSynchronize

	* src/Banshee.Base/TrackInfo.cs: Added TrackNumberTitle property

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: use TrackNumberTitle

2006-03-13  Aaron Bockover  <aaron@abock.org>

	New NotificationAreaIcon plugin by Sebastian Dröge:

	* banshee.mdp: Updated MonoDevelop project

	* configure.ac: Added NotificationAreaIcon stuff for new plugin

	* data/UIManagerLayout.xml: Removed the tray icon menu

	* data/banshee.schemas.in: Removed tray icon schema entries

	* src/Makefile.am: Removed NotificationAreaIcon.cs

	* src/NotificationAreaIcon.cs: Removed

	* src/Banshee.Base/ActionManager.cs: 
	* src/PlayerInterface.cs: Removed tray-specific code 

	* src/Banshee.Base/Globals.cs: Added property to get handle to main window

	* src/Banshee.Plugins/Makefile.am: Added NotificationAreaIcon to SUBDIRS

	* src/Banshee.Widgets/Makefile.am: Removed NotificationAreaIcon.cs
	
	* src/Banshee.Widgets/NotificationAreaIcon.cs: Removed

	* src/Banshee.Plugins/NotificationAreaIcon/: Moved all the old tray
	icon code into new NotificationAreaIcon plugin
	
2006-03-13  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated MonoDevelop project

	* src/banshee.in: Removed HELIX_LIBS; handled by helix-dbus-server

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayer.cs: Added process
	activation support to automatically run helix-dbus-server if not
	found over dbus already

	* src/Banshee.Base/PlayerEngineCore.cs: Do not die if a PlayerEngine
	could not be instantiated; report an error and continue

	Patches by Sebastian Dröge:

	* src/Banshee.Plugins/Audioscrobbler/Engine.cs: Ports the audioscrobbler
	plugin to the new PlayerEngine API. Seeking is now recognized correctly
	and pausing in a big track doesn't submit it twice anymore.

	* src/Banshee.Base/Sources/LibrarySource.cs: fix double import 
	bug for the first track imported in an empty library

2006-03-12  Aaron Bockover  <aaron@abock.org>

	* configure.ac: Removed Helix/RealPlayer detection; detect 
	helix-dbus-server if --enable-helix 

	* data/banshee.glade: Removed the engine description text box

	* src/Preferences.cs: Removed engine description

	* PlayerEngineCore.cs: Added a log entry to show selected engine

	* src/Banshee.MediaEngine/Helix/: Removed C# bindings to Helix/hxclientkit;
	helix support has been moved out of process to helix-dbus-server

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayer.cs: DBus client object 
	to the new helix-dbus-server program

	* src/Banshee.MediaEngine/Helix/HelixRemotePlayerEngine.cs: PlayerEngine
	implementation of HelixRemotePlayer; Helix support is out of process

	* src/Banshee.MediaEngine/Vlc/VlcPlayerEngine.cs: New VLC implementation
	of PlayerEngine; no more IPlayerEngines!

	* src/Banshee.Base/IPlayerEngine.cs: Removed

	* src/Banshee.Base/Makefile.am: Removed IPlayerEngine.cs

2006-03-11  James Willcox  <snorp@snorp.net>

	* src/Banshee.Plugins/Daap/daap-sharp: Updated from Mono svn (again)

2006-03-10  James Willcox  <snorp@snorp.net>

	* src/Banshee.Plugins/Daap/daap-sharp: Updated from Mono svn

2006-03-10  Aaron Bockover  <aaron@abock.org>

	* banshee.mdb: Updated MonoDevelop project

	* src/Banshee.Base/PlayerEngineCore.cs: first pass at dynamic 
	engine switching

	* src/Banshee.Base/Dap/Dap.cs: Added CanSynchronize 

	* src/Banshee.Base/MediaEngine/PlayerEngine.cs: Added SetProperty method

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: Renamed IsSynchronizable
	to CanSynchronize; commented out some 'broke the build' stuff until
	gabaug can discuss

	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs: Added 
	SetProperty method to set GObject properties on the underlying playbin

	* src/Banshee.MediaEngine/Helix/HelixPlayer.cs: Port of Helix backend
	from IPlayerEngine to PlayerEngine

2006-03-10  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: Implemented adding and
	deleting tracks, bytes used.  Use new HAL keys for where to find/write
	music, if they exist.

	* src/Banshee.Dap/MassStorage/MassStorageTrackInfo.cs: New file, simple
	subclass of FileTrackInfo.

	* src/Banshee.Dap/MassStorage/Makefile.am: add MassStorageTrackInfo.cs.

2006-03-09  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/PlayerEngine.cs: Replacement for IPlayerEngine; base
	class that offers common functionality between all engines; new 
	event/message system that is more verbose than old system... allows for
	metadata extraction from streams and buffering

	* src/Banshee.Base/PlayerEngineCore.cs: Proxy and wrapper for PlayerEngine
	that handles all loading of PlayerEngine types and switching out of 
	engines at runtime

	* src/Banshee.Base/PlayerEngineLoader.cs: Removed, deprecated, etc...
	PlayerEngineCore now loads and instantiates engines from assemblies

	* src/PlayerInterface.cs: User interface is completely passive regarding
	interaction with PlayerEngineCore; UI updates only after getting events
	and messages from PlayerEngineCore; plugins now have the exact same
	functionality regarding playback that the UI has traditionally had

	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs: Reworked to 
	implement new PlayerEngine base class; implementation is now much 
	simpler (for 0.10 and 0.8 engines)

	* src/Banshee.Base/UnknownTrackInfo.cs: A placeholder TrackInfo class
	that is used to create a container for loading plain URIs; eventually
	metadata will be filled in if it's found in the stream itself

	* src/Banshee.Base/Gui/OpenLocationDialog.cs: Glade Dialog implementation
	for open URI functionality

	* src/Banshee.Base/Makefile.am: Added UnknownTrackInfo.cs,
	Gui/OpenLocationDialog.cs and MediaEngine/PlayerEngine.cs

	* src/Banshee.Base/ActionManager.cs: Added OpenLocationAction

	* src/NotificationAreaIcon.cs:
	* src/PlaylistModel.cs:
	* src/PlaylistView.cs:
	* src/RemotePlayer.cs:
	* src/Preferences.cs:	
	* src/Banshee.Plugins/Audioscrobbler/Engine.cs:
	* src/TrackProperties.cs: Updated to reflect changes in PlayerEngineCore

2006-03-08  Aaron Bockover  <aaron@abock.org>

	* configure.ac: Added a GStreamer element check for gconfaudiosink and
	removed the DEVELOPMENTAL verbage from the --with-gstreamer-0-10 
	help description

2006-03-07  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Plugins/Daap/DaapProxyWebServer.cs: reworked how reading
	was done so we do not depend on a stream length; only send the
	Content-Length header if we actually have a length (BGO #329812) Thanks
	to Sebastian Dröge for helping out on this one

2006-03-07  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Plugins/Daap/Daap.dll.config: Updated to new map made
	in Mono.Zeroconf/Native.cs

	* src/Banshee.Plugins/Daap/daap-sharp/Mono.Zerocon/*: Updated sources
	from daap-sharp/Mono.Zeroconf; (run an A query in DNSServiceQueryRecord 
	to resolve addresses instead of using gethostbyname)

2006-03-07  Christopher Aillon  <caillon@redhat.com>

	* configure.ac: Look for required DLLs in ${prefix}/lib/mono
	instead of ${libdir}/mono

2006-03-07  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/ImportManager.cs: Work around socket/directory bug
	in Mono: http://bugzilla.novell.com/show_bug.cgi?id=319774
	(Sebastian Dröge)

2006-03-07  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated MonoDevelop project

	* data/banshee.glade: Added SourceViewContainer wrapper VBox

	* src/PlayerInterface.cs: Set up and initialize the new UIManager

	* src/Banshee.Base/Globals.cs: Instantiate and hold a reference to
	a new UIManager

	* src/Banshee.Base/Gui/UIManager.cs: Simple new UIManager that acts
	as a proxy to main interface widgets and can notify when the main
	interface has been initialized and is ready to use

	* src/Banshee.Base/Makefile.am: Added Gui/UIManager.cs

	* src/Banshee.Base/Plugins/Plugin.cs: Added a new virtual method,
	InterfaceInitialize that will be called when Globals.UIManager has
	been set up and initialized by the main interface; plugins that wish
	to manipulate the main UI should override this method and place
	all UI calls in here; removal/disposal of widgets should be done only
	after a saftey check to Globals.UIManager.IsInitialized

2006-03-05  Aaron Bockover  <aaron@abock.org>

	* libbanshee/gst-playback-0.10.c: Store the default audio 
	sink (gconfaudiosink) in the GstPlayback struct; added a new function
	gst_playback_playbin_set_property to allow setting properties on the
	underlying playbin element; allow resetting of the audio-sink property
	to the default if value is NULL

	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs: Added 
	binding for gst_playback_playbin_set_property

2006-03-05  Aaron Bockover  <aaron@abock.org>

	DAAP Port Binding Patch by Sebastian Dröge

	* src/Banshee.Plugins/Daap/DaapCore.cs: Try to start DAAP server on
	default port, then fall back on any available port
	
	* src/Banshee.Plugins/Daap/DaapProxyWebServer.cs: Try to start proxy
	server on default port, then fall back on any available port; removed
	BoundPort/RequestedPort properties, replaced by a get-only Port property

2006-03-05  Aaron Bockover  <aaron@abock.org>

	* configure.ac: Version 0.10.7

	* NEWS: Updated with 0.10.7 release notes

	* src/Banshee.Dap/MassStorage/Makefile.am: Allow building but do 
	not install this DAP

	* src/Banshee.Dap/Makefile.am: Added MassStorage to SUBDIRS

2006-03-05  Jeff Tickle  <jeff@jefftickle.com>

	* src/ToggleState.cs: Added support for matching a state to a
	ToggleAction.Active instead of just a ToggleAction through the use of
	ToggleState.MatchValue.  If ToggleState.MatchActive is false, this is
	ignored.
	
	* src/PlayerInterface.cs: Changed the "Shuffle" button from a ToggleButton
	to a MultiStateToggleButton

	* src/Banshee.Widgets/MultiStateToggleButton.cs: Added support for
	the ToggleAction.Active matching in ToggleState.
	
	* src/Banshee.Widgets/ToggleStates.cs: The Shuffle ToggleStates 
	now make use of the new features noted above.

2006-03-05  Aaron Bockover  <aaron@abock.org>

	* src/AboutBox.cs: Added Christopher Orr (British English)

	* src/Banshee.Plugins/Daap/daap-sharp/*: Updated daap-sharp sources

2006-03-05  Christopher Orr  <chris@orr.me.uk>

	* configure.ac: Added en_GB to ALL_LINGUAS.

2006-03-04  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Plugins/Audioscrobbler/Queue.cs: Patch from Ruben to fix
	BGO #332205

2006-03-04  Aaron Bockover  <aaron@abock.org>

	* data/banshee.glade: Window title changed to 'Banshee Music Player'

	* src/PlayerInterface.cs: Handle PlaylistView.Stopped event to
	hide the metadata header and close the track on the player engine; reset
	interface to idle state

	* src/PlaylistModel.cs:	Added a Stopped event to raise when the end
	of the model is reached and no track is to be played 
	by automatic transition

	* src/PlaylistView.cs:  Do not show the play indicator if stopped; fixes
	small bug slomo noticed due to changes/optimizations from Oscar; 

2006-03-04  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/LibraryTrackInfo.cs: Rewrote some queries without the
	use of the SQL Query Builder APIs; in GetID, use System.Uri.AbsoluteUri
	instead of System.Uri.ToString(), (BGO #330580)

	* src/Banshee.Base/AudioCd/AudioCdCore.cs: Only check for 
	volume.disc.has_audio for media in a cdrom drive (BGO #329966)

2006-03-03  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Base/ImportManager.cs: FIFO patch to not try and import
	named pipes (Debian Bugzilla #354914) (Sebastian Dröge)

	* src/Banshee.Base/Sources/AudioCdSource.cs (Import): Call OnUpdated()
	to ensure UI redraws properly

	* src/AboutBox.cs: Added Sebastian

	* src/Banshee.Dap/Ipod/ipod-sharp.dll.config.in:
	* src/Banshee.Dap/Njb/njb-sharp.dll.config.in: 
	* src/MusicBrainz/MusicBrainz.dll.config.in: Map to slightly less
	precise SOs (Sebastian Dröge)

2006-03-03  Aaron Bockover  <aaron@abock.org>

	* data/UIManagerLayout.xml: Removed the ImportCDAction; replaced with
	ImportSourceAction; added ImportSourceAction to the source context menu

	* data/banshee.glade: Minor UI naming changes in the Import Dialog

	* src/PlayerInterface.cs: Contextually show new ImportSourceAction when
	a IImportSource is active; implemented OnImportSourceAction to call
	IImportSource.Import on an active IImportSource

	* src/Banshee.Base/ActionManager.cs: Implemented an action for
	ImportSourceAction

	* src/Banshee.Base/Gui/ImportDialog.cs: Use dynamic typechecking for
	IImportSource instead of handling a possible exception; only show
	the 'your library is empty' label if the library is actually empty

	* src/Banshee.Base/Sources/AudioCdSource.cs: Activate the import CD
	action on Import() to actually import the CD when the import is
	requested by the user

2006-03-03  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated MonoDevelop project

	* data/UIManagerLayout.xml: Commented out import folder/files and
	added a import music menu item that launches the import dialog

	* data/banshee.glade: Added a new import dialog that allows selecting
	from a list of import sources

	* data/banshee.schemas.in: Added a ShowInitialImportDialog key

	* src/AboutBox.cs: Added Gabriel Burt

	* src/PlayerInterface.cs: Moved all the import methods into
	new classes that implement IImportSource; show the generic import
	dialog on initial startup; removed obsolete importing code

	* src/Banshee.Base/ActionManager.cs: Implemented an action for ImportMusic

	* src/Banshee.Base/GConfKeys.cs: Added ShowInitialImportDialog key

	* src/Banshee.Base/Makefile.am: Added new Import-related files

	* src/Banshee.Base/Sources/AudioCdSource.cs: Call the OnUpdated method
	to propagate name changes; fix to implement IImportSource

	* src/Banshee.Base/Gui/GladeDialog.cs: Abstract base class for 
	implementing Glade dialogs

	* src/Banshee.Base/Gui/ImportDialog.cs: New import dialog that allows
	choosing from a list of sources from which to import; shows active
	sources that implement IImportSource as well as registered IImportSources
	in the ImportSources class; this makes it possible for plugins to 
	register IImportSources (i.e. an 'Import from beagle' or 'Import over
	GNOME VFS' plugin)

	* src/Banshee.Base/IImportSource.cs: Very simple interface to define
	classes that can import from some data source to the Banshee library

	* src/Banshee.Base/HomeDirectoryImportSource.cs: An IImportSource that
	loads all music from the user's home directory

	* src/Banshee.Base/FolderImportSource: An IImportSource that shows a 
	folder selection dialog and imports recursively from that folder

	* src/Banshee.Base/FileImportSource.cs: An IImportSource that shows a
	file selection dialog and imports over the file selection

	* src/Banshee.Base/ImportSources.cs: Simple static class to act as an
	IImportSource registry that ImportDialog can use to show a list of
	import sources

2006-03-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* src/Banshee.Base/ImportManager.cs: Make constructor public so DAPs
	can create a new importer just for them.

	* src/Banshee.Base/Dap/DapCore.cs: Check for null object and check
	Dap types for not IsAbstract.
	
	* src/Banshee.Dap/MassStorage/Makefile.am: New file.

	* src/Banshee.Dap/MassStorage/MassStorageDap.cs: New file for generic
	USB mass storage device DAP support.  Not connected to build system,
	so not run except by developers.  In CVS to further development.

2006-03-02  Aaron Bockover  <aaron@abock.org>

	* src/Banshee.Plugins/Daap/DaapCore.cs: More properly account for 
	collisions/key duplications (BGO #332840) (Sebastian Dröge)

2006-03-01  Aaron Bockover  <aaron@abock.org>

	* configure.ac: Removed the 'GStreamer 0.10 may be incomplete' warning

	* libbanshee/gst-cd-rip-0.10.c: Using CLOCK_TIME_NONE may block; 
	__tim recommends using 0 instead

	* src/Banshee.Base/AudioCdRipper.cs: #ifdef around some more stuff
	to avoid warnings when building for 0.10

2006-03-01  Aaron Bockover  <aaron@abock.org>

	* libbanshee/gst-cd-rip-0.10.c: Implemented the 0.10 CD ripping backend

	* src/Banshee.Base/AudioCdRipper.cs: Support both the 0.8 and 0.10 
	backends and better error reporting with 0.10

2006-02-28  Aaron Bockover  <aaron@abock.org>

	* src/PlaylistModel.cs: 
	* src/PlaylistView.cs: Remove the need for SyncPlayingIter; big 
	performance increase (Oscar Forero)

2006-02-28  Aaron Bockover  <aaron@abock.org>

	* src/banshee.in: Set MONO_EXTERNAL_ENCODINGS=UTF8:Latin1

2006-02-27  Aaron Bockover  <aaron@abock.org>

	Commit based on Oscar Forero's  <oforero@novell.com> Genre support patch

	* data/banshee.glade: Add input/dropdown for editing genre field

	* src/AboutBox.cs: Added Oscar

	* src/PlayerInterface.cs: Allow filtering by genre in search

	* src/PlaylistView.cs:
	* src/PlaylistColumns.cs: Added genre column support

	* src/TrackProperties.cs: Connect and fill the genre dropdown

	* src/Banshee.Base/Library.cs (GetGenreList): Return a list of genres
	that exist in the database

	* src/Banshee.Base/LibraryTrackInfo.cs: If genre is unkown, then unset it

2006-02-27  Aaron Bockover  <aaron@abock.org>

	* data/banshee.schemas.in: Added schemas for default column visibility
	settings; fixes BNC #153153

2006-02-24  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated MonoDevelop project

	* configure.ac: Automatically detect mDNSResponder; Added an explicit
	--enable-avahi option to override mDNSResponder detection in case a 
	system has both Zeroconf services (which is not recommended); 
	--enable-mdnsd can be used to force enable mDNSResponder as well

	* libbanshee/gst-cd-rip-0.10.c:
	* libbanshee/gst-cd-rip-0.8.c:
	* libbanshee/gst-cd-rip.h:
	* libbanshee/gst-playback-0.10.c: Renamed API from cd_rip_*/CdRip* 
	to gst_cd_ripper_*/GstCdRipper*

	* src/RipTransaction.cs:
	* src/Makefile.am: Moved RipTranscation.cs to 
	Banshee.Base/AudioCdRipper.cs
	
	* src/PlayerInterface.cs: Updated to reflect API renaming of
	RipTransaction->AudioCdRipper

	* src/Banshee.Base/AudioCdRipper.cs: Moved pieces around so threading
	is handled inside the track ripper instead of the batch wrapper to
	prepare managed layer for GStreamer 0.10, which handles threading
	magically; update P/Invoke calls to new gst_cd_ripper_* API

	* src/Banshee.Base/Makefile.am: Added AudioCdRipper.cs
	
2006-02-23  Aaron Bockover  <aaron@abock.org>

	* libbanshee/gst-playback-0.10.c: fix minor duration calculation bug;
	fixes audioscrobbler reporting and last-played update (slomo)

2006-02-23  Aaron Bockover  <aaron@abock.org>

	* libbanshee/gst-transcode-0.10.c: Fixed progress reporting by
	doing a duration query on the pipeline bin and a position query
	directly on audioconvert element

2006-02-23  Aaron Bockover  <aaron@abock.org>

	* libbanshee/gst-playback-0.10.c: Use the audio sink specified
	in gconf (Zaheer Abbas Merali, BGO #332350)

2006-02-23  Aaron Bockover  <aaron@abock.org>

	* configure.ac: If GStreamer 0.10 is enabled, require 0.10.3 (for
	gst_parse_bin_from_description)

	* libbanshee/gst-transcode-0.10.c: Transcoding now works; use
	ghost padding with new-decoded-pad from decodebin, and 
	gst_parse_bin_from_description to create a bubble-wrapped encoder
	pipeline from a user-string description; progress reporting is still
	busted

2006-02-22  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated MonoDevelop project

	* configure.ac: Updated required GStreamer 0.10 version

	* libbanshee/gst-misc-0.10.c: Implement pipeline testing for 0.10

	* libbanshee/gst-transcode-0.10.c: Implement a new transcoder for 
	Gstreamer 0.10

	* libbanshee/gst-transcode.h: Updated for the 0.8 transcoder
	
	* src/BurnCore.cs: Updated to reflect changes in top-level batch 
	transcoding API

	* src/Banshee.Base/FileEncodeAction.cs: 
	* src/Banshee.Base/BatchTranscoder.cs: Renamed to BatchTranscoder and
	updated to reflect changes in base Transcoder class; transcoder 
	implementations handle threading instead of the BatchTranscoder to
	work best with the new GStreamer 0.10 threading model

	* src/Banshee.Base/Makefile.am: Reflect rename from FileEncodeAction.cs
	to BatchTranscoder.cs

	* src/Banshee.Base/GstTranscoder.cs: Implement managed layer for
	the 0.10 transcoder backend

	* src/Banshee.Base/Transcoder.cs: Updated API; Transcoder should handle
	threading; API is Async and event-based now

	* src/Banshee.Base/Dap/Dap.cs: Updated to reflect changes in 
	BatchTranscoder API

2006-02-20  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated Banshee MonoDevelop project

	* src/Banshee.Plugins/Daap/DaapProxyWebServer.cs: Use the local address
	and not the bound address for passing URIs to clients; use
	DAAP.Database.GetHashCode instead of DAAP.Database.ID, which is not
	unique; send a Content-Disposition header with the song file name if
	it is not null
	
	* src/Banshee.Plugins/Daap/DaapTrackInfo.cs: Use DAAP.Database.GetHashCode
	to build the URI

	* src/Banshee.Plugins/Daap/daap-sharp/*: Updated daap-sharp sources

	* libbanshee/gst-transcode-0.8.c:
	* libbanshee/gst-transcode.h: Renamed gst_file_encoder/GstFileEncoder to
	gst_transcoder/GstTranscoder

	* src/AboutBox.cs: Added Alessandro Gervaso (Italian) and 
	Ilkka Tuohela (Finnish) to translator credits

	* src/Banshee.Base/FileEncoder.cs:
	* src/Banshee.Base/GstFileEncoder.cs: Renamed to Transcoder/GstTranscoder
	
	* src/Banshee.Base/FileEncodeAction.cs: Updated to reflect rename changes

	* src/Banshee.Base/Makefile.am: Updated to reflect renamed files

2006-02-20  Ilkka Tuohela  <hile@iki.fi>

	* configure.ac: Added "fi" to ALL_LINGUAS

2006-02-19  Aaron Bockover  <aaron@abock.org>

	* configure.ac: Support using either Avahi or the bundled mDNSResponder
	support for the DAAP plugin. Avahi is used by default - if the system
	has Apple's mDNSResponder, pass --enable-mdnsd to configure

	* src/Banshee.Plugins/Daap/Daap.dll.config.in: Added mdns map to
	libdns_sd.so

	* src/Banshee.Plugins/Daap/Makefile.am: Pass DAAPSHARP_FLAGS to 
	mcs and build the Mono.Zeroconf sources into the plugin assembly

	* src/Banshee.Plugins/Daap/daap-sharp/*.cs: Updated to latest
	daap-sharp, which has support for mDNSResponder

	* src/Banshee.Plugins/Daap/daap-sharp/Mono.Zeroconf/*: Bundled 
	mDNSResponder C# bindings (Mono.Zeroconf)

2006-02-19  Aaron Bockover  <aaron@abock.org>

	* entagged-sharp/Mpc/MpcFileReader.cs: Added application/x-apetag

2006-02-18  James Willcox  <snorp@snorp.net>

	* src/Banshee.Base/SourceManager.cs: emit the
	ActiveChanged event in the main thread.
	* src/Banshee.Widgets/CoverArtThumbnail.cs: fix the nasty
	flashing problem that occurred when the popup appears
	above the thumbnail.
	* src/SourceView.cs: don't allow a source to be added
	more than once.

2006-02-15  Alessio Frusciante  <algol@firenze.linux.it>

	* configure.ac: Added "it" (Italian) to ALL_LINGUAS.

2006-02-14  Chris Toshok  <toshok@ximian.com>

	* src/Banshee.Base/NetworkDetect.cs: rename "last_state" to
	"current_state", and make get_Connected just consult that field,
	instead of using nm_manager.State (which requires a dbus rpc).
	Fixes gc/dbus related hang.

2006-02-13  James Willcox  <snorp@snorp.net>

	* nuke all the (incorrect) emacs mode lines

2006-02-13  James Willcox  <snorp@snorp.net>

	* src/Banshee.Plugins/MetadataSearch/MetadataSearchPlugin.cs:
	Add a IsScanning property.  When in album cover only mode, don't
	try to lookup the same album more than once.
	* src/Banshee.Plugins/MetadataSearch/MetadataSearchConfDialog.cs:
	Add a 'Rescan Library' button.

2006-02-13  Aaron Bockover  <aaron@abock.org>
	
	* src/BansheeDbusClient.cs: Fixed interface name

2006-02-13  Aaron Bockover  <aaron@abock.org>

	Banshee 0.10.6 Released

	* NEWS: Updated with 0.10.6 release notes

	* src/PlayerInterface.cs: Do not show 'Consider Importing...' notices
	in status bar: it's unnecessary and a little brusque

2006-02-13  Aaron Bockover  <aaron@abock.org>

	* configure.ac: Version 0.10.6

	* src/Banshee.Base/Utilities.cs (SetProcessName): Use IntPtr instead
	of ulong to avoid potential 64 bit issues

	* src/RemotePlayer.cs: Fix a potential dbus-sharp crash (BGO #330903) 
	
	* src/Banshee.Widgets/VolumeButton.cs: Adjust volume fix (BGO #330524)

	* src/Banshee.Dap/Ipod/DatabaseRebuilder.cs: Handle the exceptions
	SongDatabase.Save may throw, display error to user

2006-02-12  Aaron Bockover  <aaron@abock.org>

	* banshee.mdp: Updated MonoDevelop project

	* configure.ac: Require ipod-sharp 0.5.15

	* src/PlayerInterface.cs: Sensitize the search widget based on
	Source.SearchEnabled; do this on source changes and updates

	* src/Banshee.Base/Source.cs: Added a virtual SearchEnabled property

	* src/Banshee.Base/Dap/Dap.cs: Initialize using new Initialize 
	override method instead of constructor; support an error-type enum
	for detection flow instead of using exceptions - nice speed up

	* src/Banshee.Base/Dap/DapCore.cs: Only try to load DAP devices from
	HAL that support the portable_audio_player value for info.category; note
	this will affect NJB devices for now as there are no FDI entries
	upstream; a patch will be available soon; this is a major speed up

	* src/Banshee.Base/Dap/DapMisc.cs: Get rid of the DAP exceptions used
	for detection flow... bad style and inefficient/slow; using an enum
	
	* src/Banshee.Base/Sources/AudioCdSource.cs: Override SearchEnabled
	
	* src/Banshee.Base/Sources/DapSource.cs: Support propagating a custom
	view from the DAP; support DAP reactivation
	
	* src/Banshee.Dap/Ipod/IpodDap.cs: Support new detection/initialization
	model from base; show a nice error resolution view if iPod has a
	database that cannot be read
	
	* src/Banshee.Dap/Ipod/UnsupportedDatabaseView.cs: A custom view to
	detail why an iPod may not be supported; offers the ability to 
	rebuild the database
	
	* src/Banshee.Dap/Ipod/DatabaseRebuilder.cs: Class to scan an iPod
	for music in iPod_Control/Music/F*/* and rebuild a supported database
	
	* src/Banshee.Dap/Ipod/Makefile.am: Added DatabaseRebuilder.cs and
	UnsupportedDatabaseView.cs; link against entagged-sharp.dll
	
	* src/Banshee.Dap/Njb/NjbDap.cs: Updated to reflect detection/init
	model from base
	
	* src/Banshee.Widgets/MessagePane.cs: A custom widget to show 
	a header/icon and bullets of text/widgets; derived from beagle-search
	
	* src/Banshee.Widgets/LinkLabel.cs: Custom Label widget that allows
	for click/keypress activation; draws a blue link and shows a focus rect
	
	* src/Banshee.Widgets/Makefile.am: Added MessagePane.cs and LinkLabel.cs

2006-02-08  Aaron Bockover  <aaron@aaronbock.net>

	* src/LogCoreViewer.cs: Do null-detection on the raw objects returned
	from the model before casting and comparing; fixes a potential crasher

	* src/PlayerInterface.cs: Update the playlist view after a search is done

	* src/PlaylistModel.cs: Sync the playing iter off TrackInfo.Equals 
	instead of a UID, which is TrackInfo subclass-specific; this allows
	for spreading the current song across multiple sources (say you start
	playing a song in the library that is also on an iPod... switching from
	the library to the iPod results in the version on the iPod to be 
	indicated as currently playing)
	
	Fixed a GTK tree iter warning when trying to get a path for a null iter
	
	* src/PlaylistView.cs (UpdateView): Call model.SyncPlayingIter()
	
	* src/Banshee.Base/TrackInfo.cs: Added Equal and GetHashCode overrides;
	value-equality is based on Artist, Album, and Track strings matching

2006-02-08  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Base/TrackInfo.cs: 
	Use {[Cc]over,[Ff]older}.{jpg,png,jpeg,gif} as cover art if one exists
	in the song's directory

	* src/PlayerInterface.cs: Show song title and artist in window title

2006-02-07  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs
	(StartEngine): Only instantiate the engine if it is null

2006-02-07  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Widgets/NotificationAreaIcon.cs: Updated with fixes
	for AMD64 by Dan Winship (from Beagle, #327944); class renamed from
	NotificationAreaIcon to NotificationArea

	* src/Banshee.Widgets/NotificationAreaIcon.cs: Reflect change from
	NotificationAreaIcon to NotificationArea

	* src/PlayerInterface.cs:
	* src/PlaylistColumns.cs:
	* src/PlaylistView.cs: Patch from Ruben Vermeersch to fix column
	visibility bug (#326947)

	* src/AboutBox.cs: Added Theppitak Karoonboonyana to translator credits

2006-02-07  James Willcox  <snorp@snorp.net>

	* src/Banshee.Plugins/Daap/DaapCore.cs: avoid a null ref exception
	in the ServerName property when there is no server.

2006-02-07  Theppitak Karoonboonyanan  <thep@linux.thai.net>

	* configure.ac: Added 'th' (Thai) to ALL_LINGUAS.

2006-02-06  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Base/Utilities (Utilities.SetProcessName): NUL terminate
	the process name as ASIIEncoding does not do this (sigh)

2006-02-06  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Bumped version to 0.10.5

	* NEWS: Updated for 0.10.5 release notes

	* banshee.mdp: Updated MonoDevelop project

	* docs/*: Updated Monodoc documentation

	* src/AboutBox.cs: Added Fredrik

2006-02-06  Aaron Bockover  <aaron@aaronbock.net>

	* data/data/UIManagerLayout.xml: Removed seek and repeat menu items
	from tray menu

	* src/PlayerInterface.cs: Do not focus search on s/j press if source
	view is in edit mode (BGO #329540)

	* src/Banshee.Base/Utilities.cs (PathUtil.CharsToQuote): Do not 
	escape ' ' characters as they cause problems with importing

	* src/banshee.in: Run mono --debug if --debug is passed to wrapper

	* src/RemotePlayer.cs:
	* src/Main.cs: Add remote support for querying the cover art 
	filename (BGO #328201, patch by Ruben Vermeersch)

2006-02-06  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Dap/Ipod/IpodDap.cs: Use the volume or product name of
	the iPod from HAL if the user hasn't set a custom name

	* src/Banshee.Base/Utilities.cs (PathUtil.CharsToQuote): Escape 
	the '%' and ' ' to hex sequences

	* src/Banshee.Base/ImportManager.cs: Handle a potential Win32IOException
	regarding recursive symlinks

	* src/Banshee.Base/GstFileEncoder.cs (Encode): Reworked to manually
	alloc/marshal/free file strings

2006-02-06  Aaron Bockover  <aaron@aaronbock.net>

	* src/Main.cs: Call Banshee.Base.Utilities.SetProcessName to set process
	name to 'banshee'; enables 'killall banshee' to work and shows up
	properly in 'top' and the Gnome system monitor (BNC #147947)

	* src/Banshee.Base/Utilities.cs: Added Utilities.SetProcessName to
	set the process name via the prctl system call

	* src/banshee.in: Removed --debug; added -a 'banshee' on exec to
	change argv[0]; removed support to run uninstalled copy as it could
	be a security hole

	* src/Banshee.Widgets/SearchEntry.cs: Use an inset frame border
	
2006-02-03  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Plugins/Daap/DaapSource.cs: Catch an exception that
	DAAP.Client.Login may throw and present an error dialog instead;
	a 'this is the best I can do' response to the RB DAAP bug #329812

2006-02-03  Aaron Bockover  <aaron@aaronbock.net>

	* src/banshee.exe.config.in:
	* src/Banshee.Base/Banshee.Base.dll.config.in:
	* src/Banshee.Widgets/Banshee.Widgets.dll.config.in: Added libX11 map;
	fixes strange GtkUIManager crashes in NLD
	
2006-02-02  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Require GTK+-2.8

	* src/PlayerInterface.cs: Removed custom pixbuf stuff for the search
	entry; it handles its own icon and hover icon now

	* src/Banshee.Widgets/Makefile.am: Added -unsafe to compile; removed
	resource icons

	* src/Banshee.Widgets/SearchEntry.cs: Use Stock.Find as the icon and
	color shift it for the hover icon

	* src/Banshee.Widgets/Resources: Removed

	* ChangeLog: Fixed formatting on Fredrik's last entry (spaces->tabs)

2006-02-01  Fredrik Hedberg <fredrik@avafan.com>

	* banshee.pc.in: Added gconf-sharp-2.0 as a requirement for
	our pkg-config file, as many plugins most certainly will use gconf.

	* src/Banshee.Base/SourceManager.cs: Call Deactivate() on the
	current source when the user switches to a new one.

	* src/Banshee.Base/Source.cs: Add the empty virtual method Deactivate.

2006-01-31  Aaron Bockover  <aaron@aaronbock.net>

	* src/AboutBox.cs: Class renamed to BansheeAboutDialog, which now
	extends Gtk.AboutDialog; no more Gnome.About support as Gtk# 2.8 is 
	required now; updated copyright; added Ruben Vermeersch

	* src/PlayerInterface.cs (OnAboutAction): Updated to reflect change
	from AboutBox to BansheeAboutDialog

	* src/Banshee.Widgets/VolumeButton.cs: Turned the +/- icons into
	buttons that allow click and hold to adjust the volume (Ruben 
	Vermeersch, BGO #329360); removed the +/- icons and replaced with
	text

2006-01-31  Aaron Bockover  <aaron@aaronbock.net>

	* src/PlayerInterface.cs: Use search icon for the search entry from the
	theme; do not respond to search if the source is to handle it

	* src/Banshee.Base/Globals.cs: Added InterfaceElements.SearchEntry

	* src/Banshee.Base/Source.cs: Added virtual property HandlesSearch; 
	sources can override this and return true, and then connect to
	events on InterfaceElements.SearchEntry to do custom searching

	* src/Banshee.Widgets/SearchEntry.cs: Allow setting of custom search
	icons through the Icon and HoverIcon properties

2006-01-30  Aaron Bockover  <aaron@aaronbock.net>

	* autogen.sh: Require automake 1.9

2006-01-30  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project

	* conifgure.ac: Generate necessary files for MMKeys plugin

	* src/PlayerInterface.cs: Removed old commented out special keys code

	* src/Banshee.Base/SpecialKeys.cs: Minor fixes and ungrab support based 
	on patch by Danilo Reinhardt

	* src/Banshee.Base/Utilities.cs (Utilities.ExecProcess): Minor fix
	to work around http://bugzilla.novell.com/show_bug.cgi?id=320179 (SIGSEV)

	* src/Banshee.Plugins/Makefile.am: Add MMKeys to SUBDIRS

	* src/Banshee.Plugins/MMKeys/*: Initial commit of the MMKeys plugin
	by Danilo Reinhardt

2006-01-28  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Removed obsolete files (BGO #328931)

2006-01-28  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Use libdir instead of $prefix/lib for detecting mono
	fixes BGO #328916

2006-01-27  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Require Gtk# 2.7+; remove references to GtkSharpBackports

	* src/AboutBox.cs:
	* src/Preferences.cs: Remove GtkSharpBackports namespace prefix on
	widgets that were available only in Gtk# 2.8

	* src/Makefile.am: Remove GtkSharpBackports from SUBDIRS and do not
	link against GtkSharpBackports.dll

	* src/GtkSharpBackports: Removed; everything that was in GtkSharpBackports
	was backported from 2.8 to use in 2.4; now using 2.8

2006-01-27  Aaron Bockover  <aaron@aaronbock.net>

	* src/StockIcons.cs: Instead of relying on an exception, check the
	resource manifest to see if a resource icon exists; reduces exception
	overhead and thwarts GdkPixbufLoader warnings from being spewed to
	the console (BNC #145487)

	* src/Banshee.MediaEngine/Helix/HelixPlayer.cs: Make the iterate thread
	a background thread; does not hang on exit

2006-01-27  Aaron Bockover  <aaron@aaronbock.net>

	* src/PlayerInterface.cs: Minor cosmetic bug fixed regarding sensitivity 
	of search box after a DAP sync completes

2006-01-27  Aaron Bockover  <aaron@aaronbock.net>

	* src/PlayerInterface.cs: Moved the custom DAP syncing view to DapSource;
	support switching between the default playlist view and custom source
	views (Source.ViewWidget); sources can now provide custom and hybrid
	views

	* src/Banshee.Base/Globals.cs: Provide a basic InterfaceElements proxy
	class; Currently only provides access to the PlaylistView widget as
	a TreeView; but is sufficient enough for plugins and sources to directly
	access selections

	* src/Banshee.Base/Source.cs: Added virtual ViewWidget and 
	ShowPlaylistHeader properties; added a ViewUpdated event

	* src/Banshee.Base/SourceManager.cs: Proxy the Source.ViewUpdated event
	for sources

	* src/Banshee.Base/Sources/DapSource.cs: Moved the DAP syncing view from
	PlayerInterface and implemented as a ViewWidget

2006-01-25  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Check for DBus 0.60 or better and set DBUS_SOVERSION 
	accordingly to either 2 or 1

	* data/banshee.desktop.in.in: Changed --play to --play-enqueued so 
	playing will only happen if songs were passed to --enqueue; was a small
	bug where just clicking on the desktop file would cause banshee to
	start playing no matter what - quite annoying 

	* src/PlayerInterface.cs: Support --play-enqueued which can now be
	passed with a populated --enqueue to auto-play conditionally

	* hal-sharp/hal-sharp.dll.config.in: 
	* src/Banshee.Dap/Ipod/ipod-sharp.dll.config.in: Use @DBUS_SOVERSION@
	for mapping to the proper dbus libraries

2006-01-25  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Base/QueuedSqliteDatabase.cs: Open the connection to the
	database on the processing thread; otherwise that kinda defeats the entire
	purpose of the threaded queue processor ;)

2006-01-23  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project
	
	* data/Tables.sql: Removed; Tables are now defined in code

	* data/banshe.desktop.in.in: Added more standard desktop categories

	* src/Makefile.am: 
	* src/Banshee.Base/Makefile.am: Removed resource  data/Tracks.sql

	* src/Main.cs: Disabled process-based instance detection for now; it
	is causing problems for some and needs investigating

	* src/Banshee.Base/Database.cs: Rewritten database layer; class now
	extends new QueuedSqliteDatabase class and all table detection and
	creation SQL is now embedded in code

	* src/Banshee.Base/QueuedSqliteDatabase.cs: New database layer that
	queues queries to execute sequentially on a single thread; fixes many
	various sqlite-related database issues including database/thread
	synchronization and database locking

	* src/Banshee.Base/Globals.cs:
	* src/Banshee.Base/Library.cs:
	* src/Banshee.Base/LibraryTrackInfo.cs:
	* src/Banshee.Base/Sources/PlaylistSource.cs: Updated to reflect minor
	API changes in database layer

	* src/Banshee.Base/SqlGenerator.cs (Statement.EscapeQuotes): Minor fix
	to return empty string if input is null (gonzalo)

	* src/Banshee.Base/Utilities.cs (ThreadAssist.Spawn): Threads spawned here
	should be background threads (gonzalo)

2006-01-18  Aaron Bockover  <aaron@aaronbock.net>

	* banshee: Branched for NLD10/stable Banshee '1.0' release (BANSHEE_NLD10)

2006-01-23  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project
	
	* data/Tables.sql: Removed; Tables are now defined in code

	* data/banshe.desktop.in.in: Added more standard desktop categories

	* src/Makefile.am: 
	* src/Banshee.Base/Makefile.am: Removed resource  data/Tracks.sql

	* src/Main.cs: Disabled process-based instance detection for now; it
	is causing problems for some and needs investigating

	* src/Banshee.Base/Database.cs: Rewritten database layer; class now
	extends new QueuedSqliteDatabase class and all table detection and
	creation SQL is now embedded in code

	* src/Banshee.Base/QueuedSqliteDatabase.cs: New database layer that
	queues queries to execute sequentially on a single thread; fixes many
	various sqlite-related database issues including database/thread
	synchronization and database locking

	* src/Banshee.Base/Globals.cs:
	* src/Banshee.Base/Library.cs:
	* src/Banshee.Base/LibraryTrackInfo.cs:
	* src/Banshee.Base/Sources/PlaylistSource.cs: Updated to reflect minor
	API changes in database layer

	* src/Banshee.Base/SqlGenerator.cs (Statement.EscapeQuotes): Minor fix
	to return empty string if input is null (gonzalo)

	* src/Banshee.Base/Utilities.cs (ThreadAssist.Spawn): Threads spawned here
	should be background threads (gonzalo)

2006-01-18  Aaron Bockover  <aaron@aaronbock.net>

	* banshee: Branched for NLD10/stable Banshee '1.0' release (BANSHEE_NLD10)

2006-01-17  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp:
	* src/SignalUtils.cs:
	* src/Makefile.am: Removed SignalUtils.cs; it has not been used in many
	months and is not necessary

2006-01-17  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Bumped version to 0.10.4

	* NEWS: Updated with the 0.10.4 release notes

	* docs/*: Updated Monodoc API documentation

	* src/Banshee.Base/PlayerEngineCore.cs: Removed some debug 
	Console.WriteLine calls

2006-01-17  Aaron Bockover  <aaron@aaronbock.net>

	* src/PlayerInterface.cs: Uncommented and fixed adding to playlists
	through song context menu to work with the new PlaylistSource

	* src/PlaylistView.cs: Removed unused code that has been commented out
	for months

	* src/Banshee.Base/Sources/PlaylistSource.cs: Added two static properties
	to keep track of and access a collection of PlaylistSource instances

	* docs/Makefile.am: Minor cleanup/fix

2006-01-16  James Willcox  <snorp@snorp.net>

	* src/Banshee.Plugins/Daap/DaapConfigPage.cs: only change the service
	name on focus out, instead of on each individual change.
	* src/Banshee.Plugins/Daap/DaapCore.cs: don't show the service that
	banshee itself exposes, and do a lame job at attempting to handle
	service name collisions.

2006-01-16  James Willcox  <james@ximian.com>

	* src/Banshee.Base/SourceManager.cs: proxy add/remove events to
	the main thread.
	* src/Banshee.Plugins/Daap/DaapCore.cs: hash on the service name
	instead of the whole service object.
	* src/Banshee.Plugins/Daap/daap-sharp/*: synced

2006-01-16  Aaron Bockover  <aaron@aaronbock.net>

	* data/Makefile.am: Install D-Bus service file in 
	$(datadir)/dbus-1/services (BGO #327046)

	* src/Banshee.Plugins/Audioscrobbler/Engine.cs (TransmitQueue): Guard 
	against a potential nullref (BGO #326863)

2006-01-16  Aaron Bockover  <aaron@aaronbock.net>

	* src/PlayerInterface.cs: Add the global actions accelerator group to
	the main window (BGO #326923)
	
	* src/Banshee.Base/Plugins/PluginDialog.cs: Wrapped missing string for
	translation (Øivind Hoel)

2006-01-16  Stephane Raimbault  <stephane.raimbault@free.fr>

	reviewed by: Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerConfigDialog.cs:
	Marked a string to translate
	
	* src/Banshee.Plugins/FileSystemMonitor/Makefile.am: Deleted some
	bad tabs
	
	* src/Banshee.Plugins/MetadataSearch/MetadataSearchConfigDialog.cs:
	Fixed a typo s/MusizBrainz/MusicBrainz/

2006-01-14  Aaron Bockover  <aaron@aaronbock.net>

	* engagged-sharp/Ogg/Util/OggInfoReader.cs: bitrate calculation fix

	* src/PlayerInterface.cs: Added tooltips back to shuffle/repeat/edit 
	buttons at bottom of window (BGO #326045); pressing enter in search
	entry focuses playlust (BGO #326568); fixed minor cosmetic bug regarding
	icon sizes of action buttons; moved gettext catalog init to Globals so
	catalog is initialized before the ActionManager is populated (BGO #325705)

	* src/TrackProperties.c: Minor bitrate calculation fix

	* src/Banshee.Base/ActionManager.cs: Use more stock items when acceptable

	* src/Banshee.Base/Globals.cs: Initialize the gettext catalog (BGO #325705)
	
	* src/Banshee.Widgets/ActionButton.cs: Add support for a default icon
	size in the constructor 

	* src/Banshee.Base/AmazonCoverFetcher.cs: Set timeout to 10 seconds

	* src/Banshee.Plugins/MetadataSearch/MetadataSearchPlugin.cs: Do not
	use ThreadAssist for the processing thread so operations on the thread
	can be performed later (Aborting if necessary); also make the thread
	a background thread

2006-01-14  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Bump to 0.10.3; note to non-Novell distributors: I do
	not advise packaging this release... it was made to meet an internal
	package submission deadline. 0.10.4 will be released early next week
	with a number of fixes to known issues

	* data/banshee.glade: Add a _ prefix/accelerator to search label

	* src/banshee.in: Fixed wrapper script to properly run an uninstalled copy

	* src/Makefile.am: Fixed up run to invoke sh ./banshee

	* src/PlayerInterface.cs: Pressing 's' or 'S' will focus the search
	entry (along with 'j', 'J', or F3); enabled searching on all 
	sources (playlists, DAAP) except for audio CDs

	* src/TrackProperties.cs: Only sniff mime type for local tracks

	* src/Banshee.Base/ActionManager.cs: Use stock for about menu item

	* src/Banshee.Plugins/Daap/Makefile.am: Added daap-sharp/content-codes
	to EXTRA_DIST

2006-01-14  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project

	* src/SourceView.cs: Guard against a possible nullref

	* src/Banshee.Base/SourceManager.cs: Do not allow registering of null
	sources... that's not so good

	* src/Banshee.Base/Plugins/Plugin.cs: Make ConfigurationKeys public

	* src/Banshee.Plugins/Daap/daap.schemas.in: Added schemas for two new keys

	* src/Banshee.Plugins/Daap/DaapConfigPage.cs: Configuration page for
	notebook in plugins dialog

	* src/Banshee.Plugins/Daap/DaapCore.cs: Add DAAP server support

	* src/Banshee.Plugins/Daap/DaapPlugin.cs: register two configuration keys

	* src/Banshee.Plugins/Daap/Makefile.am: Add DaapConfigPage.cs

	* src/Banshee.Plugins/Daap/daap-sharp/*: Updated daap-sharp sync

	* src/Banshee.Plugins/MetadataSearch/MetadataSearchConfigDialog.cs: 
	Added a header label to config page

2006-01-14  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Base/Plugins/Plugin.cs: Removed virtual 
	ShowConfigurationDialog method; replaced with GetConfigurationWidget
	
	* src/Banshee.Base/Plugins/PluginDialog.cs: Remove configuration button;
	added a notebook for showing description/overview and configuration pages;
	If a plugin implements GetConfigurationWidget, show it in a 
	configuration tab in the notebook
	
	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerConfigDialog.cs: 
	Changed from a Dialog subclass to a VBox subclass; ability to show/hide the 
	Audioscrobbler logo; logo widget exposed as an internal property
	
	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs: Added dialog
	to show the configuration widget in case configuration is invoked through
	the plugin menu; implement GetConfigurationWidget
	
	* src/Banshee.Plugins/MetadataSearch/MetadataSearchConfigDialog.cs: 
	Changed from Dialog subclass to a VBox subclass; removed label and frame
	as they look goofy in the notebook and are unnecessary; fixed a minor
	display bug regarding the warning widget on the last option
	
	* src/Banshee.Plugins/MetadataSearch/MetadataSearchPlugin.cs: Implement	
	GetConfigurationWidget; fixed a minor database update bug


2006-01-13  Aaron Bockover  <aaron@aaronbock.net>

	* src/PlayerInterface.cs: Request engine change before playing a song
	based on file extension; this will be used for falling back on GStreamer
	for some formats when using Helix as the primary engine

	* src/Preferences.cs: A restart is no longer needed to change the
	primary playback engine

	* src/Banshee.Base/IPlayerEngine.cs: Added SupportedExtensions property

	* src/Banshee.Base/PlayerEngineCore.cs: Allow switching engines from
	anything other than the primary based on file extension 

	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs: claim to support
	WMA in SupportedExtensions as Helix/RP can't (better chance of it working
	in GStreamer than in Helix)

	* src/Banshee.MediaEngine/Vlc/VlcPlayerEngine.cs:
	* src/Banshee.MediaEngine/Helix/HelixPlayer.cs: Implement 
	SupportedExtensions, but return null

2006-01-12  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs: 
	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerMenu.xml: Added a
	visit group action to the menu and changed menu items to sentence case

2006-01-12  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs: Added an
	enabled action item that allows easy toggling of reporting, with a
	key binding and menu item; fixed a few very minor bugs and a nullref

	* src/Banshee.Plugins/Audioscrobbler/Engine.cs (MD5Encode): Guard against
	a nullref and return String.Empty on failure

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerConfigDialog.cs:
	Added a button to pimp the Banshee last.fm Group

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerMenu.xml: Added a
	reporting enabled action item

2006-01-11  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Plugins/Daap/Makefile.am: Added missing if DAAP_ENABLED 
	check; makes --disable-daap actually work

2006-01-11  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Base/Plugins/Plugin.cs: Do not enforce namespace naming;
	instead require an abstract ConfigurationName property to be set by
	the plugin (tberman was yelling)

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs:
	* src/Banshee.Plugins/Daap/DaapPlugin.cs:
	* src/Banshee.Plugins/FileSystemMonitor/Watcher.cs:
	* src/Banshee.Plugins/MetadataSearch/MetadataSearchPlugin.cs: Implement
	new abstract ConfigurationName

2006-01-10  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project

	* src/Banshee.Plugins/Daap/DaapProxyWebServer.cs: A new 'proxy' server
	that handles streaming of DAAP songs from a DAAP server over a normal
	HTTP stream; this makes DAAP streaming audio available from any normal
	HTTP client; listening to DAAP streams is now possible (GStreamer 0.8,
	GStreamer 0.10, Helix/RealPlayer, VLC); also provides a simple web-based
	browser to connected databases and allows downloading songs through this
	interface (http://localhost:8089)

	* src/Banshee.Plugins/Daap/DaapCore.cs: Added a property to access the
	new DaapProxyWebServer; start/stop the server when applicable; corrected
	namespace

	* src/Banshee.Plugins/Daap/DaapTrackInfo.cs: Set the uri property to
	the proper HTTP URI for requesting DAAP streaming of the audio through
	the proxy server; corrected namespace

	* src/Banshee.Plugins/Daap/DaapSource.cs: register/unregister database
	with the proxy server; corrected namespace

	* src/Banshee.Plugins/Daap/DaapLoginDialog.cs: 
	* src/Banshee.Plugins/Daap/DatabaseProxy.cs:
	* src/Banshee.Plugins/Daap/DaapPlugin.cs: corrected namespace

	* src/Banshee.Plugins/Daap/Makefile.am: Added DaapProxyWebServer.cs

	* src/Banshee.Plugins/Daap/daap-sharp/*.cs: Updated daap-sharp checkout

2006-01-09  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Plugins/Makefile.am: Added Daap to SUBDIRS

	* src/Banshee.Plugins/Daap/daap-sharp/*: Added daap-sharp sources; these
	sources are maintained in the 'daap-sharp' Mono SVN module and are synced
	into the Banshee tree using the 'sync-tree.sh' script

	* src/Banshee.Plugins/Daap/DaapPlugin.cs: Plugin to initialize/dispose
	the DaapCore

	* src/Banshee.Plugins/Daap/DaapCore.cs: DAAP core that listens for 
	service updates from daap-sharp/avahi and creates sources out of new
	services; central point for DAAP client support

	* src/Banshee.Plugins/Daap/DaapSource.cs: Banshee.Sources.Source 
	implementation for DAAP client support

	* src/Banshee.Plugins/Daap/DatabaseProxy.cs: A custom IEnumerable 
	collection that proxies DAAP.Song objects to TrackInfo objects on the fly

	* src/Banshee.Plugins/Daap/DaapTrackInfo.cs: TrackInfo implementation
	for DAAP songs

	* src/Banshee.Plugins/Daap/DaapLoginDialog.cs: A login dialog that is
	presented when a DAAP server requires authentication

2006-01-09  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project

	* configure.ac: Removed daap-sharp references as daap-sharp sources are
	synced directly into the tree; check for avahi-sharp

	* src/Main.cs: Handle a potential DBus exception

	* src/Makefile.am: Removed daap-sharp unstable assembly installation rules

	* src/PlayerInterface.cs: Skeleton for handling Source.TrackAdded and
	Source.TrackRemoved events; if Source.Updated is fired and the track count
	in the model is 0 and the source is not, reload the model from the source;
	the DBusRemote is now instance-accessible through a Globals proxy; handle
	Source.Tracks change from ICollection to IEnumerable

	* src/PlaylistModel.cs: Added a placeholder RemoveTrack(TrackInfo) method

	* src/RemotePlayer.cs (FindInstance): use a dynamic cast to RemotePlayer
	type instead of a static

	* src/SourceView.cs: Do not draw count in source row if Source.Count < 0

	* src/Banshee.Base/DBusRemote.cs: make DBusRemote a instantiable class

	* src/Banshee.Base/Globals.cs: Add a DBusRemote proxy property

	* src/Banshee.Base/LibraryTrackInfo.cs: LastPlayedStamp and DateAddedStamp
	values are now read from the database a little differently to work with
	updated Mono.Data.SqliteClient from HEAD, should also be a little faster

	* src/Banshee.Base/Makefile.am: Removed DAAPSHARP_LIBS reference

	* src/Banshee.Base/Source.cs: Make Count virtual; Tracks is now 
	IEnumerable; Added TrackAdded and TrackRemoved events; added OnTrackAdded
	and OnTrackRemoved virtual methods for raising those events; added
	InvalidSourceException exception class

	* src/Banshee.Base/SourceManager.cs: Added SourceTrackAdded and 
	SourceTrackRemove 'proxy' events for propagating TrackAdded/TrackRemoved
	events from sources

	* src/Banshee.Base/AudioCdSource.cs:
	* src/Banshee.Base/DapSource.cs:
	* src/Banshee.Base/LibrarySource.cs:
	* src/Banshee.Base/LocalQueueSource.cs:
	* src/Banshee.Base/PlaylistSource.cs: Reflect change from Source.Tracks
	as an ICollection to an IEnumerable

2006-01-06  Chris Toshok  <toshok@ximian.com>

	* src/Banshee.Plugins/Audioscrobbler/Engine.cs: if we've
	previously logged failures uploading tracks, log the first
	successful one.

	* src/Banshee.Plugins/Audioscrobbler/Queue.cs: make sure to clear
	the queue before loading, so we don't append multiple copies
	when/if the user disables/re-enables the plugin.

2006-01-06  Chris Toshok  <toshok@ximian.com>

	* src/Banshee.Plugins/Audioscrobbler/Makefile.am
	(ASSEMBLY_SOURCES): add Queue.cs

	* src/Banshee.Plugins/Audioscrobbler/Queue.cs: new home for all
	the queue internals.

	* src/Banshee.Plugins/Audioscrobbler/Engine.cs: move all the queue
	internals (including the new saving/loading code) out to a
	separate class; Use LogCore to report problems with
	uploading/handshaking, and try to avoid spamming the log by only
	logging upload failures once every 5 minutes; lastly, increase the
	places where we save queue data.  We now save just before
	transmitting, and again after getting the OK back from the server,
	after we remove the tracks that were transmitted.

2006-01-06  Chris Toshok  <toshok@ximian.com>

	* src/Banshee.Plugins/Audioscrobbler/Engine.cs: Another patch from
	Ruben Vermeersch, to add rudimentary seek detection.  Slightly
	modified from the patch on the list, to check for reverse seeking.

2006-01-06  Chris Toshok  <toshok@ximian.com>

	* src/Banshee.Plugins/Audioscrobbler/Engine.cs: apply Ruben
	Vermeersch excellent queue saving/loading patch.

2006-01-06  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project

	* src/Banshee.Plugins/MetadataSearch/Makefile.am: Added 
	MetadataSearchConfigDialog.cs

	* src/Banshee.Plugins/MetadataSearch/MetadataSearchConfigDialog.cs:
	Configuration dialog for setting the cover art/metadata fetch method

	* src/Banshee.Plugins/MetadataSearch/MetadataSearchPlugin.cs: Support
	three different fetch methods for cover art and metadata: covers only
	will only fetch cover art and uses a SQL query to set the ASIN on all 
	tracks on an album after one track from the album has been looked up
	through MusicBrainz (fast method); fill blank will fetch cover art on a
	per-track basis and will fill in any missing metadata for the track (slow
	but safe); overwrite will fetch cover art on a per-track basis and will
	overwrite all metadata fields on a track that were returned from 
	MusicBrainz (potentially destructive and slow, but most of the time
	yields pleasant results); the default option is covers only

	* data/Tables.sql: for some reason AlbumTitle was declared as an INTEGER;
	it's now TEXT... nice

2006-01-05  Brad Taylor  <brad@getcoded.net>
	
	* src/PlaylistModel.cs: Implement a more intelligent Shuffle that has a
	60% chance of hovering inside the current genre, making the transitions
	between songs slightly more fluid.  Of course, this value should be
	tweaked for better results.

2006-01-05  Aaron Bockover  <aaron@aaronbock.net>

	* src/AboutBox.cs: Added Lukas Novotny to Translator Credits (Czech)

	* src/Banshee.Base/Library.cs: Allow single, collection, and queued 
	removal of tracks based on URI as well as LibraryTrackInfo object reference
	
	* src/Banshee.Plugins/FileSystemMonitor/Watcher.cs: Implement removal
	and importing of files using a threaded queue processor instead of 
	looping in an always-running thread to 'listen' for changes on 
	two ArrayLists; removal and importing updated to use new mechanisims in
	Banshee.Base for interacting with the Library

	* src/Banshee.Plugins/FileSystemMonitor/Watch.cs: Simplified many aspects
	of the base Watch class; use events for notification instead of collections
	on which a thread 'listens'
	
	* src/Banshee.Plugins/FileSystemMonitor/InotifyWatch.cs: 
	* src/Banshee.Plugins/FileSystemMonitor/FileSystemWatcherWatch.cs: 
	Updated to implement changes in updated and simplified base class

2006-01-05  Aaron Bockover  <aaron@aaronbock.net>

	* docs/*: Updated Monodoc API documentation

	* banshee.mdp: Updated MonoDevelop project

	* data/banshee.glade: removed the header cycle button

	* src/Core.cs: Removed TransactionManager

	* src/Makefile.am: Removed LibraryTransaction*.cs, DapPropertiesDialog.cs,
	and Sources.cs; added skeleton for daap-sharp linking and installation

	* src/PlayerInterface.cs: Updated to use SourceManager to handle switching
	and manipulating of sources

	* src/PlaylistModel.cs: Updated to use SourceManager; added a GetIterIndex
	method to allow reordering to propagate to sources; removed old unused
	code

	* src/PlaylistView.cs: AddSelectedToPlaylist disabled for the moment

	* src/SourceView.cs: Updated to adapt to act strictly as a view for
	SourceManager; sources are now handled centrally in SourceManager

	* src/Banshee.Base/Database.cs: Added overload Execute method to return
	the last insert row ID

	* src/Banshee.Base/Library.cs: All track removal is handled centrally
	through Banshee.Base.Library

	* src/Banshee.Base/Makefile.am: Added new Source files

	* src/Banshee.Base/SourceManager.cs: New centralized source manager;
	handles proper ordering and activation/notification, and acts as a proxy
	for source update events

	* src/Banshee.Base/TrackInfo.cs: Moved HaveTrackInfoArgs and
	HaveTrackInfoHandler from old LibraryTransactions.cs

	* src/Banshee.Base/Utilities.cs: ReflectionUtil.IsVirtualMethodImplemented
	now works for non-public instance members

	* src/Banshee.Base/AudioCd/AudioCdCore.cs: Support creating and removing
	AudioCdSource from SourceManager

	* src/Banshee.Base/AudioCd/AudioCdDisk.cs: If ASIN is empty after a
	successful CD info lookup through MusicBrainz, attempt to find an ASIN
	using a FileLookup based on data for the first track on the CD

	* src/Banshee.Base/Dap/Dap.cs: Handle creating/adding/removing a DapSource

	* src/Banshee.Base/Dap/DapPropertiesDialog.cs: Moved from src/

	* src/Banshee.Base/Sources/LibrarySource.cs: New implementation of the base
	Source class for the Library

	* src/Banshee.Base/Sources/PlaylistSource.cs: New Playlist source and
	completely rewritten playlist support; much faster and supports proper
	reordering

	* src/Banshee.Base/Sources/AudioCdSource.cs: Refactored source for
	Audio CDs

	* src/Banshee.Base/Sources/DapSource.cs: Refactored source for DAPs

	* src/Banshee.Base/Source/LocalQueueSource.cs: Refactored source for local
	files (The Frobnicator)

	* src/Banshee.Dap/Njb/NjbDap.cs (Dispose): call base.Dispose()

	* src/Banshee.Plugins/FileSystemMonitor/Watcher.cs: Disabled some parts
	of this plugin until it can be sorted out to work with new API

2006-01-03  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Added DAAP configure support; check for sqlite3 >= 3.2 to
	guard against no ALTER TABLE ... ADD support (BGO #325697)
	
2006-01-02  Stanislav Brabec  <utx@penguin.cz>

	* configure.ac: Added cs to ALL_LINGUAS.

2006-01-02  Aaron Bockover  <aaron@aaronbock.net>

	* src/MusicBrainz/Client.cs: Null checks on GetID 

	* src/MusicBrainz/SimpleQuery.cs: Added support for both AlbumTrackResult
	and AlbumResult types for better matching against limited input

	* src/MusicBrainz/SimpleLookupTest.cs: Added a -tracknum option to test 
	program for SimpleQuery

2006-01-01  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Plugins/MetadataSearch/*: New plugin to search for 
	well-formed/supplementary metadata and cover art for songs already in
	the library (and songs that are newly added during the same instance); 
	this effectively adds 'full' cover art support to Banshee - Happy New Year!

	* docs/*: Updated Monodoc Documentation

	* banshee.mdp: Updated MonoDevelop project

	* configure.ac: Generate files for the MetadataSearch plugin

	* data/Tables.sql: Add RemoteLookupStatus column to Tracks SQL table

	* src/Banshee.Base/Database.cs: Add support to ALTER old tables without
	the RemoteLookupStatus column

	* src/Banshee.Base/Library.cs: Added a TrackAdded event and an IsLoaded
	property to the Library

	* src/Banshee.Base/LibraryTrackInfo.cs: Support preserving the 
	RemoteLookupStatus property when constructing from an AudioCdTrackInfo 
	and support reading/writing this property to/from the database

	* src/Banshee.Base/TrackInfo.cs: Added a RemoteLookupStatus property and
	enum (NoAttempt, Success, Failure)

	* src/Banshee.Base/AudioCd/AudioCdDisk.cs: Set RemoteLookupStatus to
	Success when metadata is found through MusicBrainz

	* src/Banshee.Base/Plugins/Plugin.cs: Added a DisposeRequested property
	for plugins to check during extensive operations

	* src/Banshee.Plugins/Makefile.am: Added MetadataSearch to SUBDIRS

	* src/MusicBrainz/Client.cs: Minor fix to GetID

	* src/MusicBrainz/Makefile.am: Added SimpleQuery.cs

	* src/MusicBrainz/SimpleQuery.cs: Static class to perform basic arbitrary
	query operations (FileLookup)

	* src/MusicBrainz/SimpleLookupTest.cs: Test case to SimpleQuery

	* src/MusicBrainz/SimpleTrack.cs: Added new properties so object is
	suitable for SimpleQuery.FileLookup to return

2005-12-31  Aaron Bockover  <aaron@aaronbock.net>

	* docs/MonodocNodeConfig.cs: Small utility program to add nodes to
	monodoc.xml under 'various' to better organize documentation

	* docs/Makefile.am: Build MonodocNodeConfig.cs, run to insert/remove 
	classlib-banshee node from various in monodoc.xml

	* docs/banhsee-docs.source: Set path to classlib-banshee

	* src/Banshee.Plugins/FileSystemMonitor/Makefile.am: Remove MENU_RESOURCE

2005-12-31  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Base/Database.cs:
	* src/Banshee.Base/FileTrackInfo.cs:
	* src/Banshee.Base/LibraryTrackInfo.cs: Changed namespace to Banshee.Base
	
	* banshee.pc.in: Added two missing assemblies to Libs

	* docs/*: Updated Monodoc Documentation

2005-12-30  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.pc.in: Updated so plugins can actually use it (-pkg:banshee 
	for mcs)

	* src/Banshee.Base/Library.cs: Added a GetTrack method

2005-12-30  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project

	* data/UIManagerLayout.xml: Added a plugin menu item

	* src/BansheeDbusClient.cs: Updated to reflect path/interface renaming

	* src/DapPropertiesDialog.cs: Fixed name in source header

	* src/PlayerInterface.cs: Show the plugins dialog on the plugin action

	* src/Banshee.Base/ActionManager.cs: Added a plugin action for showing
	the plugins dialog

	* src/Banshee.Base/Makefile.am: Added Plugins/PluginDialog.cs

	* src/Banshee.Base/Plugins/Plugin.cs: Plugins can now be loaded and
	unloaded during execution as well as at startup; the 'Enabled' key
	belongs to the plugin manager, plugins can show a configuration dialog;
	added abstract metadata properties; plugin entry/exit methods renamed

	* src/Banshee.Base/Plugins/PluginCore.cs: Better plugin handling; plugins
	can be disabled if they fail, but still remain visible; plugins can
	be loaded/unloaded during execution

	* src/Banshee.Base/Plugins/PluginDialog.cs: Dialog to allow management
	of plugins (loading/unloading/configuring)

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerConfigDialog.cs: Use
	the plugin description from AudioscrobblerPlugin

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs: Renamed
	the old 'Enabled' key as the base plugin class uses that key now; properly
	unload the menu UI on Dispose; updated to reflect changes in base class;
	implement ShowConfigurationDialog

	* src/Banshee.Plugins/Audioscrobbler/audioscrobbler.schemas.in: Added 
	the EngineEnabled key as the plugin may be enabled (Enabled key used
	by base class now) but user may want to turn off submissions

	* src/Banshee.Plugins/FileSystemMonitor/Makefile.am: Added Mono.Posix ref

	* src/Banshee.Plugins/FileSystemMonitor/Watcher.cs: updated to reflect
	changes in base class; throw exception to disable this plugin for now as
	it is incomplete and broken

2005-12-30  Aaron Bockover  <aaron@aaronbock.net>

	* src/TrackProperties.cs:
	* src/Banshee.Base/ActionManager.cs:
	* data/banshee.glade: Updated wording for the track properties editor to
	read 'Edit Song Metadata/Editing Song x of y' and so forth

	* src/TrackProperties.cs: Do all track saving in the main thread, it
	is not expensive, and users probably aren't going to have thousands
	of tracks in the editor at a time; update the main UI if the current
	playing track is one that was edited (fixes BGO #325078)

	* src/LibraryTransactions.cs: Removed TrackInfoSaveTransaction
	
	* src/NotificationAreaIcon.cs: Pull track duration from TrackInfo object
	loaded in PlayerEngineCore.ActivePlayer and not from the playing stream
	directly (read metadata instead of stream length) - fixes BGO #325079

	* src/PlayerInterface.cs: Only sensitize the source properties action
	when a source has property dialog support (Fixes BGO #325076); Expose
	UpdateMetaDisplay as public; Call LoadSettings() after registering 
	handlers for all actions, which will allow the proper action handler 
	to be called at startup	(Fixes BGO #325139)

	* src/Sources.cs: Name of library source is now just 'Music Library', 
	Fixes BGO #324652; Source now provides a ShowPropertiesDialog member
	sources can implement; moved property dialog for the DAP source from
	PlayerInterface.cs to DapSource.ShowPropertiesDialog

2005-12-29  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project
	
	* configure.ac: Output src/Banshee.Plugins/FileSystemMonitor files

	* data/banshee.schemas.in: Removed key for FileSystemMonitor; the plugin
	installs its own schemas now

	* src/Core.cs: Moved almost everything to Banshee.Base.Globals; renamed
	to PlayerCore, and is now a static class

	* src/Dialogs.cs: Removed specific playlist dialog

	* src/BurnCore.cs:
	* src/LibraryTransactionManager.cs:
	* src/LibraryTransactionStatus.cs:
	* src/LibraryTransactions.cs:
	* src/PlaylistColumns.cs:
	* src/PlaylistModel.cs:
	* src/Preferences.cs:
	* src/RipTransaction.cs:
	* src/SourceView.cs: 
	* src/Main.cs: Updated to reflect moves from Banshee.Core to 
	Banshee.Base.Globals and renaming of Banshee.Core to Banshee.PlayerCore

	* src/PlayerInterface.cs: Same as above changes; handle 
	Banshee.Base.Library.Reloaded in a much better manner

	* src/Banshee.Base/FileNamePattern.cs: Cleaned up, reformatted; reference
	proper library path

	* src/Makefile.am: Added new files; removed old files

	* src/StockIcons.cs: Added a null test for the icon_set

	* src/Banshee.Base/Globals.cs: Added initialization code from old
	Banshee.Core; effectively places Library/Database access in 
	Banshee.Base, for plugin access

	* src/Banshee.Base/Makefile.am: Added new files

	* src/Banshee.Base/Library.cs: 
	* src/Banshee.Base/SqlGenerator.cs:
	* src/Banshee.Base/LibraryTrackInfo.cs:
	* src/Banshee.Base/FileTrackInfo.cs:
	* src/Banshee.Base/Database.cs: Library/Database support is now in 
	Banshee.Base and can be consumed by plugins

	* src/Banshee.Base/Plugins/Plugin.cs:
	* src/Banshee.Base/Plugins/PluginCore.cs: Plugins must now provide an 
	override for new Initialize method; may not use constructors for
	initialization; proper namespace naming is now enforced; added 
	configuration keys support for GConf

	* src/Banshee.Plugins/Makefile.am: Added FileSystemMonitor to SUBDIRS

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs: Adapt to 
	changes in base Plugin class and new GConf support in base class

	* src/Banshee.Plugins/Audioscrobbler/Engine.cs: Source.Remove changed to
	GLib.Source.Remove to avoid namespace conflicts

	* src/Banshee.Plugins/FileSystemMonitor/*.cs: Moved from src/
	
	* src/Banshee.Plugins/FileSystemMonitor/Watcher.cs: Refactored to
	implement as a Banshee Plugin

	* src/Banshee.Plugins/FileSystemMonitor/FileSystemMonitor.dll.config.in:
	DLL map for assembly
	
	* src/Banshee.Plugins/FileSystemMonitor/filesystemmonitor.schemas.in:
	GConf schemas for plugin

2005-12-29  Takeshi AIHANA <aihana@gnome.gr.jp>

	* configure.ac: Added 'ja' (Japanese) to ALL_LINGUAS again,
	  since was lost current version.

2005-12-28  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project

	* src/NotificationAreaIcon.cs: Better positioning

	* src/Banshee.Base/TrackInfoHeader.cs: Hide cover if default cover is null

	* src/Banshee.Base/TrackInfoPopup.cs: Remove the radial progress widget,
	replaced by a subtle linear one to the right of the time label. Much less
	intrusive and distracting, and reduces size of widget

	* src/Banshee.Widgets/RadialProgress.cs: Some minor fixes, and #ifed out
	for now

	* src/Banshee.Widgets/LinearProgress.cs: Simple GDK progress bar that
	draws a line and a bar, very very simple and subtle drawing

	* src/Banshee.Widgets/Makefile.am: added LinearProgress.cs

2005-12-25  Aaron Bockover  <aaron@aaronbock.net>

	* src/NotificationAreaIcon.cs: Handle the default timeout a little better

2005-12-25  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project

	* src/Makefile.am: Removed TrackInfoHeader.cs

	* src/NotificationAreaIcon.cs: Show the new TrackInfoPopup widget when
	user hovers over the icon or the track changes

	* src/PlayerInterface.cs: Send the NotificationAreaIconContainer an entire
	track instead of just a string for a tooltip

	* src/Banshee.Base/TrackInfoHeader.cs: Moved from src/ so TrackInfoPopup
	can embed the widget

	* src/Banshee.Base/TrackInfoPopup.cs: A little Christmas candy to display
	a very nice track info/progress summary in a 'tooltip,' using the same
	header widget in the main interface, and if Cairo/GTK+-2.8 is available,
	show track progress using the new RadialProgress widget

	* src/Banshee.Base/Makefile.am: Added TrackInfoHeader.cs, TrackInfoPopup.cs

	* src/Banshee.Widgets/Makefile.am: Added RadialProgress.cs

	* src/Banshee.Widgets/RadialProgress.cs: New progress widget that shows
	a 'pie' or radial progress; can optionally draw 'clock' ticks; requires
	Mono.Cairo and GTK+-2.8

2005-12-22  Aaron Bockover  <aaron@aaronbock.net>

	* src/MusicBrainz/sync-tree.sh: Added script to keep Banshee checkout of
	musicbrainz-sharp in sync with the working development repository; the
	development of this code has been moved outside of Banshee:

		svn://abock.org/svn/trunk/musicbrainz-sharp

	* src/MusicBrainz/Makefile.am: Updated to cleaner, synced version

2005-12-23  Chris Toshok  <toshok@ximian.com>

	* src/Banshee.Plugins/Audioscrobbler/Makefile.am (PKG_REFERENCES):
	add -r:System.Web.dll.

	* src/Banshee.Plugins/Audioscrobbler/Engine.cs: drop the hacky
	UrlEncode in favor of HttpUtility.UrlEncode; add a check for
	Globals.Network.Connected in EngineTick, so we delay any network
	traffic until we're connected.

2005-12-22  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Widgets/CoverArtThumbnail.cs (CoverArtView.OnExposeEvent): 
	Fixed really stupid drawing bug

2005-12-22  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerConfigDialog.cs:
	Added a cute little Audioscrobbler 'powered by' graphic

	* src/Banshee.Plugins/Audioscrobbler/audioscrobbler-logo.png: AS logo

	* src/Banshee.Plugins/Audioscrobbler/Makefile.am: embed

	* src/Banshee.Plugins/Audioscrobbler/Engine.cs: Removed old_state to
	silence the cautionary screams of mcs

2005-12-22  Chris Toshok  <toshok@ximian.com>

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs:
	remove the SetPlayer method and calls.  Instead just call
	protocol_engine.Start.

	* src/Banshee.Plugins/Audioscrobbler/Engine.cs: use a GLib.Timeout
	instead of relying on the Player's tick event; Don't keep a
	reference to a player around, just fetch it in the EngineTick
	method; fix up the state assignment around the async calls and
	deal with exceptions in current_web_req.End*; reformat things to
	be more in keeping with the style guidelines.

2005-12-22  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs: Changed
	wording of 'Home page' to 'Profile page'

2005-12-22  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project

	* data/UIManagerLayout.xml: Added a placeholder for plugins to insert
	menu items in the music toplevel menu

	* src/DapPropertiesDialog.cs: Moved the PropertyTable class 
	to Banshee.Widgets

	* src/Banshee.Plugins/Audioscrobbler/Engine.cs: Fixed a bug regarding
	track queueing; fixes a few submission bugs noted on the mailing list

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs: Added
	UI integration into main menu; added properties to get/set username,
	password, and enable status; added path to launch the config dialog

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerConfigDialog.cs:
	Configuration dialog for setting username/password and enabling AS support

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerMenu.xml: UIManager
	menu layout for AS plugin

	* src/Banshee.Plugins/Audioscrobbler/Makefile.am: Link against
	Banshee.Widgets.dll and embed AudioscrobblerMenu.xml as a resource;
	added AudioscrobblerConfigDialog.cs

	* src/Banshee.Widgets/Makefile.am: Added PropertyTable.cs

	* src/Banshee.Widgets/PropertyTable.cs: Moved property table class from
	src/DapPropertiesDialog.cs

2005-12-22  Miguel de Icaza  <miguel@novell.com>

	* src/Banshee.Widgets/NotificationAreaIcon.cs: More fixing of
	miss-uses.  

2005-12-19  Miguel de Icaza  <miguel@novell.com>

	* src/Banshee.Widgets/NotificationAreaIcon.cs: Fix the miss-use of
	unions and string marshalling.  This should now run with Mono
	1.1.11 

2005-12-22  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Plugins/Makefile.am: Remove Banshee.Plugins dir on uninstall

	* configure.ac: Do not generate src/ipod-sharp.dll.config

	* en/*: Updated docs

	* configure.ac: Version 0.10.2

	* NEWS: Updated with 0.10.2 release notes

2005-12-21  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Plugins/Audioscrobbler/AudioscrobblerPlugin.cs: Plugin class
	for Chris Toshok's Audioscrobbler support

	* src/Banshee.Plugins/Audioscrobbler/Engine.cs: toshok's Audioscrobbler
	protocol implementation/engine class

	* src/Banshee.Plugins/Audioscrobbler/audioscrobbler.schemas.in: GConf
	schemas for the Audioscrobbler plugin

	* src/Banshee.Plugins/Audioscrobbler/Audioscrobbler.dll.config.in: DLL
	maps for the Audioscrobbler.dll plugin

	* src/Banshee.Plugins/Makefile.am: Added Audioscrobbler to SUBDIRS

	* src/Banshee.Base/Plugins/Plugin.cs: Simple generic plugin base class

	* src/Banshee.Base/Plugins/PluginCore.cs: Core to load/unload plugins
	at runtime from types in assemblies that implement Banshee.Plugins.Plugin

	* banshee.mdp: Updated MonoDevelop project

	* configure.ac: Generate necessary files for Audioscrobbler plugin

	* src/AboutBox.cs: Added Chris Toshok and Jeff Tickle

	* src/Makefile.am: Added Banshee.Plugins to SUBDIRS

	* src/Banshee.Base/Globals.cs: Initialize/Dispose PluginCore

	* src/Banshee.Base/Paths.cs: Added SystemPluginDirectory 
	and UserPluginDirectory paths

2005-12-21  Jeff Tickle <jeff@jefftickle.com>

	* src/PlayerInterface.cs: Resurrected the Repeat Toggle Button
	down in the bottom-left; it now works properly with Gtk.ToggleAction

	* src/Banshee.Widgets/MultiStateToggleButton.cs:
	* src/Banshee.Widgets/ToggleState.cs: Removed all the menu action
	crap and replaced it with Gtk.ToggleAction support

2005-12-21  Aaron Bockover  <aaron@aaronbock.net>

	* src/Core.cs: Remove all IPlayerEngine code as it is now in Banshee.Base

	* src/DBusIPC.cs:
	* src/PlayerInterface.cs:
	* src/PlaylistModel.cs:
	* src/Preferences.cs: Fix references from Core.Instance.Player to
	Banshee.Base.PlayerEngineCore.ActivePlayer

	* src/Banshee.Base/Makefile.am: Added PlayerEngineCore.cs

	* src/Banshee.Base/PlayerEngineCore.cs: Moved all IPlayerEngine code to
	new static class accessible to plugins

2005-12-21  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project

	* data/banshee.desktop.in.in: Updated Exec pattern

	* src/Library.cs: Added new source for the "Frobinator", LocalQueueSource

	* src/Main.cs: Support --enqueue

	* src/Makefile.am: Added FileTrackInfo.cs

	* src/FileTrackInfo.cs: New TrackInfo class that works only with local
	files; does not touch the Library

	* src/PlayerInterface.cs: Select the Frobinator if it is filled as the
	default source; Support the Frobinator when changing sources

	* src/PlaylistModel.cs (LoadFromLocalQueue): Support loading from the
	the Frobinator

	* src/SourceView.cs: Support adding the Frobinator as a source

	* src/Banshee.Base/ArgumentQueue.cs: Added "File" support with the 
	--enqueue option... it is very special

	* src/Banshee.Base/Dap/Dap.cs: Fixed minor bug with GetIcon

2005-12-21  Aaron Bockover  <aaron@aaronbock.net>

	* src/Main.cs: Refactored, organized, and cleaned up the entry
	code, command line parsing, and instance detection; added three new
	command line arguments: --set-position, --hide-field, and --dap

	* src/DBusIPC.cs: Added a SelectDap method akin to SelectAudioCd, works
	with --dap %h (for Gnome Volume Manager); for any D-Bus methods that
	return string, ensure null is not returned to avoid dbus-sharp bug (return
	String.Empty instead)

2005-12-21  Aaron Bockover  <aaron@aaronbock.net>

	* src/Main.cs: if D-Bus support is disabled, fall back on process 
	checking to do instance detection

	* src/Banshee.Base/NetworkDetect.cs: Do not try to Dispose a null
	NetworkManager.Manager object

	* src/DBusIPC.cs: Do not die when D-Bus can't be found; log a warning and
	continue to load the player, but some features will probably be disabled:

	   IPC commands and queries / instance detection (Session Bus)
	   HAL (System Bus)
	     - Audio CD detection
	     - DAP detection
	   NetworkManager (System Bus)

2005-12-20  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project

	* src/PlayerInterface.cs: Added UI support for Audio CD status reporting
	using the HighlightMessageArea widget

	* src/Banshee.Base/ImportManager.cs: Fall back on the Stock.Find icon

	* src/Banshee.Base/NetworkDetect.cs: Expose NetworkManager.Manager

	* src/Banshee.Base/Dap/DapCore.cs: Play nice when the Banshee.Dap 
	directory does not exist, fixes BGO #

	* src/Banshee.Widgets/Makefile.am: Renamed HighlightStatusBar.cs to
	HighlightMessageArea.cs

	* src/Banshee.Widgets/HighlightMessageArea.cs: Renamed file from
	HighlightStatusBar.cs; finished initial working version of the widget
	with proper drawing and actions

2005-12-19  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Widgets/NotificationAreaIcon.cs: Cleaned up code, and Miguel
	committed his string marshalling fix regarding 77026 in Ximian Bugzilla;
	removed Banshee.Widgets namespace to keep maintainence easier for other
	apps.

	* src/NotificationAreaIcon.cs: class renamed to 
	NotificationAreaIconContainer; adjust instantiation of NotificationAreaIcon
	to reflect removal of Banshee.Widgets namespace

	* data/banshee.glade: renamed the main/view container 'Main Container'

	* banshee.mdp: Updated MonoDevelop project

	* src/Banshee.Widgets/HighlightStatusBar.cs: skeleton for new widget
	to show 'important' status messages

	* src/Banshee.Widgets/Makefile.am: added HighlightStatusBar.cs

	* src/Banshee.Dap/Ipod/IpodDap.cs: removed manual path lookup for icon
	fallback; rely only on base.GetIcon if icon is not in the theme

	* src/Banshee.Base/NetworkDetect.cs: Added Dispose method to chain into
	manager.Dispose

	* src/Banshee.Base/NetworkManager/Manager.cs: Added a Dispose method
	to suppress the GC finalizing the D-Bus proxy object to work around
	the bad IL in finalizer bug

	* src/Banshee.Base/Globals.cs: Call Dispose on NetworkDetect

	* src/Banshee.Base/IconThemeUtils.cs: Added a new LoadIcon overload
	to accept a params array of icon names for fallbacks: 
		LoadIcon("multimedia-player-ipod", "multimedia-player", 
		"gnome-dev-ipod")

	* src/Main.cs: Suppress finalizing the dbusCore D-Bus proxy object

	* src/PlayerInterface.cs: Do not show the rating/playcount/last played 
	columns in the audio CD view; remove references to the SyncColumn; don't
	steal space when source view is in edit mode; show the song title in
	the title bar; unregister the dbus server object when we shut down banshee;
	NotificationAreaIcon->NotificationAreaIconContainer; add skeleton support
	for the new HighlightStatusBar for Audio CD status messages

	* src/PlaylistView.cs: expose the rating/playcount/last played columns
	so the main UI can show/hide as needed for different views; remove the
	sync column; show DRM/protected status in the play indicator column

	* src/RatingRenderer.cs: minor fixes

	* src/SourceView.cs: pull in the audio cd source icon from the theme;
	add an EditingRow property to tell the UI that the source view is 
	in edit mode

2005-12-18  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project

	* src/Library.cs: Updated to allow proper device renaming

	* src/DapPropertiesDialog.cs: Dialog box to show properties of a DAP;
	allows changing of the Name and Owner properties

	* src/Makefile.am: Added DapPropertiesDialog.cs

	* src/PlayerInterface.cs: Enable showing of the properties dialog for
	DAPs; properly update DAP devices when name/owner is changed

	* src/Banshee.Base/Utilities.cs: Added a ReflectionUtil class - contains
	IsVirtualMethodImplemented which determines if a subclass implements
	a virtual method in its base class; used by Banshee.Dap.DapDevice to 
	see if a DAP supports setting the name and/or owner on the device

	* src/Banshee.Base/Dap/Dap.cs: Allow detecting whether or not the DAP
	supports setting name/owner; move setting to SetName/SetOwner as a virtual
	method for DAP implementations to override

	* src/Banshee.Dap/Ipod/IpodDap.cs: Implement SetName/SetOwner

	* src/Banshee.Dap/Njb/NjbDap.cs: Implement SetOwner

2005-12-18  Gabriel Burt  <gabriel.burt@gmail.com>

	* data/banshee.desktop.in.in: Change Comment to 'Play and organize
	your music', following suggestions of the HIG.

	* data/banshee.glade: Change CheckButton labels to sentence case.

	* src/PlayerInterface.cs: Change tooltips to sentence case.

	* src/Banshee.Base/PipelineProfile.cs: Add comment for translators.

2005-12-18  Aaron Bockover  <aaron@aaronbock.net>

	* src/PlayerInterface.cs: Show a warning dialog when trying to play
	an "unplayable" track; set the window icon and title for log dialogs

	* src/Banshee.Dap/Njb/Makefile.am: Added NjbDapTrackInfo.cs
	
	* src/Banshee.Dap/Njb/NjbDapTrackInfo.cs: DapTrackInfo implementation for
	NJB devices

	* src/Banshee.Dap/Njb/NjbDap.cs: Added support to list tracks; install
	device properties from the device

	* src/Banshee.Base/Dap/Dap.cs: Added UID support through the public
	Uid property

	* src/Banshee.Base/Dap/DapTrackInfo.cs: All implementations now have
	CanSaveToDatabase = false

	* src/Banshee.Base/IPlayerEngine.cs:
	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs:
	* src/Banshee.MediaEngine/Helix/HelixPlayer.cs:
	* src/Banshee.MediaEngine/Vlc/VlcPlayerEngine.cs: Changed Open method
	to accept a System.Uri as a second parameter - use it instead of 
	TrackInfo.Uri 

2005-12-18  Aaron Bockover  <aaron@aaronbock.net>

	* src/PlayerInterface.cs: Updated DAP synchronize dialog to have wording
	generic for all DAPs (was very iPod specific), use HighlightedSource
	instead of SelectedSource for getting the DapSource

	* src/Banshee.Dap/Njb/NjbDap.cs: Added a GenericName override, added
	SupportedCodec attributes

2005-12-18  Aaron Bockover  <aaron@aaronbock.net>

	* vacuum.sh: Removed

	* Makefile.am: Added MAINTAINERCLEANFILES 

2005-12-18  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Do not copy the provided njb-sharp.dll.config from
	njb-sharp; we provide our own for the sake of libnjbglue.

	* src/Banshee.Dap/Njb/njb-sharp.dll.config.in: Added njb-sharp.dll DLL
	map for libnjb/libusb/libnjbglue

	* src/Banshee.Dap/Njb/Makefile.am: Install njb-sharp.dll.config

	* src/Banshee.Dap/Njb/NjbDap.cs: Initialize the NJB Discoverer inside
	the NjbDap type constructor and catch any exceptions it may throw; 
	rely on Njb.DeviceId table to pre-verify a USB device as an NJB device
	using usb.vendor_id and usb.product_id properties from HAL (removes
	requirement of updated FDI files in HAL to expose a 
	portable_audio_player.type=njb property; Have the discoverer rescan for
	NJB devices after a new USB device passes the vendor_id/product_id test

	* src/Banshee.Dap/Njb/NjbDap.cs:
	* src/Banshee.Dap/Ipod/IpodDap.cs: Do not try to fall back on loading
	custom icon from a path. Only try custom icon from the theme and fall
	back on base.GetIcon()

	* src/Banshee.Base/Dap/DapCore.cs: Added a timeout+re-probe to handle
	a device throwing WaitForTimeoutException during probe initialization

	* src/Banshee.Base/Dap/DapMisc.cs: Added WaitForTimeoutException that is
	similar to WaitForPropertyChangeException only the re-probe mechanism
	is a timeout instead of a property change signal from HAL; not actually
	in use, but could be useful for other DAP detection in the future

	* src/Core.cs: Removed UserRealName/UserFirstName fields;

	* src/Library.cs: Removed old IpodSource; show the user's name for
	the name of the library (i.e. Aaron's Music Library)

	* src/PlayerInterface.cs: All custom source name setting is done in 
	the proper source (LibrarySource was changed for this); minor syntax
	cleaning

2005-12-17  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac:
	* data/images/Makefile.am:
	* data/images/ipod/*: Removed ipod/DAP images as they will be a part of
	an extended version of the Tango icon theme (http://tango-project.org).
	A separate package for installing these icons into Tango is available
	for the time being: 

	http://banshee-project.org/files/misc/tango-extra-devices-0.6.2.tar.gz

2005-12-14  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Version 0.10.1 release; only check for spider GStreamer
	element against GStreamer 0.8

	* src/PlayerInterface.cs: Re-enable tooltips, perform source actions
	on the highlighted source instead of selected source

	* docs/en/*: Updated monodoc documentation

2005-12-14  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Version 0.10.1
	
	* banshee.mdp: Updated MonoDevelop project
	
	* data/Makefile.am: Added banshee.glade and UIManagerLayout.xml

	* data/banshee.glade: Consolidated multiple glade files from data/glade/*

	* data/UIManagerLayout.xml: XML defining menus for new UIManager/Action
	layout; actions defined in src/Banshee.Base/ActionManager.cs

	* data/glade/*: Removed; glade is now in data/banshee.glade

	* data/images/ipod/Makefile.am: Install icons to devices/ instead of
	extras/devices

	* src/BurnCore.cs:
	* src/RipTransaction.cs:
	* src/Banshee.Base/FileEncodeAction.cs: Set the Header property on
	ActiveUserEvent to show more detail when performing actions

	* src/TrackProperties.cs: Load UI from banshee.glade, do not show
	advanced properties option if tracks are on an audio CD

	* src/Preferences.cs: Load UI from banshee.glade

	* src/DBusIPC.cs: Added more functionality to D-Bus API thanks in part
	to Thijs Vermeir: set volume/set position

	* src/BansheeDbusClient.cs: Added abstract signatures to BansheeCore 
	remote D-Bus class

	* src/Library.cs: Moved BytesToString to Banshee.Dap.Utilities; replaced
	local calls with Utilities.BytesToString

	* src/LibraryTrackInfo.cs: Read ASIN from the database to enable cover
	art from local tracks where this is set (by the banshee ripper)

	* src/Makefile.am: Removed data/glade/* references; replaced with
	references to data/banshee.glade

	* src/VersionInformationDialog.cs: Increased default width of dialog

	* src/SourceView.cs: Moved ColorBlend to Banshee.Base.Utilities; added
	a ResetHighlight method to highlight the selected/active source (this is
	used by the source popup menu in PlayerInterface.cs)

	* src/Banshee.Widgets/CoverArtThumbnail.cs: Added a new cover art
	widget class: CoverArtView that simply draws a cover and scales 
	with the correct ratio; used to display cover art underneath the
	source view in the main interface

	* src/StockIcons.cs: Load all theme icons that Banshee will need as
	stock icons, fall back on resource icons if not available as stock
	or in the theme

	* src/TrackInfoHeader.cs: Redesigned header for displaying track
	information

	* src/NotificationAreaIcon.cs: Use Globals.ActionManager to load the
	tray icon menu

	* src/PlayerInterface.cs: Moved all menu and major buttons to the new
	UIManager/Action setup; cleaned up, refactored, and reorganized a lot
	of code; added some methods to allow the D-Bus object to set the volume
	and perform seek operations; Added/fixed --audio-cd, --dap, and --play
	command line option support; lots of general UI clean up and polish

	* src/Banshee.Widgets/Makefile.am: Added ActionButton.cs

	* src/Banshee.Widgets/ActionButton.cs: Two classes that work with
	Gtk.Action objects: ActionButton and ActionToggleButton

	* src/Banshee.Base/ActionManager.cs: Define all actions and some
	helper methods for dealing with Gtk.Action and widgets

	* src/Banshee.Base/Dap/Dap.cs: GetIcon falls back first on the
	generic multimedia-player icon from the icon theme and then on
	gnome-dev-ipod; provide GenericName and HalUdi properties

	* src/Banshee.Dap/Ipod/IpodDap.cs: Load ipod icon from the theme
	and fall back on loading from a file; implement GenericName, return
	as "iPod"

	* src/Banshee.Base/ArgumentQueue.cs: Dequeue returns the object just
	removed from the queue

	* src/Banshee.Base/IconThemeUtils.cs: Added HasIcon() method to
	determine if an icon is available in the defaul theme

	* src/Banshee.Base/Utilities.cs: Fixed BytesToString implementation
	to properly round and display fractional GB sizes; added ColorBlend
	method

	* src/Banshee.Base/Makefile.am: Added UIManagerLayout.xml as a resource

	* src/Banshee.Base/Globals.cs: Added ActionManager property to return
	global ActionManager instance

	* src/Banshee.Base/GConfKeys.cs: Added ShowCoverArt key
	
2005-12-13  Aaron Bockover  <aaron@aaronbock.net>

	* src/BansheeDbusClient.cs: Sample program using the the Banshee D-Bus
	API to do basic playback control and display the current song
	
	* src/BansheeDbusClient.Makefile: A simple Makefile to build the 
	Banshee Dbus Client sample program
	
	* src/Makefile.am: Added BansheeDbusClient.{Makefile,cs} to EXTRA_DIST;
	added a 'dbus-client-sample' rule to build the sample client

2005-12-08  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Base/Utilities.cs: Added UnmountVolume and ExecProcess
	utility methods

	* src/Banshee.Base/AudioCd/AudioCdDisk.cs: Call Utilities.UnmountVolume
	if audio CD happens to be mounted (multi-session disk) before calling
	the eject ioctl

	* src/Banshee.Base/HalCore.cs: Added license header to file

2005-12-08  Aaron Bockover  <aaron@aaronbock.net>

	* src/Bashee.Base/AudioCd/AudioCdCore.cs: Fixed minor detection bug;
	multi-session discs were only being detected - regular audio CDs were not

2005-12-08  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Base/NetworkDetect.cs: whoops, missing closing parenthesis

2005-12-08  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Base/NetworkDetect.cs: Only fire StateChanged event
	if the state change is State.Connected or State.Disconnected
	* src/Banshee.Base/NetworkManager/Manager.cs: Changed header to 
	show proper file name

2005-12-08  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project
	* src/Banshee.Base/NetworkManager/*.c: C# implementation of the 
	NetworkManager DBus API using dbus-sharp
	* src/Banshee.Base/NetworkDetect.cs: front-end class to basic network
	detection and notification through NetworkManager; if NetworkManager
	is not available, NetworkDetect always assumes a connection is available
	* src/Banshee.Base/AudioCdDisk.cs: Become 'Network Aware': will not
	attempt to fetch track information from MusicBrainz if there is
	not a network connection; will fetch information once a connection
	becomes available
	* src/Banshee.Base/Makefile.am: Added NetworkManager C# sources
	* src/Banshee.Base/Globals.cs: Added a Network property and 
	placeholder Dispose method
	* src/Core.cs (Shutdown): Call Globals.Dispose()

2005-12-06  Aaron Bockover  <aaron@aaronbock.net>

	* src/PlaylistModel.cs: Minor fix

2005-12-06  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Fixed weird VERSION/ASM_VERSION definitions; Version 0.10

	* NEWS: Updated 

2005-12-06  Aaron Bockover  <aaron@aaronbock.net>
	
	* configure.ac: Require ipod-sharp 0.5.12

	* docs/*: Updated API Documentation

	* banshee.mdp: updated MonoDevelop project

	* src/Banshee.Widgets/ActiveUserEvent.cs: Fixed bug regarding multiple
	timeouts

	* src/Banshee.Dap/Njb/Makefile.am: Link against Banshee.Widgets.dll
	
	* src/Banshee.Dap/Njb/NjbDap.cs: Placeholder implementation of 
	Synchronize method

	* src/Banshee.Dap/Ipod/Makefile.am: link against Banshee.Widgets.dll
	and Mono.Posix

	* src/Banshee.Dap/Ipod/IpodDapTrackInfo.cs: Updated with minor fixes

	* src/Banshee.Dap/Ipod/IpodDap.cs: Full syncing implementation of new 
	syncing support in generic DAP base class

	* src/Banshee.Base/Dap/DapMisc.cs: Misc/Utility generic DAP supporting 
	types

	* src/Banshee.Base/Dap/Dap.cs: Now supports manual and automatic generic
	syncing and transcoding

	* src/Banshee.Base/Utilities.cs: Disabled Event class, added 
	PathUtil.MakeFileNameKey

	* src/Banshee.Base/Makefile.am: add PipelineProfile.cs, FileEncoder.cs,
	GstFileEncoder.cs, FileEncodeAction.cs, DapMisc.cs

	* src/Banshee.Base/IconThemeUtils.cs: Use Entry Assembly instead of 
	Calling Assembly as all the resources are in the Entry Assembly

	* src/Banshee.Base/HalCore.cs: Don't use Event.Invoke for now, it has
	some issues

	* src/Banshee.Base/GstMisc.cs: Add filter to mime-type fetching in case
	mime type is returned with attributes (gvfs)

	* src/SourceView.cs: Re-enabled DAP updating through DnD

	* src/PlaylistView.cs: Safe-guard against potential nullrefs in the
	renderer data functions

	* src/PlayerInterface.cs: Connected DAP GUI elements back to DAP
	syncing events, simplified DAP syncing entry point, re-enabled DAP syncing;
	show ripped tracks in library view when they become available and if
	they match any active search (fixes BGO #316132)

	* src/Makefile.am: Moved FileEncoder.cs, GstFileEncoder.cs, 
	FileEncodeTransaction.cs, and PipelineProfile.cs to Banshee.Base

	* src/Library.cs: Connected DapSource.IsSyncing to DAP device; moved
	Library.MakeFileNameKey to Banshee.Base.PathUtils

2005-12-05  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.MediaEngine/Gstreamer/Makefile.am: Define whether the C
	engine is 0.8 or 0.10 

	* src/Banshee.MediaEngine/Gstreamer/GstPlayerEngine.cs: Added an 
	IPlayerEngine implementation for the 0.10 backend

	* libbanshee/gst-playback-0.10.c: Merged the GStreamer 0.10 playback 
	backend

	* libbanshee/gst-misc-0.10.c: Disabled typefind again, as 0.10 seems to
	report everything as application/x-id3

	* entagged-sharp/*: Updated entagged-sharp checkout

2005-12-05  Mike Kestner  <mkestner@novell.com>

	* src/Banshee.Dap/*/Makefile.am: only make the _SCRIPTS optional.

2005-12-05  Aaron Bockover  <aaron@aaronbock.net>

	* libbanshee/gst-misc-0.10.c: gstreamer_initialize and 
	gstreamer_detect_mimetype ported to GStreamer 0.10

	* src/PlayerInterface.cs: disabled specialkeys for now, there are problems

	* src/Banshee.Widgets/ActiveUserEvent.cs: Added a Header property to
	show a bold header on top of the regular text message

	* src/Banshee.Base/ImportManager.cs: Set user_event.Header to the
	count progress and user_event.Message to the returned message (filename)

	* banshee.mdp: Updated MonoDevelop project

	* configure.ac: renamed --with-gstreamer-dev to --with-gstreamer-0-10,
	fixed some minor GStreamer 0.10 detection issues

	* data/glade/player.glade: Hide the 'new playlist' button, will probably
	be removed in the future

	* src/ToggleStates.cs: Updated state strings to 'Shuffle' and 'Continuous'

	* src/Banshee.Widgets/ActiveUserEvent.cs: minor thread fix
	
	* src/Banshee.Widgets/MultiStateToggleButton.cs: minor display fix

	* libbanshee/Makefile.am: Reorganized the way the GStreamer sources are
	handled so the -0.8 ones are used if GStreamer 0.8 is enabled and the
	0.10 ones if --with-gstreamer-0-10 was passed to configure
	
	* libbanshee/: Renamed gstreamer to have a gst- prefix and a version 
	number suffix (-0.8 or -0.10). 0.10 versions have the API skeletons so
	they will build against GStreamer 0.10 and can be ported one at a time;
	tabs->spaces on everything too

2005-12-04  Aaron Bockover  <aaron@aaronbock.net>

	* src/AboutBox.cs: Added Stephane Raimbault to translators

	* src/Makefile.am: Make distcheck happy

	* src/PlayerInterface.cs: Report when a song cannot be imported
	
	* src/Banshee.Base/ImportManager.cs: Increase progress reporting resolution

2005-12-04  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Bump to 0.10, added fr translation to ALL_LINGUAS

	* banshee.mdp: Updated MonoDevelop project

	* docs/*: Updated API docs

	* entagged-sharp/Tag.cs: minor fix
	
	* libbanshee/gst-misc.c: Added gstreamer_initialize from gst-init.c; 
	added new gstreamer_detect_mimetype function
	
	* libbanshee/gst-misc.h: Added gstreamer_initialize, 
	gstreamer_detect_mimetype
	
	* libbanshee/Makefile.am: Removed gst-init.c/gst-init.h
	
	* libbanshee/gst-init.[ch]: Removed, gstreamer_initialize moved 
	to gst-misc.c
	
	* libbanshee/gst-player-engine.c:
	* libbanshee/gst-encode.c: 
	* libbanshee/cd-rip.c: Include gst-misc.h instead of gst-init.h

	* src/Makefile.am: update icon resources; build Banshee.Widgets before
	Banshee.Base; removed ThemeIcons.cs, GstMisc.cs (now in Banshee.Base),
	use $(top_builddir) instead of $(srcdir)../ for resources

	* src/PlaylistModel.cs: removed ImportCanUpdate; now handled by PlayerUI;
	removed LibraryLoadTransaction/FileLoadTransaction

	* src/PlayerInterface.cs: Removed old FileLoadTransaction method of
	importing to library; using new ImportManager - fixed BGO #314965, #318330;
	only show newly imported songs in the view if in library view; only add 
	newly imported songs to library view if no search is active or the 
	new song matches the current search; minor fixes to OnSimpleSearch; 
	moved search matching to separate method: DoesTrackMatchSearch - 
	fixed BGO #316102; use new IconThemeUtils for loading icons from the 
	icon theme where applicable; fixed BGO #323202

	* src/LibraryTrackInfo.cs: Use Gstreamer.DetectMimeType to parse mime-type;
	set the mimetype field to Entagged.AudioFile.MimeType property; mime-type
	is now saved to the database

	* src/StockIcons.cs: Renamed applicable icons to the proper icon theme name

	* src/Core.cs (Shutdown): Call Banshee.Dap.DapCore.Dispose()
	
	* src/AboutBox.cs:
	* src/BurnCore.cs:
	* src/Dialogs.cs:
	* src/LogCoreViewer.cs:
	* src/Preferences.cs:
	* src/VersionInformationDialog.cs: Use IconThemeUtils to set window
	icon and any applicable icon theme icons
	
	* src/NotificationAreaIcon.cs:
	* src/ToggleStates.cs: Use IconThemeUtils
	
	* src/TrackProperties.cs: IconThemUtils to set window icon, use
	Gstreamer.DetectMimeType to load mime type

	* src/Banshee.Widgets/ActiveUserEvent.cs: Fixed up CancelRequest event
	invokation; added a get accessor for Fraction property
	
	* src/Banshee.Widgets/SearchEntry.cs: cleaned up a bit; added 
	IsQueryAvailable property; return a Trim()med string for Query property
	
	* src/Banshee.Widgets/VolumeButton.cs: Use proper icon theme icon names

	* src/Banshee.Dap/Ipod/IpodDap.cs (Eject): Call base.Eject() after
	iPod specific eject finishes

	* src/Banshee.Dap/Ipod/Makefile.am: Cleand up a bit;
	
	* src/Banshee.Dap/Njb/Makefile.am: cleaned up a bit; install all NJB
	assemblies and shared libraries to Njb banshee DAP directory
	
	* src/Banshee.Dap/Njb/NjbDap.cs: More skeleton work on NJB support;
	devices now will show up, so detection is working; add/remove HAL events
	are a little out of sync, need to fix that

	* src/Banshee.Base/ImportManager.cs: New import backend for managing
	import requests and proxying final URIs to be imported; uses new 
	ActiveUserEvent progress reporting interface

	* src/Banshee.Base/UriList.cs: Class for properly dealing with many
	forms of path/URI input (string, string with \r\n delimiters, 
	SelectionData, and string [])

	* src/Banshee.Base/GstMisc.cs: moved from src/; added a DetectMimeType
	method to find the mime type of a file: uses GStreamer typefind element,
	falls back on Gnome.Vfs.MimeType, falls back on entagged/<extension>

	* src/Banshee.Base/IconThemeUtils.cs: utility class for loading pixbufs
	from the icon theme and falling back on pixbuf resources in the calling
	assembly

	* src/Banshee.Base/Dap/DapCore.cs: Added a Dispose to properly
	iterate through connected devices and call their Dispose methods; Connect
	to the Ejected event on all Daps to remove them from the DAP table
	when they are ejected

	* src/Banshee.Base/Dap/Dap.cs: Added an Ejected event, implement 
	IDisposable, fixed up invoke for TracksCleared; invoke new Ejected event
	
	* src/Banshee.Base/Makefile.am: Added IconThemeUtils.cs, GstMisc.cs,
	ImportManager.cs and UriList.cs; link against Gtk#

2005-12-04  Christian Schaller  <uraeus@gnome.org>

	* configure.ac: change testing to check for GStreamer 0.10

2005-12-01  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Widgets/SimpleNotebook.cs:
	* src/Banshee.Widgets/SearchEntry.cs: Changed namespace to Banshee.Widgets
	* src/Banshee.Base/GConfKeys.cs:
	* src/Banshee.Base/ConfigureDefines.cs.in: Changed namespace to 
	Banshee.Base
	* src/PipelineProfile.cs:
	* src/PlaylistColumns.cs: Add using Banshee.Base;
	* Makefile.am: Added docs to SUBDIRS

	* docs/: Added monodoc generated API documentation for Banshee.Base,
	Banshee.Dap, Banshee.MediaEngine, Banshee.Widgets, and Hal
	* configure.ac: Added --disable-docs support

	* configure.ac: Use AM_GST_ELEMENT_CHECK to check for GStreamer pipeline
	elements that are needed at runtime

2005-12-01  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Dap/Ipod/IpodDapTrackInfo.cs: DapTrackInfo implementation
	for the iPod

	* configure.ac: Version 0.9.13; Added Danish translation (da) to 
	ALL_LINGUAS; ipod-sharp is now optional; detect njb-sharp, also optional;
	Added --(enable|disable)-(ipod|njb)
	* banshee.mdp: Updated MonoDevelop project
	* data/glade/player.glade: Generalized all iPod references to "DAP" 
	* hal-sharp/*: Updated to latest hal-sharp
	* libbanshee/hal-context.[ch]: Allow setting callback for property watching
	* src/AboutBox.cs: Added Lasse Bang Mikkelsen to translator credits
	* src/Core.cs: Removed IpodCore
	* src/Library.cs: Added DapSource, removed IpodSource
	* src/Makefile.am: Removed Ipod*.cs/ipod-sharp references
	* src/PlayerInterface.cs: All iPod code generalized to DAP code using
	new Banshee.Dap classes and DapSource. Syncing is disabled for this build
	as the iPod sync code needs to be migrated to the new DAP sync model; 
	same thing with iPod properties dialog
	* src/PlaylistModel.cs:
	* src/PlaylistView.cs: iPod code generalized to DAP code
	* src/SourceView.cs: Removed IpodCore code; read and listen to DapCore;
	generalized iPod code to DAP code
	* src/Banshee.Base/HalCore.cs: Add property watching support
	* src/Banshee.Base/Dap/Dap.cs: Added more base functionality to 
	generic abstract DapDevice class
	* src/Banshee.Base/Dap/DapCore.cs: Support queueing potential DAP devices
	in a wait table; this allows mass storage DAPs to wait for 
	volume.is_mounted to change to true, and ask to be tested again as a DAP;
	added events to notify consumer when DAPs are added/removed; added a
	Devices[] property that lists all connected and initialized DAPs
	* src/Banshee.Base/Dap/DapTrackInfo.cs: tiny hack added to reduce
	changes needed in player interface; will fix later
	* src/Banshee.Dap/Ipod/IpodDap.cs: iPod implementation of DapDevice; 
	currently read-only; syncing code needs to be migrated to new DAP sync
	model
	* src/Banshee.Dap/Ipod/Makefile.am: Link against gtk-sharp-2.0, only
	build if ipod-sharp is enabled by configure
	* src/Banshee.MediaEngine/Vlc/Makefile.am: fixed minor build issue

2005-11-30  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Base/SpecialKeys.cs: Added a Delay property; only raise
	events if duration since last raise has been longer than a set delay;
	fixes problems with remotes that fire on a very small delay when holding
	a button down
	* src/PlayerInterface.cs: Use a 350MS delay for SpecialKeys; catch
	any exception CoverArtThumbnail may throw; only enable SpecialKeys support
	if turned on through GConf
	* src/CoverArtThumbnail.cs: Throw an exception if file can't be found
	* src/GConfKeys.cs: Added new key: EnableSpecialKeys
	* data/banshee.schemas.in: Added new schema for key: EnableSpecialKeys

	* src/IPlaybackModel.cs:
	* src/IpodCore.cs:
	* src/IpodTrackInfo.cs:
	* src/LibraryTrackInfo.cs:
	* src/PlayerInterface.cs:
	* src/PlaylistModel.cs:
	* src/PlaylistView.cs:
	* src/RipTransaction.cs:
	* src/TrackProperties.cs:
	* src/Banshee.Base/TrackInfo.cs:
	* src/Banshee.Base/AudioCd/AudioCdDisk.cs:
	typeof(Banshee.Base.TrackInfo.Duration) is now System.TimeSpan,
	changed from long; all references to TrackInfo.Duration updated to reflect
	change of type

	* entagged-sharp/*: synced with SVN; (long)Length->(TimeSpan)Duration

2005-11-29  Aaron Bockover  <aaron@aaronbock.net>
	
	* src/PlaylistView.cs:
	* src/TrackProperties.cs:
	* src/IpodTrackInfo.cs:
	* src/LibraryTrackInfo.cs:
	* src/Banshee.Base/AudioCd/AudioCdTrackInfo.cs: Updated to reflect API
	changes in Banshee.Base.TrackInfo
	* src/Banshee.Base/TrackInfo.cs: Minor API changes, more conforming to
	.NET Framework Guidelines, and adjusted access levels to some properties
	and fields; added new BansheeTodo attributes to some unfinished properties
	* src/Banshee.Base/BansheeTodo.cs: Attribute class to mark types and
	members as "unfinished", two static methods to print TODO reports
	* src/Banshee.Base/Makefile.am: Added BansheeTodo.cs
	* src/Main.cs: Added command line option --print-todo to generate a TODO
	report based on the BansheeTodo attribute

2005-11-29  Aaron Bockover  <aaron@aaronbock.net>

	* src/mcs.exe: Removed internal 1.1.9.2 support
	* configure.ac: Require Mono 1.1.10; removed internal 1.1.9.2. mcs support

	* src/TrackProperties.cs: 
	* data/glade/trackinfo.glade: Added advanced view support for MimeType and
	Encoding Type properties
	* entagged-sharp/Asf/AsfFileReader.cs: Added video/x-ms-asf as supported
	mimetype because gnome-vfs is dumb
	* entagged-sharp/*: Updated entagged-sharp checkout to latest Mono SVN;
	fixes BGO #320038; minor API changes and optimizations
	* data/banshee.desktop.in.in: Updated MimeType field with supported 
	MimeTypes from entagged-sharp

2005-11-28  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project
	* libbanshee/cd-rip.c:
	* libbanshee/gst-encode.c: re-phrased keywords in error messages to 
	be more friendly (sink->plugin, element->plugin) (BGO #321534)
	* libbanshee/hal-context.c: _() around error strings, fixed minor bug where
	dbus error message was freed before being strduped, so it allways rendered
	as (null); error messages make more sense; removed g_warning() calls as
	messages will be printed in managed land; Added MIT license header
	* libbanshee/hal-context.h: Added MIT license header
	* src/Core.cs: Catch anything Banshee.Base.HalCore.Initialize() may throw
	and push a warning
	* src/Banshee.Base/HalCore.cs: Added an Initialized property; safely handle
	cases where HAL initialization may fail; throw proper exception with
	verbose warnings from hal-context.c
	* src/Banshee.Base/AudioCd/AudioCdCore.cs: Throw exception if HalCore is
	not initialized; disables Audio CD support if that happens
	* src/Banshee.Base/Dap/DapCore.cs: Same thing as AudioCdCore; do not
	load DAP assemblies if HalCore is not initialized; effectively disables
	DAP support in this case
	* src/Banshee.Widgets/NotificationAreaIcon.cs: Better NotificationAreaIcon
	class (fixes BGO #321684); recovers from panel crashing; moved from
	src/NotificationAreaIcon.cs (TrayIcon->NotificationAreaIcon)
	* src/Banshee.Widgets/Makefile.am: Added NotificationAreaIcon.cs
	* src/NotificationAreaIcon.cs: Use new NotificationAreaIcon in 
	src/Banshee.Widgets/NotificationAreaIcon.cs

2005-11-28  Aaron Bockover  <aaron@aaronbock.net>

	* data/glade/trackinfo.glade: Added advanced info expander and table
	* src/TrackProperties.cs: cleaned/reformatted code, added advanced 
	properties to dialog (file name, bitrate, channels, samplerate vbr)
	* data/banshee.schemas.in: 
	* src/Banshee.Base/GConfKeys.cs: Added TrackPropertiesExpanded key to
	save state of advanced expander in the track properties dialog

	* banshee.mdp: Added data files to MonoDevelop project
	* data/banshee.schemas.in: Added schema for /apps/Banshee/WindowMaximized
	* src/Banshee.Base/GConfKeys.cs: Added new key: WindowMaximized
	* src/PlayerInterface.cs: Remember window maximization state, ignore
	saving maximization state when hiding the window (fixes BGO #316784)

2005-11-28  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Base/SpecialKeys.cs: minor cleanup/trim-down

2005-11-28  Aaron Bockover  <aaron@aaronbock.net>

	* src/PlayerInterface.cs: Consume Banshee.Base.SpecialKeys and support
	Play/Pause, Next, and Previous MMKeys
	* src/Banshee.Base/SpecialKeys.cs: new fully managed SpecialKeys class
	that provides MMKeys support by p/invoking X11 and GDK functions; resolves
	BGO #319545
	* src/Banshee.Base/Makefile.am: Add SpecialKeys.cs, DapTrackInfo.cs
	* src/Banshee.Base/Dap/DapTrackInfo.cs: Currently empty DapTrackInfo class
	* src/Banshee.Base/Dap/DapCore.cs: Added license header, debug printing
	for new DAP arbitrary property support
	* src/Banshee.Base/Dap/Dap.cs: Added more base functionality to the new
	abstract DAP class (Dap), provides an arbitrary property system
	* src/Banshee.Dap/Njb/Njb.cs: Do not extend Banshee.Dap.Dap for now,
	empty placeholder class
	* src/Banshee.Dap/Ipod/Ipod.cs: Provide iPod implementation of current
	state of Banshee.Dap.Dap abstract class
	* src/Banshee.Dap/Ipod/Makefile.am: Install ipod-sharp into Banshee.Dap
	* src/Banshee.Dap/Ipod/ipod-sharp.dll.config.in: DLL map for ipod-sharp
	* configure.ac: output src/Banshee.Dap/Ipod/ipod-sharp.dll.config;
	new variable, IPODSHARP_ASSEMBLIES for use in 
	src/Banshee.Dap/Ipod/Makefile.am
	* hal-sharp/HalDevice.cs: Updated hal-sharp snapshot, adds 
	Hal.Device.Parent, needed by Banshee.Dap.Ipod.IpodDap
	* libbanshee/hal-context.c: disable debug output
	* banshee.mdp: Updated MonoDevelop project

2005-11-27  Aaron Bockover  <aaron@aaronbock.net>

	* src/Banshee.Base/Utilities.cs: new Event class for smart handling of
	invoking event delegates

2005-11-26  Aaron Bockover  <aaron@aaronbock.net>

	* src/PlayerInterface.cs: Fixed bug/exception in tray icon setup

2005-11-26  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp: Updated MonoDevelop project

	* src/Banshee.Base/Dap/DapCore.cs: Load DAP implementation assemblies
	at runtime to build type support table
	* src/Banshee.Dap/Njb/NjbDap.cs: Fixed namespace/class name typos

	* configure.ac: Output src/Banshee.Dap/{Ipod,Njb}/Makefile
	* src/Banshee.Base/Dap/DapCore.cs: Static class for all DAP event 
	management and device detection
	* src/Banshee.Base/Dap/Dap.cs: Base DAP class and related types
	* src/Banshee.Dap/Ipod: Ipod implementation of Banshee.Dap.Dap (incomplete)
	* src/Banshee.Dap/Njb: NJB implementation of Banshee.Dap.Dap (incomplete)
	* src/Banshee.MediaEngine/Makefile.am:
	* src/Banshee.MediaEngine/Gstreamer/Makefile.am:
	* src/Banshee.MediaEngine/Helix/Makefile.am:
	* src/Banshee.MediaEngine/Vlc/Makefile.am: Install to 
	@libdir@/banshee/Banshee.MediaEngine
	* src/Banshee.MediaEngine/Helix/helix-sharp.dll.config.in:
	* src/Banshee.MediaEngine/Vlc/vlc-player.dll.config.in: Updated map
	path to @libdir@/banshee/Banshee.MediaEngine
	* src/Banshee.Dap/Makefile.am: Previous Banshee.Dap code is now in the
	Banshee.Base assembly; assemblies built in here will be runtime-loadable
	actual DAP implementations
	* src/Banshee.Base/PlayerEngineLoader.cs: engines now load from 
	Banshee.MediaEngine instead of mediaengines  
	* src/Core.cs: Banshee.Dap.DeviceEventListener is now Banshee.Dap.DapCore

2005-11-25  Aaron Bockover  <aaron@aaronbock.net>

	* libbanshee/hal-context.[ch]: new glue for HAL
	* Makefile.am: removed plugincore and mediaengines

	* data/banshee.desktop.in.in: Removed TryExec
	* data/Makefile.am: Moved some CLEANFILES items to DISTCLEANFILES

	* libbanshee/Makefile.am:
	* libbanshee/cd-detect.[ch]: Removed HAL Audio CD detection code; this
	support is now in Banshee.Base.AudioCdCore using new managed HAL

	* configure.ac: Added new namespace directories for Makefile/config
	output generation, removed old directories/Makefiles, etc.
	* banshee.mdp:
	* banshee.mds: Updated MonoDevelop project

	* src/Banshee.MediaEngine: Moved/renamed from mediaengines/

	* src/Banshee.Widgets/Makefile.am: Updated to reflect new files
	* src/Banshee.Widgets/ActiveUserEvent.cs:
	* src/Banshee.Widgets/ActiveUserEventsManager.cs:
	* src/Banshee.Widgets/HigMessageDialog.cs: Widgets moved from src/

	* src/Makefile.am: Reflect changes to moved/deleted/added files and
	link to proper new assemblies
	* src/BurnCore.cs: Use Banshee.Base.ThreadAssist.ProxyToMain
	* src/LibraryTransactionStatus.cs: use new namespaces
	* src/AboutBox.cs: Updated with new namespaces; added pragma to ignore
	Gnome.About deprecation warning

	* src/Core.cs: Moved ArgumentQueue classes, threading helper methods 
	to Banshee.Base; added DAP/HAL stuff
	* src/Dialogs.cs: HigMessageDialog moved to Banshee.Widgets
	* src/Database.cs: Updated namespaces; updated call to LogCore
	
	* src/PlayerInterface.cs: use ThreadAssist.ProxyToMain in place of
	Core.ProxyToMainThread, updated to use new namespaces
	* src/PlaylistModel.cs: Updated to reflect new namespaces; use 
	ThreadAssist instead of Core.MainThread	
	* src/LibraryTrackInfo.cs: use Entagged.AudioFile instead of
	Entagged.AudioFileWrapper; updated to reflect new namespaces
	* src/SourceView.cs: Updated with Banshee.Base namespace; iPod support
	temp. disabled
	* src/RatingRenderer.cs: Added license to header, updated namespaces
	
	* src/DragDrop.cs:
	* src/FileEncodeTransaction.cs:
	* src/IpodTrackInfo.cs:
	* src/Library.cs:
	* src/LibraryTransactions.cs:
	* src/Main.cs: 
	* src/LogCoreViewer.cs:
	* src/PlaylistView.cs: 
	* src/Preferences.cs: 
	* src/RipTransactions.cs
	* src/TrackProperties.cs:
	* src/FileSystemMonitor/InotifyWatch.cs:
	* src/FileSystemMonitor/FileSystemWatcherWatch.cs: updated namespaces

	* src/Banshee.Dap: New namespace/assembly for DAP support; incomplete
	
	* src/Banshee.Base/Globals.cs: static global variables
	* src/Banshee.Base/AudioCd/AudioCdCore.cs: Rewritten Audio CD Core using
	fully managed HAL
	* src/Banshee/Base/AudioCd: Rewritten/refactored/moved 
	from src/AudioCdCore.cs
	* src/Banshee.Base/HalCore.cs: New core for HAL support off of a single
	global context
	* src/Banshee.Base: New namespaces and assembly, contains many classes
	moved from src/ that can now be reused for plugins
	
	* hal-sharp/*: synced with latest hal-sharp in Mono SVN
	
	* entagged-sharp/*: synced with latest entagged-sharp in Mono SVN; adds
	WMA support and ID3 2.4 support
	
	* plugincore/*: Moved to src/Banshee.MediaEngine
	* mediaengines/*.cs: Moved to src/Banshee.Base

2005-11-23  Aaron Bockover  <aaron@aaronbock.net>

	* data/images/ipod/22x22/*:
	* data/images/ipod/16x16/*: Optimized raster iPod icons from Jakub Steiner
	* data/images/ipod/Makefile.am: Install rules for new raster sizes
	* data/images/ipod/scalable/*video*: Placeholder SVG video iPod icons
	* src/IpodCore.cs: Map 24 to 22 for now, map the video iPod icon

2005-11-22  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Remove references to Banshee.Base/Banshee.Dap, as they
	are not committed yet
	
2005-11-21  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Require only GTK 2.6, mainly for FC4
	* src/AboutBox.cs: Fall back on the Gnome.About about dialog if the
	GTK 2.8 version does not exist; fixed Ulas' name; made common text
	fields static variables

2005-11-18  Aaron Bockover  <aaron@aaronbock.net>

	* src/PlaylistModel.cs: (AddTrack) sets TrackInfo.TreeIter to tree iter
	in model, (RemoveTrack) unsets TrackInfo.TreeIter
	* plugincore/TrackInfo.cs: Added a TreeIter field
	* configure.ac: Whoops, just require Gtk# 2.3.92

2005-11-17  Aaron Bockover  <aaron@aaronbock.net>

	* NEWS: Updated with 0.9.12 release notes
	* src/BurnCore.cs: Removed a Console.WriteLine debug statement
	* src/NotificationAreaIcon.cs: Disabled shuffle/repeat items in tray menu
	for now; not sure how to allow these from here, if all, given the new
	options in the UI for these modes
	* src/Paths.cs: DefaultLibraryPath is now ~/Music... thought this was done
	a month ago...
	* src/RipTransaction.cs: Fixed another Path/URI bug, using 
	PathUtil.PathToFileUri
	* src/LibraryTrackInfo.cs: Do not use PathUtils.PathToFileUri() on
	the Uri field in the database, as it's already a Uri... fixes a bug 
	introduced between releases
	* configure.ac: Version 0.9.12, require Gtk# 2.4.0, GTK+-2.8, and
	ipod-sharp 0.5.11
	* banshee.mdp: Updated MonoDevelop project
	* data/glade/player.glade: Added menu items for repeat none, repeat single,
	repeat all, and shuffle; removed repeat/shuffle toggle buttons as they
	have been replaced with the custom MultiStateToggleButton widget
	* src/ToggleStates.cs: Implemented ToggleState subclasses for repeat and
	shuffle toggle states
	* src/LibraryTransactionStatus.cs:
	* src/QueryBuilderModel.cs:
	* src/TrackInfoHeader.cs:
	* src/VersionInformationDialog.cs:
	* src/ActiveUserEvent.cs: using Banshee.Widgets;
	* src/StockIcons.cs: Removed media-repeat, media-shuffle; added
	media-repeat-all, media-repeat-none, media-repeat-single, 
	media-shuffle-enabled, media-shuffle-disabled
	* src/IPlaybackModel.cs: Changed Repeat/repeat from bool to RepeatMode
	* src/PlaylistModel.cs: Changed Repeat/repeat from bool to RepeatMode, 
	added RepeatMode enum, changed logic to support RepeatMode.None, 
	RepeatMode.All, RepeatMode.Single
	* src/PlayerInterface.cs: Implemented Repeat None, Repeat All, 
	Repeat Single modes using new MultiStateToggleButton widget and menu items,
	re-implemented Shuffle mode in same way
	* src/Makefile.am: Link against src/Banshee.Widgets/Banshee.Widgets.dll,
	updated resources 
	* src/Banshee.Widgets/Resources/*: resources needed by custom widgets
	* src/Banshee.Widgets/MultiStateToggleButton.cs: New custom widget that
	allows cycling between N states, can link CheckMenuItem and RadioMenuItem
	widgets to states
	* src/Banshee.Widgets/ToggleState.cs: Abstract base class for defining a
	toggle state for the MultiStateToggleButton widget
	* src/Banshee.Widgets/*: New assembly containing moved/new custom 
	standalone widgets that can possibly be used by other applications. 
	No ties to Banshee namespaces
	* src/AltProgressBar.cs:
	* src/CoverArtThumbnail.cs:
	* src/DateButton.cs:
	* src/EllipsizeLabel.cs:
	* src/ImageAnimation.cs:
	* src/SearchEntry.cs:
	* src/SimpleNotebook.cs:
	* src/VolumeButton.cs: Moved to src/Banshee.Widgets, namespace changed to
	Banshee.Widgets

2005-11-15  Aaron Bockover  <aaron@aaronbock.net>

	* src/GtkSharpBackports/FileChooserButton.cs: Fixed a minor compilation
	issue against Gtk# 2.7.1
	* data/banshee.desktop.in.in: Added MimeType field based on entagged-sharp
	mime-type support attributes; Add %U to exec

2005-11-15  Brad Taylor  <brad@getcoded.net>

	* src/PlayerInterface.cs: Fix typo in tray icon.

2005-11-14  Aaron Bockover  <aaron@aaronbock.net>

	* src/NotificationAreaIcon.cs (PositionMenu): Properly position the menu
	based on panel size and location (Fixes #315227)
	* src/LibraryTrackInfo.cs: Always use PathUtil.PathToFileUri()
	* data/glade/player.glade: Emit OnScaleTimeMoveSlider for MotionNotifyEvent
	* src/PlayerInterface.cs: Update the position label when the slider is 
	dragged, enables better seeking (Ruben Vermeersch)
	* src/TrackInfoHeader.cs: Don't escape entities twice
	* data/banshee.schemas.in: Added /apps/banshee/EnableFileSystemMonitoring;
	fixed typo
	* src/AudioCdCore.cs: Fixed typo
	* src/PlayerInterface.cs: Respect --play on new instance after the library
	has loaded 
	* src/PlayerInterface.cs:
	* src/PlaylistView.cs: call playlistModel.Advance() if nothing is loaded
	in the engine and playlistView.PlaySelected() fails (pressing "play" on 
	first start will play work) (Ruben Vermeersch)
	* src/LibraryTrackInfo.cs:
	* src/LibraryTransactions.cs:
	* src/FileSystemMonitor/FileSystemWatcherWatch.cs:
	* src/FileSystemMonitor/InotifyWatch.cs: change to use 
	PathUtil.FileUriStringToPath
	* src/Utilities.cs: Added Timer class from F-Spot; added 
	PathUtil.FileUriStringToPath to replace StringUtil path methods 

2005-11-14  James Willcox  <snorp@snorp.net>

	* src/PlaylistView.cs: only scroll to the playing song if it is
	outside the current viewable area.

2005-11-13  Aaron Bockover  <aaron@aaronbock.net>

	* src/AboutBox.cs: Added Doğacan Güney
	* src/GConfKeys.cs: Added key EnableFileSystemMonitoring; reformatted code
	* src/LibraryTransactions.cs (FileLoadTransaction): Load multiple paths
	at once without making them raw (Doğacan Güney)
	* src/Library.cs (Library.Remove): Overloaded to allow removal based on
	a System.Uri (Doğacan Güney)
	* src/Core.cs: Instantiate and dispose of FileSystemMonitor.Watcher only
	if enabled in GConf
	* libbanshee/Makefile.am: Added inotify glue
	* libbanshee/inotify-glue.c:
	* libbanshee/inotify.h:
	* libbanshee/inotify-syscalls.h: inotify system-level glue
	* src/FileSystemMonitor/*.cs: Added File System monitoring patch by 
	Doğacan Güney, uses Inotify. If Inotify is unavailable, it falls back
	on FileSystemWatcher. 
	* src/Makefile.am: Added FileSystemMonitor files
	
	* configure.ac: Added support for using GStreamer 0.9 packages through
	--enable-gstreamer-dev; currently will break things, do not use yet
	* src/PlayerInterface.cs: Don't use space as a hotkey if the search box
	has focus
	* src/AboutBox.cs: Added Christian Rose to translator credits
	* src/PlaylistModel.cs: Merged Pat Rondon's (pat@thepatsite.com) advance
	to random track when playing first track in shuffle mode (#54688)

2005-11-13  Christian Rose  <menthos@menthos.com>

	* configure.ac: Added "sv" to ALL_LINGUAS.

2005-11-12  Aaron Bockover  <aaron@aaronbock.net>

	* data/images/source-cd-audio.png: Updated with tango icon
	* src/IpodCore.cs (IpodMisc.GetIcon): Accept either an Ipod.Device or
	an Ipod.DeviceModel
	* src/Dialogs.cs: Accept a Gdk.Pixbuf instead of a string for the icon
	* src/IpodNewDialog.cs: 
	* src/PlayerInterface.cs:
	* src/SourceView.cs: Use IpodMisc.GetIcon()
	* src/PlayerInterface.cs: Show a large version of the iPod icon in the
	sync view when syncing iPod
	* configure.ac: Expand $datadir into $expanded_datadir 
	* src/ConfigureDefines.cs.in: Added ICON_THEME_DIR constant
	* src/IpodCore.cs (IpodMisc.GetIcon): return a Gdk.Pixbuf of an iPod in
	a given size, points to the new installed tango icons into the hicolor
	icon theme
	* src/Makefile.am: Removed old ipod icon references
	* data/images/ipod/*: New tango iPod icons from Ryan Collier
	* data/images/Makefile.am: Added ipod to SUBDIRS, removed old ipod icons
	* src/PlayerInterface.cs: Pressing enter on the playlist view will
	play the first song in a selection
	* src/PlayerInterface.cs: Implement some more key bindings, and changed
	the default behavior of the previous button to reset the position of
	the current playing song to 0 seconds if the song has played for more
	than ~2 seconds (the resolution on this isn't very precise); Shift+Previous
	Click goes to the previous song no matter what, and pressing space now
	toggles playback (play/pause)

2005-11-12  James Willcox  <snorp@snorp.net>

	* src/IpodCore.cs: be a little more careful, and update to the
	changed API for progress reporting.
	* src/IpodTrackInfo.cs: use PathUtil.PathToFileUri
	* src/LibraryTrackInfo.cs: ditto, and store Uris in the db
	in escaped form.
	* src/SqlGenerator.cs: don't unnecessarily remove quotes when
	escaping them.

2005-11-11  Aaron Bockover  <aaron@aaronbock.net>
	
	* configure.ac: Version 0.9.11.1
	* NEWS: Updated release notes
	* data/glade/player.glade: Added another container for switching out
	widgets during the ipod sync state
	* src/IpodCore.cs (EmitSyncStarted), (EmitSyncCompleted): Emit through
	Core.ProxyToMainThread
	* src/PlayerInterface.cs: Fixed ipod syncing, was a threading issue,
	of course; fixed up syncing UI, made things more consistent and feel
	better, tooltips, labels, etc
	* data/images/source-ipod-regular.png, data/images/source-ipod-color.png,
	data/images/source-ipod-shuffle.png: renamed to ipod-regular-24.png,
	ipod-color-24.png, and ipod-shuffle.png
	* src/Makefile.am: 
	* data/images/Makefile.am: Updated to reflect renaming of ipod icons
	* src/PlayerInterface.cs:
	* src/SourceView.cs: Use IpodMisc.GetIconString() to get icon file name
	* src/IpodCore.cs: Show the actual iPod icon for the progress widget; 
	added IpodMisc.GetIconString(device) to return the proper string for
	building an ipod file name to show icon matching actual iPod
	* src/IpodCore.cs: Hopefully fixed URI translation problem; canceling the
	ipod encode now cancels the ipod sync, as it should
	* src/BurnCore.cs: Use Queue instead of ArrayList
	* src/FileEncodeTransaction.cs: Do not use a Hashtable, it can scramble
	the order of the queued items; was the culprit for out of position
	tracks on burned CDs
	* src/Utilities.cs: New PathUtil class: PathUtil.PathToFileUri and
	PathUtil.FileUriToPath; removed old unused cruft; reformatted
	* src/IpodCore.cs: Removed unused reference to IPod.ProgressDialog
	* banshee.mdp: Updated MonoDevelop project file

2005-11-10  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Version 0.9.11

2005-11-09  Aaron Bockover  <aaron@aaronbock.net>

	* src/ActiveUserEvent.cs: Added a CanCancel property that maps to the
	sensitivity of the cancel button
	* src/PlayerInterface.cs:
	* src/StockIcons.cs:
	* src/RipTransaction.cs: 
	* data/glade/player.glade: Ensure all nomenclature is in sync regarding
	import/write CD. Changed "Rip" to "Import" and "Burn" to "Write"
	* src/BurnCore.cs: Major overhaul; use ActiveUserEvent for progress 
	reporting; handle threading and events much better; massive clean up
	* libbanshee/gst-encode.c: handle gnomevfssink allow-overwrite signal
	for encoding over possible left over temporary files
	* src/LogCore.cs: 
	* src/LogCoreViewer.cs: Added "Information" LogEntry type
	* mediaengines/gst/GstPlayerEngine.cs: fixed typo in engine description
	* configure.ac: Add pt_BR to ALL_LINGUAS
	* src/LogCoreViewer.cs: Show both short message and details in viewer
	text entry
	* src/Core.cs: Handle exception from AudioCdCore exception in the case
	where HAL was not able to become initialized; disable AudioCdCore and
	allow Banshee to continue with disabled CD support
	* src/AudioCdCore.cs: marshal native error messages to propagate to 
	exception if HAL could not be initialized
	* src/SourceView.cs: 
	* src/PlayerInterface.cs:
	* src/Core.cs: Only interact with the AudioCdCore if it is available
	* libbanshee/cd-detect.[ch] (cd_detect_new): expects a gchar ** which 
	may be filled with an allocated error message if function returns NULL,
	must be freed if non-null
	* libbanshee/cd-detect.c: Added g_warning calls for potential HAL 
	initialization problems
	* vacuum.sh: Runs make maintainer-clean and then cleans extra junk that
	is left behind, returning to essentially a clean cvs checkout
	* Makefile.am: Made DISTCLEAN a little more standard/correct and moved
	my extra crazy house cleaning to a script, vacuum.sh
	* src/AboutBox.cs: Added Ulas Sahin to authors credits, Marco Carvalho to
	translators credits
	* src/LogCore.cs: LogCore implements IEnumerable; added more helper methods
	for pushing different entry types; subclass LogEntry as WarningLogEntry,
	DebugLogEntry, ErrorLogEntry
	* src/LibraryTransactionManager.cs:
	* src/LibraryTransactions.cs:
	* src/AudioCdCore.cs:
	* src/PipelineProfile.cs:
	* src/Database.cs:
	* src/Core.cs:
	* src/RipTransaction.cs: Use the LogCore for debug logging instead 
	of DebugLog
	* src/DebugLog.cs: Removed 
	* src/Makefile.am: Added LogCoreViewer.cs, Removed DebugLog.cs
	* data/glade/player.glade:
	* src/PlayerInterface.cs: Add menu item for showing the LogCore Viewer
	* src/LogCoreViewer.cs: A dialog for viewing the LogCore entries
	* src/LibraryTransactions.cs (PlaylistLoadTransaction.Run): only
	raise track info if not null :)
	* src/PlayerInterface.cs (OnPlaylistUpdated): Got rid of custom time
	calculations in favour of TimeSpan; cleaned up a little
	* src/PlayerInterface.cs (OnLogCoreUpdated): Show a dialog for LogEntry
	entries that have ShowUser set; LogCore is now the preferred
	method of logging events and presenting errors/warnings to the user
	* src/LogCore.cs: Added more helper methods for making logging as easy
	as possible
	* src/LibraryTransactions.cs:
	* src/BurnCore.cs: Updated to reflect changes in LogCore
	* src/Core.cs: LogCore handles its own instance
	* src/AudioCdCore.cs: Use LogCore

2005-11-08  Aaron Bockover  <aaron@aaronbock.net>

	* src/Preferences.cs:
	* src/AboutBox.cs: Explicitly use GtkSharpBackports

2005-11-08  James Willcox  <snorp@snorp.net>

	* src/IpodCore.cs:
	* src/IpodTrackInfo.cs:

	Updated to use new ipod-sharp API.

2005-11-08  Aaron Bockover  <aaron@aaronbock.net>

	* src/AudioCdCore.cs (CreateDisk): Use anonymous method, but work 
	around mcs bug #76642

	* src/GtkSharpBackports/AboutDialogActivateLinkFunc.cs:
	* src/GtkSharpBackports/GtkSharp.AboutDialogActivateLinkFuncNative.cs:
	* src/GtkSharpBackports/AboutDialog.cs:
	* src/GtkSharpBackports/FileChooserButton.cs:
	* src/GtkSharpBackports/GtkSharpBackports.dll.config.in:
	* src/GtkSharpBackports/Makefile.am: Imported from gtk-sharp-2.6, 
	namespaces changed to GtkSharpBackports
	
	* src/AboutBox.cs: Remove manual wrapped Gtk.AboutBox, 
	use GtkSharpBackports.AboutBox
	* src/Preferences.cs: Use GtkSharpBackports.FileChooserButton
	* src/FileChooserButton.cs: moved to src/GtkSharpBackports
	* src/Makefile.am: Removed FileChooserButton.cs, added GtkSharpBackports
	to SUBDIRS, link against GtkSharpBackports.dll

	* configure.ac: generate src/GtkSharpBackports/Makefile and
	src/GtkSharpBackports/GtkSharpBackports.dll.config

2005-11-07  Aaron Bockover  <aaron@aaronbock.net>

	* src/MusicBrainz/SimpleDisc.cs: Changed 'Invalid track count from TOC'
	error string to be easier to read and more meaningful
	* src/Dialogs.cs: Updated formatting, make ErrorDialog class use
	HigMessageDialog, add support for header argument, do not use Run/Destroy
	to prevent UI hangs
	* src/AudioCdCore.cs: Show an error dialog if CD reading failed,
	merged some similar code into a private helper method

	* configure.ac: Only require mono 1.1.9 instead of 1.1.9.2 for the sake
	of building with mcs HEAD

	* libbanshee/Makefile.am: Removed cd-test test
	* libbanshee/cd-test.c: Removed test, functionality handled mainly by
	MusicBrainz in managed land now

	* src/MusicBrainz/Utilities.cs (StringToDateTime): Convert a MusicBrainz
	date into a DateTime object
	* src/MusicBrainz/SimpleArtist.cs: Simple wrapper class for a MusicBrainz 
	Artist RDF
	* src/MusicBrainz/SimpleAlbum.cs: Simple wrapper class for a MusicBrainz
	Album RDF
	* src/MusicBrainz/SimpleLookupTest.cs: Test program for using new 
	RDF wrapper classes
	* src/MusicBrainz/Makefile.am: Added SimpleArtist.cs, SimpleAlbum.cs,
	SimpleLookupTest.cs, Utilities.cs; created 'make test' rules to 
	build MusicBrainz tests
	* src/MusicBrainz/Client.cs: Added support for querying with arguments;
	added support for marshalling string arrays to UTF8 pointer arrays; Added
	GetIDFromUrl and GetID methods for transforming a MusicBrainz URL ID into
	a regular MusicBrainz ID
	* src/SimpleTrack.cs (ToString): Return a formatted version of the object

	* src/Utilities.cs (StringUtil.UriToFileName): Do a proper conversion
	using the Uri class; fixes bugs with non-ASCII characters in the path

2005-11-03  Aaron Bockover  <aaron@aaronbock.net>

	* burn-sharp/burn-sharp.dll.config.in: Map to proper so version with
	LNB_SOVERSION
	* configure.ac: Detect whether libnautilus-burn 2.12 or 2.13+, and set
	LNB_SOVERSION to 2 or 3 accordingly
	* data/glade/preferences.glade: Removed the text view/button for selecting
	library location, added container for FileChooserButton
	* src/Preferences.cs: Use the FileChooserButton for selecting the library
	location instead of a Button+FileChooserDialog+TextView; more Gnomey and
	less iTunesy
	* src/Makefile.am: Added src/FileChooserButton.cs
	* src/FileChooserButton.cs: Adapted Gtk.FileChooserButton from 
	gtk-sharp-2.6 as Banshee.FileChooserButton

2005-11-02  Aaron Bockover  <aaron@aaronbock.net>

	* src/configure.ac: Version 0.9.10
	* src/AboutBox.cs: Added Øivind Hoel to translator credits
	* src/FileEncodeTransaction.cs: Adapt to use ActiveUserEvent
	* src/IpodCore.cs:
	* src/BurnCore.cs: Updated for changes in FileEncodeTransaction
	* data/glade/player.glade: Reorder edit menu, add import/burn CD items to
	music menu
	* src/PlayerInterface.cs: Set menu items sensitive/insensitive contextually
	* src/Main.cs: Add --version option
	* configure.ac: Generate src/banshee from src/banshee.in
	* src/Makefile.am: Install the Bash wrapper script
	* src/banshee.in: Bash wrapper script
	* src/banshee.c: Removed alternative wrapper script, switched back to Bash
	* src/PlayerInterface.cs: Display current position/total time in NAI 
	tooltip (patch from Doğacan Güney)
	* data/images/encode-action-24.png:
	* data/images/Makefile.am:
	* src/Makefile.am: Add icon for encoder progress action
	* src/PlayerInterface.cs: Fix minor bug concerning meta key detection (Ulas)

2005-11-01  Aaron Bockover  <aaron@aaronbock.net>

	* src/NotificationAreaIcon.cs: Add mouse scroll event support (Ulas SAHIN);
	tab->space formatting
	* src/PlayerInterface.cs: Adjust volume when SHIFT+Scroll on notification
	area icon (NAI) (Ulas SAHIN), Next/Previous track on normal scroll on NAI,
	seek in current song when CTRL+Scroll on NAI; more tab->space formatting

2005-11-01  Aaron Bockover  <aaron@aaronbock.net>

	* banshee.mdp:
	* banshee.mds:
	* mediaengines/gst/gst-mediaengine.mdp:
	* mediaengines/helix/helix-mediaengine.mdp:
	* plugincore/plugincore.mdp:
	* plugincore/plugincore.mds: Committed Ulas SAHIN's patch to update the
	MonoDevelop project files

2005-10-31  Aaron Bockover  <aaron@aaronbock.net>

	* data/banshee.schemas.in: Added schema for ShowNotificationAreaIcon key
	* src/PlayerInterface.cs: Only install notification area icon if 
	ShowNotificationAreaIcon gconf key is true
	* src/GConfKeys.cs: Added key for ShowNotificationAreaIcon
	* src/RipTransaction.cs: Removed +1 because MusicBrainz is 1-based and
	not 0-based in reporting the track index
	* HACKING: Updated it with revised style guidelines
	* entagged-sharp/: Updated entagged-sharp snapshot

2005-10-31  Miguel de Icaza  <miguel@novell.com>

	* src/LibraryTrackInfo.cs: Null or empty strings will default to
	the filename guessed values.

2005-10-31  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Added nb to ALL_LINGUAS 

2005-10-28  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Version 0.9.9, require ipod-sharp 0.5.9, mono 1.1.9.2,
	GStreamer 0.8.11, libnautilus-burn 2.12
	* data/glade/trackinfo.glade: Switch order of Save/Cancel buttons
	* data/glade/player.glade: Add text labels to rip/burn icons
	* src/Library.cs: Handle exception when thrown when unable to create
	library directory
	* src/NotificationAreaIcon.cs: Switch order of Next/Previous menu items

2005-10-28  David Sedeño <david@alderia.com>

	* src/SearchEntry.cs: Added CanFocus field
	* src/PlayerInterface.cs: Check if the search entry has already the
	focus so we can search with anything with 'j' letter.

2005-10-27  Aaron Bockover  <aaron@aaronbock.net>
	
	* libbanshee/cd-test.c: Removed #include "cd-info.h"
	* src/AudioCdCore.cs: Use Utilities OpenFlags flags
	* src/LibraryTrackInfo.cs: Use DateTimeUtil class for D/T conversion
	* src/Utilities.cs: Copied Date/Time utils from 
	Mono.Unix.Native.NativeConvert to DateTimeUtil class, and OpenFlags
	* src/Main.cs: Arg is audio-cd for now instead of play-cd
	* src/Makefile.am: Added mcs.exe to EXTRA_DIST
	* src/PlayerInterface.cs (PromptForImport): Fix initial import 
	dialog freeze
	* src/MusicBrainz/Makefile.am: Added $(srcdir)/ prefixes to sources
	to make distcheck happy
	* src/mcs.exe: Added precompiled bare assembly of mono mcs 1.1.9.2 
	for packagers to use who can't upgrade from mono 1.1.8. Assemblies
	produced by this 1.1.9.2 compiler will run on the 1.1.8 mono stack
	* configure.ac: Added option to use an internal mcs 1.1.9.2 compiler,
	--with-internal-mcs. Use only if you can't upgrade your distrobution's
	mono

2005-10-26  Aaron Bockover  <aaron@aaronbock.net>

	* src/Library.cs: Use new/permanent library DB path: 
	~/.gnome2/banshee/banshee.db, use and move the old one if it exists
	* plugincore/Paths.cs: Moved ApplicationData from ~/.config/banshee to
	~/.gnome2/banshee, create the cover art directory if it doesn't exist
	when it's requested
	* data/glade/player.glade: Added a container for the 
	ActiveUserEventsManager widget
	* src/banshee.exe.config.in: Map for GTK+
	* src/Core.cs (ProxyToMainThread): Wrap Application.Invoke to run handler
	in current thread if already in main thread
	* src/PlayerInterface.cs: Integrate ActiveUserEventsManager into UI
	* src/Makefile.am: Add ActiveUserEvent.cs, ActiveUserEventsManager.cs and
	update for new burn icons
	* src/StockIcons.cs:
	* src/Preferences.cs:
	* src/BurnCore.cs: Use new burn icons
	* src/RipTransaction.cs:
	* src/IpodCore.cs: Use the new user events manager
	* src/ActiveUserEventsManager.cs: user events manager for progress 
	reporting
	* src/ActiveUserEvent.cs: Class for user events to use to report progress
	and messages to a managed user interface
	* src/AboutBox.cs: Bindings for the GTK About Box (don't exist in 
	gtk-sharp yet), use it instead of the GNOME About Box.

2005-10-25  Aaron Bockover  <aaron@aaronbock.net>

	* src/SearchEntry: Reformatted code, added Focus() method
	* src/PlayerInterface.cs (OnKeyPressEvent): use GLib.ConnectBefore to
	handle key press events; J/j/F3 focus the search widget, and 
	CTRL+Left rewinds by 10 seconds, CTRL+Right fast-forwards 10 seconds
	* src/CoverArtThumbnail.cs: Fixed segfault when trying to thumbnail
	a null pixbuf

2005-10-24  Miguel de Icaza  <miguel@novell.com>

	* src/PlayerInterface.cs (OnIpodDeviceChanged): Put all the code
	in this method inside an Application.Invoke instead of using one
	Application.Invoke per ListStore.  

	Also surrounds the code that was hanging Banshee after triggering
	an iPodSync: the second part of the routine was not protected
	inside an Application.Invoke.

	* src/PlaylistView.cs (RipCellInd): Avoid try/catch and instead
	use "as" to explicitly state what is going on.  Also helps
	reduce the exceptions being thrown while tracking issues.

	* src/LibraryTrackInfo.cs (LoadFromDatabaseReader): the values
	stored were strings, not longs.  Parse them accordingly.

	Use mono --trace=N:nothing banshee.exe to find abuses of exception
	handling. 
	
2005-10-23  Aaron Bockover  <aaron@aaronbock.net>

	* data/glade/player.glade: Added delete from drive menu items
	* src/PlayerInterface.cs: Added ability to remove songs permanently from 
	drive, not just from being referenced in library

	* data/glade/player.glade: Added Full Screen menu item to View menu
	* src/PlayerInterface.cs: Added Full Screen mode

	* src/AudioCdCore.cs: Removed reference to CddbSlaveClient
	* src/Makefile.am: removed CddbSlaveClient.cs from build
	* src/CddbSlaveClient.cs: removed Gnome Media CDDB Slave2 client bindings

	* data/glade/player.glade: Added a container for the CoverArtThumbnail 
	widget
	* src/Makefile.am: Added CoverArtThumbnail.cs, AmazonCoverFetcher.cs
	* src/AudioCdCore.cs: Fetch cover art from Amazon.com after MusicBrainz 
	returns an ASIN
	* src/PlayerInterface.cs: Show a CoverArtThumbnail widget in header
	* src/LibraryTrackInfo.cs: Copy ASIN from AudioCdTrackInfo to 
	LibraryTrackInfo
	* src/AmazonCoverFetcher.cs: Fetch cover art from Amazon.com based on ASIN
	* src/CoverArtThumbnail.cs: Widget to scale and display a thumbnail of
	cover art and display full-resolution cover art in popup window when
	cursor hovers over thumbnail
	* plugincore/Makefile.am: Added Paths.cs
	* plugincore/TrackInfo.cs: Added Asin property, added CoverArtFileName
	property that returns cover art path based on Asin
	* plugincore/Paths.cs: Paths class available to plugins, added property
	CoverArtDirectory and GetCoverArtPath() method
	* src/Utilities.cs: Moved Paths class to plugincore/Paths.cs

2005-10-22  Aaron Bockover  <aaron@aaronbock.net>

	* src/PlayerInterface.cs: Show/Hide the rip column for the respective view,
	only queue items for ripping that have been checked, nice pretty rip icon
	* src/PlaylistView.cs: Added a toggle column used for selecting tracks 
	for ripping
	* src/AudioCdCore.cs: Added CanRip property that is toggled on/off to 
	designate whether to rip a track or not
	* src/StockIcons.cs: Added a hashtable map to icon names, added the nice
	rip icon (media-rip maps to cd-action-rip-24)

	* configure.ac: Remove all IDL/CORBA junk previously needed for CDDB Slave2
	* libbanshee/GNOME_Media_CDDBSlave2.idl:
	* libbanshee/cd-info.[ch]:
	* libbanshee/cddb-slave-client.[ch]:
	* libbanshee/cddb-test.c: Removed, yay for less bloat
	* libbanshee/Makefile.am: Remove references to removed files, do not
	worry about IDL cruft... yay!

	* src/MusicBrainz/SimpleDisc.cs: Add an indexer for looking up tracks
	* src/AudioCdCore.cs: Removed CDDB implementation, implemented MusicBrainz
	CD TOC reading and Metadata Lookup, refactored and cleaned up a lot in here

2005-10-21  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Generate src/MusicBrainz/MusicBrainz.dll.config, and 
	src/MusicBrainz/Makefile
	* src/Makefile.am: Add MusicBrainz to SUBDIRS, link against MusicBrainz.dll
	* src/MusicBrainz/Makefile.am: Build/install MusicBrainz.dll
	* src/MusicBrainz/MusicBrainz.dll.config.in: DLL Mappings to libmusicbrainz
	* src/MusicBrainz/Client.cs: MusicBrainz C# bindings to the MusicBrainz 
	client
	* src/MusicBrainz/ClientVersion.cs: Class representing MusicBrainz client
	version information
	* src/MusicBrainz/Rdf.cs: RDF Strings for the MusicBrainz client
	* src/MusicBrainz/SimpleDisc.cs: Basic class to handle reading CD 
	and querying MB
	* src/MusicBrainz/SimpleTrack.cs: A class representing a track on a CD
	* src/MusicBrainz/SimpleDiscTest.cs: A simple console test program 
	to read a CD

	* mediaengines/vlc/Makefile.am: fixed whitespace after trailing \
	* data/banshee.desktop.in.in: Make the desktop file show up in 
	Ximian/Novell/RedHat menus
	* configure.ac: Output hal-sharp/hal-sharp.dll.config
	* src/StockIcons.cs: use StockItem to initalize stock icons with i18n 
	descriptions, add items to Gtk.StockManager

2005-10-21  Rodney Dawes  <dobey@novell.com>

	* data/images/Makefile.am: Install the 16px and 22px versions into the
	16x16 and 22x22 hicolor directories, not the 24px icon

2005-10-21  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: require mono 1.1.9
	* hal-sharp/Makefile.am: Install hal-sharp.dll.config, 
	not hal-sharp.dll.config.in

2005-10-21  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Require gtk-sharp 2.3.91 and ipod-sharp 0.5.8

	* Makefile.am: Updated DISTCLEANFILES/CLEANFILES
	* configure.ac: Removed data/banshee.desktop.in

	* mediaengines/vlc/Makefile.am: Added package rule for creating separate
	binary VLC mediaengine tarball

	* data/images/Makefile.am: Updated icon installation rules
	* data/images/Makefile.am.build: Removed, managing manually

	* data/glade/about.glade: removed, using gnome about dialog
	* data/glade/player.glade: Add help menu item for version information

	* data/banshee.desktop.in.in: Updated desktop file to exec banshee and
	use new icon 
	* data/org.gnome.Banshee.service.in: Exec banshee
	* data/Makefile.am: Updated desktop file and schema install rules

	* src/PlaylistColumns.cs: Fix bug regarding default column sizing (the one 
	Nat has been complaining about)
	* src/AboutBox.cs: Use Gnome About Dialog
	* src/VersionInformationDialog.cs: Version Information Dialog, move from old
	About Box, invoke from Help menu
	
	* src/BurnCore.cs: 
	* src/Preferences.cs:
	* src/SourceView.cs:
	* src/PlayerInterface.cs: Lots of cleaning, Use new window icon, 
	get rid of Gdk Thead junk

	* src/PlaylistModel.cs: Use Application.Invoke smartly, fixed performance 
	bug regarding loading a large list of tracks


	* src/Core.cs:
	* src/Library.cs: Clean up, get rid of Gdk Thread junk

	* src/ThemeIcons.cs: Provide a WindowManager icon pixbuf; will expand to 
	new Icon Theme code (vs. stock icon code)
	* src/DBusIPC.cs: Add more DBus methods (show/hide/play/pause/query*)
	* src/Main.cs: Command line options for new DBus methods for remote-mode

	* src/PlaylistView.cs:
	* src/Core.cs:
	* src/BurnTransaction.cs:
	* src/StockIcons.cs: general syntax/formatting cleanup

	* src/PipelineProfile.cs:
	* src/LibraryTrackInfo.cs: 
	* src/IpodCore.cs:
	* src/AudioCdCore.cs:
	* src/TrackProperties.cs: Use Mono.Unix, instead of deprecated Mono.Posix

	* src/Makefile.am: Added new sources, modified graphic resources
	
2005-10-20  Rodney Dawes  <dobey@novell.com>

	* data/images/about-header.png: Replace with new logo image

2005-10-20  Rodney Dawes  <dobey@novell.com>

	* data/images/album-cover-container.png:
	* data/images/banshee-icon*.png:
	Removed these old app icons, replaced by music-player-banshee
	
2005-10-20  Rodney Dawes  <dobey@novell.com>

	* data/images/music-player-banshee*: Add new banshee icons to CVS

2005-10-13  Aaron Bockover  <aaron@aaronbock.net>

	* src/SourceView.cs: SelectSource() method to select any source
	* src/PlayerInterface.cs: Remove obsolete gtk-sharp-2.0 stuff

	* mediaengines/helix/libhxclient.so.1.0: Updated with COM wrappings
	* mediaengines/helix/HxUnmanaged.cs, mediaengines/helix/HxPlayer.cs,
	mediaengines/helix/HxPlayerTest.cs: Bindings and tests for Helix COM
	* README: Updated it
	* libbanshee/cd-info.[ch]: Make CD stuff simpler, probably broken ATM
	* src/AudioCdCore.cs: Making CD stuff simpler, probably broken ATM
	* src/DBusIPC.cs: SelectAudioCd() method for D-Bus
	* src/Database.cs: Turn synchronous = OFF for the SQLite DB
	* src/IpodCore.cs: Tweak some broken iPod sync stuff
	* src/IpodTrackInfo.cs: Fix URI bug
	* src/LibraryTransactionStatus.cs: Fix some HIG problems
	* src/PlayerInterface.cs: Use argument queue to check for g-v-m commands
	* src/Main.cs: Use argument queue for command line options, options for
	g-v-m
	* src/Core.cs: Argument queue
	* src/PlaylistModel.cs: Fix small null ref

	* mediaengines/vlc/VlcPlayerEngine.cs: Fixed pausing, removed debug writes

	* mediaengines/vlc/VLC.cs: Minor fixes in bindings
	* mediaengines/vlc/VlcPlayerEngine.cs: Minor fixes
	* mediaengines/vlc/libvlc.so: Removed, not needed
	
2005-10-13  Jordi Mas <jordi@ximian.com>

	* configure.ac: Added catalan language

2005-10-12  Aaron Bockover  <aaron@aaronbock.net>

	* mediaengines/vlc/libvlc.so: Dummy text file user must replace with
	real libvlc.so (source tree too large for inclusion)
	* mediaengines/vlc/VLC.cs: Partial libvlc C# bindings
	* mediaengines/vlc/VlcPlayerEngine.cs: libvlc IPlayerEngine implementation
	* mediaengines/vlc/vlc-player.dll.config.in: vlc-player.dll assembly
	DLL mappings
	* mediaengines/vlc/Makefile.am: Build rules for the VLC media engine
	* configure.ac: Add option for --enable-vlc to build VLC engine

2005-10-12  Chris Lahey  <clahey@localhost.localdomain>

	* data/banshee.schemas.in: Add GConf key for move on save.

	* data/glade/trackinfo.glade: Add accelerators.

	* src/GConfKeys.cs: Add GConf key for move on save.

	* src/LibraryTrackInfo.cs: Add move on save behavior.  Fix GetId
	function to use uri.ToString instead of uri.AbsoluteUri to match
	other uses of uri.  Use information parsed from filename to set
	track number.  Use directory structure to guess metadata.  Move
	copy on import behavior to here.

	* src/LibraryTransactions.cs: Typo in field name.  Let
	LibraryTrackInfo handle importing files instead of importing them
	here.

2005-10-08  Ben Maurer  <bmaurer@ximian.com>

	* src/PlaylistView.cs (AlbumTreeIterCompareFunc): Sort by track#
	after album

2005-10-04  Larry Ewing  <lewing@novell.com>

	* src/PlayerInterface.cs: Import from the selected uri not the
	folder uri.

2005-10-04  Christopher James Lahey  <clahey@ximian.com>

	* src/SourceView.cs: Fixed bug that was ellipsing escaped data
	instead of escaping ellipsed data.

2005-10-03  Christopher James Lahey  <clahey@ximian.com>

	* data/glade/trackinfo.glade, src/TrackProperties.cs: Added
	automatic track setting button.

2005-10-03  Aaron Bockover  <aaron@aaronbock.net>

	* src/Preferences.cs, src/PlayerInterface.cs: Enabled burning!
	* src/AudioCdCore.cs: Bind changes to cd-info.[ch], ignore lead out and
	data tracks
	* libbanshee/cd-info.[ch]: If the Linux CDROM ioctl support is available,
	use it to detect CD track info/CDDB disc ID instead of GStreamer. Fall back
	on GStreamer (buggy, slower).
	* configure.ac: Cleaned up a little bit, added headers to check, especially
	linux/cdrom.h

2005-09-26  Alexander Shopov  <ash@contact.bg>

	* configure.ac: Added "bg" (Bulgarian) to ALL_LINGUAS

2005-09-22  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Require latest ipod-sharp (0.5.6)

	* src/IpodCore.cs: ipod-sharp uses default context by default, removed
	Ipod.Initializer.UseDefaultContext

	* Makefile.am: added compile to DISTCLEANFILES

	* src/banshee.c: use fork() to run the mono process as a child process of
	the wrapper, as just exec doesn't work with killall. Handle SIGINT/SIGKILL
	in the parent process and propagate to the child, and clean up the parent

2005-09-21  Aaron Bockover  <aaron@aaronbock.net>

	* src/Makefile.am: Removed banshee.in/$(WRAPPER) instances and added
	bin_PROGRAMS/banshee_SOURCE for banshee.c binary 'wrapper'
	* src/banshee.c: replaced bash wrapper script with a C program that uses
	execvp to replace the process image with mono. Makes banshee show up as
	"banshee" in ps instead of "mono" and makes `killall banshee' work. Also
	only pass --debug to mono if running from build directory, should speed
	up installed instances
	* configure.ac: Added AC_DEFINE_UNQUOTED calls to create defines for 
	banshee.c that were AC_SUBST in old banshee.in
	* src/banshee.in: removed bash wrapper script

2005-09-21  Takeshi AIHANA <aihana@gnome.gr.jp>

	* configure.ac: Added 'ja' (Japanese) to ALL_LINGUAS.

2005-09-20  Aaron Bockover  <aaron@aaronbock.net>

	* src/Main.cs: wrap everything in try/catch and pass the exception to
	the new ExceptionDialog... any unhandled exception will now be shown
	in a GUI instead of on the console (which may not be visible)

	* src/ExceptionDialog.cs: Added a nice exception dialog to show 
	unhandled exceptions (hopefully this never gets seen!), and harvest
	system info to help bug reports

2005-09-19  Žygimantas Beručka  <zygis@gnome.org>

	* configure.ac: Added "lt" to ALL_LINGUAS.

2005-09-19  Aaron Bockover  <aaron@aaronbock.net>
	
	* src/LogCore.cs: Use a ThreadNotify for events
	* src/IpodTrackInfo.cs: Prepend explicit file:// to thrwart
	parsing problems, as Ipod.Song.Filename is always a local path
	* src/FileEncodeTransaction.cs: Accept TrackInfo or Uri inputs
	* src/PlayerInterface.cs:
	* src/Library.cs: Update to use new iPod sync method
	* src/IpodCore.cs: Rewrote iPod Syncing, now using ipod-sharp-ui
	* src/Makefile.am: Add ipod-sharp-ui
	* configure.ac: Added ipod-sharp-ui, moved unstable assembly 
	copy script from src/Makefile.am 

2005-09-18  Aaron Bockover  <aaron@aaronbock.net>

	* data/glade/player.glade: Added _M to Music top level menu item and
	fixed the misspelling "selelected" (awesome word) to "selected".
	* src/LibraryTransactions.cs: Made two strings make more sense, easier
	to translate

2005-09-18  Adam Weinberger  <adamw@gnome.org>

	* configure.ac: Added en_CA to ALL_LINGUAS.

2005-09-18  Funda Wang  <fundawang@linux.net.cn>

	* configure.ac: Added Simplified Chinese translation.

2005-09-17  Aaron Bockover  <aaron@aaronbock.net>

	* src/Preferences.cs: Fixed crash on save if no iPod transcoders were
	available

	* libbanshee/gst-encode.c: Use gnomevfssink, replaced stat() call with
	gnome_vfs_get_file_info() call

	* src/LibraryTransactions.cs: Explicitly prepend a file:// to the filename
	passed to new Uri() as ':' in the local file name can cause improper
	parsing

	* src/PlayerInterface.cs:
	* src/SearchEntry.cs:
	* src/NotificationAreaIcon.cs: Fixed gtk-sharp deprecation warnings

	* src/LibraryTrackInfo:
	* src/Library.cs:
	* src/LibraryTransactions.cs:
	* src/BurnCore.cs:
	* src/AudioCdCore.cs:
	* src/IpodCore.cs:
	* src/TrackProperties.cs:
	* src/GstFileEncoder.cs:
	* src/FileEncoder.cs:
	* src/RipTransaction.cs:
	* mediaengines/gst/GstPlayerEngine.cs:
	* mediaengines/helix/HelixPlayer.cs: All now use System.Uri instead of
	strings for filename/URI usage as scheme stuff was getting out of hand
	without it. All file components should play nicer now

2005-09-16  Aaron Bockover  <aaron@aaronbock.net>

	* src/Database.cs: 
	* src/LibraryTrackInfo.cs: 
	* src/LibraryTransactions.cs:
	* data/Tables.sql: Date/Time optimizations, loads *much* faster from SQL.
	Had to create two new table columns: LastPlayedStamp, DateAddedStamp

2005-09-09  Aaron Bockover  <aaron@aaronbock.net>

	* configure.ac: Version 0.9.7.1
	* hal-sharp/hal-sharp.dll.config.in: DLL mappings for hal-sharp
	* hal-sharp/Makefile.am: Install hal-sharp.dll.config
	* src/PipelineProfile.cs: guard against empty/null profile array and protect
	empty combo box from ever getting its Active index set (segfaults, bug in
	gtk-sharp)
	* src/Library.cs: Fixed path creation bug to library DB
	* src/PlayerInterface.cs: Fixed gstreamer double-skip bug
	* mediaengines/gst/GstPlayerEngine.cs: fixed iterate cancel bug
	* data/banshee.schemas.in: Added default column widths per Nat's request
	* src/RipTransactions.cs: Fixed song-already-in-library exception when
	ripping (BNC 115945)
	* src/NotificationAreaIcon.cs: Fix bug on 64 bit

2005-09-08  Dan Winship  <danw@novell.com>

	* src/DragDrop.cs: reorganize the dnd target types into "Source",
	"PlaylistRows", "LibraryTrackIds", and "UriList". Use
	MIME-type-style target atoms.

	* src/PlayerInterface.cs: update for DragDrop changes. Use
	TreeView.EnableModelDragSource and EnableModelDragDest rather than
	Gtk.Drag.SourceSet and DestSet on the treeviews, so that
	GtkTreeView will do things like scrolling automatically. Remove
	code that got moved into PlaylistView.cs and SourceView.cs.

	* src/SourceView.cs (OnDragMotion, OnDragLeave,
	OnDragDataReceived): Move these here from PlayerInterface and fix
	up the drag feedback so you can't drop tracks onto sources that
	won't really accept them. Dynamically add a "New Playlist" line
	when dragging, so that it's always possible to create a new
	playlist via dnd, even when there isn't any blank space at the
	bottom of the source list.

	* src/PlaylistView.cs (OnDragBegin, OnDragMotion): override the
	default GtkTreeView dnd behavior.

	* src/PlayerInterface.cs (OnItemRemoveActivate,
	OnItemSelectAllActivate): Don't steal "Del" and "Ctrl+A" keys from
	the search entry.

2005-09-08  Aaron Bockover  <aaron@aaronbock.net>

	* configure.in: Version 0.9.7
	* configure.in: Require ipod-sharp 0.5.4
	* src/IpodCore.cs: Disabled status, some kind of LTM bug... looking into it
	* src/IpodPropertiesWindow.cs: Fixed NullRef bug
	* src/Library.cs: Remove tracks from both track caches/maps
	* src/LibraryTransactions.cs: Remove tracks using new Library remove method
	in TrackRemoveTransaction
	* src/TrackInfoHeader.cs: Hide logo/album cover container 
	* libbanshee/gst-encode.c: Fixed double free, and a pipeline element
	* src/GstFileEncoder.cs: Fixed minor bug
	* src/Library.cs: Keep track of songs queued for manual removal
	* src/IpodCore.cs: Fixed manual song remove bug
	* src/SourceView.cs: AddPlaylist() for adding playlist sources
	* src/PlayerInterface.cs: Update disk usage bar when device emits Changed
	signal. Add/Remove playlist specifically from the source view instead of
	rebuilding the source list. Updated Ipod UI parts.

2005-09-07  Hans Petter Jansson  <hpj@novell.com>

	* libbanshee/xing/emdct.c
	* libbanshee/xing/hwin.c
	* libbanshee/xing/l3init.c
	* libbanshee/xing/mp3enc.cpp
	* libbanshee/xing/mp3low.h
	* libbanshee/xing/sbt.c
	* libbanshee/xing/setup.c
	* libbanshee/xing/xhwin.c: Make static or add xingenc_ namespace to
	the most obnoxious exported functions. This fixes a clash with a
	symbol in GStreamer's oggdec plugin, and makes future clashes less
	likely. The Xing code still needs a more thorough cleanup.

2005-09-06  Aaron Bockover  <aaron@aaronbock.net>

	* data/glade/player.glade: Moved the iPod box to under the playlist view,
	will add more iPod crack there later
	* data/glade/trackinfo.glade: Add an event box behind the title label for
	setting its tooltip
	* src/TrackProperties.cs: Show the "editing track" title for single edits
	and set its tooltip to the URI of the current track
	* src/PlayerInterface.cs: Only update last played/play count when 
	at least half the song has been played (bug 315168)
	* data/banshee.schemas.in: schema for CopyOnImport, default to false
	* src/Preferences.cs: Default to false for CopyOnImport
	* data/Tables.sql: Removed incomplete and unused Smart Playlist tables
	* src/Database.cs: WriteCycleFinished event for notifying objects that
	the current query is finished and it is save to make pending queries
	* src/LibraryTrackInfo.cs: Catch exception on Save() query for potential
	database locking and put in a request with the Database core for 
	notification when it is safe to re-try the query
	* src/IpodTrackInfo.cs:
	* src/AudioCdCore.cs (AudioCdTrackInfo):
	* src/LibraryTrackInfo.cs: remove manual UID setting
	* plugincore/TrackInfo.cs: base class sets UID

2005-09-06  Dan Winship  <danw@novell.com>

	* burn-sharp/Makefile.am: 
	* entagged-sharp/Makefile.am: 
	* hal-sharp/Makefile.am: 
	* mediaengines/gst/Makefile.am: 
	* mediaengines/helix/Makefile.am: 
	* plugincore/Makefile.am: 
	* src/Makefile.am: Install .mdb files along with assemblies.

	* libbanshee/.cvsignore: add CORBA CDDB gunk

	* libbanshee/gst-player-engine.c (gpe_pipeline_setup): Drop
	"error" param since it's not used. Return success/failure.
	(gpe_new): if gpe_pipeline_setup() fails, return NULL rather than
	crashing.
	(gpe_free): fix leak
	* mediaengines/gst/GstPlayerEngine.cs (TestInitialize): fill this
	in.
	* src/Core.cs: Exit without crashing if the AudioCdPlayer can't be
	loaded

	* src/EllipsizeLabel.cs: Gtk.Label subclass that checks if an
	"ellipsize" property exists on the underlying C object and sets it
	if so (so we get ellipsization on gtk 2.6+ platforms without
	depending on gtk# 2.6).
	* src/TrackInfoHeader.cs: 
	* src/LibraryTransactionStatus.cs: Use it

	* src/PlayerInterface.cs (OnPlaylistViewButtonPressEvent): ignore
	double-clicks in the header area

2005-09-05  Aaron Bockover <aaron@aaronbock.net>

	* src/AudioCdCore.cs: Set the URI for CD tracks to cdda://<track>#<device>
	* libbanshee/gst-player-engine.c: Added notify::source support for
	getting the source from the playbin element to set the CD device for 
	cdda:// URIs. Handles cdda:// URIs in the form of cdda://<track>#<device>
	* src/LibraryTransactions.cs: call Save() on track info after setting 
	new filename when performing copy on import
	* src/Library.cs: Applied patch to fix death on renaming new iPod (315307)

2005-09-04  Aaron Bockover <aaron@aaronbock.net>

	* banshee: Version 0.9.6

	* src/LibraryTransactions.cs: Added copy-on-import to FileLoadTransaction;
	obeys GConf setting for the feature
	* src/Library.cs: IpodSource handles its own syncing and updating of
	tracks on iPod
	* src/IpodCore.cs: Fixed to allow manual update and automatic syncing
	* src/PlaylistView.cs: Show warning icon next to DRMed songs, show
	sync icon next to pending iPod songs
	* src/SourceView.cs: Show iPod sources that have been modified (queued
	for sync) in blue
	* src/PlayerInterface.cs: Restrict DnD on iPod view, disable view if
	if active view is a syncing iPod
	* src/AudioCdCore.cs: Parse proper artist and song title from the track 
	name CDDB field if artist is "Various" and the track name field contains
	a " / " token (per the CDDB Database Specification)
	* src/banshee.exe.config.in: Added libbonobo-2 mapping
	* libbanshee/gst-encode-test.c: Adapted to use pipeline for gst-encode
	* plugincore/TrackInfo.cs: Added set accessor on Year and Genre
	* src/CddbClient.cs: Old CDDB HTTP client removed
	* src/AudioCdCore.cs: Adapted to use CddbSlaveClient
	* src/CddbSlaveClient.cs: Bindings for CDDB Slave2 CORBA Client
	* configure.ac: Build rules cor cddb slave code
	* libbanshee/Makefile.am: Build cddb slave code
	* libbanshee/cddb-slave-client.[ch]: GObject wrapper around GNOME Media
	CDDB Slave2 CORBA client
	* libbanshee/GNOME_Media_CDDBSlave2.idl: IDL Definition for GNOME Media
	CDDB Slave2 CORBA client
	* libbanshee/cd-info.[ch]: Added offsets property string with all
	track offsets for CDDB queries

2005-09-03  Aaron Bockover <aaron@aaronbock.net>

	* src/PlayerInterface.cs: Use the LogCore to report errors to the user
	* src/LogCore.cs: New logging system to easily propagate and log warnings
	and errors.
	* src/IpodCore.cs: File transcoding to allow non-iPod formats to be 
	copied to an iPod. Transcoded song duplicates are cached so they need
	only be transcoded once. This allows the computer library to be in various
	formats (Ogg, Flac, Mp3) and the iPod in MP3 or AAC format.
	* libbanshee/gst-encode.c: Pass a full pipeline for encoding instead of a 
	file extension used to conditionally select a hard coded encoder pipeline
	* src/FileEncoder.cs, src/GstFileEncoder.cs, src/FileEncodeTransaction.cs,
	BurnCore.cs: Use PipelineProfile instead of hard coded encoding options
	* src/Preferences.cs: Encoding preference option for iPod transcoding
	* data/glade/preferences.cs: Encoding area for iPod

2005-09-02  Aaron Bockover <aaron@aaronbock.net>

	* banshee: Version 0.9.5
	* data/glade/player.glade: Removed Menu->Playlists, moved Properties to
	View, added Columns item to View menu
	* src/Library.cs: TracksFnKeyed table for file name lookups for tracks 
	instead of ID based lookup
	* src/LibraryTrackInfo.cs: Guard against already imported tracks
	* src/PlayerInterface.cs: Connect to AudioCdCore.Updated to refresh
	the view title if update is for CD in current view
	* src/SourceView.cs: Use Add/Remove events for AudioCdCore to remove
	and insert AudioCdSources instead of rebuilding the source view tree
	* src/SourceView.cs: Fixed right click/highlight bug (dup of danw, cvs
	collision), Draw Markup in Source cell renderer wrapped in 
	GLib.Markup.Escape
	* src/GConfKeys.cs: LastFileSelectorUri: key to store last position in
	the file selectors
	* src/PlayerInterface.cs: Retain last directory in gconf for the file/folder
	selectors. Open the selector at that path.
	* src/LibraryTrackInfo.cs, src/IpodTrackInfo.cs, src/AudioCdCore.cs:
	Set the track UID using UidGenerator.Next
	* src/Core.cs: NextUid removed in favor of UidGenerator.Next
	* src/Dialogs.cs: MessageDialogs class for really simple prompting
	* src/AudioCdCore.cs: Better HAL event and device handling... no longer
	regenerate disk objects on a HAL event.
	* src/PlayerInterface.cs: Do not allow drag operations for Audio CDs,
	Disable search for CDs and Playlists, Cleaned up Menus, Rename on iPod
	now pops up an iPod-specific rename dialog, fixed markup errors, Fixed
	playlist appending, only allow rename on sources that allow it
	* src/Library.cs: CanRename property for Source objects. set accessor
	on Source.Name removed, moved to Rename method that returns false on
	failure. PlaylistSource shows an error dialog if it can't rename (existing
	playlist).

2005-09-02  Dan Winship  <danw@novell.com>

	* src/Dialogs.cs (InputDialog.Execute): make Return == OK.

	* src/PlayerInterface.cs (ImportWithFileSelector,
	OnMenuImportFilesActivate): 
	* src/Preferences.cs (OnButtonLibraryChangeClicked): Remove
	incorrect (but harmless) "gnome-vfs" arg.

	* src/SourceView.cs (HighlightPath): select the row. (Fixes so
	that right-clicking on an unselected row DTRT now.)

2005-09-01  Hans Petter Jansson  <hpj@novell.com>

	* libbanshee/xing/gst-xing-encoder.c (xing_mp3_encoder_chain): Fixed
	a large memory leak.

2005-09-01  Aaron Bockover <aaron@aaronbock.net>
	
	* libbanshee/gst-misc.c: Use gst_bin_parsev for pipeline validating
	* src/PlayerInterface.cs: Only show rip button if in CD view, tooltip for
	rip button
	* src/LibraryTrackInfo.cs: Two new constructors for generating a library
	track object off of pure metadata and an existing URI
	* src/RipTransaction.cs: Better progress handling, no longer load ripped
	track into library using a FileLoadTransaction (causes metadata loss if
	encoder does not support tagging), instead load directly into cache
	* src/Preferences.cs: Preference page for setting ripping encoder profile
	* src/PipelineProfile.cs: GStreamer pipeline profile manager
	* src/GstMisc.cs: Bindings for libbanshee/gst-misc.c
	* libbanshee/gst-misc.[ch]: Misc. gstreamer functions

	* libbanshee/Makefile.am: Build Xing conditionally (--enable-xing)
	* configure.ac: Disable Xing by default, --enable-xing to enable
	* src/FileNamePattern.cs: Full pattern support for naming, creates
	directory structure if not exist
	* src/RipTransaction.cs: Bug fixes
	* libbanshee/cd-rip.c: Fix some bugs
	* mediaengines/gst/GstPlayerEngine.cs: DllImport on libbanshee
	* src/GstFileEncoder.cs: DllImport on libbanshee
	* mediaengines/gst/*.[ch]: moved to libbanshee
	
	* data/glade/player.glade: Ripping button
	* src/PlayerInterface.cs: New button to initiate Ripping, added UI code
	to create and register a RipTransaction
	* src/Library.cs: Library.sdb is now .banshee.db in new DefaultLibraryPath
	* src/Utilities.cs: DefaultLibraryPath now ~/My Music
	* src/FileNamePattern.cs: Base template for a file name pattern class to
	build file names based on an input pattern and create a directory structure
	* src/RipTransaction.cs: Bindings to CD Ripping core, and implementing
	LTM Transaction for Ripping/Encoding. Use xingenc bitrate=192, will
	make UI for future to pass any gst encoder pipeline
	* libbanshee/cd-rip.[ch]: CD Ripping Core
	* src/Library.cs: New default library DB path: ~/My Music/.banshee.db
	* src/Utilities.cs: New default library location: ~/My Music

2005-08-31  James Willcox  <snorp@snorp.net>

	* src/SearchEntry.cs: delay a bit before emitting the 'changed'
	event, so we don't do spurious searches.
	* src/PlayerInterface.cs: guard against a null active track when
	ejecting an iPod.
	* burn-sharp/*: synced up

2005-08-31  Aaron Bockover <aaron@aaronbock.net>

	* data/images/source-ipod-{shuffle,photo}.png: New iPod icons
	* src/SourceView.cs: Show a photo, regular, or shuffle iPod as an icon

2005-08-31  Dan Winship  <danw@novell.com>

	* plugincore/IPlayerEngine.cs: fix a comment

	* mediaengines/helix/HxPlayer.cs (HxPlayer): Use Marshal.SizeOf
	rather than a hardcoded size.
	(Dispose): Call GC.SuppressFinalize so
	HxUnmanaged.ClientPlayerClose() doesn't get called twice if the
	HxPlayer is explicitly disposed.

	* src/AboutBox.cs: Make sure the timer always gets cleaned up
	properly when the window closes.

	* src/Core.cs (FindUserRealName): Use g_get_real_name() from glib

	* src/PlayerInterface.cs (OnPlaylistViewMotionNotifyEvent): fix
	again so column resizing/rearranging works again

	* src/PlaylistView.cs: don't intercept OnColumnClicked. Let the
	TreeView handle sorting itself. Also, Set a ColumnDragFunction to
	prevent dragging the content columns before the "now playing"
	column.

	* src/*.cs: Remove GLib.GType stuff which isn't needed. (Probably
	copied from another old out-of-date gtk# app)

2005-08-31  James Willcox  <snorp@snorp.net>

	* banshee: 0.9.2
	* add an emacs modeline to all the .cs sources
	* src/IpodCore.cs: fix iPod syncing.
	* src/PlayerInterface.cs (OnSimpleSearch): fix a null reference that
	was causing some crashes.

2005-08-30  Aaron Bockover  <aaron@aaronbock.net>

	* libbanshee/xing/gst-xing-encoder.[ch]: GStreamer plugin for Xing
	* libbanshee/xing: Moved Xing Encoder from mediaengines/xing-encoder
	* libbanshee/gst-init.[ch]: GStreamer initialization
	
2005-08-30  Hans Petter Jansson  <hpj@novell.com>

	* mediaengines/xing-encoder/xing-mp3-encoder.c
	(xing_mp3_encoder_set_property): Guard against too low bitrate being
	set.

2005-08-30  Hans Petter Jansson  <hpj@novell.com>

	* mediaengines/xing-encoder/xing-mp3-encoder.c
	(xing_mp3_encoder_get_property)
	(xing_mp3_encoder_set_property): Fix bad symbol references.

2005-08-30  Hans Petter Jansson  <hpj@novell.com>

	* mediaengines/xing-encoder/Makefile.am: Add xing-mp3-encoder.[ch],
	add $(GST_CFLAGS).
	* mediaengines/xing-encoder/xing-mp3-encoder.[ch]: Implement Xing MP3
	Encoder GST plugin.

2005-08-30  Aaron Bockover  <aaron@aaronbock.net>

	* src/PlayerInterface.cs, src/SourceView.cs: Good support for CD Audio
	Source
	* src/AudioCdCore.cs: Complete Audio CD Backend, with CDDB support
	* src/CddbClient.cs: CDDB Client
	* libbanshee/cd-info.c: DiskID Support
	
2005-08-30  Dan Winship  <danw@novell.com>

	* src/PlayerInterface.cs (OnPlaylistViewButtonPressEvent): never
	eat control/shift clicks, so GtkTreeView will handle control-click
	to unselect rows.
	(OnPlaylistViewMotionNotifyEvent): Ignore drags below the last row
	of the tree

2005-08-30  Dan Winship  <danw@novell.com>

	* Makefile.am (SUBDIRS): add po/

	* mediaengines/gst/GstPlayerEngine.cs: 
	* mediaengines/gst/gst-encode.c: 
	* mediaengines/gst/gst-player-engine.c: 
	* mediaengines/helix/HelixPlayer.cs: 
	* mediaengines/helix/HxPlayer.cs: 
	* plugincore/TrackInfo.cs: 
	* src/*.cs: Use _() / Catalog.GetString()
	
	* plugincore/Makefile.am ($(ASSEMBLY)): 
	* mediaengines/gst/Makefile.am ($(ASSEMBLY)): add -r:Mono.Posix

	* src/Core.cs (UserFirstName): don't add "'s" here, since that has
	to be part of the localization of "{0}'s Music Library". (Ignoring
	for now the larger issue that the first word of the user's full
	name might not be their given name.)

	* src/Library.cs (IpodSource.DiskUsageString): property that
	returns an internationalized "500 MB of 2 GB (1500 MB Remaining)"
	string.

	* src/PlayerInterface.cs (OnSimpleSearch): deal with the fact that
	the field names are now localized rather than being constant
	strings.

	* src/PlaylistColumns.cs: Add another arg to the constructor
	giving the database key name, since that won't be related to the
	column name if LANG != en

	* src/LibraryTrackInfo.cs (IncrementPlayCount): use the invariant
	datetime format for LastPlayed, not the localized one.

2005-08-29  Aaron Bockover  <aaron@aaronbock.net>
	
	* banshee: Version 0.9.1
	* mediaengines/helix/HelixPlayer.cs: Fixed PCM set to 0 bug (314816)
	* libbanshee/cd-info.c: More internals complete/working, cdparanoia
	fix in patched gstreamer
	* src/DBusIPC.cs: Virtual D-Bus methods for TogglePlaying(), Next(), 
	and Previous() 
	* src/Main.cs: Command line option parser, supports --play-pause, 
	--next, and --previous, translated to method calls on running instance
	over D-Bus
	* src/PlayerInterface.cs: Generic Next()/Previous() methods for D-Bus,
	UI Button for Syncing iPod
	* src/IpodCore.cs: IpodSyncTransaction for auto-syncing iPod
	* src/PlayerInterface.cs, src/Preferences.cs: Disable CD Burning UI
	unless BANSHEE_BURN_ENABLE is set (Attn Packagers: DO NOT SET THIS...
	development only)
	* src/TrackProperties.cs: Multi-track metadata editor

2005-08-29  Dan Winship  <danw@novell.com>

	* src/PlayerInterface.cs (OnPlaylistViewMotionNotifyEvent): Oops,
	don't start a song drag if the user is dragging a column. Also,
	the drag action should have been Move|Copy, not just Move.
	(OnPlaylistViewButtonReleaseEvent): if the user clicks on a single
	row of a multi-row selection (without dragging), select just that
	row.

2005-08-28 Aaron Bockover <aaron@aaronbock.net>
	
	* banshee: Version 0.9.0
	* src/AudioCdCore.cs: Implementing cd-info bindings
	* libbanshee/cd-info.c: Disk/Track info objects, GStreamer to detect 
	sectors, offsets, and track numbers/layouts
	* src/Library.cs: New AudioCdSource
	* src/SourceView.cs: Listen to AudioCdCore for events to update the
	SourceView
	* src/AudioCdCore.cs: Bindings to cd-detect.c, AudioCdCore class provides
	a centralized layer for Audio CDs
	* libbanshee/cd-detect.c: HAL Audio CD Detection Library
	* libbanshee: Core Banshee C code
	* src/banshee.exe.config.in: Updated mappings, split up, don't override
	mono mappings
	* burn-sharp/burn-sharp.dll.config.in, burn-sharp/Makefile.am: DLL config
	file for burn-sharp assembly
	* src/ipod-sharp.dll.config.in, src/Makefile.am: DLL config file for
	ipod-sharp assembly

2005-08-26 Aaron Bockover <aaron@aaronbock.net>

	* src/NotificationAreaIcon.cs: Tray icon code no longer depends on 
	eggtrayicon in egg in libsonance
	* libsonance/: Removed
	* src/LibraryTrackInfo.cs: Fix canSaveToDatabase = true, fixes append to
	Playlist bug
	* src/PlayerInterface.cs: Window resize/show patch
	* data/org.gnome.Banshee.service.in: D-Bus Service File
	* data/banshee.schemas.in: GConf Schemas
	* configure.ac: Check for sqlite3
	* src/Database.cs: Use sqlite3

2005-08-25 Aaron Bockover <aaron@aaronbock.net>

	* data/banshee.desktop.in.in: Moved from banshee.desktop.in
	* data/Makefile.am: Translate banshee.desktop.in
	* configure.ac: Better configure checks, fix sqlite problem, hopefully
	* configure.ac, Makefile.am, po/: Set up infrastructure for translations
	* mediaengines/xing-encoder/Makefile.am: Fixed so make distcheck works
	* mediaengines/xing-encoder: Xing MP3 Encoder from RealNetworks
	* mediaengines/gst/Makefile.am, libsonance/Makefile.am, 
	burn-sharp/Makefile.am: -module -no-version
	* mediaengines/gst/gst-player-engine.c: Fixed random return
	* configure.ac: Check /usr/lib, /usr/local for SQLITE
	* src/SearchEntry.cs: Do not call changed event twice 
	* src/IpodPropertiesWindow.cs: More properties
	* src/PlayerInterface.cs, src/PlaylistModel.cs, src/PlaylistView.cs: 
	DnD patch by Dan Winship, fixes most DnD issues 
	* mediaengines/helix/HelixPlayer.cs: ClientPlayerMute to unmute 
	PCM on startup
	* entagged: Dropped from tree
	* entagged-sharp: Added to tree, updated sync script, updated entagged
	* configure.ac, src/Makefile.am: Updated for entagged-sharp
	
2005-08-21 Aaron Bockover <aaron@aaronbock.net>

	* banshee: 0.8.7.1
	* configure.ac: Export ASM_VERSION instead of VERSION, an assembly-friendly
	version number string; require ipod-sharp 0.5.11 or better
	* src/IpodPropertiesWindow.cs: Display labels instead of entries if
	iPod is mounted read-only
	* src/PlayerInterface.cs: Only call Device.Save() if iPod is mounted RW
	* src/ImageAnimation.cs: Fix animation sync bug

2005-08-20 Aaron Bockover <aaron@aaronbock.net>

	* banshee: Version 0.8.7
	* configure.ac: Version 0.8.7
	* src/PlayerInterface.cs: Better default window size
	* src/PlayerInterface.cs: Fixed UI bug that wouldn't show source view
	if library at startup was empty
	* banshee: Version 0.8.6
	* src/PlayerInterface.cs: Search works on the iPod, ejection fixes
	* src/PlayerInterface.cs: Don't show the source view until the database
	has been loaded into cache
	* src/TrackInfoHeader.cs: Don't show Banshee Version
	* src/PlayerInterface.cs: Nice iPod properties box, properties context
	menu, generic StopPlaying method
	* src/IpodPropertiesWindow.cs: Full iPod properties dialog/editor
	* configure.ac: Added more potential HELIX_LIBS paths to detector

2005-08-18 Aaron Bockover <aaron@aaronbock.net>
	
	* plugincore/TrackInfo.cs: Abstract TrackInfo class
	* src/LibraryTrackInfo.cs: Library TrackInfo, extends TrackInfo
	* src/IpodTrackInfo.cs: Ipod TrackInfo, extends TrackInfo
	* src/PlayerInterface.cs: Ipod stuff, play from iPod, iPod properties
	* src/AboutBox.cs: About box patch from Evan... scrolls credits? Woo?
	* src/DBusIPC.cs: Dbus object, registration, session stuff
	* src/Main.cs: Instance detection through dbus
	* banshee: Probably more stuff I missed, because I suck at updating
	my own ChangeLogs

2005-08-14 Aaron Bockover <aaron@aaronbock.net>

	* banshee: Version 0.8.5
	* src/PlaylistModel.cs: NullReferenceException bug fixes
	* src/BurnCore.cs: GConf bug fix
	* banshee: Various other bug fixes
	
2005-08-11 Aaron Bockover <aaron@aaronbock.net>

	* src/BurnCore.cs: Fixed 313256 (exception thrown if burner was never
	configured in preferences... default is now selected)

	* banshee: Version 0.8.4
	* mediaengines/helix: Helix (hxclientkit) bindings working,
	HelixPlayer implementation of IPlayerEngine
	* plugincore/IPlayerEngine.cs: Interface updates
	* mediaengines/gst/GstPlayerEngine.cs: Updated to implement IPlayerEngine
	interface updates
	* src/Preferences.cs: Notify that restart needed after changing Player
	Engines
	* src/PlayerInterface.cs: Update song length if it was previously 0 
	with stream length from player engine if available
	* configure.ac: Detect HELIX_LIBS automatically or set based on configure
	--with-helix-libs option

2005-08-08 Aaron Bockover <aaron@aaronbock.net>

	* libsonance/Makefile.am: SONANCE_* -> BANSHEE_*
	* configure.ac: Cleaned up lots of stuff
	* src/PlayerInterface.cs: Minor bug fixes
	* mediaengines/gst/GstPlayerEngine.cs: Fixed some error handling bugs,
	other minor bugs
	* mediaengines/gst/gst-player-engine.c: Fixed some error handling bugs
	* banshee.{mds,mdp}: Added entagged, plugincore, mediaengines/gst, and
	mediaengines/helix Mono Develop projects
	* Makefile.am: Removed banshee.{mds,mdp} from EXTRA_DIST. Not distributing
	Mono Develop projects with tarball releases

2005-08-07 Aaron Bockover <aaron@aaronbock.net>

	* banshee: Version 0.8.3
	* banshee: gst-sharp player engine removed
	* src/PlayerInterface.cs: Implemented seeking in the UI
	* mediaengines/gst/GstPlayerEngine.cs: Bindings implementing IPlayerEngine
	for new GStreamer C player engine core
	* mediaengines/gst/gst-player-engine.c: New GStreamer C player engine core
	* mediaengines/gst/gst-player-engine.h: New GStreamer C player engine core

2005-08-04 Aaron Bockover <aaron@aaronbock.net>

	* banshee: Version 0.8.2
	* configure.ac: --enable-helix option, HME disabled by default
	* mediaengines/helix/Makefile.am: if ENABLE_HELIX.. build only if requested
	* banshee: More Sonance->Banshee string changes
	* banshee: Namespace renamed from Sonance to Banshee
	* banshee: Files/Graphics updated to read Banshee in public/user places
	* sonance: Renamed to Banshee
	* src/Preferences.cs: Player Engine Chooser, Advanced Tab
	* src/PlayerEngineLoader.cs: Uses gconf to select preferred engine
	* plugincore/IPlayerEngine.cs: New fields for name, description, author,
	etc. for engine implementations. Initializer code moved to Initialize()
	function. Added TestInitialize() to interface.
	* src/mediaengines/HelixPlayer.cs: More minor fixes, still not working

2005-08-03 Aaron Bockover <aaron@aaronbock.net>

	* sonance: Version 0.8.1
	* src/PlayerInterface.cs: Rating Menu, Increment Play Count/Date
	* src/PlaylistView.cs: Column Sorting, new Last Played Column
	* src/PlaylistColumns.cs: CellRenderer argument
	* src/TrackInfo.cs: Save count, date, rating
	* src/RatingRenderer.cs: CellRenderer for stars as rating

2005-08-01 Aaron Bockover <aaron@aaronbock.net>

	* mediaengines/gst/Makefile.am: Fixed rule that removed bundled
	gst-sharp.dll on distclean
	* src/TrackInfoHeader.cs: Why I had a hard-coded version number is beyond me
	* src/PlayerInterface.cs: Fixed Menu->Quit bug not saving settings
	* data/images: Two new icons
	* src/PlaylistView.cs: Added column for showing arrow of current 
	playing song
	* src/PlaylistColumns.cs: Fixed column saving bug

	* sonance: Lots and lots of updates, I'm sure I missed lots of things
	in the ChangeLog

	* mediaengines/helix: Unworking Helix Core (very close to working,
	one major bug to figure out)

	* plugincore: New library currently containing IPlayerEngine and 
	ITrackInfo for developing player engine plugins
	* src/BurnCore.cs: Core CD Burning Engine
	* src/FileEncodeTransaction: LTM Transaction for the FileEncoder
	* src/BurnTransaction: LTM Transaction for the CD Burner (not in use ATM)
	* src/PlayerEngineLoader.cs: Searches for assemblies that have classes
	implementing IPlayerEngine - loads engines at runtime (no more linking)
	* src/Core.cs: Use PlayerEngineLoader

2005-07-28 Aaron Bockover <aaron@aaronbock.net>

	* sonance: Version 0.8.0
	* src/FileEncoder.cs: Abstract engine class for encoding files
	* src/GstFileEncoder.cs: GStreamer implementation of FileEncoder class
	using mediaengines/gst/gst-encode
	* src/NautilusBurnUtil.cs: Utilities for libnautilus-burn-sharp

2005-07-27 Aaron Bockover <aaron@aaronbock.net>

	* burn-sharp/: Added libnautilus-burn-sharp source tree
	* mediaengines/gst/: Added gst media engine root
	* mediaengines/gst/gst-encode.c: GStreamer file encoder engine
	* src/Preferences.cs: CD Burning Preferences

2005-07-20 Aaron Bockover <aaron@aaronbock.net>

	* src/Makefile.am: Updated install-data-hook and uninstall-data rules to
	play nice with make distcheck

2005-07-19 Aaron Bockover <aaron@aaronbock.net>

	* hal-sharp/: Added hal-sharp source tree
	* src/Makefile.am: Added hal-sharp, added uninstall-hook rule for ipod-sharp

2005-07-18 Aaron Bockover <aaron@aaronbock.net>

	* configure.ac: Now requires ipod-sharp
	* src/Makefile.am: Cleaned out some of the unused resources, uses ipod-sharp
	* src/IpodCore.cs: IpodCore for managing all iPod services

2005-07-12 Aaron Bockover <aaron@aaronbock.net>

	* configure.ac: Got rid of AC_PROG_CC

2005-07-09 Aaron Bockover <aaron@aaronbock.net>

	* Library.cs: New Playlist.Count property
	* SourceView.cs: Updated source cell renderer to show child count
	* PlaylistModel.cs: Updated ChangeDirection algorithm, added O(1) 
	regression history for random playback
	* project: Version 0.7.3
	* PlayerInterface.cs: Added dynamic playlist context menu item and submenu
	to add selection to existing or new playlist

2005-07-08 Aaron Bockover <aaron@aaronbock.net>

	* project: removed mm-keys support
	* LibraryTransactionManager.cs: small bug fix
	* PlayerInterface.cs: Edit menu enhanced with new items, tooltips on 
	toolbar buttons at the bottom
	* PlaylistView.cs: the beginning of column sorting

2005-07-07 Aaron Bockover <aaron@aaronbock.net>

	* SqlGenerator.cs: Added Statement.Empty and ParenGroup classes
	* LibraryTransactions.cs: Made TrackRemoveTransaction an abstract class
	and added LibraryTrackRemoveTransaction and PlaylistTrackRemoveTransaction
	that extends TrackRemoveTransaction
	* PlayerInterface.cs: Proper removal of music from Playlists
	* PlayerInterface.cs: Prompt a confirm dialog to user to ask if they are
	sure they want to remove music from their *library*
	* Core.cs: Find user's real name
	* PlayerInterface.cs: Name of Playlist or User's Library showed at
	top of tree view depending on source
	* SourceView.cs: Single click/arrow up/down now selects source instead
	of double click/row activate
	* PlayerInterface.cs: Total Play Duration format updated to include
	days of music playback as well as hours, minutes, seconds
	* PlayerInterface.cs: Track Count / Total Play Duration updated on
	item remove

2005-07-06 Aaron Bockover <aaron@aaronbock.net>
	
	* SqlGenerator.cs: More SQL classes (generic OR and AND, updated WHERE)
	* PlaylistModel.cs, PlayerInterface.cs: Fixed logic for removing 
	selected tracks (bug 309608, mtgordon)
	* LibraryTransactions.cs: New TrackRemoveTransaction to remove a set 
	of tracks from the library

2005-07-06 Aaron Bockover <aaron@aaronbock.net>

	* Project: 0.7.2 Release, and I updated the ChangeLog...
	* PlaylistModel.cs: Added random/shuffle with history
	* PlayerInterface.cs: Rename playlist dialog, tool buttons work
	
2005-06-29 Aaron Bockover <aaron@aaronbock.net>

	* Project: dropped Muine Metadata support, using Entagged
	* Project: lots of other stuff since last entry, I need to get
	better about writing the ChangeLog again :)

2005-06-21 Aaron Bockover <aaron@aaronbock.net>

	* PlayerEngine.cs: New abstract class for building modular playback
	engines. Updated GstPlayer to extend PlayerEngine.

	* PlayerInterface.cs: Various bug fixes, cleanup

	* DBusIPC.cs: Added D-Bus dependency for IPC

	* Project: Updated build system, depends on dbus-sharp, fixed
	Makefile.am to include id3-vfs

2005-06-20 Aaron Bockover <aaron@aaronbock.net>

	* Project: First import to GNOME CVS as a Novell-owned project. Heavy
	development ahead, starting to manage ChangeLog again.


2005-05-04 Aaron Bockover <aaron@aaronbock.net>

  * PlayerInterface.cs: Playlist renaming/delete/append

  * Library.cs: Playlist renaming/delete/append

  * SourceView.cs: Fixed cell editor for sources

2005-05-03 Aaron Bockover <aaron@aaronbock.net>

  * PlaylistView.cs: Reorder via DnD

2005-05-02 Aaron Bockover <aaron@aaronbock.net>

  * PlayerInterface.cs: New playlist creation support

  * PlaylistView.cs: Multiple row selections supported.

2005-04-28 Aaron Bockover <aaron@aaronbock.net>

  * SimpleNotebook.cs: Very simple Notebook widget (without tabs) for the
    status header widgets in the top of the main UI.

  * SearchEntry.cs: Custom search entry widget with drop down menu for
    simple searching

2005-04-24 Aaron Bockover <aaron@aaronbock.net>

  * SqlBuilder.cs: SQL Builder UI for searching/smart playlists.

2005-04-15 Aaron Bockover <aaron@aaronbock.net>

  * PlaylistView.cs: Column states saved, dialog to toggle column visibility
  
  * TrackInfo.cs: Support for album information now
  
  * Library.cs: Cache of all Library Tracks
  
  * PlayerInterface.cs: New Interface!

2005-04-11 Aaron Bockover <aaron@aaronbock.net>

  * TrackInfo.cs: Fixed playlist loading bug
  
  * Database.cs: SQLite connection managing for threads

2005-04-07 Aaron Bockover <aaron@aaronbock.net>

  * LibraryTransactions.cs: Playlist saving

2005-04-03 Aaron Bockover <aaron@aaronbock.net>

  * PlayerInterface.cs: Added connecting code to the LibraryTransactionStatus

  * LibraryTransactionStatus.cs: Wrote UI for showing statistics in the 
    LibraryTransactionManager. 

  * ImageAnimation.cs: Wrote nice Animated Image widget

  * LibraryTransactions.cs: Replaced FileLoader with LibraryTransactions

  * FileLoader.cs: Removed FileLoader

  * LibraryTransactionManager.cs: Wrote LibraryTransactionManager to 
    manage all Library IO in a safe way

2005-04-01 Aaron Bockover <aaron@aaronbock.net>

  * Preferences.cs: Wrote beginning of UI for Mimetype/Decoder handling

2005-03-31 Aaron Bockover <aaron@aaronbock.net>

  * Core.cs: Added support for global DecoderRegistry instance.

  * GstMetadata.cs: Updated to use core global DecoderRegistry for supported
    mimetype checking instead of old Core DB.

  * DecoderRegistry.cs: Wrote DecoderRegistry class. This handles the parsing
    of the GStreamer plugins registry to build a local decoders registry
    for mimetype checking. The decoder registry is saved to XML for quick 
    loading on next run. Also will allow a UI for users to add/remove
    mimetypes.

  * Database.cs, Core.cs: Removed Core database. All SQL queries are specific 
    to the Library database.

  * Finally, a break from work to really do some hacking on Sonance again :-/

2005-03-10 Aaron Bockover <aaron@aaronbock.net>

  * PlayerInterface.cs: Progress bar for track loading/importing

  * Preferences.cs: You can save/edit preferences

  * Preferences.cs: New preferences dialog.

2005-03-09 Aaron Bockover <aaron@aaronbock.net>

  * FileLoader.cs: Support for SQL queries, sends IDataReader to TrackInfo.
    Reduces library load times (4000 songs) to 5 seconds! Major optimization!

  * TrackInfo.cs: New constructor that handles a raw IDataReader to reduce
    the number of SQL queries. 

  * PlayerInterface.cs: Using new FileChooserDialog instead of old FileSelector

  * PlaylistView.cs: Now all playlist additions are done based on a queue
    and an interface timeout. This reduces load time by over 250% (vs. a 
    1:1 loader/UI sync). Uses FileLoader/FileLoaderManager.

  * FileLoader.cs: Wrote a managed file/SQL loader. Manages a queue of
    load requests, allows the cancellation of all requests. FileLoader
    objects recurse directories and load TrackInfo objects, or load
    them from the database.

2005-03-01 Aaron Bockover <aaron@aaronbock.net>

  * PlaylistRowRenderer.cs: Removed extern constructors... not allowed in 
    latest mcs.

  * SourceView.cs: Removed extern constructors... not allowed in latest mcs.

  * Library.cs: Removed extern constructors... not allowed in  latest mcs.

  * All: Changed namespaces to avoid conflicts with mcs 1.1.4. Project
    now depends on gtk-sharp-2.0 (1.9.2), and the latest gst-sharp (0.2.4)
    from SVN.

2005-02-28 Aaron Bockover <aaron@aaronbock.net>

  * Library.cs: Set of Source classes to define how to read data from
    a given source.

  * SourceDialog.cs: A window that embeds a SourceView widget, used by
    the main interface to show a list of sources.

  * SourceView.cs: A new TreeView widget for showing data sources (Library
    and a list of Playlists)

  * PlayerInterface.cs: Supports MmKeys.

  * MmKeys.cs: Wraps mm-keys support in libsonance, adds MM-Keys support
    to Sonance. Adapted from Muine.
    
  * SignalUtils.cs: Wraps signal utilities in gobject-2.0. Needed for
    MM-Keys. Adapted from Muine.

  * NoticationAreaIcon.cs: Calls native egg-tray from libsonance

  * Build System: Builds libsonance (C shared library) which includes
    egg-tray support and mm-keys support. Dropped egg-sharp.dll.

  * libsonance/mm-keys.c: Added to project

  * libsonance/eggtrayicon.c: Added to project

  * Dialogs.cs: Save playlist dialog

  * PlayerInterface.cs: Can save playlist

  * PlaylistView.cs: Now saves playlist to DB

  * Library.cs: Playlist class saves to Library DB
  
  * Database.cs: More DB utilities

2005-02-26 Aaron Bockover <aaron@aaronbock.net>

  * PlaylistView.cs: Fixed bug when removing item from playlist

  * TrackInfo.cs: Writes metadata to Library database

  * Database.cs: Supports new SQL generator objects as queries

  * SqlGenerator.cs: New SQL query generator to easily generate complex and
    safe SQL queries

  * PlayerInterface.cs: Lots of code cleanp, and support for interfacing
    with NotificationAreaIcon.

  * NotificationAreaIcon.cs: Added tray icon support in GNOME through libegg.
    Uses the egg-sharp.dll assembly, a wraper for libegg.so.
  
  * Source/Makefile.am: Added libegg.so rule to use gcc to build eggtrayicon.c
    for the egg-sharp.dll assembly.

2005-02-24 Aaron Bockover <aaron@aaronbock.net>

  * Database.cs: Supports multiple databases (we now have a core and a library
    database that are independent of eachother).

  * Data/Makefile.am: Included Tables.sql

  * Tables.sql: Defined all SQL Table construction in a SQL file, included
    as resource.

  * TrackProperties.cs: Updated to reflect new supported metadata. Also only
    shows fields that we have data for (instead of showing "Unknown Field").

  * TrackInfo.cs: Updated to reflect updated GstMetadata.

  * GstMetadata.cs: Updated GStreamer metadata backend. Using a Hashtable to
    store tag data. 
    
  * CommonTags.cs: Simple class containing GStreamer tag names as constant
    members.

  * AboutBox.cs: Updated about box with new graphic, a tabbed information
    layout, project information, and assembly information. New graphic does
    not reference version, and version information is written based on the
    main assembly, so no updates need to be made to this code anymore.

2005-02-21 Aaron Bockover <aaron@aaronbock.net>

  * Database.cs: Added dynamic mime type support checking based on
    a GstDecoders and MimeSynonyms table in the SQL database.
    If GstDecoders is empty or non-existant, it is constructed
    based on the GStreamer registry.xml file. No hard-coded supported
    mime types exist now.

  * Database.cs: Added SQLite support. SQLite is now a dependency.

2005-02-18 Aaron Bockover <aaron@aaronbock.net>

  * PlayerInterface.cs: Fixed volume loading bug.

2005-02-18 Aaron Bockover <aaron@aaronbock.net>

  * Sonance-0.2.1: Minor release for updates below

  * PlaylistView.cs: Fixed minor bug in playlist. PlayIter now ScrollToCell
    to always keep the active item in view unless user manually scrolls out
    of view
  
  * PlayerInterface.cs: Statusbar now shows total number of items and duration
    of entire playlist

  * PlaylistView.cs: Added Update event. Fired whenever the playlist changes

  * PlaylistView.cs: Added TotalDuration support to hold the length (time)
    of entire playlist

2005-02-18 Aaron Bockover <aaron@aaronbock.net>

  * Sonance-0.2 - That was fast!?

2005-02-17 Aaron Bockover <aaron@aaronbock.net>

  * PlayerInterface.cs: Added a GConf client (/apps/Sonance). Now all interface
    states are saved and loaded (Window size/position, volume, shuffle/repeat,
    and search bar).

  * PlayerInterface.cs: Added a search box, with back/forward features, and
    it can be toggled via J or F3 (Similar to Firefox, live searching)

  * PlaylistView.cs: Added searching support

  * PlayerInterface.cs: Added support for "Add" files through Gtk.FileSelection
    dialog. I hate that dialog. I can't wait for gtk-sharp2 to become stable
    to use the new Gtk.FileChooser dialog. Mugh.

  * PlaylistView.cs: Added directory reading and recursion for additions
  
  * PlaylistView.cs: Added support for shuffle and repeat modes
  
  * PlayerInterface.cs: Many UI enchancements. Interface is now
    resizeable and there are shuffle/repeat toggle buttons
  
  * TrackInfo.cs: Implemented a window for viewing selected track properties
    (Shows metadata for track)

2005-02-17 Aaron Bockover <aaron@aaronbock.net>

  * Sonance-0.1 - First Public Release
